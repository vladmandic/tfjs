var yY=Object.create;var tA=Object.defineProperty;var xY=Object.getOwnPropertyDescriptor;var TY=Object.getOwnPropertyNames;var CY=Object.getPrototypeOf,IY=Object.prototype.hasOwnProperty;var Dr=(r,t)=>()=>(t||r((t={exports:{}}).exports,t),t.exports),Xe=(r,t)=>{for(var e in t)tA(r,e,{get:t[e],enumerable:!0})},kY=(r,t,e,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of TY(t))!IY.call(r,o)&&o!==e&&tA(r,o,{get:()=>t[o],enumerable:!(n=xY(t,o))||n.enumerable});return r};var gl=(r,t,e)=>(e=r!=null?yY(CY(r)):{},kY(t||!r||!r.__esModule?tA(e,"default",{value:r,enumerable:!0}):e,r));var q_=Dr((Cve,H_)=>{H_.exports=Jt;var ba=null;try{ba=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function Jt(r,t,e){this.low=r|0,this.high=t|0,this.unsigned=!!e}Jt.prototype.__isLong__;Object.defineProperty(Jt.prototype,"__isLong__",{value:!0});function Jn(r){return(r&&r.__isLong__)===!0}Jt.isLong=Jn;var B_={},$_={};function kl(r,t){var e,n,o;return t?(r>>>=0,(o=0<=r&&r<256)&&(n=$_[r],n)?n:(e=er(r,(r|0)<0?-1:0,!0),o&&($_[r]=e),e)):(r|=0,(o=-128<=r&&r<128)&&(n=B_[r],n)?n:(e=er(r,r<0?-1:0,!1),o&&(B_[r]=e),e))}Jt.fromInt=kl;function ya(r,t){if(isNaN(r))return t?Il:xa;if(t){if(r<0)return Il;if(r>=W_)return V_}else{if(r<=-z_)return Qn;if(r+1>=z_)return K_}return r<0?ya(-r,t).neg():er(r%pc|0,r/pc|0,t)}Jt.fromNumber=ya;function er(r,t,e){return new Jt(r,t,e)}Jt.fromBits=er;var Db=Math.pow;function fA(r,t,e){if(r.length===0)throw Error("empty string");if(r==="NaN"||r==="Infinity"||r==="+Infinity"||r==="-Infinity")return xa;if(typeof t=="number"?(e=t,t=!1):t=!!t,e=e||10,e<2||36<e)throw RangeError("radix");var n;if((n=r.indexOf("-"))>0)throw Error("interior hyphen");if(n===0)return fA(r.substring(1),t,e).neg();for(var o=ya(Db(e,8)),s=xa,a=0;a<r.length;a+=8){var i=Math.min(8,r.length-a),p=parseInt(r.substring(a,a+i),e);if(i<8){var u=ya(Db(e,i));s=s.mul(u).add(ya(p))}else s=s.mul(o),s=s.add(ya(p))}return s.unsigned=t,s}Jt.fromString=fA;function vi(r,t){return typeof r=="number"?ya(r,t):typeof r=="string"?fA(r,t):er(r.low,r.high,typeof t=="boolean"?t:r.unsigned)}Jt.fromValue=vi;var O_=65536,jY=1<<24,pc=O_*O_,W_=pc*pc,z_=W_/2,G_=kl(jY),xa=kl(0);Jt.ZERO=xa;var Il=kl(0,!0);Jt.UZERO=Il;var uc=kl(1);Jt.ONE=uc;var U_=kl(1,!0);Jt.UONE=U_;var dA=kl(-1);Jt.NEG_ONE=dA;var K_=er(-1,2147483647,!1);Jt.MAX_VALUE=K_;var V_=er(-1,-1,!0);Jt.MAX_UNSIGNED_VALUE=V_;var Qn=er(0,-2147483648,!1);Jt.MIN_VALUE=Qn;var Ie=Jt.prototype;Ie.toInt=function(){return this.unsigned?this.low>>>0:this.low};Ie.toNumber=function(){return this.unsigned?(this.high>>>0)*pc+(this.low>>>0):this.high*pc+(this.low>>>0)};Ie.toString=function(t){if(t=t||10,t<2||36<t)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(Qn)){var e=ya(t),n=this.div(e),o=n.mul(e).sub(this);return n.toString(t)+o.toInt().toString(t)}else return"-"+this.neg().toString(t);for(var s=ya(Db(t,6),this.unsigned),a=this,i="";;){var p=a.div(s),u=a.sub(p.mul(s)).toInt()>>>0,l=u.toString(t);if(a=p,a.isZero())return l+i;for(;l.length<6;)l="0"+l;i=""+l+i}};Ie.getHighBits=function(){return this.high};Ie.getHighBitsUnsigned=function(){return this.high>>>0};Ie.getLowBits=function(){return this.low};Ie.getLowBitsUnsigned=function(){return this.low>>>0};Ie.getNumBitsAbs=function(){if(this.isNegative())return this.eq(Qn)?64:this.neg().getNumBitsAbs();for(var t=this.high!=0?this.high:this.low,e=31;e>0&&!(t&1<<e);e--);return this.high!=0?e+33:e+1};Ie.isZero=function(){return this.high===0&&this.low===0};Ie.eqz=Ie.isZero;Ie.isNegative=function(){return!this.unsigned&&this.high<0};Ie.isPositive=function(){return this.unsigned||this.high>=0};Ie.isOdd=function(){return(this.low&1)===1};Ie.isEven=function(){return(this.low&1)===0};Ie.equals=function(t){return Jn(t)||(t=vi(t)),this.unsigned!==t.unsigned&&this.high>>>31===1&&t.high>>>31===1?!1:this.high===t.high&&this.low===t.low};Ie.eq=Ie.equals;Ie.notEquals=function(t){return!this.eq(t)};Ie.neq=Ie.notEquals;Ie.ne=Ie.notEquals;Ie.lessThan=function(t){return this.comp(t)<0};Ie.lt=Ie.lessThan;Ie.lessThanOrEqual=function(t){return this.comp(t)<=0};Ie.lte=Ie.lessThanOrEqual;Ie.le=Ie.lessThanOrEqual;Ie.greaterThan=function(t){return this.comp(t)>0};Ie.gt=Ie.greaterThan;Ie.greaterThanOrEqual=function(t){return this.comp(t)>=0};Ie.gte=Ie.greaterThanOrEqual;Ie.ge=Ie.greaterThanOrEqual;Ie.compare=function(t){if(Jn(t)||(t=vi(t)),this.eq(t))return 0;var e=this.isNegative(),n=t.isNegative();return e&&!n?-1:!e&&n?1:this.unsigned?t.high>>>0>this.high>>>0||t.high===this.high&&t.low>>>0>this.low>>>0?-1:1:this.sub(t).isNegative()?-1:1};Ie.comp=Ie.compare;Ie.negate=function(){return!this.unsigned&&this.eq(Qn)?Qn:this.not().add(uc)};Ie.neg=Ie.negate;Ie.add=function(t){Jn(t)||(t=vi(t));var e=this.high>>>16,n=this.high&65535,o=this.low>>>16,s=this.low&65535,a=t.high>>>16,i=t.high&65535,p=t.low>>>16,u=t.low&65535,l=0,m=0,c=0,d=0;return d+=s+u,c+=d>>>16,d&=65535,c+=o+p,m+=c>>>16,c&=65535,m+=n+i,l+=m>>>16,m&=65535,l+=e+a,l&=65535,er(c<<16|d,l<<16|m,this.unsigned)};Ie.subtract=function(t){return Jn(t)||(t=vi(t)),this.add(t.neg())};Ie.sub=Ie.subtract;Ie.multiply=function(t){if(this.isZero())return xa;if(Jn(t)||(t=vi(t)),ba){var e=ba.mul(this.low,this.high,t.low,t.high);return er(e,ba.get_high(),this.unsigned)}if(t.isZero())return xa;if(this.eq(Qn))return t.isOdd()?Qn:xa;if(t.eq(Qn))return this.isOdd()?Qn:xa;if(this.isNegative())return t.isNegative()?this.neg().mul(t.neg()):this.neg().mul(t).neg();if(t.isNegative())return this.mul(t.neg()).neg();if(this.lt(G_)&&t.lt(G_))return ya(this.toNumber()*t.toNumber(),this.unsigned);var n=this.high>>>16,o=this.high&65535,s=this.low>>>16,a=this.low&65535,i=t.high>>>16,p=t.high&65535,u=t.low>>>16,l=t.low&65535,m=0,c=0,d=0,f=0;return f+=a*l,d+=f>>>16,f&=65535,d+=s*l,c+=d>>>16,d&=65535,d+=a*u,c+=d>>>16,d&=65535,c+=o*l,m+=c>>>16,c&=65535,c+=s*u,m+=c>>>16,c&=65535,c+=a*p,m+=c>>>16,c&=65535,m+=n*l+o*u+s*p+a*i,m&=65535,er(d<<16|f,m<<16|c,this.unsigned)};Ie.mul=Ie.multiply;Ie.divide=function(t){if(Jn(t)||(t=vi(t)),t.isZero())throw Error("division by zero");if(ba){if(!this.unsigned&&this.high===-2147483648&&t.low===-1&&t.high===-1)return this;var e=(this.unsigned?ba.div_u:ba.div_s)(this.low,this.high,t.low,t.high);return er(e,ba.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?Il:xa;var n,o,s;if(this.unsigned){if(t.unsigned||(t=t.toUnsigned()),t.gt(this))return Il;if(t.gt(this.shru(1)))return U_;s=Il}else{if(this.eq(Qn)){if(t.eq(uc)||t.eq(dA))return Qn;if(t.eq(Qn))return uc;var a=this.shr(1);return n=a.div(t).shl(1),n.eq(xa)?t.isNegative()?uc:dA:(o=this.sub(t.mul(n)),s=n.add(o.div(t)),s)}else if(t.eq(Qn))return this.unsigned?Il:xa;if(this.isNegative())return t.isNegative()?this.neg().div(t.neg()):this.neg().div(t).neg();if(t.isNegative())return this.div(t.neg()).neg();s=xa}for(o=this;o.gte(t);){n=Math.max(1,Math.floor(o.toNumber()/t.toNumber()));for(var i=Math.ceil(Math.log(n)/Math.LN2),p=i<=48?1:Db(2,i-48),u=ya(n),l=u.mul(t);l.isNegative()||l.gt(o);)n-=p,u=ya(n,this.unsigned),l=u.mul(t);u.isZero()&&(u=uc),s=s.add(u),o=o.sub(l)}return s};Ie.div=Ie.divide;Ie.modulo=function(t){if(Jn(t)||(t=vi(t)),ba){var e=(this.unsigned?ba.rem_u:ba.rem_s)(this.low,this.high,t.low,t.high);return er(e,ba.get_high(),this.unsigned)}return this.sub(this.div(t).mul(t))};Ie.mod=Ie.modulo;Ie.rem=Ie.modulo;Ie.not=function(){return er(~this.low,~this.high,this.unsigned)};Ie.and=function(t){return Jn(t)||(t=vi(t)),er(this.low&t.low,this.high&t.high,this.unsigned)};Ie.or=function(t){return Jn(t)||(t=vi(t)),er(this.low|t.low,this.high|t.high,this.unsigned)};Ie.xor=function(t){return Jn(t)||(t=vi(t)),er(this.low^t.low,this.high^t.high,this.unsigned)};Ie.shiftLeft=function(t){return Jn(t)&&(t=t.toInt()),(t&=63)===0?this:t<32?er(this.low<<t,this.high<<t|this.low>>>32-t,this.unsigned):er(0,this.low<<t-32,this.unsigned)};Ie.shl=Ie.shiftLeft;Ie.shiftRight=function(t){return Jn(t)&&(t=t.toInt()),(t&=63)===0?this:t<32?er(this.low>>>t|this.high<<32-t,this.high>>t,this.unsigned):er(this.high>>t-32,this.high>=0?0:-1,this.unsigned)};Ie.shr=Ie.shiftRight;Ie.shiftRightUnsigned=function(t){if(Jn(t)&&(t=t.toInt()),t&=63,t===0)return this;var e=this.high;if(t<32){var n=this.low;return er(n>>>t|e<<32-t,e>>>t,this.unsigned)}else return t===32?er(e,0,this.unsigned):er(e>>>t-32,0,this.unsigned)};Ie.shru=Ie.shiftRightUnsigned;Ie.shr_u=Ie.shiftRightUnsigned;Ie.toSigned=function(){return this.unsigned?er(this.low,this.high,!1):this};Ie.toUnsigned=function(){return this.unsigned?this:er(this.low,this.high,!0)};Ie.toBytes=function(t){return t?this.toBytesLE():this.toBytesBE()};Ie.toBytesLE=function(){var t=this.high,e=this.low;return[e&255,e>>>8&255,e>>>16&255,e>>>24,t&255,t>>>8&255,t>>>16&255,t>>>24]};Ie.toBytesBE=function(){var t=this.high,e=this.low;return[t>>>24,t>>>16&255,t>>>8&255,t&255,e>>>24,e>>>16&255,e>>>8&255,e&255]};Jt.fromBytes=function(t,e,n){return n?Jt.fromBytesLE(t,e):Jt.fromBytesBE(t,e)};Jt.fromBytesLE=function(t,e){return new Jt(t[0]|t[1]<<8|t[2]<<16|t[3]<<24,t[4]|t[5]<<8|t[6]<<16|t[7]<<24,e)};Jt.fromBytesBE=function(t,e){return new Jt(t[4]<<24|t[5]<<16|t[6]<<8|t[7],t[0]<<24|t[1]<<16|t[2]<<8|t[3],e)}});var R1=Dr(()=>{});var F1=Dr(()=>{});var BM=Dr((LM,WA)=>{(function(r,t,e){function n(i){var p=this,u=a();p.next=function(){var l=2091639*p.s0+p.c*23283064365386963e-26;return p.s0=p.s1,p.s1=p.s2,p.s2=l-(p.c=l|0)},p.c=1,p.s0=u(" "),p.s1=u(" "),p.s2=u(" "),p.s0-=u(i),p.s0<0&&(p.s0+=1),p.s1-=u(i),p.s1<0&&(p.s1+=1),p.s2-=u(i),p.s2<0&&(p.s2+=1),u=null}function o(i,p){return p.c=i.c,p.s0=i.s0,p.s1=i.s1,p.s2=i.s2,p}function s(i,p){var u=new n(i),l=p&&p.state,m=u.next;return m.int32=function(){return u.next()*4294967296|0},m.double=function(){return m()+(m()*2097152|0)*11102230246251565e-32},m.quick=m,l&&(typeof l=="object"&&o(l,u),m.state=function(){return o(u,{})}),m}function a(){var i=4022871197,p=function(u){u=String(u);for(var l=0;l<u.length;l++){i+=u.charCodeAt(l);var m=.02519603282416938*i;i=m>>>0,m-=i,m*=i,i=m>>>0,m-=i,i+=m*4294967296}return(i>>>0)*23283064365386963e-26};return p}t&&t.exports?t.exports=s:e&&e.amd?e(function(){return s}):this.alea=s})(LM,typeof WA=="object"&&WA,typeof define=="function"&&define)});var OM=Dr(($M,UA)=>{(function(r,t,e){function n(a){var i=this,p="";i.x=0,i.y=0,i.z=0,i.w=0,i.next=function(){var l=i.x^i.x<<11;return i.x=i.y,i.y=i.z,i.z=i.w,i.w^=i.w>>>19^l^l>>>8},a===(a|0)?i.x=a:p+=a;for(var u=0;u<p.length+64;u++)i.x^=p.charCodeAt(u)|0,i.next()}function o(a,i){return i.x=a.x,i.y=a.y,i.z=a.z,i.w=a.w,i}function s(a,i){var p=new n(a),u=i&&i.state,l=function(){return(p.next()>>>0)/4294967296};return l.double=function(){do var m=p.next()>>>11,c=(p.next()>>>0)/4294967296,d=(m+c)/(1<<21);while(d===0);return d},l.int32=p.next,l.quick=l,u&&(typeof u=="object"&&o(u,p),l.state=function(){return o(p,{})}),l}t&&t.exports?t.exports=s:e&&e.amd?e(function(){return s}):this.xor128=s})($M,typeof UA=="object"&&UA,typeof define=="function"&&define)});var GM=Dr((zM,KA)=>{(function(r,t,e){function n(a){var i=this,p="";i.next=function(){var l=i.x^i.x>>>2;return i.x=i.y,i.y=i.z,i.z=i.w,i.w=i.v,(i.d=i.d+362437|0)+(i.v=i.v^i.v<<4^(l^l<<1))|0},i.x=0,i.y=0,i.z=0,i.w=0,i.v=0,a===(a|0)?i.x=a:p+=a;for(var u=0;u<p.length+64;u++)i.x^=p.charCodeAt(u)|0,u==p.length&&(i.d=i.x<<10^i.x>>>4),i.next()}function o(a,i){return i.x=a.x,i.y=a.y,i.z=a.z,i.w=a.w,i.v=a.v,i.d=a.d,i}function s(a,i){var p=new n(a),u=i&&i.state,l=function(){return(p.next()>>>0)/4294967296};return l.double=function(){do var m=p.next()>>>11,c=(p.next()>>>0)/4294967296,d=(m+c)/(1<<21);while(d===0);return d},l.int32=p.next,l.quick=l,u&&(typeof u=="object"&&o(u,p),l.state=function(){return o(p,{})}),l}t&&t.exports?t.exports=s:e&&e.amd?e(function(){return s}):this.xorwow=s})(zM,typeof KA=="object"&&KA,typeof define=="function"&&define)});var UM=Dr((WM,VA)=>{(function(r,t,e){function n(a){var i=this;i.next=function(){var u=i.x,l=i.i,m,c,d;return m=u[l],m^=m>>>7,c=m^m<<24,m=u[l+1&7],c^=m^m>>>10,m=u[l+3&7],c^=m^m>>>3,m=u[l+4&7],c^=m^m<<7,m=u[l+7&7],m=m^m<<13,c^=m^m<<9,u[l]=c,i.i=l+1&7,c};function p(u,l){var m,c,d=[];if(l===(l|0))c=d[0]=l;else for(l=""+l,m=0;m<l.length;++m)d[m&7]=d[m&7]<<15^l.charCodeAt(m)+d[m+1&7]<<13;for(;d.length<8;)d.push(0);for(m=0;m<8&&d[m]===0;++m);for(m==8?c=d[7]=-1:c=d[m],u.x=d,u.i=0,m=256;m>0;--m)u.next()}p(i,a)}function o(a,i){return i.x=a.x.slice(),i.i=a.i,i}function s(a,i){a==null&&(a=+new Date);var p=new n(a),u=i&&i.state,l=function(){return(p.next()>>>0)/4294967296};return l.double=function(){do var m=p.next()>>>11,c=(p.next()>>>0)/4294967296,d=(m+c)/(1<<21);while(d===0);return d},l.int32=p.next,l.quick=l,u&&(u.x&&o(u,p),l.state=function(){return o(p,{})}),l}t&&t.exports?t.exports=s:e&&e.amd?e(function(){return s}):this.xorshift7=s})(WM,typeof VA=="object"&&VA,typeof define=="function"&&define)});var VM=Dr((KM,HA)=>{(function(r,t,e){function n(a){var i=this;i.next=function(){var u=i.w,l=i.X,m=i.i,c,d;return i.w=u=u+1640531527|0,d=l[m+34&127],c=l[m=m+1&127],d^=d<<13,c^=c<<17,d^=d>>>15,c^=c>>>12,d=l[m]=d^c,i.i=m,d+(u^u>>>16)|0};function p(u,l){var m,c,d,f,h,g=[],b=128;for(l===(l|0)?(c=l,l=null):(l=l+"\0",c=0,b=Math.max(b,l.length)),d=0,f=-32;f<b;++f)l&&(c^=l.charCodeAt((f+32)%l.length)),f===0&&(h=c),c^=c<<10,c^=c>>>15,c^=c<<4,c^=c>>>13,f>=0&&(h=h+1640531527|0,m=g[f&127]^=c+h,d=m==0?d+1:0);for(d>=128&&(g[(l&&l.length||0)&127]=-1),d=127,f=4*128;f>0;--f)c=g[d+34&127],m=g[d=d+1&127],c^=c<<13,m^=m<<17,c^=c>>>15,m^=m>>>12,g[d]=c^m;u.w=h,u.X=g,u.i=d}p(i,a)}function o(a,i){return i.i=a.i,i.w=a.w,i.X=a.X.slice(),i}function s(a,i){a==null&&(a=+new Date);var p=new n(a),u=i&&i.state,l=function(){return(p.next()>>>0)/4294967296};return l.double=function(){do var m=p.next()>>>11,c=(p.next()>>>0)/4294967296,d=(m+c)/(1<<21);while(d===0);return d},l.int32=p.next,l.quick=l,u&&(u.X&&o(u,p),l.state=function(){return o(p,{})}),l}t&&t.exports?t.exports=s:e&&e.amd?e(function(){return s}):this.xor4096=s})(KM,typeof HA=="object"&&HA,typeof define=="function"&&define)});var qM=Dr((HM,qA)=>{(function(r,t,e){function n(a){var i=this,p="";i.next=function(){var l=i.b,m=i.c,c=i.d,d=i.a;return l=l<<25^l>>>7^m,m=m-c|0,c=c<<24^c>>>8^d,d=d-l|0,i.b=l=l<<20^l>>>12^m,i.c=m=m-c|0,i.d=c<<16^m>>>16^d,i.a=d-l|0},i.a=0,i.b=0,i.c=-1640531527,i.d=1367130551,a===Math.floor(a)?(i.a=a/4294967296|0,i.b=a|0):p+=a;for(var u=0;u<p.length+20;u++)i.b^=p.charCodeAt(u)|0,i.next()}function o(a,i){return i.a=a.a,i.b=a.b,i.c=a.c,i.d=a.d,i}function s(a,i){var p=new n(a),u=i&&i.state,l=function(){return(p.next()>>>0)/4294967296};return l.double=function(){do var m=p.next()>>>11,c=(p.next()>>>0)/4294967296,d=(m+c)/(1<<21);while(d===0);return d},l.int32=p.next,l.quick=l,u&&(typeof u=="object"&&o(u,p),l.state=function(){return o(p,{})}),l}t&&t.exports?t.exports=s:e&&e.amd?e(function(){return s}):this.tychei=s})(HM,typeof qA=="object"&&qA,typeof define=="function"&&define)});var jM=Dr(()=>{});var YM=Dr((XM,gy)=>{(function(r,t,e){var n=256,o=6,s=52,a="random",i=e.pow(n,o),p=e.pow(2,s),u=p*2,l=n-1,m;function c(T,C,k){var w=[];C=C==!0?{entropy:!0}:C||{};var _=g(h(C.entropy?[T,x(t)]:T??b(),3),w),P=new d(w),M=function(){for(var R=P.g(o),$=i,G=0;R<p;)R=(R+G)*n,$*=n,G=P.g(1);for(;R>=u;)R/=2,$/=2,G>>>=1;return(R+G)/$};return M.int32=function(){return P.g(4)|0},M.quick=function(){return P.g(4)/4294967296},M.double=M,g(x(P.S),t),(C.pass||k||function(R,$,G,W){return W&&(W.S&&f(W,P),R.state=function(){return f(P,{})}),G?(e[a]=R,$):R})(M,_,"global"in C?C.global:this==e,C.state)}function d(T){var C,k=T.length,w=this,_=0,P=w.i=w.j=0,M=w.S=[];for(k||(T=[k++]);_<n;)M[_]=_++;for(_=0;_<n;_++)M[_]=M[P=l&P+T[_%k]+(C=M[_])],M[P]=C;(w.g=function(R){for(var $,G=0,W=w.i,U=w.j,V=w.S;R--;)$=V[W=l&W+1],G=G*n+V[l&(V[W]=V[U=l&U+$])+(V[U]=$)];return w.i=W,w.j=U,G})(n)}function f(T,C){return C.i=T.i,C.j=T.j,C.S=T.S.slice(),C}function h(T,C){var k=[],w=typeof T,_;if(C&&w=="object")for(_ in T)try{k.push(h(T[_],C-1))}catch{}return k.length?k:w=="string"?T:T+"\0"}function g(T,C){for(var k=T+"",w,_=0;_<k.length;)C[l&_]=l&(w^=C[l&_]*19)+k.charCodeAt(_++);return x(C)}function b(){try{var T;return m&&(T=m.randomBytes)?T=T(n):(T=new Uint8Array(n),(r.crypto||r.msCrypto).getRandomValues(T)),x(T)}catch{var C=r.navigator,k=C&&C.plugins;return[+new Date,r,k,r.screen,x(t)]}}function x(T){return String.fromCharCode.apply(0,T)}if(g(e.random(),t),typeof gy=="object"&&gy.exports){gy.exports=c;try{m=jM()}catch{}}else typeof define=="function"&&define.amd?define(function(){return c}):e["seed"+a]=c})(typeof self<"u"?self:XM,[],Math)});var Lh=Dr((zze,ZM)=>{var TJ=BM(),CJ=OM(),IJ=GM(),kJ=UM(),vJ=VM(),SJ=qM(),Fl=YM();Fl.alea=TJ;Fl.xor128=CJ;Fl.xorwow=IJ;Fl.xorshift7=kJ;Fl.xor4096=vJ;Fl.tychei=SJ;ZM.exports=Fl});var TD=Dr(()=>{});var NT=Dr(()=>{});var a_=Dr(()=>{});var NX=Dr(()=>{});var DX=Dr(()=>{});var _X=Dr(()=>{});var MX=Dr((Tv,u_)=>{"use strict";var i_=(()=>{var r=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(r=r||__filename),function(t){t=t||{};function e(){return le.buffer!=it&&or(le.buffer),wt}function n(){return le.buffer!=it&&or(le.buffer),Tt}function o(){return le.buffer!=it&&or(le.buffer),Bt}function s(){return le.buffer!=it&&or(le.buffer),Vn}function a(){return le.buffer!=it&&or(le.buffer),gr}function i(){return le.buffer!=it&&or(le.buffer),bo}function p(){return le.buffer!=it&&or(le.buffer),Vr}var u=typeof t<"u"?t:{},l,m;u.ready=new Promise(function(B,H){l=B,m=H});var c;typeof process<"u"&&process.listeners&&(c={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var d=Object.assign({},u),f=[],h="./this.program",g=(B,H)=>{throw H},b=typeof window=="object",x=typeof importScripts=="function",T=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",C=u.ENVIRONMENT_IS_PTHREAD||!1,k="";function w(B){return u.locateFile?u.locateFile(B,k):k+B}var _,P,M,R;function $(B){if(B instanceof fl)return;q("exiting due to exception: "+B)}if(T){var G=NT(),W=a_();x?k=W.dirname(k)+"/":k=__dirname+"/",_=(H,be)=>(H=dl(H)?new URL(H):W.normalize(H),G.readFileSync(H,be?void 0:"utf8")),M=H=>{var be=_(H,!0);return be.buffer||(be=new Uint8Array(be)),be},P=(H,be,Ge)=>{H=dl(H)?new URL(H):W.normalize(H),G.readFile(H,function(rt,tt){rt?Ge(rt):be(tt.buffer)})},process.argv.length>1&&(h=process.argv[1].replace(/\\/g,"/")),f=process.argv.slice(2),process.on("uncaughtException",function(H){if(!(H instanceof fl))throw H}),process.on("unhandledRejection",function(H){throw H}),g=(H,be)=>{if(Ga())throw process.exitCode=H,be;$(be),process.exit(H)},u.inspect=function(){return"[Emscripten Module object]"};let B;try{B=NX()}catch(H){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),H}global.Worker=B.Worker}else(b||x)&&(x?k=self.location.href:typeof document<"u"&&document.currentScript&&(k=document.currentScript.src),r&&(k=r),k.indexOf("blob:")!==0?k=k.substr(0,k.replace(/[?#].*/,"").lastIndexOf("/")+1):k="",T||(_=B=>{var H=new XMLHttpRequest;return H.open("GET",B,!1),H.send(null),H.responseText},x&&(M=B=>{var H=new XMLHttpRequest;return H.open("GET",B,!1),H.responseType="arraybuffer",H.send(null),new Uint8Array(H.response)}),P=(B,H,be)=>{var Ge=new XMLHttpRequest;Ge.open("GET",B,!0),Ge.responseType="arraybuffer",Ge.onload=()=>{if(Ge.status==200||Ge.status==0&&Ge.response){H(Ge.response);return}be()},Ge.onerror=be,Ge.send(null)}),R=B=>document.title=B);T&&typeof performance>"u"&&(global.performance=DX().performance);var U=console.log.bind(console),V=console.warn.bind(console);T&&(U=B=>G.writeSync(1,B+`
`),V=B=>G.writeSync(2,B+`
`));var K=u.print||U,q=u.printErr||V;Object.assign(u,d),d=null,u.arguments&&(f=u.arguments),u.thisProgram&&(h=u.thisProgram),u.quit&&(g=u.quit);var j=4,te=Atomics.load,se=Atomics.store,ie=Atomics.compareExchange,pe;u.wasmBinary&&(pe=u.wasmBinary);var ae=u.noExitRuntime||!0;typeof WebAssembly!="object"&&cl("no native wasm support detected");var le,fe,Te=!1,Ae;function $e(B,H){B||cl(H)}var Le=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0;function Ze(B,H,be){H>>>=0;for(var Ge=H+be,rt=H;B[rt]&&!(rt>=Ge);)++rt;if(rt-H>16&&B.buffer&&Le)return Le.decode(B.buffer instanceof SharedArrayBuffer?B.slice(H,rt):B.subarray(H,rt));for(var tt="";H<rt;){var ve=B[H++];if(!(ve&128)){tt+=String.fromCharCode(ve);continue}var Be=B[H++]&63;if((ve&224)==192){tt+=String.fromCharCode((ve&31)<<6|Be);continue}var cr=B[H++]&63;if((ve&240)==224?ve=(ve&15)<<12|Be<<6|cr:ve=(ve&7)<<18|Be<<12|cr<<6|B[H++]&63,ve<65536)tt+=String.fromCharCode(ve);else{var Co=ve-65536;tt+=String.fromCharCode(55296|Co>>10,56320|Co&1023)}}return tt}function ee(B,H){return B>>>=0,B?Ze(n(),B,H):""}function bt(B,H,be,Ge){if(be>>>=0,!(Ge>0))return 0;for(var rt=be,tt=be+Ge-1,ve=0;ve<B.length;++ve){var Be=B.charCodeAt(ve);if(Be>=55296&&Be<=57343){var cr=B.charCodeAt(++ve);Be=65536+((Be&1023)<<10)|cr&1023}if(Be<=127){if(be>=tt)break;H[be++>>>0]=Be}else if(Be<=2047){if(be+1>=tt)break;H[be++>>>0]=192|Be>>6,H[be++>>>0]=128|Be&63}else if(Be<=65535){if(be+2>=tt)break;H[be++>>>0]=224|Be>>12,H[be++>>>0]=128|Be>>6&63,H[be++>>>0]=128|Be&63}else{if(be+3>=tt)break;H[be++>>>0]=240|Be>>18,H[be++>>>0]=128|Be>>12&63,H[be++>>>0]=128|Be>>6&63,H[be++>>>0]=128|Be&63}}return H[be>>>0]=0,be-rt}function St(B,H,be){return bt(B,n(),H,be)}var it,wt,Tt,Bt,$t,Vn,gr,bo,Vr;C&&(it=u.buffer);function or(B){it=B,u.HEAP8=wt=new Int8Array(B),u.HEAP16=Bt=new Int16Array(B),u.HEAP32=Vn=new Int32Array(B),u.HEAPU8=Tt=new Uint8Array(B),u.HEAPU16=$t=new Uint16Array(B),u.HEAPU32=gr=new Uint32Array(B),u.HEAPF32=bo=new Float32Array(B),u.HEAPF64=Vr=new Float64Array(B)}var Hr=u.INITIAL_MEMORY||16777216;if(C)le=u.wasmMemory,it=u.buffer;else if(u.wasmMemory)le=u.wasmMemory;else if(le=new WebAssembly.Memory({initial:Hr/65536,maximum:65536,shared:!0}),!(le.buffer instanceof SharedArrayBuffer))throw q("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),T&&q("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");le&&(it=le.buffer),Hr=it.byteLength,or(it);var qr,yo=[],xo=[],sn=[],Pu=!1;function Ga(){return ae}function qi(){if(u.preRun)for(typeof u.preRun=="function"&&(u.preRun=[u.preRun]);u.preRun.length;)uh(u.preRun.shift());lh(yo)}function $r(){Pu=!0,!C&&lh(xo)}function Ru(){if(!C){if(u.postRun)for(typeof u.postRun=="function"&&(u.postRun=[u.postRun]);u.postRun.length;)h_(u.postRun.shift());lh(sn)}}function uh(B){yo.unshift(B)}function ph(B){xo.unshift(B)}function h_(B){sn.unshift(B)}var gp=0,qm=null,Fu=null;function kv(B){gp++,u.monitorRunDependencies&&u.monitorRunDependencies(gp)}function vv(B){if(gp--,u.monitorRunDependencies&&u.monitorRunDependencies(gp),gp==0&&(qm!==null&&(clearInterval(qm),qm=null),Fu)){var H=Fu;Fu=null,H()}}function cl(B){u.onAbort&&u.onAbort(B),B="Aborted("+B+")",q(B),Te=!0,Ae=1,B+=". Build with -sASSERTIONS for more info.";var H=new WebAssembly.RuntimeError(B);throw m(H),H}var Sv="data:application/octet-stream;base64,";function Qg(B){return B.startsWith(Sv)}function dl(B){return B.startsWith("file://")}var hn;hn="tfjs-backend-wasm-threaded-simd.wasm",Qg(hn)||(hn=w(hn));function Jg(B){try{if(B==hn&&pe)return new Uint8Array(pe);if(M)return M(B);throw"both async and sync fetching of the wasm failed"}catch(H){cl(H)}}function wv(){if(!pe&&(b||x)){if(typeof fetch=="function"&&!dl(hn))return fetch(hn,{credentials:"same-origin"}).then(function(B){if(!B.ok)throw"failed to load wasm binary file at '"+hn+"'";return B.arrayBuffer()}).catch(function(){return Jg(hn)});if(P)return new Promise(function(B,H){P(hn,function(be){B(new Uint8Array(be))},H)})}return Promise.resolve().then(function(){return Jg(hn)})}function Av(){var B={env:db,wasi_snapshot_preview1:db};function H(ve,Be){var cr=ve.exports;if(u.asm=cr,Bv(u.asm._emscripten_tls_init),qr=u.asm.__indirect_function_table,ph(u.asm.__wasm_call_ctors),fe=Be,!C){var Co=et.unusedWorkers.length;et.unusedWorkers.forEach(function(Lu){et.loadWasmModuleToWorker(Lu,function(){--Co||vv("wasm-instantiate")})})}}C||kv("wasm-instantiate");function be(ve){H(ve.instance,ve.module)}function Ge(ve){return wv().then(function(Be){return WebAssembly.instantiate(Be,B)}).then(function(Be){return Be}).then(ve,function(Be){q("failed to asynchronously prepare wasm: "+Be),cl(Be)})}function rt(){return!pe&&typeof WebAssembly.instantiateStreaming=="function"&&!Qg(hn)&&!dl(hn)&&!T&&typeof fetch=="function"?fetch(hn,{credentials:"same-origin"}).then(function(ve){var Be=WebAssembly.instantiateStreaming(ve,B);return Be.then(be,function(cr){return q("wasm streaming compile failed: "+cr),q("falling back to ArrayBuffer instantiation"),Ge(be)})}):Ge(be)}if(u.instantiateWasm)try{var tt=u.instantiateWasm(B,H);return tt}catch(ve){q("Module.instantiateWasm callback failed with error: "+ve),m(ve)}return rt().catch(m),{}}var g_,Nv,Dv={};function fl(B){this.name="ExitStatus",this.message="Program terminated with exit("+B+")",this.status=B}function _v(B){var H=et.pthreads[B];delete et.pthreads[B],H.terminate(),Qw(B),et.runningWorkers.splice(et.runningWorkers.indexOf(H),1),H.pthread_ptr=0}function eb(B){var H=et.pthreads[B];H.postMessage({cmd:"cancel"})}function Mv(B){var H=et.pthreads[B];$e(H),et.returnWorkerToPool(H)}function tb(B){var H=et.getNewWorker();if(!H)return 6;et.runningWorkers.push(H),et.pthreads[B.pthread_ptr]=H,H.pthread_ptr=B.pthread_ptr;var be={cmd:"run",start_routine:B.startRoutine,arg:B.arg,pthread_ptr:B.pthread_ptr};return H.runPthread=()=>{T&&H.ref(),H.postMessage(be,B.transferList),delete H.runPthread},H.loaded&&H.runPthread(),0}var rb={varargs:void 0,get:function(){rb.varargs+=4;var B=s()[rb.varargs-4>>>2];return B},getStr:function(B){var H=ee(B);return H}};function nb(B){if(C)return bp(1,1,B);Ae=B,Ga()||(et.terminateAllThreads(),u.onExit&&u.onExit(B),Te=!0),g(B,new fl(B))}function Pv(B,H){if(Ae=B,!H&&C)throw sb(B),"unwind";nb(B)}var ob=Pv;function Rv(B){if(B instanceof fl||B=="unwind")return Ae;g(1,B)}var et={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],pthreads:{},init:function(){C?et.initWorker():et.initMainThread()},initMainThread:function(){for(var B=8;B--;)et.allocateUnusedWorker()},initWorker:function(){ae=!1},setExitStatus:function(B){Ae=B},terminateAllThreads:function(){for(var B of Object.values(et.pthreads))et.returnWorkerToPool(B);for(var B of et.unusedWorkers)B.terminate();et.unusedWorkers=[]},returnWorkerToPool:function(B){var H=B.pthread_ptr;delete et.pthreads[H],et.unusedWorkers.push(B),et.runningWorkers.splice(et.runningWorkers.indexOf(B),1),B.pthread_ptr=0,T&&B.unref(),Qw(H)},receiveObjectTransfer:function(B){},threadInitTLS:function(){et.tlsInitFunctions.forEach(B=>B())},loadWasmModuleToWorker:function(B,H){B.onmessage=tt=>{var ve=tt.data,Be=ve.cmd;if(B.pthread_ptr&&(et.currentProxiedOperationCallerThread=B.pthread_ptr),ve.targetThread&&ve.targetThread!=xb()){var cr=et.pthreads[ve.targetThread];cr?cr.postMessage(ve,ve.transferList):q('Internal error! Worker sent a message "'+Be+'" to target pthread '+ve.targetThread+", but that thread no longer exists!"),et.currentProxiedOperationCallerThread=void 0;return}Be==="processProxyingQueue"?mh(ve.queue):Be==="spawnThread"?tb(ve):Be==="cleanupThread"?Mv(ve.thread):Be==="killThread"?_v(ve.thread):Be==="cancelThread"?eb(ve.thread):Be==="loaded"?(B.loaded=!0,T&&B.unref(),H&&H(B),B.runPthread&&B.runPthread()):Be==="print"?K("Thread "+ve.threadId+": "+ve.text):Be==="printErr"?q("Thread "+ve.threadId+": "+ve.text):Be==="alert"?alert("Thread "+ve.threadId+": "+ve.text):ve.target==="setimmediate"?B.postMessage(ve):Be==="callHandler"?u[ve.handler](...ve.args):Be&&q("worker sent an unknown command "+Be),et.currentProxiedOperationCallerThread=void 0},B.onerror=tt=>{var ve="worker sent an error!";throw q(ve+" "+tt.filename+":"+tt.lineno+": "+tt.message),tt},T&&(B.on("message",function(tt){B.onmessage({data:tt})}),B.on("error",function(tt){B.onerror(tt)}),B.on("detachedExit",function(){}));var be=[],Ge=["onExit","onAbort","print","printErr"];for(var rt of Ge)u.hasOwnProperty(rt)&&be.push(rt);B.postMessage({cmd:"load",handlers:be,urlOrBlob:u.mainScriptUrlOrBlob||r,wasmMemory:le,wasmModule:fe})},allocateUnusedWorker:function(){var B,H=w("tfjs-backend-wasm-threaded-simd.worker.js");B=new Worker(H),et.unusedWorkers.push(B)},getNewWorker:function(){return et.unusedWorkers.length==0&&(et.allocateUnusedWorker(),et.loadWasmModuleToWorker(et.unusedWorkers[0])),et.unusedWorkers.pop()}};u.PThread=et;function lh(B){for(;B.length>0;)B.shift()(u)}function Fv(){var B=xb(),H=s()[B+52>>>2],be=s()[B+56>>>2],Ge=H-be;I_(H,Ge),Tb(H)}u.establishStackSpace=Fv;function sb(B){if(C)return bp(2,0,B);try{ob(B)}catch(H){Rv(H)}}var jm=[];function Ev(B){var H=jm[B];return H||(B>=jm.length&&(jm.length=B+1),jm[B]=H=qr.get(B)),H}function Lv(B,H){var be=Ev(B)(H);Ga()?et.setExitStatus(be):C_(be)}u.invokeEntryPoint=Lv;function Bv(B){et.tlsInitFunctions.push(B)}function $v(B){y_(B,!x,1,!b),et.threadInitTLS()}function Ov(B){C?postMessage({cmd:"cleanupThread",thread:B}):Mv(B)}function ab(B,H,be,Ge){return C?bp(3,1,B,H,be,Ge):ib(B,H,be,Ge)}function ib(B,H,be,Ge){if(typeof SharedArrayBuffer>"u")return q("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var rt=[],tt=0;if(C&&(rt.length===0||tt))return ab(B,H,be,Ge);if(tt)return tt;var ve={startRoutine:be,pthread_ptr:B,arg:Ge,transferList:rt};return C?(ve.cmd="spawnThread",postMessage(ve,rt),0):tb(ve)}function zv(){return 65536}var Gv=!0;function Wv(){return Gv}function mh(B){Atomics.store(s(),B>>2,1),xb()&&T_(B),Atomics.compareExchange(s(),B>>2,1,0)}u.executeNotifiedProxyingQueue=mh;function Uv(B,H,be,Ge){if(B==H)setTimeout(()=>mh(Ge));else if(C)postMessage({targetThread:B,cmd:"processProxyingQueue",queue:Ge});else{var rt=et.pthreads[B];if(!rt)return;rt.postMessage({cmd:"processProxyingQueue",queue:Ge})}return 1}function Kv(B,H,be){return-1}function Vv(){cl("")}function hl(B){hl.shown||(hl.shown={}),hl.shown[B]||(hl.shown[B]=1,T&&(B="warning: "+B),q(B))}function Hv(){T||x||hl("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function qv(){return Date.now()}function ub(){return 4294901760}function jv(){return ub()}var ch;T?ch=()=>{var B=process.hrtime();return B[0]*1e3+B[1]/1e6}:ch=()=>performance.timeOrigin+performance.now();function Xv(B,H,be){n().copyWithin(B>>>0,H>>>0,H+be>>>0)}function Yv(){return T?_X().cpus().length:navigator.hardwareConcurrency}function Zv(B){var H=Jw(),be=B();return Tb(H),be}function bp(B,H){var be=arguments.length-2,Ge=arguments;return Zv(()=>{for(var rt=be,tt=Cb(rt*8),ve=tt>>3,Be=0;Be<be;Be++){var cr=Ge[2+Be];p()[ve+Be>>>0]=cr}return x_(B,rt,tt,H)})}var dh=[];function Qv(B,H,be){dh.length=H;for(var Ge=be>>3,rt=0;rt<H;rt++)dh[rt]=p()[Ge+rt>>>0];var tt=B<0,ve=tt?Dv[-B-1]:iS[B];return ve.apply(null,dh)}function Jv(B){try{return le.grow(B-it.byteLength+65535>>>16),or(le.buffer),1}catch{}}function eS(B){var H=n().length;if(B=B>>>0,B<=H)return!1;var be=ub();if(B>be)return!1;let Ge=(cr,Co)=>cr+(Co-cr%Co)%Co;for(var rt=1;rt<=4;rt*=2){var tt=H*(1+.2/rt);tt=Math.min(tt,B+100663296);var ve=Math.min(be,Ge(Math.max(B,tt),65536)),Be=Jv(ve);if(Be)return!0}return!1}function tS(){throw"unwind"}function pb(B){return C?bp(4,1,B):52}function lb(B,H,be,Ge,rt){return C?bp(5,1,B,H,be,Ge,rt):70}var rS=[null,[],[]];function nS(B,H){var be=rS[B];H===0||H===10?((B===1?K:q)(Ze(be,0)),be.length=0):be.push(H)}function mb(B,H,be,Ge){if(C)return bp(6,1,B,H,be,Ge);for(var rt=0,tt=0;tt<be;tt++){var ve=a()[H>>>2],Be=a()[H+4>>>2];H+=8;for(var cr=0;cr<Be;cr++)nS(B,n()[ve+cr>>>0]);rt+=Be}return a()[Ge>>>2]=rt,0}function cb(B){var H=u["_"+B];return H}function oS(B,H){e().set(B,H>>>0)}function sS(B,H,be,Ge,rt){var tt={string:Hn=>{var Qm=0;if(Hn!=null&&Hn!==0){var S_=(Hn.length<<2)+1;Qm=Cb(S_),St(Hn,Qm,S_)}return Qm},array:Hn=>{var Qm=Cb(Hn.length);return oS(Hn,Qm),Qm}};function ve(Hn){return H==="string"?ee(Hn):H==="boolean"?!!Hn:Hn}var Be=cb(B),cr=[],Co=0;if(Ge)for(var Lu=0;Lu<Ge.length;Lu++){var v_=tt[be[Lu]];v_?(Co===0&&(Co=Jw()),cr[Lu]=v_(Ge[Lu])):cr[Lu]=Ge[Lu]}var eA=Be.apply(null,cr);function bY(Hn){return Co!==0&&Tb(Co),ve(Hn)}return eA=bY(eA),eA}function aS(B,H,be,Ge){be=be||[];var rt=be.every(ve=>ve==="number"||ve==="boolean"),tt=H!=="string";return tt&&rt&&!Ge?cb(B):function(){return sS(B,H,be,arguments,Ge)}}et.init();var iS=[null,nb,sb,ab,pb,lb,mb],db={__emscripten_init_main_thread_js:$v,__emscripten_thread_cleanup:Ov,__pthread_create_js:ib,_emscripten_default_pthread_stack_size:zv,_emscripten_get_now_is_monotonic:Wv,_emscripten_notify_task_queue:Uv,_emscripten_set_offscreencanvas_size:Kv,abort:Vv,emscripten_check_blocking_allowed:Hv,emscripten_date_now:qv,emscripten_get_heap_max:jv,emscripten_get_now:ch,emscripten_memcpy_big:Xv,emscripten_num_logical_cores:Yv,emscripten_receive_on_main_thread_js:Qv,emscripten_resize_heap:eS,emscripten_unwind_to_js_event_loop:tS,exit:ob,fd_close:pb,fd_seek:lb,fd_write:mb,memory:le||u.wasmMemory},b_=Av(),uS=u.___wasm_call_ctors=function(){return(uS=u.___wasm_call_ctors=u.asm.__wasm_call_ctors).apply(null,arguments)},pS=u._init=function(){return(pS=u._init=u.asm.init).apply(null,arguments)},lS=u._init_with_threads_count=function(){return(lS=u._init_with_threads_count=u.asm.init_with_threads_count).apply(null,arguments)},mS=u._get_threads_count=function(){return(mS=u._get_threads_count=u.asm.get_threads_count).apply(null,arguments)},cS=u._register_tensor=function(){return(cS=u._register_tensor=u.asm.register_tensor).apply(null,arguments)},dS=u._dispose_data=function(){return(dS=u._dispose_data=u.asm.dispose_data).apply(null,arguments)},fS=u._dispose=function(){return(fS=u._dispose=u.asm.dispose).apply(null,arguments)},hS=u._Abs=function(){return(hS=u._Abs=u.asm.Abs).apply(null,arguments)},gS=u._Acos=function(){return(gS=u._Acos=u.asm.Acos).apply(null,arguments)},bS=u._Acosh=function(){return(bS=u._Acosh=u.asm.Acosh).apply(null,arguments)},yS=u._Add=function(){return(yS=u._Add=u.asm.Add).apply(null,arguments)},xS=u._AddN=function(){return(xS=u._AddN=u.asm.AddN).apply(null,arguments)},TS=u._All=function(){return(TS=u._All=u.asm.All).apply(null,arguments)},CS=u._Any=function(){return(CS=u._Any=u.asm.Any).apply(null,arguments)},IS=u._ArgMax=function(){return(IS=u._ArgMax=u.asm.ArgMax).apply(null,arguments)},kS=u._ArgMin=function(){return(kS=u._ArgMin=u.asm.ArgMin).apply(null,arguments)},vS=u._Asin=function(){return(vS=u._Asin=u.asm.Asin).apply(null,arguments)},SS=u._Asinh=function(){return(SS=u._Asinh=u.asm.Asinh).apply(null,arguments)},wS=u._Atan=function(){return(wS=u._Atan=u.asm.Atan).apply(null,arguments)},AS=u._Atan2=function(){return(AS=u._Atan2=u.asm.Atan2).apply(null,arguments)},NS=u._Atanh=function(){return(NS=u._Atanh=u.asm.Atanh).apply(null,arguments)},DS=u._AvgPool=function(){return(DS=u._AvgPool=u.asm.AvgPool).apply(null,arguments)},_S=u._AvgPool3D=function(){return(_S=u._AvgPool3D=u.asm.AvgPool3D).apply(null,arguments)},MS=u._AvgPool3DGrad=function(){return(MS=u._AvgPool3DGrad=u.asm.AvgPool3DGrad).apply(null,arguments)},PS=u._AvgPoolGrad=function(){return(PS=u._AvgPoolGrad=u.asm.AvgPoolGrad).apply(null,arguments)},RS=u._BatchMatMul=function(){return(RS=u._BatchMatMul=u.asm.BatchMatMul).apply(null,arguments)},FS=u._Bincount=function(){return(FS=u._Bincount=u.asm.Bincount).apply(null,arguments)},ES=u._BitwiseAnd=function(){return(ES=u._BitwiseAnd=u.asm.BitwiseAnd).apply(null,arguments)},LS=u._Ceil=function(){return(LS=u._Ceil=u.asm.Ceil).apply(null,arguments)},BS=u._ClipByValue=function(){return(BS=u._ClipByValue=u.asm.ClipByValue).apply(null,arguments)},$S=u._Conv2D=function(){return($S=u._Conv2D=u.asm.Conv2D).apply(null,arguments)},OS=u._Conv2DBackpropInput=function(){return(OS=u._Conv2DBackpropInput=u.asm.Conv2DBackpropInput).apply(null,arguments)},zS=u._Conv3D=function(){return(zS=u._Conv3D=u.asm.Conv3D).apply(null,arguments)},GS=u._Conv3DBackpropFilterV2=function(){return(GS=u._Conv3DBackpropFilterV2=u.asm.Conv3DBackpropFilterV2).apply(null,arguments)},WS=u._Conv3DBackpropInputV2=function(){return(WS=u._Conv3DBackpropInputV2=u.asm.Conv3DBackpropInputV2).apply(null,arguments)},US=u._Cos=function(){return(US=u._Cos=u.asm.Cos).apply(null,arguments)},KS=u._Cosh=function(){return(KS=u._Cosh=u.asm.Cosh).apply(null,arguments)},VS=u._CropAndResize=function(){return(VS=u._CropAndResize=u.asm.CropAndResize).apply(null,arguments)},HS=u._Cumprod=function(){return(HS=u._Cumprod=u.asm.Cumprod).apply(null,arguments)},qS=u._Cumsum=function(){return(qS=u._Cumsum=u.asm.Cumsum).apply(null,arguments)},jS=u._DenseBincount=function(){return(jS=u._DenseBincount=u.asm.DenseBincount).apply(null,arguments)},XS=u._DepthToSpace=function(){return(XS=u._DepthToSpace=u.asm.DepthToSpace).apply(null,arguments)},YS=u._DepthwiseConv2dNative=function(){return(YS=u._DepthwiseConv2dNative=u.asm.DepthwiseConv2dNative).apply(null,arguments)},ZS=u._Diag=function(){return(ZS=u._Diag=u.asm.Diag).apply(null,arguments)},QS=u._Dilation2D=function(){return(QS=u._Dilation2D=u.asm.Dilation2D).apply(null,arguments)},JS=u._Dilation2DBackpropFilter=function(){return(JS=u._Dilation2DBackpropFilter=u.asm.Dilation2DBackpropFilter).apply(null,arguments)},ew=u._Dilation2DBackpropInput=function(){return(ew=u._Dilation2DBackpropInput=u.asm.Dilation2DBackpropInput).apply(null,arguments)},tw=u._Elu=function(){return(tw=u._Elu=u.asm.Elu).apply(null,arguments)},rw=u._EluGrad=function(){return(rw=u._EluGrad=u.asm.EluGrad).apply(null,arguments)},nw=u._Equal=function(){return(nw=u._Equal=u.asm.Equal).apply(null,arguments)},ow=u._Erf=function(){return(ow=u._Erf=u.asm.Erf).apply(null,arguments)},sw=u._Exp=function(){return(sw=u._Exp=u.asm.Exp).apply(null,arguments)},aw=u._Expm1=function(){return(aw=u._Expm1=u.asm.Expm1).apply(null,arguments)},iw=u._FlipLeftRight=function(){return(iw=u._FlipLeftRight=u.asm.FlipLeftRight).apply(null,arguments)},uw=u._Floor=function(){return(uw=u._Floor=u.asm.Floor).apply(null,arguments)},pw=u._FloorDiv=function(){return(pw=u._FloorDiv=u.asm.FloorDiv).apply(null,arguments)},lw=u._FusedBatchNorm=function(){return(lw=u._FusedBatchNorm=u.asm.FusedBatchNorm).apply(null,arguments)},mw=u._FusedConv2D=function(){return(mw=u._FusedConv2D=u.asm.FusedConv2D).apply(null,arguments)},cw=u._FusedDepthwiseConv2D=function(){return(cw=u._FusedDepthwiseConv2D=u.asm.FusedDepthwiseConv2D).apply(null,arguments)},dw=u._Gather=function(){return(dw=u._Gather=u.asm.Gather).apply(null,arguments)},fw=u._GatherNd=function(){return(fw=u._GatherNd=u.asm.GatherNd).apply(null,arguments)},hw=u._Greater=function(){return(hw=u._Greater=u.asm.Greater).apply(null,arguments)},gw=u._GreaterEqual=function(){return(gw=u._GreaterEqual=u.asm.GreaterEqual).apply(null,arguments)},bw=u._IsFinite=function(){return(bw=u._IsFinite=u.asm.IsFinite).apply(null,arguments)},yw=u._IsInf=function(){return(yw=u._IsInf=u.asm.IsInf).apply(null,arguments)},xw=u._IsNan=function(){return(xw=u._IsNan=u.asm.IsNan).apply(null,arguments)},Tw=u._LRN=function(){return(Tw=u._LRN=u.asm.LRN).apply(null,arguments)},Cw=u._LRNGrad=function(){return(Cw=u._LRNGrad=u.asm.LRNGrad).apply(null,arguments)},Iw=u._LeakyRelu=function(){return(Iw=u._LeakyRelu=u.asm.LeakyRelu).apply(null,arguments)},kw=u._Less=function(){return(kw=u._Less=u.asm.Less).apply(null,arguments)},vw=u._LessEqual=function(){return(vw=u._LessEqual=u.asm.LessEqual).apply(null,arguments)},Sw=u._LinSpace=function(){return(Sw=u._LinSpace=u.asm.LinSpace).apply(null,arguments)},ww=u._Log=function(){return(ww=u._Log=u.asm.Log).apply(null,arguments)},Aw=u._Log1p=function(){return(Aw=u._Log1p=u.asm.Log1p).apply(null,arguments)},Nw=u._LogicalAnd=function(){return(Nw=u._LogicalAnd=u.asm.LogicalAnd).apply(null,arguments)},Dw=u._LogicalNot=function(){return(Dw=u._LogicalNot=u.asm.LogicalNot).apply(null,arguments)},_w=u._LogicalOr=function(){return(_w=u._LogicalOr=u.asm.LogicalOr).apply(null,arguments)},Mw=u._LogicalXor=function(){return(Mw=u._LogicalXor=u.asm.LogicalXor).apply(null,arguments)},Pw=u._Max=function(){return(Pw=u._Max=u.asm.Max).apply(null,arguments)},Rw=u._MaxPool=function(){return(Rw=u._MaxPool=u.asm.MaxPool).apply(null,arguments)},Fw=u._MaxPool3D=function(){return(Fw=u._MaxPool3D=u.asm.MaxPool3D).apply(null,arguments)},Ew=u._MaxPool3DGrad=function(){return(Ew=u._MaxPool3DGrad=u.asm.MaxPool3DGrad).apply(null,arguments)},Lw=u._MaxPoolGrad=function(){return(Lw=u._MaxPoolGrad=u.asm.MaxPoolGrad).apply(null,arguments)},Bw=u._MaxPoolWithArgmax=function(){return(Bw=u._MaxPoolWithArgmax=u.asm.MaxPoolWithArgmax).apply(null,arguments)},$w=u._Maximum=function(){return($w=u._Maximum=u.asm.Maximum).apply(null,arguments)},Ow=u._Mean=function(){return(Ow=u._Mean=u.asm.Mean).apply(null,arguments)},zw=u._Min=function(){return(zw=u._Min=u.asm.Min).apply(null,arguments)},Gw=u._Minimum=function(){return(Gw=u._Minimum=u.asm.Minimum).apply(null,arguments)},Ww=u._MirrorPad=function(){return(Ww=u._MirrorPad=u.asm.MirrorPad).apply(null,arguments)},Uw=u._Mod=function(){return(Uw=u._Mod=u.asm.Mod).apply(null,arguments)},Kw=u._Multinomial=function(){return(Kw=u._Multinomial=u.asm.Multinomial).apply(null,arguments)},Vw=u._Multiply=function(){return(Vw=u._Multiply=u.asm.Multiply).apply(null,arguments)},Hw=u._Neg=function(){return(Hw=u._Neg=u.asm.Neg).apply(null,arguments)},qw=u._NonMaxSuppressionV3=function(){return(qw=u._NonMaxSuppressionV3=u.asm.NonMaxSuppressionV3).apply(null,arguments)},fb=u._NonMaxSuppressionV4=function(){return(fb=u._NonMaxSuppressionV4=u.asm.NonMaxSuppressionV4).apply(null,arguments)},hb=u._NonMaxSuppressionV5=function(){return(hb=u._NonMaxSuppressionV5=u.asm.NonMaxSuppressionV5).apply(null,arguments)},fh=u._NotEqual=function(){return(fh=u._NotEqual=u.asm.NotEqual).apply(null,arguments)},jw=u._OneHot=function(){return(jw=u._OneHot=u.asm.OneHot).apply(null,arguments)},Xw=u._PadV2=function(){return(Xw=u._PadV2=u.asm.PadV2).apply(null,arguments)},Xm=u._Pow=function(){return(Xm=u._Pow=u.asm.Pow).apply(null,arguments)},gb=u._Prelu=function(){return(gb=u._Prelu=u.asm.Prelu).apply(null,arguments)},Ym=u._Prod=function(){return(Ym=u._Prod=u.asm.Prod).apply(null,arguments)},Zm=u._RealDiv=function(){return(Zm=u._RealDiv=u.asm.RealDiv).apply(null,arguments)},Yw=u._Reciprocal=function(){return(Yw=u._Reciprocal=u.asm.Reciprocal).apply(null,arguments)},Z=u._Relu=function(){return(Z=u._Relu=u.asm.Relu).apply(null,arguments)},ce=u._Relu6=function(){return(ce=u._Relu6=u.asm.Relu6).apply(null,arguments)},Oe=u._ResizeBilinear=function(){return(Oe=u._ResizeBilinear=u.asm.ResizeBilinear).apply(null,arguments)},yt=u._ResizeBilinearGrad=function(){return(yt=u._ResizeBilinearGrad=u.asm.ResizeBilinearGrad).apply(null,arguments)},sr=u._ResizeNearestNeighbor=function(){return(sr=u._ResizeNearestNeighbor=u.asm.ResizeNearestNeighbor).apply(null,arguments)},ar=u._ResizeNearestNeighborGrad=function(){return(ar=u._ResizeNearestNeighborGrad=u.asm.ResizeNearestNeighborGrad).apply(null,arguments)},mt=u._Reverse=function(){return(mt=u._Reverse=u.asm.Reverse).apply(null,arguments)},ut=u._RotateWithOffset=function(){return(ut=u._RotateWithOffset=u.asm.RotateWithOffset).apply(null,arguments)},Ar=u._Round=function(){return(Ar=u._Round=u.asm.Round).apply(null,arguments)},To=u._Rsqrt=function(){return(To=u._Rsqrt=u.asm.Rsqrt).apply(null,arguments)},Eu=u._ScatterNd=function(){return(Eu=u._ScatterNd=u.asm.ScatterNd).apply(null,arguments)},bb=u._SearchSorted=function(){return(bb=u._SearchSorted=u.asm.SearchSorted).apply(null,arguments)},hh=u._SelectV2=function(){return(hh=u._SelectV2=u.asm.SelectV2).apply(null,arguments)},Zw=u._Selu=function(){return(Zw=u._Selu=u.asm.Selu).apply(null,arguments)},gn=u._Sigmoid=function(){return(gn=u._Sigmoid=u.asm.Sigmoid).apply(null,arguments)},yp=u._Sign=function(){return(yp=u._Sign=u.asm.Sign).apply(null,arguments)},yb=u._Sin=function(){return(yb=u._Sin=u.asm.Sin).apply(null,arguments)},$X=u._Sinh=function(){return($X=u._Sinh=u.asm.Sinh).apply(null,arguments)},OX=u._Softmax=function(){return(OX=u._Softmax=u.asm.Softmax).apply(null,arguments)},zX=u._Softplus=function(){return(zX=u._Softplus=u.asm.Softplus).apply(null,arguments)},GX=u._SparseFillEmptyRows=function(){return(GX=u._SparseFillEmptyRows=u.asm.SparseFillEmptyRows).apply(null,arguments)},WX=u._SparseReshape=function(){return(WX=u._SparseReshape=u.asm.SparseReshape).apply(null,arguments)},UX=u._SparseSegmentReduction=function(){return(UX=u._SparseSegmentReduction=u.asm.SparseSegmentReduction).apply(null,arguments)},KX=u._SparseToDense=function(){return(KX=u._SparseToDense=u.asm.SparseToDense).apply(null,arguments)},VX=u._Sqrt=function(){return(VX=u._Sqrt=u.asm.Sqrt).apply(null,arguments)},HX=u._Square=function(){return(HX=u._Square=u.asm.Square).apply(null,arguments)},qX=u._SquaredDifference=function(){return(qX=u._SquaredDifference=u.asm.SquaredDifference).apply(null,arguments)},jX=u._Step=function(){return(jX=u._Step=u.asm.Step).apply(null,arguments)},XX=u._StridedSlice=function(){return(XX=u._StridedSlice=u.asm.StridedSlice).apply(null,arguments)},YX=u._Sub=function(){return(YX=u._Sub=u.asm.Sub).apply(null,arguments)},ZX=u._Sum=function(){return(ZX=u._Sum=u.asm.Sum).apply(null,arguments)},QX=u._Tan=function(){return(QX=u._Tan=u.asm.Tan).apply(null,arguments)},JX=u._Tanh=function(){return(JX=u._Tanh=u.asm.Tanh).apply(null,arguments)},eY=u._TensorScatterUpdate=function(){return(eY=u._TensorScatterUpdate=u.asm.TensorScatterUpdate).apply(null,arguments)},tY=u._Tile=function(){return(tY=u._Tile=u.asm.Tile).apply(null,arguments)},rY=u._TopK=function(){return(rY=u._TopK=u.asm.TopK).apply(null,arguments)},nY=u._Transform=function(){return(nY=u._Transform=u.asm.Transform).apply(null,arguments)},oY=u._Transpose=function(){return(oY=u._Transpose=u.asm.Transpose).apply(null,arguments)},sY=u.__FusedMatMul=function(){return(sY=u.__FusedMatMul=u.asm._FusedMatMul).apply(null,arguments)},aY=u._malloc=function(){return(aY=u._malloc=u.asm.malloc).apply(null,arguments)},iY=u._free=function(){return(iY=u._free=u.asm.free).apply(null,arguments)},uY=u.__emscripten_tls_init=function(){return(uY=u.__emscripten_tls_init=u.asm._emscripten_tls_init).apply(null,arguments)},xb=u._pthread_self=function(){return(xb=u._pthread_self=u.asm.pthread_self).apply(null,arguments)},pY=u.___errno_location=function(){return(pY=u.___errno_location=u.asm.__errno_location).apply(null,arguments)},y_=u.__emscripten_thread_init=function(){return(y_=u.__emscripten_thread_init=u.asm._emscripten_thread_init).apply(null,arguments)},lY=u.__emscripten_thread_crashed=function(){return(lY=u.__emscripten_thread_crashed=u.asm._emscripten_thread_crashed).apply(null,arguments)},mY=u._emscripten_main_thread_process_queued_calls=function(){return(mY=u._emscripten_main_thread_process_queued_calls=u.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},cY=u._emscripten_main_browser_thread_id=function(){return(cY=u._emscripten_main_browser_thread_id=u.asm.emscripten_main_browser_thread_id).apply(null,arguments)},x_=u._emscripten_run_in_main_runtime_thread_js=function(){return(x_=u._emscripten_run_in_main_runtime_thread_js=u.asm.emscripten_run_in_main_runtime_thread_js).apply(null,arguments)},dY=u._emscripten_dispatch_to_thread_=function(){return(dY=u._emscripten_dispatch_to_thread_=u.asm.emscripten_dispatch_to_thread_).apply(null,arguments)},T_=u.__emscripten_proxy_execute_task_queue=function(){return(T_=u.__emscripten_proxy_execute_task_queue=u.asm._emscripten_proxy_execute_task_queue).apply(null,arguments)},Qw=u.__emscripten_thread_free_data=function(){return(Qw=u.__emscripten_thread_free_data=u.asm._emscripten_thread_free_data).apply(null,arguments)},C_=u.__emscripten_thread_exit=function(){return(C_=u.__emscripten_thread_exit=u.asm._emscripten_thread_exit).apply(null,arguments)},I_=u._emscripten_stack_set_limits=function(){return(I_=u._emscripten_stack_set_limits=u.asm.emscripten_stack_set_limits).apply(null,arguments)},Jw=u.stackSave=function(){return(Jw=u.stackSave=u.asm.stackSave).apply(null,arguments)},Tb=u.stackRestore=function(){return(Tb=u.stackRestore=u.asm.stackRestore).apply(null,arguments)},Cb=u.stackAlloc=function(){return(Cb=u.stackAlloc=u.asm.stackAlloc).apply(null,arguments)},fY=u.dynCall_iijjiiii=function(){return(fY=u.dynCall_iijjiiii=u.asm.dynCall_iijjiiii).apply(null,arguments)},hY=u.dynCall_jiji=function(){return(hY=u.dynCall_jiji=u.asm.dynCall_jiji).apply(null,arguments)};u.keepRuntimeAlive=Ga,u.wasmMemory=le,u.cwrap=aS,u.ExitStatus=fl,u.PThread=et;var Ib;Fu=function B(){Ib||k_(),Ib||(Fu=B)};function k_(B){if(B=B||f,gp>0)return;if(C){l(u),$r(),startWorker(u);return}if(qi(),gp>0)return;function H(){Ib||(Ib=!0,u.calledRun=!0,!Te&&($r(),l(u),u.onRuntimeInitialized&&u.onRuntimeInitialized(),Ru()))}u.setStatus?(u.setStatus("Running..."),setTimeout(function(){setTimeout(function(){u.setStatus("")},1),H()},1)):H()}if(u.preInit)for(typeof u.preInit=="function"&&(u.preInit=[u.preInit]);u.preInit.length>0;)u.preInit.pop()();k_();var kb;c&&(kb={uncaughtException:process.listeners("uncaughtException").filter(function(B){return!c.uncaughtException.indexOf(B)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(B){return!c.unhandledRejection.indexOf(B)>-1})});var vb;if(typeof WasmBackendModule<"u")vb=WasmBackendModule;else if(typeof t<"u")vb=t;else throw new Error("Could not find wasm module in post.js");if(kb){var gY=vb._dispose;vb._dispose=function(){gY(),kb.uncaughtException.forEach(function(B){process.removeListener("uncaughtException",B)}),kb.unhandledRejection.forEach(function(B){process.removeListener("unhandledRejection",B)})}}return t.ready}})();typeof Tv=="object"&&typeof u_=="object"?u_.exports=i_:typeof define=="function"&&define.amd?define([],function(){return i_}):typeof Tv=="object"&&(Tv.WasmBackendModuleThreadedSimd=i_)});var RX=Dr((Cv,l_)=>{"use strict";var p_=(()=>{var r=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(r=r||__filename),function(t){t=t||{};var e=typeof t<"u"?t:{},n,o;e.ready=new Promise(function(Z,ce){n=Z,o=ce});var s;typeof process<"u"&&process.listeners&&(s={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var a=Object.assign({},e),i=[],p="./this.program",u=(Z,ce)=>{throw ce},l=typeof window=="object",m=typeof importScripts=="function",c=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",d="";function f(Z){return e.locateFile?e.locateFile(Z,d):d+Z}var h,g,b,x;function T(Z){if(Z instanceof qm)return;_("exiting due to exception: "+Z)}if(c){var C=NT(),k=a_();m?d=k.dirname(d)+"/":d=__dirname+"/",h=(Z,ce)=>(Z=qi(Z)?new URL(Z):k.normalize(Z),C.readFileSync(Z,ce?void 0:"utf8")),b=Z=>{var ce=h(Z,!0);return ce.buffer||(ce=new Uint8Array(ce)),ce},g=(Z,ce,Oe)=>{Z=qi(Z)?new URL(Z):k.normalize(Z),C.readFile(Z,function(yt,sr){yt?Oe(yt):ce(sr.buffer)})},process.argv.length>1&&(p=process.argv[1].replace(/\\/g,"/")),i=process.argv.slice(2),process.on("uncaughtException",function(Z){if(!(Z instanceof qm))throw Z}),process.on("unhandledRejection",function(Z){throw Z}),u=(Z,ce)=>{if(Tt())throw process.exitCode=Z,ce;T(ce),process.exit(Z)},e.inspect=function(){return"[Emscripten Module object]"}}else(l||m)&&(m?d=self.location.href:typeof document<"u"&&document.currentScript&&(d=document.currentScript.src),r&&(d=r),d.indexOf("blob:")!==0?d=d.substr(0,d.replace(/[?#].*/,"").lastIndexOf("/")+1):d="",h=Z=>{var ce=new XMLHttpRequest;return ce.open("GET",Z,!1),ce.send(null),ce.responseText},m&&(b=Z=>{var ce=new XMLHttpRequest;return ce.open("GET",Z,!1),ce.responseType="arraybuffer",ce.send(null),new Uint8Array(ce.response)}),g=(Z,ce,Oe)=>{var yt=new XMLHttpRequest;yt.open("GET",Z,!0),yt.responseType="arraybuffer",yt.onload=()=>{if(yt.status==200||yt.status==0&&yt.response){ce(yt.response);return}Oe()},yt.onerror=Oe,yt.send(null)},x=Z=>document.title=Z);var w=e.print||console.log.bind(console),_=e.printErr||console.warn.bind(console);Object.assign(e,a),a=null,e.arguments&&(i=e.arguments),e.thisProgram&&(p=e.thisProgram),e.quit&&(u=e.quit);var P=4,M;e.wasmBinary&&(M=e.wasmBinary);var R=e.noExitRuntime||!0;typeof WebAssembly!="object"&&sn("no native wasm support detected");var $,G=!1,W;function U(Z,ce){Z||sn(ce)}var V=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0;function K(Z,ce,Oe){ce>>>=0;for(var yt=ce+Oe,sr=ce;Z[sr]&&!(sr>=yt);)++sr;if(sr-ce>16&&Z.buffer&&V)return V.decode(Z.subarray(ce,sr));for(var ar="";ce<sr;){var mt=Z[ce++];if(!(mt&128)){ar+=String.fromCharCode(mt);continue}var ut=Z[ce++]&63;if((mt&224)==192){ar+=String.fromCharCode((mt&31)<<6|ut);continue}var Ar=Z[ce++]&63;if((mt&240)==224?mt=(mt&15)<<12|ut<<6|Ar:mt=(mt&7)<<18|ut<<12|Ar<<6|Z[ce++]&63,mt<65536)ar+=String.fromCharCode(mt);else{var To=mt-65536;ar+=String.fromCharCode(55296|To>>10,56320|To&1023)}}return ar}function q(Z,ce){return Z>>>=0,Z?K(pe,Z,ce):""}function j(Z,ce,Oe,yt){if(Oe>>>=0,!(yt>0))return 0;for(var sr=Oe,ar=Oe+yt-1,mt=0;mt<Z.length;++mt){var ut=Z.charCodeAt(mt);if(ut>=55296&&ut<=57343){var Ar=Z.charCodeAt(++mt);ut=65536+((ut&1023)<<10)|Ar&1023}if(ut<=127){if(Oe>=ar)break;ce[Oe++>>>0]=ut}else if(ut<=2047){if(Oe+1>=ar)break;ce[Oe++>>>0]=192|ut>>6,ce[Oe++>>>0]=128|ut&63}else if(ut<=65535){if(Oe+2>=ar)break;ce[Oe++>>>0]=224|ut>>12,ce[Oe++>>>0]=128|ut>>6&63,ce[Oe++>>>0]=128|ut&63}else{if(Oe+3>=ar)break;ce[Oe++>>>0]=240|ut>>18,ce[Oe++>>>0]=128|ut>>12&63,ce[Oe++>>>0]=128|ut>>6&63,ce[Oe++>>>0]=128|ut&63}}return ce[Oe>>>0]=0,Oe-sr}function te(Z,ce,Oe){return j(Z,pe,ce,Oe)}var se,ie,pe,ae,le,fe,Te,Ae,$e;function Le(Z){se=Z,e.HEAP8=ie=new Int8Array(Z),e.HEAP16=ae=new Int16Array(Z),e.HEAP32=fe=new Int32Array(Z),e.HEAPU8=pe=new Uint8Array(Z),e.HEAPU16=le=new Uint16Array(Z),e.HEAPU32=Te=new Uint32Array(Z),e.HEAPF32=Ae=new Float32Array(Z),e.HEAPF64=$e=new Float64Array(Z)}var Ze=e.INITIAL_MEMORY||16777216,ee,bt=[],St=[],it=[],wt=!1;function Tt(){return R}function Bt(){if(e.preRun)for(typeof e.preRun=="function"&&(e.preRun=[e.preRun]);e.preRun.length;)gr(e.preRun.shift());Fu(bt)}function $t(){wt=!0,Fu(St)}function Vn(){if(e.postRun)for(typeof e.postRun=="function"&&(e.postRun=[e.postRun]);e.postRun.length;)Vr(e.postRun.shift());Fu(it)}function gr(Z){bt.unshift(Z)}function bo(Z){St.unshift(Z)}function Vr(Z){it.unshift(Z)}var or=0,Hr=null,qr=null;function yo(Z){or++,e.monitorRunDependencies&&e.monitorRunDependencies(or)}function xo(Z){if(or--,e.monitorRunDependencies&&e.monitorRunDependencies(or),or==0&&(Hr!==null&&(clearInterval(Hr),Hr=null),qr)){var ce=qr;qr=null,ce()}}function sn(Z){e.onAbort&&e.onAbort(Z),Z="Aborted("+Z+")",_(Z),G=!0,W=1,Z+=". Build with -sASSERTIONS for more info.";var ce=new WebAssembly.RuntimeError(Z);throw o(ce),ce}var Pu="data:application/octet-stream;base64,";function Ga(Z){return Z.startsWith(Pu)}function qi(Z){return Z.startsWith("file://")}var $r;$r="tfjs-backend-wasm.wasm",Ga($r)||($r=f($r));function Ru(Z){try{if(Z==$r&&M)return new Uint8Array(M);if(b)return b(Z);throw"both async and sync fetching of the wasm failed"}catch(ce){sn(ce)}}function uh(){if(!M&&(l||m)){if(typeof fetch=="function"&&!qi($r))return fetch($r,{credentials:"same-origin"}).then(function(Z){if(!Z.ok)throw"failed to load wasm binary file at '"+$r+"'";return Z.arrayBuffer()}).catch(function(){return Ru($r)});if(g)return new Promise(function(Z,ce){g($r,function(Oe){Z(new Uint8Array(Oe))},ce)})}return Promise.resolve().then(function(){return Ru($r)})}function ph(){var Z={env:eb,wasi_snapshot_preview1:eb};function ce(mt,ut){var Ar=mt.exports;e.asm=Ar,$=e.asm.memory,Le($.buffer),ee=e.asm.__indirect_function_table,bo(e.asm.__wasm_call_ctors),xo("wasm-instantiate")}yo("wasm-instantiate");function Oe(mt){ce(mt.instance)}function yt(mt){return uh().then(function(ut){return WebAssembly.instantiate(ut,Z)}).then(function(ut){return ut}).then(mt,function(ut){_("failed to asynchronously prepare wasm: "+ut),sn(ut)})}function sr(){return!M&&typeof WebAssembly.instantiateStreaming=="function"&&!Ga($r)&&!qi($r)&&!c&&typeof fetch=="function"?fetch($r,{credentials:"same-origin"}).then(function(mt){var ut=WebAssembly.instantiateStreaming(mt,Z);return ut.then(Oe,function(Ar){return _("wasm streaming compile failed: "+Ar),_("falling back to ArrayBuffer instantiation"),yt(Oe)})}):yt(Oe)}if(e.instantiateWasm)try{var ar=e.instantiateWasm(Z,ce);return ar}catch(mt){_("Module.instantiateWasm callback failed with error: "+mt),o(mt)}return sr().catch(o),{}}var h_,gp;function qm(Z){this.name="ExitStatus",this.message="Program terminated with exit("+Z+")",this.status=Z}function Fu(Z){for(;Z.length>0;)Z.shift()(e)}function kv(){sn("")}function vv(Z,ce,Oe){pe.copyWithin(Z>>>0,ce>>>0,ce+Oe>>>0)}function cl(){return 4294901760}function Sv(Z){try{return $.grow(Z-se.byteLength+65535>>>16),Le($.buffer),1}catch{}}function Qg(Z){var ce=pe.length;Z=Z>>>0;var Oe=cl();if(Z>Oe)return!1;let yt=(Ar,To)=>Ar+(To-Ar%To)%To;for(var sr=1;sr<=4;sr*=2){var ar=ce*(1+.2/sr);ar=Math.min(ar,Z+100663296);var mt=Math.min(Oe,yt(Math.max(Z,ar),65536)),ut=Sv(mt);if(ut)return!0}return!1}var dl={varargs:void 0,get:function(){dl.varargs+=4;var Z=fe[dl.varargs-4>>>2];return Z},getStr:function(Z){var ce=q(Z);return ce}};function hn(Z){return 52}function Jg(Z,ce,Oe,yt,sr){return 70}var wv=[null,[],[]];function Av(Z,ce){var Oe=wv[Z];ce===0||ce===10?((Z===1?w:_)(K(Oe,0)),Oe.length=0):Oe.push(ce)}function g_(Z,ce,Oe,yt){for(var sr=0,ar=0;ar<Oe;ar++){var mt=Te[ce>>>2],ut=Te[ce+4>>>2];ce+=8;for(var Ar=0;Ar<ut;Ar++)Av(Z,pe[mt+Ar>>>0]);sr+=ut}return Te[yt>>>2]=sr,0}function Nv(Z){var ce=e["_"+Z];return ce}function Dv(Z,ce){ie.set(Z,ce>>>0)}function fl(Z,ce,Oe,yt,sr){var ar={string:gn=>{var yp=0;if(gn!=null&&gn!==0){var yb=(gn.length<<2)+1;yp=fh(yb),te(gn,yp,yb)}return yp},array:gn=>{var yp=fh(gn.length);return Dv(gn,yp),yp}};function mt(gn){return ce==="string"?q(gn):ce==="boolean"?!!gn:gn}var ut=Nv(Z),Ar=[],To=0;if(yt)for(var Eu=0;Eu<yt.length;Eu++){var bb=ar[Oe[Eu]];bb?(To===0&&(To=fb()),Ar[Eu]=bb(yt[Eu])):Ar[Eu]=yt[Eu]}var hh=ut.apply(null,Ar);function Zw(gn){return To!==0&&hb(To),mt(gn)}return hh=Zw(hh),hh}function _v(Z,ce,Oe,yt){Oe=Oe||[];var sr=Oe.every(mt=>mt==="number"||mt==="boolean"),ar=ce!=="string";return ar&&sr&&!yt?Nv(Z):function(){return fl(Z,ce,Oe,arguments,yt)}}var eb={abort:kv,emscripten_memcpy_big:vv,emscripten_resize_heap:Qg,fd_close:hn,fd_seek:Jg,fd_write:g_},Mv=ph(),tb=e.___wasm_call_ctors=function(){return(tb=e.___wasm_call_ctors=e.asm.__wasm_call_ctors).apply(null,arguments)},rb=e._init=function(){return(rb=e._init=e.asm.init).apply(null,arguments)},nb=e._init_with_threads_count=function(){return(nb=e._init_with_threads_count=e.asm.init_with_threads_count).apply(null,arguments)},Pv=e._get_threads_count=function(){return(Pv=e._get_threads_count=e.asm.get_threads_count).apply(null,arguments)},ob=e._register_tensor=function(){return(ob=e._register_tensor=e.asm.register_tensor).apply(null,arguments)},Rv=e._dispose_data=function(){return(Rv=e._dispose_data=e.asm.dispose_data).apply(null,arguments)},et=e._dispose=function(){return(et=e._dispose=e.asm.dispose).apply(null,arguments)},lh=e._Abs=function(){return(lh=e._Abs=e.asm.Abs).apply(null,arguments)},Fv=e._Acos=function(){return(Fv=e._Acos=e.asm.Acos).apply(null,arguments)},sb=e._Acosh=function(){return(sb=e._Acosh=e.asm.Acosh).apply(null,arguments)},jm=e._Add=function(){return(jm=e._Add=e.asm.Add).apply(null,arguments)},Ev=e._AddN=function(){return(Ev=e._AddN=e.asm.AddN).apply(null,arguments)},Lv=e._All=function(){return(Lv=e._All=e.asm.All).apply(null,arguments)},Bv=e._Any=function(){return(Bv=e._Any=e.asm.Any).apply(null,arguments)},$v=e._ArgMax=function(){return($v=e._ArgMax=e.asm.ArgMax).apply(null,arguments)},Ov=e._ArgMin=function(){return(Ov=e._ArgMin=e.asm.ArgMin).apply(null,arguments)},ab=e._Asin=function(){return(ab=e._Asin=e.asm.Asin).apply(null,arguments)},ib=e._Asinh=function(){return(ib=e._Asinh=e.asm.Asinh).apply(null,arguments)},zv=e._Atan=function(){return(zv=e._Atan=e.asm.Atan).apply(null,arguments)},Gv=e._Atan2=function(){return(Gv=e._Atan2=e.asm.Atan2).apply(null,arguments)},Wv=e._Atanh=function(){return(Wv=e._Atanh=e.asm.Atanh).apply(null,arguments)},mh=e._AvgPool=function(){return(mh=e._AvgPool=e.asm.AvgPool).apply(null,arguments)},Uv=e._AvgPool3D=function(){return(Uv=e._AvgPool3D=e.asm.AvgPool3D).apply(null,arguments)},Kv=e._AvgPool3DGrad=function(){return(Kv=e._AvgPool3DGrad=e.asm.AvgPool3DGrad).apply(null,arguments)},Vv=e._AvgPoolGrad=function(){return(Vv=e._AvgPoolGrad=e.asm.AvgPoolGrad).apply(null,arguments)},hl=e._BatchMatMul=function(){return(hl=e._BatchMatMul=e.asm.BatchMatMul).apply(null,arguments)},Hv=e._Bincount=function(){return(Hv=e._Bincount=e.asm.Bincount).apply(null,arguments)},qv=e._BitwiseAnd=function(){return(qv=e._BitwiseAnd=e.asm.BitwiseAnd).apply(null,arguments)},ub=e._Ceil=function(){return(ub=e._Ceil=e.asm.Ceil).apply(null,arguments)},jv=e._ClipByValue=function(){return(jv=e._ClipByValue=e.asm.ClipByValue).apply(null,arguments)},ch=e._Conv2D=function(){return(ch=e._Conv2D=e.asm.Conv2D).apply(null,arguments)},Xv=e._Conv2DBackpropInput=function(){return(Xv=e._Conv2DBackpropInput=e.asm.Conv2DBackpropInput).apply(null,arguments)},Yv=e._Conv3D=function(){return(Yv=e._Conv3D=e.asm.Conv3D).apply(null,arguments)},Zv=e._Conv3DBackpropFilterV2=function(){return(Zv=e._Conv3DBackpropFilterV2=e.asm.Conv3DBackpropFilterV2).apply(null,arguments)},bp=e._Conv3DBackpropInputV2=function(){return(bp=e._Conv3DBackpropInputV2=e.asm.Conv3DBackpropInputV2).apply(null,arguments)},dh=e._Cos=function(){return(dh=e._Cos=e.asm.Cos).apply(null,arguments)},Qv=e._Cosh=function(){return(Qv=e._Cosh=e.asm.Cosh).apply(null,arguments)},Jv=e._CropAndResize=function(){return(Jv=e._CropAndResize=e.asm.CropAndResize).apply(null,arguments)},eS=e._Cumprod=function(){return(eS=e._Cumprod=e.asm.Cumprod).apply(null,arguments)},tS=e._Cumsum=function(){return(tS=e._Cumsum=e.asm.Cumsum).apply(null,arguments)},pb=e._DenseBincount=function(){return(pb=e._DenseBincount=e.asm.DenseBincount).apply(null,arguments)},lb=e._DepthToSpace=function(){return(lb=e._DepthToSpace=e.asm.DepthToSpace).apply(null,arguments)},rS=e._DepthwiseConv2dNative=function(){return(rS=e._DepthwiseConv2dNative=e.asm.DepthwiseConv2dNative).apply(null,arguments)},nS=e._Diag=function(){return(nS=e._Diag=e.asm.Diag).apply(null,arguments)},mb=e._Dilation2D=function(){return(mb=e._Dilation2D=e.asm.Dilation2D).apply(null,arguments)},cb=e._Dilation2DBackpropFilter=function(){return(cb=e._Dilation2DBackpropFilter=e.asm.Dilation2DBackpropFilter).apply(null,arguments)},oS=e._Dilation2DBackpropInput=function(){return(oS=e._Dilation2DBackpropInput=e.asm.Dilation2DBackpropInput).apply(null,arguments)},sS=e._Elu=function(){return(sS=e._Elu=e.asm.Elu).apply(null,arguments)},aS=e._EluGrad=function(){return(aS=e._EluGrad=e.asm.EluGrad).apply(null,arguments)},iS=e._Equal=function(){return(iS=e._Equal=e.asm.Equal).apply(null,arguments)},db=e._Erf=function(){return(db=e._Erf=e.asm.Erf).apply(null,arguments)},b_=e._Exp=function(){return(b_=e._Exp=e.asm.Exp).apply(null,arguments)},uS=e._Expm1=function(){return(uS=e._Expm1=e.asm.Expm1).apply(null,arguments)},pS=e._FlipLeftRight=function(){return(pS=e._FlipLeftRight=e.asm.FlipLeftRight).apply(null,arguments)},lS=e._Floor=function(){return(lS=e._Floor=e.asm.Floor).apply(null,arguments)},mS=e._FloorDiv=function(){return(mS=e._FloorDiv=e.asm.FloorDiv).apply(null,arguments)},cS=e._FusedBatchNorm=function(){return(cS=e._FusedBatchNorm=e.asm.FusedBatchNorm).apply(null,arguments)},dS=e._FusedConv2D=function(){return(dS=e._FusedConv2D=e.asm.FusedConv2D).apply(null,arguments)},fS=e._FusedDepthwiseConv2D=function(){return(fS=e._FusedDepthwiseConv2D=e.asm.FusedDepthwiseConv2D).apply(null,arguments)},hS=e._Gather=function(){return(hS=e._Gather=e.asm.Gather).apply(null,arguments)},gS=e._GatherNd=function(){return(gS=e._GatherNd=e.asm.GatherNd).apply(null,arguments)},bS=e._Greater=function(){return(bS=e._Greater=e.asm.Greater).apply(null,arguments)},yS=e._GreaterEqual=function(){return(yS=e._GreaterEqual=e.asm.GreaterEqual).apply(null,arguments)},xS=e._IsFinite=function(){return(xS=e._IsFinite=e.asm.IsFinite).apply(null,arguments)},TS=e._IsInf=function(){return(TS=e._IsInf=e.asm.IsInf).apply(null,arguments)},CS=e._IsNan=function(){return(CS=e._IsNan=e.asm.IsNan).apply(null,arguments)},IS=e._LRN=function(){return(IS=e._LRN=e.asm.LRN).apply(null,arguments)},kS=e._LRNGrad=function(){return(kS=e._LRNGrad=e.asm.LRNGrad).apply(null,arguments)},vS=e._LeakyRelu=function(){return(vS=e._LeakyRelu=e.asm.LeakyRelu).apply(null,arguments)},SS=e._Less=function(){return(SS=e._Less=e.asm.Less).apply(null,arguments)},wS=e._LessEqual=function(){return(wS=e._LessEqual=e.asm.LessEqual).apply(null,arguments)},AS=e._LinSpace=function(){return(AS=e._LinSpace=e.asm.LinSpace).apply(null,arguments)},NS=e._Log=function(){return(NS=e._Log=e.asm.Log).apply(null,arguments)},DS=e._Log1p=function(){return(DS=e._Log1p=e.asm.Log1p).apply(null,arguments)},_S=e._LogicalAnd=function(){return(_S=e._LogicalAnd=e.asm.LogicalAnd).apply(null,arguments)},MS=e._LogicalNot=function(){return(MS=e._LogicalNot=e.asm.LogicalNot).apply(null,arguments)},PS=e._LogicalOr=function(){return(PS=e._LogicalOr=e.asm.LogicalOr).apply(null,arguments)},RS=e._LogicalXor=function(){return(RS=e._LogicalXor=e.asm.LogicalXor).apply(null,arguments)},FS=e._Max=function(){return(FS=e._Max=e.asm.Max).apply(null,arguments)},ES=e._MaxPool=function(){return(ES=e._MaxPool=e.asm.MaxPool).apply(null,arguments)},LS=e._MaxPool3D=function(){return(LS=e._MaxPool3D=e.asm.MaxPool3D).apply(null,arguments)},BS=e._MaxPool3DGrad=function(){return(BS=e._MaxPool3DGrad=e.asm.MaxPool3DGrad).apply(null,arguments)},$S=e._MaxPoolGrad=function(){return($S=e._MaxPoolGrad=e.asm.MaxPoolGrad).apply(null,arguments)},OS=e._MaxPoolWithArgmax=function(){return(OS=e._MaxPoolWithArgmax=e.asm.MaxPoolWithArgmax).apply(null,arguments)},zS=e._Maximum=function(){return(zS=e._Maximum=e.asm.Maximum).apply(null,arguments)},GS=e._Mean=function(){return(GS=e._Mean=e.asm.Mean).apply(null,arguments)},WS=e._Min=function(){return(WS=e._Min=e.asm.Min).apply(null,arguments)},US=e._Minimum=function(){return(US=e._Minimum=e.asm.Minimum).apply(null,arguments)},KS=e._MirrorPad=function(){return(KS=e._MirrorPad=e.asm.MirrorPad).apply(null,arguments)},VS=e._Mod=function(){return(VS=e._Mod=e.asm.Mod).apply(null,arguments)},HS=e._Multinomial=function(){return(HS=e._Multinomial=e.asm.Multinomial).apply(null,arguments)},qS=e._Multiply=function(){return(qS=e._Multiply=e.asm.Multiply).apply(null,arguments)},jS=e._Neg=function(){return(jS=e._Neg=e.asm.Neg).apply(null,arguments)},XS=e._NonMaxSuppressionV3=function(){return(XS=e._NonMaxSuppressionV3=e.asm.NonMaxSuppressionV3).apply(null,arguments)},YS=e._NonMaxSuppressionV4=function(){return(YS=e._NonMaxSuppressionV4=e.asm.NonMaxSuppressionV4).apply(null,arguments)},ZS=e._NonMaxSuppressionV5=function(){return(ZS=e._NonMaxSuppressionV5=e.asm.NonMaxSuppressionV5).apply(null,arguments)},QS=e._NotEqual=function(){return(QS=e._NotEqual=e.asm.NotEqual).apply(null,arguments)},JS=e._OneHot=function(){return(JS=e._OneHot=e.asm.OneHot).apply(null,arguments)},ew=e._PadV2=function(){return(ew=e._PadV2=e.asm.PadV2).apply(null,arguments)},tw=e._Pow=function(){return(tw=e._Pow=e.asm.Pow).apply(null,arguments)},rw=e._Prelu=function(){return(rw=e._Prelu=e.asm.Prelu).apply(null,arguments)},nw=e._Prod=function(){return(nw=e._Prod=e.asm.Prod).apply(null,arguments)},ow=e._RealDiv=function(){return(ow=e._RealDiv=e.asm.RealDiv).apply(null,arguments)},sw=e._Reciprocal=function(){return(sw=e._Reciprocal=e.asm.Reciprocal).apply(null,arguments)},aw=e._Relu=function(){return(aw=e._Relu=e.asm.Relu).apply(null,arguments)},iw=e._Relu6=function(){return(iw=e._Relu6=e.asm.Relu6).apply(null,arguments)},uw=e._ResizeBilinear=function(){return(uw=e._ResizeBilinear=e.asm.ResizeBilinear).apply(null,arguments)},pw=e._ResizeBilinearGrad=function(){return(pw=e._ResizeBilinearGrad=e.asm.ResizeBilinearGrad).apply(null,arguments)},lw=e._ResizeNearestNeighbor=function(){return(lw=e._ResizeNearestNeighbor=e.asm.ResizeNearestNeighbor).apply(null,arguments)},mw=e._ResizeNearestNeighborGrad=function(){return(mw=e._ResizeNearestNeighborGrad=e.asm.ResizeNearestNeighborGrad).apply(null,arguments)},cw=e._Reverse=function(){return(cw=e._Reverse=e.asm.Reverse).apply(null,arguments)},dw=e._RotateWithOffset=function(){return(dw=e._RotateWithOffset=e.asm.RotateWithOffset).apply(null,arguments)},fw=e._Round=function(){return(fw=e._Round=e.asm.Round).apply(null,arguments)},hw=e._Rsqrt=function(){return(hw=e._Rsqrt=e.asm.Rsqrt).apply(null,arguments)},gw=e._ScatterNd=function(){return(gw=e._ScatterNd=e.asm.ScatterNd).apply(null,arguments)},bw=e._SearchSorted=function(){return(bw=e._SearchSorted=e.asm.SearchSorted).apply(null,arguments)},yw=e._SelectV2=function(){return(yw=e._SelectV2=e.asm.SelectV2).apply(null,arguments)},xw=e._Selu=function(){return(xw=e._Selu=e.asm.Selu).apply(null,arguments)},Tw=e._Sigmoid=function(){return(Tw=e._Sigmoid=e.asm.Sigmoid).apply(null,arguments)},Cw=e._Sign=function(){return(Cw=e._Sign=e.asm.Sign).apply(null,arguments)},Iw=e._Sin=function(){return(Iw=e._Sin=e.asm.Sin).apply(null,arguments)},kw=e._Sinh=function(){return(kw=e._Sinh=e.asm.Sinh).apply(null,arguments)},vw=e._Softmax=function(){return(vw=e._Softmax=e.asm.Softmax).apply(null,arguments)},Sw=e._Softplus=function(){return(Sw=e._Softplus=e.asm.Softplus).apply(null,arguments)},ww=e._SparseFillEmptyRows=function(){return(ww=e._SparseFillEmptyRows=e.asm.SparseFillEmptyRows).apply(null,arguments)},Aw=e._SparseReshape=function(){return(Aw=e._SparseReshape=e.asm.SparseReshape).apply(null,arguments)},Nw=e._SparseSegmentReduction=function(){return(Nw=e._SparseSegmentReduction=e.asm.SparseSegmentReduction).apply(null,arguments)},Dw=e._SparseToDense=function(){return(Dw=e._SparseToDense=e.asm.SparseToDense).apply(null,arguments)},_w=e._Sqrt=function(){return(_w=e._Sqrt=e.asm.Sqrt).apply(null,arguments)},Mw=e._Square=function(){return(Mw=e._Square=e.asm.Square).apply(null,arguments)},Pw=e._SquaredDifference=function(){return(Pw=e._SquaredDifference=e.asm.SquaredDifference).apply(null,arguments)},Rw=e._Step=function(){return(Rw=e._Step=e.asm.Step).apply(null,arguments)},Fw=e._StridedSlice=function(){return(Fw=e._StridedSlice=e.asm.StridedSlice).apply(null,arguments)},Ew=e._Sub=function(){return(Ew=e._Sub=e.asm.Sub).apply(null,arguments)},Lw=e._Sum=function(){return(Lw=e._Sum=e.asm.Sum).apply(null,arguments)},Bw=e._Tan=function(){return(Bw=e._Tan=e.asm.Tan).apply(null,arguments)},$w=e._Tanh=function(){return($w=e._Tanh=e.asm.Tanh).apply(null,arguments)},Ow=e._TensorScatterUpdate=function(){return(Ow=e._TensorScatterUpdate=e.asm.TensorScatterUpdate).apply(null,arguments)},zw=e._Tile=function(){return(zw=e._Tile=e.asm.Tile).apply(null,arguments)},Gw=e._TopK=function(){return(Gw=e._TopK=e.asm.TopK).apply(null,arguments)},Ww=e._Transform=function(){return(Ww=e._Transform=e.asm.Transform).apply(null,arguments)},Uw=e._Transpose=function(){return(Uw=e._Transpose=e.asm.Transpose).apply(null,arguments)},Kw=e.__FusedMatMul=function(){return(Kw=e.__FusedMatMul=e.asm._FusedMatMul).apply(null,arguments)},Vw=e._malloc=function(){return(Vw=e._malloc=e.asm.malloc).apply(null,arguments)},Hw=e._free=function(){return(Hw=e._free=e.asm.free).apply(null,arguments)},qw=e.___errno_location=function(){return(qw=e.___errno_location=e.asm.__errno_location).apply(null,arguments)},fb=e.stackSave=function(){return(fb=e.stackSave=e.asm.stackSave).apply(null,arguments)},hb=e.stackRestore=function(){return(hb=e.stackRestore=e.asm.stackRestore).apply(null,arguments)},fh=e.stackAlloc=function(){return(fh=e.stackAlloc=e.asm.stackAlloc).apply(null,arguments)},jw=e.dynCall_iijjiiii=function(){return(jw=e.dynCall_iijjiiii=e.asm.dynCall_iijjiiii).apply(null,arguments)},Xw=e.dynCall_jiji=function(){return(Xw=e.dynCall_jiji=e.asm.dynCall_jiji).apply(null,arguments)};e.cwrap=_v;var Xm;qr=function Z(){Xm||gb(),Xm||(qr=Z)};function gb(Z){if(Z=Z||i,or>0||(Bt(),or>0))return;function ce(){Xm||(Xm=!0,e.calledRun=!0,!G&&($t(),n(e),e.onRuntimeInitialized&&e.onRuntimeInitialized(),Vn()))}e.setStatus?(e.setStatus("Running..."),setTimeout(function(){setTimeout(function(){e.setStatus("")},1),ce()},1)):ce()}if(e.preInit)for(typeof e.preInit=="function"&&(e.preInit=[e.preInit]);e.preInit.length>0;)e.preInit.pop()();gb();var Ym;s&&(Ym={uncaughtException:process.listeners("uncaughtException").filter(function(Z){return!s.uncaughtException.indexOf(Z)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(Z){return!s.unhandledRejection.indexOf(Z)>-1})});var Zm;if(typeof t<"u")Zm=t;else if(typeof WasmBackendModuleThreadedSimd<"u")Zm=WasmBackendModuleThreadedSimd;else throw new Error("Could not find wasm module in post.js");if(Ym){var Yw=Zm._dispose;Zm._dispose=function(){Yw(),Ym.uncaughtException.forEach(function(Z){process.removeListener("uncaughtException",Z)}),Ym.unhandledRejection.forEach(function(Z){process.removeListener("unhandledRejection",Z)})}}return t.ready}})();typeof Cv=="object"&&typeof l_=="object"?l_.exports=p_:typeof define=="function"&&define.amd?define([],function(){return p_}):typeof Cv=="object"&&(Cv.WasmBackendModule=p_)});var vY=1e-7,SY=1e-4,Wa=class{constructor(t,e){this.backend=t;this.dataMover=e;this.data=new WeakMap;this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}},Io=class{refCount(t){return qn("refCount")}incRef(t){return qn("incRef")}timerAvailable(){return!0}time(t){return qn("time")}read(t){return qn("read")}readSync(t){return qn("readSync")}readToGPU(t,e){return qn("readToGPU")}numDataIds(){return qn("numDataIds")}disposeData(t,e){return qn("disposeData")}write(t,e,n){return qn("write")}move(t,e,n,o,s){return qn("move")}createTensorFromGPUData(t,e,n){return qn("createTensorFromGPUData")}memory(){return qn("memory")}floatPrecision(){return qn("floatPrecision")}epsilon(){return this.floatPrecision()===32?vY:SY}dispose(){return qn("dispose")}};function qn(r){throw new Error(`'${r}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function w_(r){let t=r.length,e=0;for(;t>0;)e=Math.random()*t|0,t--,Sb(r,t,e)}function wY(r,t){if(r.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${r.length}Second array length was ${t.length}`);let e=r.length,n=0;for(;e>0;)n=Math.random()*e|0,e--,Sb(r,e,n),Sb(t,e,n)}function Jm(r,t,e){return Math.max(r,Math.min(t,e))}function AY(r){return r%2===0?r:r+1}function Sb(r,t,e){let n=r[t];r[t]=r[e],r[e]=n}function NY(r){let t=0;for(let e=0;e<r.length;e++)t+=r[e];return t}function DY(r,t){let e=Math.random();return t*e+(1-e)*r}function _Y(r,t){let e=0;for(let n=0;n<r.length;n++){let o=Number(r[n])-Number(t[n]);e+=o*o}return e}function D(r,t){if(!r)throw new Error(typeof t=="string"?t:t())}function Wt(r,t,e=""){D(bn(r,t),()=>e+` Shapes ${r} and ${t} must match`)}function ko(r){D(r!=null,()=>"The input to the tensor constructor must be a non-null value.")}function st(r){if(r.length===0)return 1;let t=r[0];for(let e=1;e<r.length;e++)t*=r[e];return t}function MY(r){return r.length===0}function rA(r,t){if(r===t)return!0;if(r==null||t==null||r.length!==t.length)return!1;for(let e=0;e<r.length;e++)if(r[e]!==null&&t[e]!==null&&r[e]!==t[e])return!1;return!0}function bn(r,t){if(r===t)return!0;if(r==null||t==null||r.length!==t.length)return!1;for(let e=0;e<r.length;e++)if(r[e]!==t[e])return!1;return!0}function Bu(r){return r%1===0}function PY(r){if(Math.tanh!=null)return Math.tanh(r);if(r===1/0)return 1;if(r===-1/0)return-1;{let t=Math.exp(2*r);return(t-1)/(t+1)}}function RY(r){let t=Math.ceil(Math.sqrt(r));return[t,Math.ceil(r/t)]}function FY(r){let t=new Uint32Array(r);for(let e=0;e<r;++e)t[e]=e;return w_(t),t}function yl(r,t){return t<=r.length?r:r+" ".repeat(t-r.length)}function EY(r,t=o=>0,e,n){return new Promise((o,s)=>{let a=0,i=()=>{if(r()){o();return}a++;let p=t(a);if(e!=null&&a>=e){s();return}n!=null?n(i,p):setTimeout(i,p)};i()})}function LY(r,t){let e=1,n=-1;for(let s=0;s<r.length;++s)if(r[s]>=0)e*=r[s];else if(r[s]===-1){if(n!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${n} and dim ${s}`);n=s}else if(r[s]<0)throw Error(`Shapes can not be < 0. Found ${r[s]} at dim ${s}`);if(n===-1){if(t>0&&t!==e)throw Error(`Size(${t}) must match the product of shape ${r}`);return r}if(e===0)throw Error(`Cannot infer the missing size in [${r}] when there are 0 elements`);if(t%e!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${e}`);let o=r.slice();return o[n]=t/e,o}function Tr(r,t){let e=t.length;return r=r==null?t.map((n,o)=>o):[].concat(r),D(r.every(n=>n>=-e&&n<e),()=>`All values in axis param must be in range [-${e}, ${e}) but got axis ${r}`),D(r.every(n=>Bu(n)),()=>`All values in axis param must be integers but got axis ${r}`),r.map(n=>n<0?e+n:n)}function nA(r,t){let e=[],n=[],o=t!=null&&Array.isArray(t)&&t.length===0,s=t==null||o?null:Tr(t,r).sort(),a=0;for(let i=0;i<r.length;++i){if(s!=null){if(s[a]===i&&r[i]!==1)throw new Error(`Can't squeeze axis ${i} since its dim '${r[i]}' is not 1`);(s[a]==null||s[a]>i)&&r[i]===1&&(e.push(r[i]),n.push(i)),s[a]<=i&&a++}r[i]!==1&&(e.push(r[i]),n.push(i))}return{newShape:e,keptDims:n}}function oA(r,t){return wb(r,t)}function wb(r,t){let e=null;if(r==null||r==="float32")e=new Float32Array(t);else if(r==="int32")e=new Int32Array(t);else if(r==="bool")e=new Uint8Array(t);else if(r==="string")e=new Array(t);else throw new Error(`Unknown data type ${r}`);return e}function sA(r,t){for(let e=0;e<r.length;e++){let n=r[e];if(isNaN(n)||!isFinite(n))throw Error(`A tensor of type ${t} being uploaded contains ${n}.`)}}function aA(r){return r==="bool"||r==="complex64"||r==="float32"||r==="int32"||r==="string"}function BY(r,t){return!(t==="complex64"||t==="float32"&&r!=="complex64"||t==="int32"&&r!=="float32"&&r!=="complex64"||t==="bool"&&r==="bool")}function ec(r){if(r==="float32"||r==="int32")return 4;if(r==="complex64")return 8;if(r==="bool")return 1;throw new Error(`Unknown dtype ${r}`)}function iA(r){if(r==null)return 0;let t=0;return r.forEach(e=>t+=e.length),t}function Ua(r){return typeof r=="string"||r instanceof String}function A_(r){return typeof r=="boolean"}function N_(r){return typeof r=="number"}function xp(r){return Array.isArray(r)?xp(r[0]):r instanceof Float32Array?"float32":r instanceof Int32Array||r instanceof Uint8Array||r instanceof Uint8ClampedArray?"int32":N_(r)?"float32":Ua(r)?"string":A_(r)?"bool":"float32"}function ji(r){return!!(r&&r.constructor&&r.call&&r.apply)}function tc(r,t){for(let e=t;e<r;++e)if(r%e===0)return e;return r}function Xi(r){let t=r.length;if(t<2)return[];let e=new Array(t-1);e[t-2]=r[t-1];for(let n=t-3;n>=0;--n)e[n]=e[n+1]*r[n+1];return e}function D_(r,t,e,n=!1){let o=new Array;if(t.length===1){let s=t[0]*(n?2:1);for(let a=0;a<s;a++)o[a]=e[r+a]}else{let s=t[0],a=t.slice(1),i=a.reduce((p,u)=>p*u)*(n?2:1);for(let p=0;p<s;p++)o[p]=D_(r+p*i,a,e,n)}return o}function bl(r,t,e=!1){if(r.length===0)return t[0];let n=r.reduce((o,s)=>o*s)*(e?2:1);if(n===0)return[];if(n!==t.length)throw new Error(`[${r}] does not match the input size ${t.length}${e?" for a complex tensor":""}.`);return D_(0,r,t,e)}function $Y(r,t){if(Array.isArray(r))return r;if(t==="float32")return r instanceof Float32Array?r:new Float32Array(r);if(t==="int32")return r instanceof Int32Array?r:new Int32Array(r);if(t==="bool"||t==="string")return Uint8Array.from(new Int32Array(r));throw new Error(`Unknown dtype ${t}`)}function gh(r,t){let e=rc(r,t);for(let n=0;n<e.length;n++)e[n]=1;return e}function rc(r,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(r);if(t==="int32")return new Int32Array(r);if(t==="bool")return new Uint8Array(r);throw new Error(`Unknown data type ${t}`)}function OY(r,t){let e=r.reduce((n,o)=>n*o,1);if(t==null||t==="float32")return bl(r,new Float32Array(e));if(t==="int32")return bl(r,new Int32Array(e));if(t==="bool")return bl(r,new Uint8Array(e));throw new Error(`Unknown data type ${t}`)}function Ht(r){r.forEach(t=>{D(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${r}].`)})}function zY(r,t,e){if(t===0)return 0;if(t===1)return r[0];let n=r[r.length-1];for(let o=0;o<r.length-1;++o)n+=e[o]*r[o];return n}function GY(r,t,e){if(t===0)return[];if(t===1)return[r];let n=new Array(t);for(let o=0;o<n.length-1;++o)n[o]=Math.floor(r/e[o]),r-=n[o]*e[o];return n[n.length-1]=r,n}function xl(r){return r&&r.then&&typeof r.then=="function"}var __="tfjsflags",bh=class{constructor(t){this.global=t;this.flags={};this.flagRegistry={};this.urlFlags={};this.getQueryParams=UY;this.populateURLFlags()}setPlatform(t,e){this.platform!=null&&(L().getBool("IS_TEST")||L().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},this.urlFlags[t]!=null){let o=this.urlFlags[t];L().getBool("IS_TEST")||L().getBool("PROD")||console.warn(`Setting feature override from URL ${t}: ${o}.`),this.set(t,o)}}async getAsync(t){return t in this.flags?this.flags[t]:(this.flags[t]=await this.evaluateFlag(t),this.flags[t])}get(t){if(t in this.flags)return this.flags[t];let e=this.evaluateFlag(t);if(xl(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getString(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(this.flagRegistry[t]==null)throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,this.flagRegistry[t].setHook!=null&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(this.flagRegistry[t]==null)throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;let t=this.getQueryParams(this.global.location.search);__ in t&&t[__].split(",").forEach(n=>{let[o,s]=n.split(":");this.urlFlags[o]=VY(o,s)})}};function UY(r){let t={};return r.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...n)=>(KY(t,n[0],n[1]),n.join("="))),t}function KY(r,t,e){r[decodeURIComponent(t)]=decodeURIComponent(e||"")}function VY(r,t){let e=t.toLowerCase();return e==="true"||e==="false"?e==="true":`${+e}`===e?+e:t}function L(){return uA}var uA=null;function M_(r){uA=r}var pA;function lA(){if(pA==null){let r;if(typeof window<"u")r=window;else if(typeof global<"u")r=global;else if(typeof process<"u")r=process;else if(typeof self<"u")r=self;else throw new Error("Could not find a global object");pA=r}return pA}function HY(){let r=lA();return r._tfGlobals==null&&(r._tfGlobals=new Map),r._tfGlobals}function yh(r,t){let e=HY();if(e.has(r))return e.get(r);{let n=t();return e.set(r,n),e.get(r)}}var Xs="Abs",vo="Acos",So="Acosh",Mn="Add",wo="AddN",Ka="All",Va="Any",Ys="ArgMax",Zs="ArgMin",Ao="Asin",No="Asinh",Do="Atan",_o="Atanh",Mo="Atan2",Po="AvgPool",Yi="AvgPoolGrad",Qs="AvgPool3D",Zi="AvgPool3DGrad",Ro="BatchMatMul",Js="BatchToSpaceND",Ha="Bincount",$u="BitwiseAnd",P_="BroadcastTo",Qi="BroadcastArgs",jn="Cast",Fo="Ceil",Xn="ClipByValue",Tp="Complex",Ji="ComplexAbs",ea="Concat",Eo="Conv2D",Cp="Conv2DBackpropFilter",Lo="Conv2DBackpropInput",Bo="Conv3D",qa="Conv3DBackpropFilterV2",ja="Conv3DBackpropInputV2",$o="Cos",Oo="Cosh",Xa="Cumprod",zo="Cumsum",Ya="CropAndResize",eu="DenseBincount",Za="DepthToSpace",Go="DepthwiseConv2dNative",Ip="DepthwiseConv2dNativeBackpropFilter",kp="DepthwiseConv2dNativeBackpropInput",tu="Diag",Wo="Dilation2D",ru="Dilation2DBackpropInput",nu="Dilation2DBackpropFilter",xh="Draw",Uo="RealDiv",vp="Einsum",Ko="Elu",Qa="EluGrad",Vo="Erf",Ja="Equal",Ho="Exp",ta="ExpandDims",qo="Expm1",Sp="FFT",ou="Fill",ei="FlipLeftRight",jo="Floor",Xo="FloorDiv",Yo="FusedBatchNorm",ra="GatherV2",ti="GatherNd",ri="Greater",Zo="GreaterEqual",Yn="Identity",wp="IFFT",Ap="Imag",Qo="IsFinite",Jo="IsInf",es="IsNan",ts="LeakyRelu",ni="Less",oi="LessEqual",si="LinSpace",rs="Log",ns="Log1p",ai="LogicalAnd",ii="LogicalNot",ui="LogicalOr",R_="LogicalXor",F_="LogSoftmax",uve="LowerBound",os="LRN",pi="LRNGrad",pve="MatrixBandPart",ss="Max",as="Maximum",is="MaxPool",su="MaxPoolGrad",na="MaxPool3D",au="MaxPool3DGrad",iu="MaxPoolWithArgmax",us="Mean",ps="Min",ls="Minimum",ms="MirrorPad",cs="Mod",li="Multinomial",ds="Multiply",oa="Neg",mi="NotEqual",ci="NonMaxSuppressionV3",Ou="NonMaxSuppressionV4",di="NonMaxSuppressionV5",sa="OnesLike",fs="OneHot",aa="Pack",hs="PadV2",lve="Pool",gs="Pow",bs="Prelu",ys="Prod",nc="RaggedGather",oc="RaggedRange",sc="RaggedTensorToTensor",uu="Range",Np="Real",xs="Reciprocal",Ts="Relu",ia="Reshape",Cs="ResizeNearestNeighbor",fi="ResizeNearestNeighborGrad",Is="ResizeBilinear",hi="ResizeBilinearGrad",ks="Relu6",vs="Reverse",Ss="Round",ws="Rsqrt",gi="ScatterNd",bi="TensorScatterUpdate",yi="SearchSorted",ua="Select",As="Selu",pa="Slice",Ns="Sin",Ds="Sinh",_s="Sign",Ms="Sigmoid",Ps="Softplus",Rs="Sqrt",Fs="Sum",la="SpaceToBatchND",ma="SplitV",Es="Softmax",Dp="SparseFillEmptyRows",zu="SparseReshape",pu="SparseSegmentMean",lu="SparseSegmentSum",xi="SparseToDense",Ls="SquaredDifference",mu="Square",Tl="StaticRegexReplace",Ti="StridedSlice",cu="StringNGrams",_p="StringSplit",Mp="StringToHashBucketFast",Bs="Sub",$s="Tan",Os="Tanh",Pn="Tile",Ci="TopK",Ii="Transform",Rn="Transpose",Pp="Unique",ca="Unpack",du="UnsortedSegmentSum",mve="UpperBound",da="ZerosLike",Zn="Step",Cl="FromPixels",ki="RotateWithOffset",fa="_FusedMatMul",ha="FusedConv2D",ga="FusedDepthwiseConv2D";function fu(...r){L().getBool("IS_TEST")||L().getBool("PROD")||console.warn(...r)}function qY(...r){L().getBool("IS_TEST")||L().getBool("PROD")||console.log(...r)}var ac=yh("kernelRegistry",()=>new Map),Th=yh("gradRegistry",()=>new Map);function ic(r,t){let e=cA(r,t);return ac.get(e)}function mA(r){return Th.get(r)}function Ab(r){let t=ac.entries(),e=[];for(;;){let{done:n,value:o}=t.next();if(n)break;let[s,a]=o,[i]=s.split("_");i===r&&e.push(a)}return e}function Gu(r){let{kernelName:t,backendName:e}=r,n=cA(t,e);ac.has(n)&&fu(`The kernel '${t}' for backend '${e}' is already registered`),ac.set(n,r)}function L_(r){let{kernelName:t}=r;Th.has(t)&&L().getBool("DEBUG")&&fu(`Overriding the gradient for '${t}'`),Th.set(t,r)}function gve(r,t){let e=cA(r,t);if(!ac.has(e))throw new Error(`The kernel '${r}' for backend '${t}' is not registered`);ac.delete(e)}function bve(r){if(!Th.has(r))throw new Error(`The gradient '${r}' for backend is not registered`);Th.delete(r)}function yve(r,t){Ab(r).forEach(n=>{let o=Object.assign({},n,{backendName:t});Gu(o)})}function cA(r,t){return`${t}_${r}`}var y={};Xe(y,{arraysEqual:()=>bn,arraysEqualWithNull:()=>rA,assert:()=>D,assertNonNegativeIntegerDimensions:()=>Ht,assertNonNull:()=>ko,assertShapesMatch:()=>Wt,bytesFromStringArray:()=>iA,bytesPerElement:()=>ec,checkConversionForErrors:()=>sA,clamp:()=>Jm,computeStrides:()=>Xi,convertBackendValuesAndArrayBuffer:()=>$Y,createScalarValue:()=>eZ,createShuffledIndices:()=>FY,decodeString:()=>mc,distSquared:()=>_Y,encodeString:()=>Fp,fetch:()=>rZ,fingerPrint64:()=>JY,flatten:()=>Si,getArrayFromDType:()=>wb,getTypedArrayFromDType:()=>oA,hasEncodingLoss:()=>BY,hexToLong:()=>Ch,indexToLoc:()=>GY,inferDtype:()=>xp,inferFromImplicitShape:()=>LY,isBoolean:()=>A_,isFunction:()=>ji,isInt:()=>Bu,isNumber:()=>N_,isPromise:()=>xl,isScalarShape:()=>MY,isString:()=>Ua,isTypedArray:()=>dr,isValidDtype:()=>aA,locToIndex:()=>zY,makeOnesTypedArray:()=>gh,makeZerosNestedTypedArray:()=>OY,makeZerosTypedArray:()=>rc,nearestDivisor:()=>tc,nearestLargerEven:()=>AY,now:()=>wl,parseAxisParam:()=>Tr,randUniform:()=>DY,repeatedTry:()=>EY,rightPad:()=>yl,shuffle:()=>w_,shuffleCombo:()=>wY,sizeFromShape:()=>st,sizeToSquarishShape:()=>RY,squeezeShape:()=>nA,sum:()=>NY,swap:()=>Sb,tanh:()=>PY,toNestedArray:()=>bl,toTypedArray:()=>lc});function Nb(r){return r instanceof Float32Array||r instanceof Int32Array||r instanceof Uint8Array||r instanceof Uint8ClampedArray}var gA=gl(q_());var Sl=gA.default||gA;function Ch(r){return Sl.fromString(r,!0,16)}var X_=Ch("c3a5c85c97cb3127"),vl=Ch("b492b66fbe98f273"),yn=Ch("9ae16a3b2f90404f");function hA(r){return r.xor(r.shru(47))}function Y_(r,t,e){let n=r.slice(t,t+e);return Sl.fromBytes(Array.from(n),!0,!0)}function qt(r,t){return Y_(r,t,8)}function j_(r,t){return Y_(r,t,4)}function Or(r,t){return t===0?r:r.shru(t).or(r.shl(64-t))}function Rp(r,t,e=Ch("9ddfea08eb382d69")){let n=r.xor(t).mul(e);n=n.xor(n.shru(47));let o=t.xor(n).mul(e);return o=o.xor(o.shru(47)),o=o.mul(e),o}function XY(r,t,e,n,o,s){o=o.add(r),s=Or(s.add(o).add(n),21);let a=o;return o=o.add(t),o=o.add(e),s=s.add(Or(o,44)),[o.add(n),s.add(a)]}function _b(r,t,e,n){return XY(qt(r,t),qt(r,t+8),qt(r,t+16),qt(r,t+24),e,n)}function YY(r,t=r.length){if(t>=8){let e=yn.add(t*2),n=qt(r,0).add(yn),o=qt(r,t-8),s=Or(o,37).mul(e).add(n),a=Or(n,25).add(o).mul(e);return Rp(s,a,e)}if(t>=4){let e=yn.add(t*2),n=j_(r,0);return Rp(n.shl(3).add(t),j_(r,t-4),e)}if(t>0){let e=r[0],n=r[t>>1],o=r[t-1],s=e+(n<<8),a=t+(o<<2);return hA(yn.mul(s).xor(X_.mul(a))).mul(yn)}return yn}function ZY(r,t=r.length){let e=yn.add(t*2),n=qt(r,0).mul(vl),o=qt(r,8),s=qt(r,t-8).mul(e),a=qt(r,t-16).mul(yn);return Rp(Or(n.add(o),43).add(Or(s,30)).add(a),n.add(Or(o.add(yn),18)).add(s),e)}function QY(r,t=r.length){let e=yn.add(t*2),n=qt(r,0).mul(yn),o=qt(r,8),s=qt(r,t-8).mul(e),a=qt(r,t-16).mul(yn),i=Or(n.add(o),43).add(Or(s,30)).add(a),p=Rp(i,n.add(Or(o.add(yn),18)).add(s),e),u=qt(r,16).mul(e),l=qt(r,24),m=i.add(qt(r,t-32)).mul(e),c=p.add(qt(r,t-24)).mul(e);return Rp(Or(u.add(l),43).add(Or(m,30)).add(c),u.add(Or(l.add(n),18)).add(m),e)}function JY(r,t=r.length){let e=Sl.fromNumber(81,!0);if(t<=32)return t<=16?YY(r,t):ZY(r,t);if(t<=64)return QY(r,t);let n=e,o=e.mul(vl).add(113),s=hA(o.mul(yn).add(113)).mul(yn),a=[Sl.UZERO,Sl.UZERO],i=[Sl.UZERO,Sl.UZERO];n=n.mul(yn).add(qt(r,0));let p=0,u=(t-1>>6)*64,l=u+(t-1&63)-63;do n=Or(n.add(o).add(a[0]).add(qt(r,p+8)),37).mul(vl),o=Or(o.add(a[1]).add(qt(r,p+48)),42).mul(vl),n=n.xor(i[1]),o=o.add(a[0]).add(qt(r,p+40)),s=Or(s.add(i[0]),33).mul(vl),a=_b(r,p,a[1].mul(vl),n.add(i[0])),i=_b(r,p+32,s.add(i[1]),o.add(qt(r,p+16))),[s,n]=[n,s],p+=64;while(p!==u);let m=vl.add(s.and(255).shl(1));return p=l,i[0]=i[0].add(t-1&63),a[0]=a[0].add(i[0]),i[0]=i[0].add(a[0]),n=Or(n.add(o).add(a[0]).add(qt(r,p+8)),37).mul(m),o=Or(o.add(a[1]).add(qt(r,p+48)),42).mul(m),n=n.xor(i[1].mul(9)),o=o.add(a[0].mul(9).add(qt(r,p+40))),s=Or(s.add(i[0]),33).mul(m),a=_b(r,p,a[1].mul(m),n.add(i[0])),i=_b(r,p+32,s.add(i[1]),o.add(qt(r,p+16))),[s,n]=[n,s],Rp(Rp(a[0],i[0],m).add(hA(o).mul(X_)).add(s),Rp(a[1],i[1],m).add(n),m)}function eZ(r,t){return t==="string"?Fp(r):lc([r],t)}function tZ(r,t){return r instanceof Float32Array&&t==="float32"||r instanceof Int32Array&&t==="int32"||r instanceof Uint8Array&&t==="bool"}function lc(r,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(r)&&(r=Si(r)),L().getBool("DEBUG")&&sA(r,t),tZ(r,t))return r;if(t==null||t==="float32"||t==="complex64")return new Float32Array(r);if(t==="int32")return new Int32Array(r);if(t==="bool"){let e=new Uint8Array(r.length);for(let n=0;n<e.length;++n)Math.round(r[n])!==0&&(e[n]=1);return e}else throw new Error(`Unknown data type ${t}`)}function wl(){return L().platform.now()}function rZ(r,t){return L().platform.fetch(r,t)}function Fp(r,t="utf-8"){return t=t||"utf-8",L().platform.encode(r,t)}function mc(r,t="utf-8"){return t=t||"utf-8",L().platform.decode(r,t)}function dr(r){return L().platform.isTypedArray!=null?L().platform.isTypedArray(r):Nb(r)}function Si(r,t=[],e=!1){if(t==null&&(t=[]),typeof r=="boolean"||typeof r=="number"||typeof r=="string"||xl(r)||r==null||dr(r)&&e)t.push(r);else if(Array.isArray(r)||dr(r))for(let n=0;n<r.length;++n)Si(r[n],t,e);else{let n=-1;for(let o of Object.keys(r))/^([1-9]+[0-9]*|0)$/.test(o)&&(n=Math.max(n,Number(o)));for(let o=0;o<=n;o++)Si(r[o],t,e)}return t}var Mb=class{constructor(t,e){this.backendTimer=t;this.logger=e;e==null&&(this.logger=new bA)}profileKernel(t,e,n){let o,s=()=>{o=n()},a,i=wl();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(s);else{s();for(let u of o)u.dataSync();a=Promise.resolve({kernelMs:wl()-i})}if(L().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let u=0;u<o.length;u++){let l=o[u];l.data().then(m=>{nZ(m,l.dtype,t)})}return{kernelName:t,outputs:o,inputs:e,timeMs:a.then(u=>u.kernelMs),extraInfo:a.then(u=>u.getExtraProfileInfo!=null?u.getExtraProfileInfo():"")}}logKernelProfile(t){let{kernelName:e,outputs:n,timeMs:o,inputs:s,extraInfo:a}=t;n.forEach(i=>{Promise.all([i.data(),o,a]).then(p=>{this.logger.logKernelProfile(e,i,p[0],p[1],s,p[2])})})}};function nZ(r,t,e){if(t!=="float32")return!1;for(let n=0;n<r.length;n++){let o=r[n];if(isNaN(o)||!isFinite(o))return console.warn(`Found ${o} in the result of '${e}'`),!0}return!1}var bA=class{logKernelProfile(t,e,n,o,s,a){let i=typeof o=="number"?yl(`${o}ms`,9):o.error,p=yl(t,25),u=e.rank,l=e.size,m=yl(e.shape.toString(),14),c="";for(let d in s){let f=s[d];if(f!=null){let h=f.shape||e.shape,g=h.length;c+=`${d}: ${g}D ${g>0?h:""} `}}console.log(`%c${p}	%c${i}	%c${u}D ${m}	%c${l}	%c${c}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function Z_(r,t,e){let n={},o={};for(let p=0;p<t.length;p++)n[t[p].id]=!0;for(let p=0;p<r.length;p++){let u=r[p],l=u.inputs;for(let m in l){let c=l[m],d=!1;for(let f=0;f<t.length;f++)if(n[c.id]){u.outputs.forEach(h=>n[h.id]=!0),d=!0,o[u.id]=!0;break}if(d)break}}let s={};s[e.id]=!0;let a={};for(let p=r.length-1;p>=0;p--){let u=r[p],l=u.inputs;for(let m=0;m<u.outputs.length;m++)if(s[u.outputs[m].id]){for(let c in l)s[l[c].id]=!0,a[u.id]=!0;break}}let i=[];for(let p=0;p<r.length;p++){let u=r[p];if(o[u.id]&&a[u.id]){let l={};for(let c in u.inputs){let d=u.inputs[c];n[d.id]&&(l[c]=d)}let m=Object.assign({},u);m.inputs=l,m.outputs=u.outputs,i.push(m)}}return i}function Q_(r,t,e,n){for(let o=t.length-1;o>=0;o--){let s=t[o],a=[];if(s.outputs.forEach(p=>{let u=r[p.id];u!=null?a.push(u):a.push(null)}),s.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let i=s.gradient(a);for(let p in s.inputs){if(!(p in i))throw new Error(`Cannot backprop through input ${p}. Available gradients found: ${Object.keys(i)}.`);let u=e(()=>i[p]());if(u.dtype!=="float32")throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${p} must have 'float32' dtype, but has '${u.dtype}'`);let l=s.inputs[p];if(!bn(u.shape,l.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${p}' has shape '${u.shape}', which does not match the shape of the input '${l.shape}'`);if(r[l.id]==null)r[l.id]=u;else{let m=r[l.id];r[l.id]=n(m,u),m.dispose()}}}}var J_=20,Ih=3,yA=7;function e1(r,t,e,n){let o=Xi(t),s=oZ(r,t,e,o),a=t.length,i=Pb(r,t,e,o,s),p=["Tensor"];return n&&(p.push(`  dtype: ${e}`),p.push(`  rank: ${a}`),p.push(`  shape: [${t}]`),p.push("  values:")),p.push(i.map(u=>"    "+u).join(`
`)),p.join(`
`)}function oZ(r,t,e,n){let o=st(t),s=n[n.length-1],a=new Array(s).fill(0),i=t.length,p=e==="complex64"?vh(r):r;if(i>1)for(let u=0;u<o/s;u++){let l=u*s;for(let m=0;m<s;m++)a[m]=Math.max(a[m],kh(p[l+m],0,e).length)}return a}function kh(r,t,e){let n;return Array.isArray(r)?n=`${parseFloat(r[0].toFixed(yA))} + ${parseFloat(r[1].toFixed(yA))}j`:Ua(r)?n=`'${r}'`:e==="bool"?n=t1(r):n=parseFloat(r.toFixed(yA)).toString(),yl(n,t)}function t1(r){return r===0?"false":"true"}function Pb(r,t,e,n,o,s=!0){let a=e==="complex64"?2:1,i=t[0],p=t.length;if(p===0){if(e==="complex64"){let h=vh(r);return[kh(h[0],0,e)]}return e==="bool"?[t1(r[0])]:[r[0].toString()]}if(p===1){if(i>J_){let g=Ih*a,b=Array.from(r.slice(0,g)),x=Array.from(r.slice((i-Ih)*a,i*a));return e==="complex64"&&(b=vh(b),x=vh(x)),["["+b.map((T,C)=>kh(T,o[C],e)).join(", ")+", ..., "+x.map((T,C)=>kh(T,o[i-Ih+C],e)).join(", ")+"]"]}return["["+(e==="complex64"?vh(r):Array.from(r)).map((g,b)=>kh(g,o[b],e)).join(", ")+"]"]}let u=t.slice(1),l=n.slice(1),m=n[0]*a,c=[];if(i>J_){for(let h=0;h<Ih;h++){let g=h*m,b=g+m;c.push(...Pb(r.slice(g,b),u,e,l,o,!1))}c.push("...");for(let h=i-Ih;h<i;h++){let g=h*m,b=g+m;c.push(...Pb(r.slice(g,b),u,e,l,o,h===i-1))}}else for(let h=0;h<i;h++){let g=h*m,b=g+m;c.push(...Pb(r.slice(g,b),u,e,l,o,h===i-1))}let d=p===2?",":"";c[0]="["+(i>0?c[0]+d:"");for(let h=1;h<c.length-1;h++)c[h]=" "+c[h]+d;let f=`,
`;for(let h=2;h<p;h++)f+=`
`;return c[c.length-1]=" "+c[c.length-1]+"]"+(s?"":f),c}function vh(r){let t=[];for(let e=0;e<r.length;e+=2)t.push([r[e],r[e+1]]);return t}var ft=class{constructor(t,e,n){this.dtype=e;if(this.shape=t.slice(),this.size=st(t),n!=null){let o=n.length;D(o===this.size,()=>`Length of values '${o}' does not match the size inferred by the shape '${this.size}'.`)}if(e==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||wb(e,this.size),this.strides=Xi(t)}set(t,...e){e.length===0&&(e=[0]),D(e.length===this.rank,()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`);let n=this.locToIndex(e);this.values[n]=t}get(...t){t.length===0&&(t=[0]);let e=0;for(let o of t){if(o<0||o>=this.shape[e]){let s=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(s)}e++}let n=t[t.length-1];for(let o=0;o<t.length-1;++o)n+=this.strides[o]*t[o];return this.values[n]}locToIndex(t){if(this.rank===0)return 0;if(this.rank===1)return t[0];let e=t[t.length-1];for(let n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e}indexToLoc(t){if(this.rank===0)return[];if(this.rank===1)return[t];let e=new Array(this.shape.length);for(let n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return wi().makeTensor(this.values,this.shape,this.dtype)}},wi=null,cc=null,sZ=null;function r1(r){wi=r}function n1(r){cc=r}function o1(r){sZ=r}var Ve=class{constructor(t,e,n,o){this.kept=!1;this.isDisposedInternal=!1;this.shape=t.slice(),this.dtype=e||"float32",this.size=st(t),this.strides=Xi(t),this.dataId=n,this.id=o,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let t=await this.data();return cc.buffer(this.shape,this.dtype,t)}bufferSync(){return cc.buffer(this.shape,this.dtype,this.dataSync())}async array(){let t=await this.data();return bl(this.shape,t,this.dtype==="complex64")}arraySync(){return bl(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();let t=wi().read(this.dataId);if(this.dtype==="string"){let e=await t;try{return e.map(n=>mc(n))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataToGPU(t){return this.throwIfDisposed(),wi().readToGPU(this.dataId,t)}dataSync(){this.throwIfDisposed();let t=wi().readSync(this.dataId);if(this.dtype==="string")try{return t.map(e=>mc(e))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();let t=await wi().read(this.dataId);return this.dtype==="string"?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(wi().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return cc.print(this,t)}clone(){return this.throwIfDisposed(),cc.clone(this)}toString(t=!1){let e=this.dataSync();return e1(e,this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),cc.cast(this,t)}variable(t=!0,e,n){return this.throwIfDisposed(),wi().makeVariable(this,t,e,n)}};Object.defineProperty(Ve,Symbol.hasInstance,{value:r=>!!r&&r.data!=null&&r.dataSync!=null&&r.throwIfDisposed!=null});function aZ(){return yh("Tensor",()=>Ve)}aZ();var Wu=class extends Ve{constructor(e,n,o,s){super(e.shape,e.dtype,e.dataId,s);this.trainable=n;this.name=o}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!bn(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);wi().disposeTensor(this),this.dataId=e.dataId,wi().incRef(this,null)}dispose(){wi().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(Wu,Symbol.hasInstance,{value:r=>r instanceof Ve&&r.assign!=null&&r.assign instanceof Function});var Ta={};Xe(Ta,{assertTypesMatch:()=>xA,getTensorsInContainer:()=>Sh,isTensorInList:()=>uZ,makeTypesMatch:()=>Qe});var s1=(i=>(i.R0="R0",i.R1="R1",i.R2="R2",i.R3="R3",i.R4="R4",i.R5="R5",i.R6="R6",i))(s1||{}),a1=(o=>(o.float32="float32",o.int32="int32",o.bool="int32",o.complex64="complex64",o))(a1||{}),i1=(o=>(o.float32="float32",o.int32="int32",o.bool="bool",o.complex64="complex64",o))(i1||{}),u1=(o=>(o.float32="float32",o.int32="float32",o.bool="float32",o.complex64="complex64",o))(u1||{}),p1=(o=>(o.float32="complex64",o.int32="complex64",o.bool="complex64",o.complex64="complex64",o))(p1||{}),iZ={float32:u1,int32:a1,bool:i1,complex64:p1};function At(r,t){if(r==="string"||t==="string"){if(r==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${r} with ${t}`)}return iZ[r][t]}function Uu(r){return At(r,"int32")}function Rb(r){return r!=null&&typeof r=="object"&&"texture"in r&&r.texture instanceof WebGLTexture}function Fb(r){return typeof GPUBuffer<"u"&&r!=null&&typeof r=="object"&&"buffer"in r&&r.buffer instanceof GPUBuffer}function Qe(r,t){if(r.dtype===t.dtype)return[r,t];let e=At(r.dtype,t.dtype);return[r.cast(e),t.cast(e)]}function xA(r,t){D(r.dtype===t.dtype,()=>`The dtypes of the first(${r.dtype}) and second(${t.dtype}) input must match`)}function uZ(r,t){return t.some(e=>e.id===r.id)}function Sh(r){let t=[];return l1(r,t,new Set),t}function l1(r,t,e){if(r==null)return;if(r instanceof Ve){t.push(r);return}if(!pZ(r))return;let n=r;for(let o in n){let s=n[o];e.has(s)||(e.add(s),l1(s,t,e))}}function pZ(r){return Array.isArray(r)||typeof r=="object"}function TA(r){return r.kernelName!=null}var Eb=class{constructor(){this.registeredVariables={};this.nextTapeNodeId=0;this.numBytes=0;this.numTensors=0;this.numStringTensors=0;this.numDataBuffers=0;this.gradientDepth=0;this.kernelDepth=0;this.scopeStack=[];this.numDataMovesStack=[];this.nextScopeId=0;this.tensorInfo=new WeakMap;this.profiling=!1;this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(t=>t.name)))}}}dispose(){for(let t in this.registeredVariables)this.registeredVariables[t].dispose()}},Lb=class{constructor(t){this.ENV=t;this.registry={};this.registryFactory={};this.pendingBackendInitId=0;this.state=new Eb}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let t=this.getSortedBackends();for(let e=0;e<t.length;e++){let n=t[e];if(await this.initializeBackend(n).success){await this.setBackend(n);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry))if(t in this.registryFactory){let{asyncInit:e}=this.initializeBackend(t);if(e)return null}else return null;return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,n=1){return t in this.registryFactory?(fu(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:e,priority:n},!0)}async setBackend(t){if(this.registryFactory[t]==null)throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,this.registry[t]==null){this.backendInstance=null;let{success:e,asyncInit:n}=this.initializeBackend(t);if(!(n?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new Mb(this.backendInstance),!0}setupRegisteredKernels(){Ab(this.backendName).forEach(e=>{e.setupFunc!=null&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){Ab(t).forEach(n=>{n.disposeFunc!=null&&n.disposeFunc(this.registry[t])})}initializeBackend(t){let e=this.registryFactory[t];if(e==null)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{let n=e.factory();if(n&&!(n instanceof Io)&&typeof n.then=="function"){let o=++this.pendingBackendInitId,s=n.then(a=>o<this.pendingBackendInitId?!1:(this.registry[t]=a,this.pendingBackendInit=null,!0)).catch(a=>(o<this.pendingBackendInitId||(this.pendingBackendInit=null,fu(`Initialization of backend ${t} failed`),fu(a.stack||a.message)),!1));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}else return this.registry[t]=n,{success:!0,asyncInit:!1}}catch(n){return fu(`Initialization of backend ${t} failed`),fu(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority)}initializeBackendsAndReturnBest(){let t=this.getSortedBackends();for(let e=0;e<t.length;e++){let n=t[e],{success:o,asyncInit:s}=this.initializeBackend(n);if(s||o)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){let n=this.state.tensorInfo.get(e),o=n.backend,s=this.readSync(e),a=o.refCount(e);o.disposeData(e,!0),n.backend=t,t.move(e,s,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let n=null;if(e==null){if(typeof t!="function")throw new Error("Please provide a function to tidy()");e=t}else{if(typeof t!="string"&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof e!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=t}let o;return this.scopedRun(()=>this.startScope(n),()=>this.endScope(o),()=>(o=e(),o instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),o))}scopedRun(t,e,n){t();try{let o=n();return e(),o}catch(o){throw e(),o}}nextTensorId(){return Lb.nextTensorId++}nextVariableId(){return Lb.nextVariableId++}clone(t){let e=N.runKernel(Yn,{x:t}),n={x:t},o=a=>({x:()=>{let i="float32",p={x:a},u={dtype:i};return N.runKernel(jn,p,u)}}),s=[];return this.addTapeNode(this.state.activeScope.name,n,[e],o,s,{}),e}runKernel(t,e,n){if(this.backendName==null&&this.backend,!(ic(t,this.backendName)!=null))throw new Error(`Kernel '${t}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:t,inputs:e,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,n){let o=this.backend.numDataIds(),s=0;n.forEach(p=>{s+=p.dtype==="complex64"?3:1});let a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=o-e-s-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${t}'`)}runKernelFunc(t){let e,n=[],o=this.isTapeOn(),s=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let i;this.backendName==null&&this.backend;let p,u=TA(t)?t.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(TA(t)){let{kernelName:f,inputs:h,attrs:g}=t;this.backendName==null&&this.backend;let b=ic(f,this.backendName);D(b!=null,()=>`Cannot find registered kernel '${f}' for backend '${this.backendName}'`),i=()=>{let x=this.backend.numDataIds();p=b.kernelFunc({inputs:h,attrs:g,backend:this.backend});let T=Array.isArray(p)?p:[p];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(f,x,T);let C=T.map(k=>k.rank!=null?k:this.makeTensorFromTensorInfo(k));if(o){let k=this.getTensorsForGradient(f,h,C);n=this.saveTensorsForBackwardMode(k)}return C}}else{let{forwardFunc:f}=t,h=g=>{o&&(n=g.map(b=>this.keep(this.clone(b))))};i=()=>{let g=this.backend.numDataIds();p=this.tidy(()=>f(this.backend,h));let b=Array.isArray(p)?p:[p];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,g,b),b}}let{inputs:l,attrs:m}=t,c=TA(t)?null:t.backwardsFunc,d;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?e=i():(d=this.profiler.profileKernel(u,l,()=>i()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),e=d.outputs)}),o&&this.addTapeNode(u,l,e,c,n,m),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map(f=>l[f]!=null?l[f].shape:null),outputShapes:e.map(f=>f.shape),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(p)?e:e[0]}saveTensorsForBackwardMode(t){return t.map(n=>this.keep(this.clone(n)))}getTensorsForGradient(t,e,n){let o=mA(t);if(o!=null){let s=o.inputsToSave||[],a=o.outputsToSave||[],i;o.saveAllInputs?(D(Array.isArray(e),()=>"saveAllInputs is true, expected inputs to be an array."),i=Object.keys(e).map(u=>e[u])):i=s.map(u=>e[u]);let p=n.filter((u,l)=>a[l]);return i.concat(p)}return[]}makeTensor(t,e,n,o){if(t==null)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",o=o||this.backend;let s=t;n==="string"&&Ua(t[0])&&(s=t.map(p=>Fp(p)));let a=o.write(s,e,n),i=new Ve(e,n,a,this.nextTensorId());if(this.trackTensor(i,o),n==="string"){let p=this.state.tensorInfo.get(a),u=iA(s);this.state.numBytes+=u-p.bytes,p.bytes=u}return i}makeTensorFromDataId(t,e,n,o){n=n||"float32";let s={dataId:t,shape:e,dtype:n};return this.makeTensorFromTensorInfo(s,o)}makeTensorFromTensorInfo(t,e){let{dataId:n,shape:o,dtype:s}=t,a=new Ve(o,s,n,this.nextTensorId());return this.trackTensor(a,e),a}makeVariable(t,e=!0,n,o){n=n||this.nextVariableId().toString(),o!=null&&o!==t.dtype&&(t=t.cast(o));let s=new Wu(t,e,n,this.nextTensorId());if(this.state.registeredVariables[s.name]!=null)throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(t,e){this.state.numTensors++,t.dtype==="string"&&this.state.numStringTensors++;let n=0;t.dtype!=="complex64"&&t.dtype!=="string"&&(n=t.size*ec(t.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:n})),t instanceof Wu||this.track(t)}incRef(t,e){this.trackTensor(t,e),this.backend.incRef(t.dataId)}removeDataId(t,e){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===e&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;let e=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,t.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=e.bytes),t.dtype!=="complex64"&&t.dtype!=="string"){let n=t.size*ec(t.dtype);this.state.numBytes-=n}e.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,e.backend)}disposeVariables(){for(let t in this.state.registeredVariables){let e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),this.state.registeredVariables[t.name]!=null&&delete this.state.registeredVariables[t.name]}memory(){let t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,t.reasons==null&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;let e=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(o=>o.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let o of this.state.activeProfile.kernels)o.kernelTimeMs=await o.kernelTimeMs,o.extraInfo=await o.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(t,e,n,o,s,a){let i={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:n,saved:s},p=mA(t);p!=null&&(o=p.gradFunc),o!=null&&(i.gradient=u=>(u=u.map((l,m)=>{if(l==null){let c=n[m],d=rc(c.size,c.dtype);return this.makeTensor(d,c.shape,c.dtype)}return l}),o(u.length>1?u:u[0],s,a))),this.state.activeTape.push(i)}keep(t){return t.kept=!0,t}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){let e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){let e=Sh(t),n=new Set(e.map(s=>s.id));for(let s=0;s<this.state.activeScope.track.length;s++){let a=this.state.activeScope.track[s];!a.kept&&!n.has(a.id)&&a.dispose()}let o=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach(s=>{!s.kept&&s.scopeId===o.id&&this.track(s)})}gradients(t,e,n,o=!1){if(D(e.length>0,()=>"gradients() received an empty list of xs."),n!=null&&n.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let s=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));D(s instanceof Ve,()=>"The result y returned by f() must be a tensor.");let a=Z_(this.state.activeTape,e,s);if(!o&&a.length===0&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let i={};i[s.id]=n??lZ(s.shape),Q_(i,a,u=>this.tidy(u),mZ);let p=e.map(u=>i[u.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(u=>{for(let l of u.saved)l.dispose()}),this.state.activeTape=null),{value:s,grads:p}})}customGrad(t){return D(ji(t),()=>"The f passed in customGrad(f) must be a function."),(...e)=>{D(e.every(i=>i instanceof Ve),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n,o={};e.forEach((i,p)=>{o[p]=i});let s=(i,p)=>(n=t(...e,p),D(n.value instanceof Ve,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),D(ji(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),a=(i,p)=>{let u=n.gradFunc(i,p),l=Array.isArray(u)?u:[u];D(l.length===e.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),D(l.every(c=>c instanceof Ve),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let m={};return l.forEach((c,d)=>{m[d]=()=>c}),m};return this.runKernelFunc({forwardFunc:s,backwardsFunc:a,inputs:o})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}readToGPU(t,e){return this.state.tensorInfo.get(t).backend.readToGPU(t,e)}async time(t){let e=wl(),n=await this.backend.time(t);return n.wallMs=wl()-e,n}track(t){return this.state.activeScope!=null&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Eb;for(let t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}},wh=Lb;wh.nextTensorId=0,wh.nextVariableId=0;function lZ(r){let t=gh(st(r),"float32");return N.makeTensor(t,r,"float32")}function CA(){let r=lA();if(r._tfengine==null){let t=new bh(r);r._tfengine=new wh(t)}return M_(r._tfengine.ENV),r1(()=>r._tfengine),r._tfengine}var N=CA();function mZ(r,t){let e={a:r,b:t};return N.runKernel(Mn,e)}var Ep={};Xe(Ep,{isBrowser:()=>kA,isMobile:()=>fZ,mockIsMobile:()=>dZ});function cZ(){return typeof navigator<"u"&&navigator!=null}var IA;function dZ(r){IA=r}function fZ(r){if(IA!==void 0)return IA;if(r||cZ()){if(r||(r=navigator),r.product==="ReactNative")return!0;let t=r.userAgent||r.vendor||(typeof window<"u"?window.opera:"");if(!t){let e=r;return e.userAgentData&&e.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function kA(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}var Fn=L();Fn.registerFlag("DEBUG",()=>!1,r=>{r&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Fn.registerFlag("IS_BROWSER",()=>kA());Fn.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");Fn.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Fn.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));Fn.registerFlag("PROD",()=>!1);Fn.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Fn.getBool("DEBUG"));Fn.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Fn.registerFlag("IS_TEST",()=>!1);Fn.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>Fn.getBool("DEBUG"));Fn.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);Fn.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);Fn.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);function jr(r,t){let e=r;if(dr(r))return t==="string"?[]:[r.length];if(Rb(r)){let o=r.channels||"RGBA";return[r.height,r.width*o.length]}else if(Fb(r))return[r.buffer.size/(t==null?4:ec(t))];if(!Array.isArray(r))return[];let n=[];for(;Array.isArray(e)||dr(e)&&t!=="string";)n.push(e.length),e=e[0];return Array.isArray(r)&&L().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&c1(r,n,[]),n}function c1(r,t,e){if(e=e||[],!Array.isArray(r)&&!dr(r)){D(t.length===0,()=>`Element arr[${e.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}D(t.length>0,()=>`Element arr[${e.join("][")}] should be a primitive, but is an array of ${r.length} elements`),D(r.length===t[0],()=>`Element arr[${e.join("][")}] should have ${t[0]} elements, but has ${r.length} elements`);let n=t.slice(1);for(let o=0;o<r.length;++o)c1(r[o],n,e.concat(o))}function m1(r,t,e,n){if(r!=="string_or_numeric"){if(r==null)throw new Error("Expected dtype cannot be null.");if(r!=="numeric"&&r!==t||r==="numeric"&&t==="string")throw new Error(`Argument '${e}' passed to '${n}' must be ${r} tensor, but got ${t} tensor`)}}function v(r,t,e,n="numeric"){if(r instanceof Ve)return m1(n,r.dtype,t,e),r;let o=xp(r);if(o!=="string"&&["bool","int32","float32"].indexOf(n)>=0&&(o=n),m1(n,o,t,e),r==null||!dr(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string"){let p=r==null?"null":r.constructor.name;throw new Error(`Argument '${t}' passed to '${e}' must be a Tensor or TensorLike, but got '${p}'`)}let s=jr(r,o);!dr(r)&&!Array.isArray(r)&&(r=[r]);let i=o!=="string"?lc(r,o):Si(r,[],!0);return N.makeTensor(i,s,o)}function Ku(r,t,e,n="numeric"){if(!Array.isArray(r))throw new Error(`Argument ${t} passed to ${e} must be a \`Tensor[]\` or \`TensorLike[]\``);return r.map((s,a)=>v(s,`${t}[${a}]`,e,n))}var vA="__op";function A(r){let t=Object.keys(r);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let e=t[0],n=r[e];e.endsWith("_")&&(e=e.substring(0,e.length-1)),e=e+vA;let o=(...s)=>{N.startScope(e);try{let a=n(...s);return xl(a)&&console.error("Cannot return a Promise inside of tidy."),N.endScope(a),a}catch(a){throw N.endScope(null),a}};return Object.defineProperty(o,"name",{value:e,configurable:!0}),o}function hZ(r,t){let e=v(r,"real","complex"),n=v(t,"imag","complex");Wt(e.shape,n.shape,`real and imag shapes, ${e.shape} and ${n.shape}, must match in call to tf.complex().`);let o={real:e,imag:n};return N.runKernel(Tp,o)}var En=A({complex_:hZ});function xn(r,t,e,n){if(n==null)n=xp(r);else if(n==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(Fb(r)||Rb(r)){if(n!=="float32"&&n!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${n}.`);return N.backend.createTensorFromGPUData(r,t||e,n)}if(!dr(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){Ht(t);let o=st(t),s=st(e);D(o===s,()=>`Based on the provided shape, [${t}], the tensor should have ${o} values but has ${s}`);for(let a=0;a<e.length;++a){let i=e[a],p=a===e.length-1?i!==st(t.slice(a)):!0;D(e[a]===t[a]||!p,()=>`Error creating a new Tensor. Inferred shape (${e}) does not match the provided shape (${t}). `)}}return!dr(r)&&!Array.isArray(r)&&(r=[r]),t=t||e,r=n!=="string"?lc(r,n):Si(r,[],!0),N.makeTensor(r,t,n)}function fr(r,t,e){let n=jr(r,e);return xn(r,t,n,e)}var Ah={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};var _r=class{constructor(t){this.shards=[];this.previousShardIndex=0;if(t==null||(t instanceof Array||(t=[t]),t=t.map(n=>dr(n)?n.buffer:n),t.length===0))return;this.bufferUniformSize=t[0].byteLength;let e=0;for(let n=0;n<t.length;n++){let o=t[n];n!==t.length-1&&o.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);let s=e+o.byteLength;this.shards.push({buffer:o,start:e,end:s}),e=s}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}static join(t){return new _r(t).slice()}slice(t=0,e=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(t=isNaN(Number(t))?0:t,e=isNaN(Number(e))?0:e,t=Math.max(0,t),e=Math.min(this.byteLength,e),e<=t)return new ArrayBuffer(0);let n=this.findShardForByte(t);if(n===-1)throw new Error(`Could not find start shard for byte ${t}`);let o=e-t,s=new ArrayBuffer(o),a=new Uint8Array(s),i=0;for(let p=n;p<this.shards.length;p++){let u=this.shards[p],m=t+i-u.start,c=i,f=Math.min(e,u.end)-u.start,h=new Uint8Array(u.buffer,m,f-m);if(a.set(h,c),i+=h.length,e<u.end)break}return s}findShardForByte(t){if(this.shards.length===0||t<0||t>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(t/this.bufferUniformSize),this.previousShardIndex;function e(o){return t<o.start?-1:t>=o.end?1:0}if(e(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;let n=gZ(this.shards,e);return n===-1?-1:(this.previousShardIndex=n,this.previousShardIndex)}};function gZ(r,t){let e=0,n=r.length;for(;e<=n;){let o=Math.floor((n-e)/2)+e,s=t(r[o]);if(s===0)return o;s<0?n=o:e=o+1}return-1}var Bb=4;async function f1(r,t){let e=[],n=[],o=Array.isArray(r)?r.map(a=>a.name):Object.keys(r);for(let a=0;a<o.length;++a){let i=o[a],p=Array.isArray(r)?r[a].tensor:r[i];if(p.dtype!=="float32"&&p.dtype!=="int32"&&p.dtype!=="bool"&&p.dtype!=="string"&&p.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${i}': ${p.dtype}`);let u={name:i,shape:p.shape,dtype:p.dtype};if(p.dtype==="string"){let l=new Promise(async m=>{let c=await p.bytes(),d=c.reduce((g,b)=>g+b.length,0)+Bb*c.length,f=new Uint8Array(d),h=0;for(let g=0;g<c.length;g++){let b=c[g],x=new Uint8Array(new Uint32Array([b.length]).buffer);f.set(x,h),h+=Bb,f.set(b,h),h+=b.length}m(f)});n.push(l)}else n.push(p.data());t!=null&&(u.group=t),e.push(u)}let s=await Promise.all(n);return{data:bZ(s),specs:e}}function $b(r,t){let e=new _r(r),n={},o,s=0;for(let a of t){let i=a.name,p=a.dtype,u=a.shape,l=st(u),m;if("quantization"in a){let c=a.quantization;if(c.dtype==="uint8"||c.dtype==="uint16"){if(!("min"in c&&"scale"in c))throw new Error(`Weight ${a.name} with quantization ${c.dtype} doesn't have corresponding metadata min and scale.`)}else if(c.dtype==="float16"){if(p!=="float32")throw new Error(`Weight ${a.name} is quantized with ${c.dtype} which only supports weights of type float32 not ${p}.`)}else throw new Error(`Weight ${a.name} has unknown quantization dtype ${c.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let d=Ah[c.dtype],f=e.slice(s,s+l*d),h=c.dtype==="uint8"?new Uint8Array(f):new Uint16Array(f);if(p==="float32")if(c.dtype==="uint8"||c.dtype==="uint16"){m=new Float32Array(h.length);for(let g=0;g<h.length;g++){let b=h[g];m[g]=b*c.scale+c.min}}else if(c.dtype==="float16")o===void 0&&(o=CZ()),m=o(h);else throw new Error(`Unsupported quantization type ${c.dtype} for weight type float32.`);else if(p==="int32"){if(c.dtype!=="uint8"&&c.dtype!=="uint16")throw new Error(`Unsupported quantization type ${c.dtype} for weight type int32.`);m=new Int32Array(h.length);for(let g=0;g<h.length;g++){let b=h[g];m[g]=Math.round(b*c.scale+c.min)}}else throw new Error(`Unsupported dtype in weight '${i}': ${p}`);s+=l*d}else if(p==="string"){let c=st(a.shape);m=[];for(let d=0;d<c;d++){let f=new Uint32Array(e.slice(s,s+Bb))[0];s+=Bb;let h=new Uint8Array(e.slice(s,s+f));m.push(h),s+=f}}else{let c=Ah[p],d=e.slice(s,s+l*c);if(p==="float32")m=new Float32Array(d);else if(p==="int32")m=new Int32Array(d);else if(p==="bool")m=new Uint8Array(d);else if(p==="complex64"){m=new Float32Array(d);let f=new Float32Array(m.length/2),h=new Float32Array(m.length/2);for(let x=0;x<f.length;x++)f[x]=m[x*2],h[x]=m[x*2+1];let g=fr(f,u,"float32"),b=fr(h,u,"float32");n[i]=En(g,b),g.dispose(),b.dispose()}else throw new Error(`Unsupported dtype in weight '${i}': ${p}`);s+=l*c}p!=="complex64"&&(n[i]=fr(m,u,p))}return n}function bZ(r){if(r===null)throw new Error(`Invalid input value: ${JSON.stringify(r)}`);let t=0,e=[];r.forEach(s=>{if(t+=s.byteLength,e.push(s.byteLength===s.buffer.byteLength?s:new s.constructor(s)),!(s instanceof Float32Array||s instanceof Int32Array||s instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${s.constructor.name}`)});let n=new Uint8Array(t),o=0;return e.forEach(s=>{n.set(new Uint8Array(s.buffer),o),o+=s.byteLength}),n.buffer}var SA=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function d1(r){return SA?Buffer.byteLength(r,"utf8"):new Blob([r]).size}function h1(r){if(SA)return Buffer.from(r).toString("base64");let t=new Uint8Array(r),e="";for(let n=0,o=t.length;n<o;n++)e+=String.fromCharCode(t[n]);return btoa(e)}function g1(r){if(SA){let n=Buffer.from(r,"base64");return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}let t=atob(r),e=new Uint8Array(t.length);for(let n=0;n<t.length;++n)e.set([t.charCodeAt(n)],n);return e.buffer}function b1(r){return _r.join(r)}function wA(r){let t="/";for(r=r.trim();r.endsWith(t);)r=r.slice(0,r.length-1);let e=r.split(t);return e[e.length-1]}function Ob(r,t){let e={modelTopology:r.modelTopology,format:r.format,generatedBy:r.generatedBy,convertedBy:r.convertedBy,weightsManifest:t};return r.signature!=null&&(e.signature=r.signature),r.userDefinedMetadata!=null&&(e.userDefinedMetadata=r.userDefinedMetadata),r.modelInitializer!=null&&(e.modelInitializer=r.modelInitializer),r.initializerSignature!=null&&(e.initializerSignature=r.initializerSignature),r.trainingConfig!=null&&(e.trainingConfig=r.trainingConfig),e}function AA(r,t,e){let n={modelTopology:r.modelTopology,format:r.format,generatedBy:r.generatedBy,convertedBy:r.convertedBy};if(r.trainingConfig!=null&&(n.trainingConfig=r.trainingConfig),r.weightsManifest!=null){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!e)throw new Error("modelJSON has weightsManifest but weightData is null");n.weightSpecs=t,n.weightData=e}return r.signature!=null&&(n.signature=r.signature),r.userDefinedMetadata!=null&&(n.userDefinedMetadata=r.userDefinedMetadata),r.modelInitializer!=null&&(n.modelInitializer=r.modelInitializer),r.initializerSignature!=null&&(n.initializerSignature=r.initializerSignature),n}async function dc(r,t){let e,n;return r.weightsManifest!=null&&([e,n]=await t(r.weightsManifest)),AA(r,e,n)}function hu(r){if(r.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:r.modelTopology==null?0:d1(JSON.stringify(r.modelTopology)),weightSpecsBytes:r.weightSpecs==null?0:d1(JSON.stringify(r.weightSpecs)),weightDataBytes:r.weightData==null?0:new _r(r.weightData).byteLength}}function zb(r){let t=[];for(let e of r)t.push(...e.weights);return t}function yZ(){let r=e=>{let n=e<<13,o=0;for(;!(n&8388608);)o-=8388608,n<<=1;return n&=-8388609,o+=947912704,n|o},t=new Uint32Array(2048);t[0]=0;for(let e=1;e<1024;e++)t[e]=r(e);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}function xZ(){let r=new Uint32Array(64);r[0]=0,r[31]=1199570944,r[32]=2147483648,r[63]=3347054592;for(let t=1;t<31;t++)r[t]=t<<23;for(let t=33;t<63;t++)r[t]=2147483648+(t-32<<23);return r}function TZ(){let r=new Uint32Array(64);for(let t=0;t<64;t++)r[t]=1024;return r[0]=r[32]=0,r}function CZ(){let r=yZ(),t=xZ(),e=TZ();return n=>{let o=new ArrayBuffer(4*n.length),s=new Uint32Array(o);for(let a=0;a<n.length;a++){let i=n[a],p=r[e[i>>10]+(i&1023)]+t[i>>10];s[a]=p}return new Float32Array(o)}}var Pt=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Pt.instance==null&&(Pt.instance=new Pt),Pt.instance}static registerSaveRouter(t){Pt.getInstance().saveRouters.push(t)}static registerLoadRouter(t){Pt.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return Pt.getHandlers(t,"save")}static getLoadHandlers(t,e){return Pt.getHandlers(t,"load",e)}static getHandlers(t,e,n){let o=[];return(e==="load"?Pt.getInstance().loadRouters:Pt.getInstance().saveRouters).forEach(a=>{let i=a(t,n);i!==null&&o.push(i)}),o}},y1=r=>Pt.registerSaveRouter(r),x1=r=>Pt.registerLoadRouter(r),T1=r=>Pt.getSaveHandlers(r),C1=(r,t)=>Pt.getLoadHandlers(r,t);var NA="tensorflowjs",DA=1,Al="models_store",Lp="model_info_store";function I1(){if(!L().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let r=typeof window>"u"?self:window,t=r.indexedDB||r.mozIndexedDB||r.webkitIndexedDB||r.msIndexedDB||r.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function _A(r){let t=r.result;t.createObjectStore(Al,{keyPath:"modelPath"}),t.createObjectStore(Lp,{keyPath:"modelPath"})}var gu=class{constructor(t){if(this.indexedDB=I1(),t==null||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise((n,o)=>{let s=this.indexedDB.open(NA,DA);s.onupgradeneeded=()=>_A(s),s.onsuccess=()=>{let a=s.result;if(e==null){let i=a.transaction(Al,"readonly"),u=i.objectStore(Al).get(this.modelPath);u.onsuccess=()=>{if(u.result==null)return a.close(),o(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));n(u.result.modelArtifacts)},u.onerror=l=>(a.close(),o(u.error)),i.oncomplete=()=>a.close()}else{e.weightData=_r.join(e.weightData);let i=hu(e),p=a.transaction(Lp,"readwrite"),u=p.objectStore(Lp),l;try{l=u.put({modelPath:this.modelPath,modelArtifactsInfo:i})}catch(c){return o(c)}let m;l.onsuccess=()=>{m=a.transaction(Al,"readwrite");let c=m.objectStore(Al),d;try{d=c.put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:i})}catch(f){return o(f)}d.onsuccess=()=>n({modelArtifactsInfo:i}),d.onerror=f=>{u=p.objectStore(Lp);let h=u.delete(this.modelPath);h.onsuccess=()=>(a.close(),o(d.error)),h.onerror=g=>(a.close(),o(d.error))}},l.onerror=c=>(a.close(),o(l.error)),p.oncomplete=()=>{m==null?a.close():m.oncomplete=()=>a.close()}}},s.onerror=a=>o(s.error)})}};gu.URL_SCHEME="indexeddb://";var k1=r=>L().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(gu.URL_SCHEME)?IZ(r.slice(gu.URL_SCHEME.length)):null;Pt.registerSaveRouter(k1);Pt.registerLoadRouter(k1);function IZ(r){return new gu(r)}function kZ(r){return r.startsWith(gu.URL_SCHEME)?r.slice(gu.URL_SCHEME.length):r}var Gb=class{constructor(){this.indexedDB=I1()}async listModels(){return new Promise((t,e)=>{let n=this.indexedDB.open(NA,DA);n.onupgradeneeded=()=>_A(n),n.onsuccess=()=>{let o=n.result,s=o.transaction(Lp,"readonly"),i=s.objectStore(Lp).getAll();i.onsuccess=()=>{let p={};for(let u of i.result)p[u.modelPath]=u.modelArtifactsInfo;t(p)},i.onerror=p=>(o.close(),e(i.error)),s.oncomplete=()=>o.close()},n.onerror=o=>e(n.error)})}async removeModel(t){return t=kZ(t),new Promise((e,n)=>{let o=this.indexedDB.open(NA,DA);o.onupgradeneeded=()=>_A(o),o.onsuccess=()=>{let s=o.result,a=s.transaction(Lp,"readwrite"),i=a.objectStore(Lp),p=i.get(t),u;p.onsuccess=()=>{if(p.result==null)return s.close(),n(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{let l=i.delete(t),m=()=>{u=s.transaction(Al,"readwrite");let d=u.objectStore(Al).delete(t);d.onsuccess=()=>e(p.result.modelArtifactsInfo),d.onerror=f=>n(p.error)};l.onsuccess=m,l.onerror=c=>(m(),s.close(),n(p.error))}},p.onerror=l=>(s.close(),n(p.error)),a.oncomplete=()=>{u==null?s.close():u.oncomplete=()=>s.close()}},o.onerror=s=>n(o.error)})}};var Vu="/",fc="tensorflowjs_models",v1="info",vZ="model_topology",SZ="weight_specs",wZ="weight_data",AZ="model_metadata";function S1(r){return{info:[fc,r,v1].join(Vu),topology:[fc,r,vZ].join(Vu),weightSpecs:[fc,r,SZ].join(Vu),weightData:[fc,r,wZ].join(Vu),modelMetadata:[fc,r,AZ].join(Vu)}}function w1(r){for(let t of Object.values(r))window.localStorage.removeItem(t)}function NZ(r){let t=r.split(Vu);if(t.length<3)throw new Error(`Invalid key format: ${r}`);return t.slice(1,t.length-1).join(Vu)}function DZ(r){return r.startsWith(bu.URL_SCHEME)?r.slice(bu.URL_SCHEME.length):r}var bu=class{constructor(t){if(!L().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,t==null||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=S1(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let e=JSON.stringify(t.modelTopology),n=JSON.stringify(t.weightSpecs),o=hu(t),s=_r.join(t.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(o)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,h1(s));let a={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,signature:t.signature!=null?t.signature:void 0,userDefinedMetadata:t.userDefinedMetadata!=null?t.userDefinedMetadata:void 0,modelInitializer:t.modelInitializer!=null?t.modelInitializer:void 0,initializerSignature:t.initializerSignature!=null?t.initializerSignature:void 0,trainingConfig:t.trainingConfig!=null?t.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:o}}catch{throw w1(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${o.modelTopologyBytes}, weightSpecsBytes=${o.weightSpecsBytes}, weightDataBytes=${o.weightDataBytes}.`)}}}async load(){let t=JSON.parse(this.LS.getItem(this.keys.info));if(t==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(t.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let e={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(n==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=n;let o=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(o==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=o;let s=this.LS.getItem(this.keys.modelMetadata);if(s!=null){let i=JSON.parse(s);e.format=i.format,e.generatedBy=i.generatedBy,e.convertedBy=i.convertedBy,i.signature!=null&&(e.signature=i.signature),i.userDefinedMetadata!=null&&(e.userDefinedMetadata=i.userDefinedMetadata),i.modelInitializer!=null&&(e.modelInitializer=i.modelInitializer),i.initializerSignature!=null&&(e.initializerSignature=i.initializerSignature),i.trainingConfig!=null&&(e.trainingConfig=i.trainingConfig)}let a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=g1(a),e}};bu.URL_SCHEME="localstorage://";var A1=r=>L().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(bu.URL_SCHEME)?_Z(r.slice(bu.URL_SCHEME.length)):null;Pt.registerSaveRouter(A1);Pt.registerLoadRouter(A1);function _Z(r){return new bu(r)}var Wb=class{constructor(){D(L().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),D(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let t={},e=fc+Vu,n=Vu+v1;for(let o=0;o<this.LS.length;++o){let s=this.LS.key(o);if(s.startsWith(e)&&s.endsWith(n)){let a=NZ(s);t[a]=JSON.parse(this.LS.getItem(s))}}return t}async removeModel(t){t=DZ(t);let e=S1(t);if(this.LS.getItem(e.info)==null)throw new Error(`Cannot find model at path '${t}'`);let n=JSON.parse(this.LS.getItem(e.info));return w1(e),n}};var hc="://",zr=class{constructor(){this.managers={}}static getInstance(){return zr.instance==null&&(zr.instance=new zr),zr.instance}static registerManager(t,e){D(t!=null,()=>"scheme must not be undefined or null."),t.endsWith(hc)&&(t=t.slice(0,t.indexOf(hc))),D(t.length>0,()=>"scheme must not be an empty string.");let n=zr.getInstance();D(n.managers[t]==null,()=>`A model store manager is already registered for scheme '${t}'.`),n.managers[t]=e}static getManager(t){let e=zr.getInstance().managers[t];if(e==null)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(zr.getInstance().managers)}};function Ub(r){if(r.indexOf(hc)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${zr.getSchemes().join(",")}`);return{scheme:r.split(hc)[0],path:r.split(hc)[1]}}async function N1(r,t,e=!1){D(r!==t,()=>`Old path and new path are the same: '${r}'`);let n=Pt.getLoadHandlers(r);D(n.length>0,()=>`Copying failed because no load handler is found for source URL ${r}.`),D(n.length<2,()=>`Copying failed because more than one (${n.length}) load handlers for source URL ${r}.`);let o=n[0],s=Pt.getSaveHandlers(t);D(s.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),D(s.length<2,()=>`Copying failed because more than one (${n.length}) save handlers for destination URL ${t}.`);let a=s[0],i=Ub(r).scheme,p=Ub(r).path,u=i===Ub(r).scheme,l=await o.load();e&&u&&await zr.getManager(i).removeModel(p);let m=await a.save(l);return e&&!u&&await zr.getManager(i).removeModel(p),m.modelArtifactsInfo}async function D1(){let r=zr.getSchemes(),t={};for(let e of r){let n=await zr.getManager(e).listModels();for(let o in n){let s=e+hc+o;t[s]=n[o]}}return t}async function _1(r){let t=Ub(r);return zr.getManager(t.scheme).removeModel(t.path)}async function M1(r,t){return N1(r,t,!1)}async function P1(r,t){return N1(r,t,!0)}var MA=class{constructor(){this.messageName="setTimeoutCustom";this.functionRefs=[];this.handledMessageCount=0;this.hasEventListener=!1}fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}setTimeoutCustom(t,e){if(typeof window>"u"||!L().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(t,e);return}this.functionRefs.push(t),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},e),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",n=>{if(n.source===window&&n.data.name===this.messageName){n.stopPropagation();let o=this.functionRefs[n.data.index];o(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(t){return Nb(t)}};if(L().get("IS_BROWSER")){L().setPlatform("browser",new MA);try{zr.registerManager(bu.URL_SCHEME,new Wb)}catch{}try{zr.registerManager(gu.URL_SCHEME,new Gb)}catch{}}var MZ={importFetch:()=>R1()},PA;var RA=class{constructor(){this.util=F1(),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return L().global.fetch!=null?L().global.fetch(t,e):(PA==null&&(PA=MZ.importFetch()),PA(t,e))}now(){let t=process.hrtime();return t[0]*1e3+t[1]/1e6}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return t.length===0?"":new this.util.TextDecoder(e).decode(t)}isTypedArray(t){return this.util.types.isFloat32Array(t)||this.util.types.isInt32Array(t)||this.util.types.isUint8Array(t)||this.util.types.isUint8ClampedArray(t)}};L().get("IS_NODE")&&!L().get("IS_BROWSER")&&L().setPlatform("node",new RA);function Ce(r,t="float32",e){return t=t||"float32",Ht(r),new ft(r,t,e)}function PZ(r,t){let e=v(r,"x","cast");if(!aA(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&e.dtype!=="string"||t!=="string"&&e.dtype==="string")throw new Error("Only strings can be casted to strings");let n={x:e},o={dtype:t};return N.runKernel(jn,n,o)}var ne=A({cast_:PZ});function RZ(r){let e={x:v(r,"x","clone","string_or_numeric")};return N.runKernel(Yn,e)}var Tn=A({clone_:RZ});function Kb(r,t=!1){console.log(r.toString(t))}CA();var FZ={buffer:Ce,cast:ne,clone:Tn,print:Kb};n1(FZ);function fAe(){L().set("PROD",!0)}function hAe(){L().set("DEBUG",!0)}function gAe(){L().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function FA(r){L().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(r+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}o1(FA);function bAe(){N.disposeVariables()}function Xr(){return N}function Nh(){return N.memory()}function yAe(r){return N.profile(r)}function z(r,t){return N.tidy(r,t)}function Pe(r){Sh(r).forEach(e=>e.dispose())}function Ot(r){return N.keep(r)}function xAe(r){return N.time(r)}function EZ(r){return N.setBackend(r)}function TAe(){return N.ready()}function CAe(){return N.backendName}function IAe(r){N.removeBackend(r)}function kAe(r){return N.findBackend(r)}function vAe(r){return N.findBackendFactory(r)}function Bp(r,t,e=1){return N.registerBackend(r,t,e)}function E1(){return N.backend}function SAe(r,t){L().setPlatform(r,t)}function LZ(r,t){let e=v(r,"a","add"),n=v(t,"b","add");[e,n]=Qe(e,n);let o={a:e,b:n};return N.runKernel(Mn,o)}var Q=A({add_:LZ});function BZ(r,t){let e=v(r,"a","floorDiv"),n=v(t,"b","floorDiv");[e,n]=Qe(e,n);let o={a:e,b:n};return N.runKernel(Xo,o)}var Vb=A({floorDiv_:BZ});function $Z(r,t){let e=v(r,"a","div"),n=v(t,"b","div");if([e,n]=Qe(e,n),e.dtype==="int32"&&n.dtype==="int32")return Vb(e,n);let o={a:e,b:n},s={};return N.runKernel(Uo,o,s)}var de=A({div_:$Z});function OZ(r,t){let e=v(r,"a","mul"),n=v(t,"b","mul");[e,n]=Qe(e,n);let o={a:e,b:n};return N.runKernel(ds,o)}var F=A({mul_:OZ});function zZ(r){let t=v(r,"x","abs");if(t.dtype==="complex64"){let e={x:t};return N.runKernel(Ji,e)}else{let e={x:t};return N.runKernel(Xs,e)}}var Ut=A({abs_:zZ});function GZ(r){let e={x:v(r,"x","acos")};return N.runKernel(vo,e)}var L1=A({acos_:GZ});function WZ(r){let e={x:v(r,"x","acosh")};return N.runKernel(So,e)}var B1=A({acosh_:WZ});function UZ(r){D(Array.isArray(r),()=>"The argument passed to tf.addN() must be a list of tensors"),D(r.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${r.length}`);let t=r.map((o,s)=>v(o,`tensors${s}`,"addN")),e=t[0];t.forEach(o=>{if(o.dtype!==e.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(o=>{if(!bn(o.shape,e.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let n=t;return N.runKernel(wo,n)}var $1=A({addN_:UZ});function KZ(r,t=null,e=!1){let o={x:v(r,"x","all","bool")},s={axis:t,keepDims:e};return N.runKernel(Ka,o,s)}var Hb=A({all_:KZ});function VZ(r,t=null,e=!1){let o={x:v(r,"x","any","bool")},s={axis:t,keepDims:e};return N.runKernel(Va,o,s)}var Dh=A({any_:VZ});function HZ(r,t=0){let n={x:v(r,"x","argMax")},o={axis:t};return N.runKernel(Ys,n,o)}var $p=A({argMax_:HZ});function qZ(r,t=0){let n={x:v(r,"x","argMin")},o={axis:t};return N.runKernel(Zs,n,o)}var O1=A({argMin_:qZ});function jZ(r){let e={x:v(r,"x","asin")};return N.runKernel(Ao,e)}var z1=A({asin_:jZ});function XZ(r){let e={x:v(r,"x","asinh")};return N.runKernel(No,e)}var G1=A({asinh_:XZ});function YZ(r){let e={x:v(r,"x","atan")};return N.runKernel(Do,e)}var W1=A({atan_:YZ});function ZZ(r,t){let e=v(r,"a","atan2"),n=v(t,"b","atan2");[e,n]=Qe(e,n);let o={a:e,b:n};return N.runKernel(Mo,o)}var U1=A({atan2_:ZZ});function QZ(r){let e={x:v(r,"x","atanh")};return N.runKernel(_o,e)}var K1=A({atanh_:QZ});function JZ(r,t,e,n,o="NHWC",s){let a=r[3],i=[...t,a],p=H1(o);return Nl(r,i,e,s,n,null,null,p)}function LA(r,t,e,n,o,s,a="channelsLast"){let[i,p]=_h(t),u;if(a==="channelsLast")u=[i,p,r[3],r[3]];else if(a==="channelsFirst")u=[i,p,r[1],r[1]];else throw new Error(`Unknown dataFormat ${a}`);return Nl(r,u,e,n,o,s,!1,a)}function eQ(r,t,e,n,o,s,a="NDHWC"){let[i,p,u]=EA(t),l,m;if(a==="NDHWC")m="channelsLast",l=[i,p,u,r[4],r[4]];else if(a==="NCDHW")m="channelsFirst",l=[i,p,u,r[1],r[1]];else throw new Error(`Unknown dataFormat ${a}`);return V1(r,l,e,n,o,!1,m,s)}function Nl(r,t,e,n,o,s,a=!1,i="channelsLast"){let[p,u,l,m]=[-1,-1,-1,-1];if(i==="channelsLast")[p,u,l,m]=r;else if(i==="channelsFirst")[p,m,u,l]=r;else throw new Error(`Unknown dataFormat ${i}`);let[c,d,,f]=t,[h,g]=_h(e),[b,x]=_h(n),T=gc(c,b),C=gc(d,x),{padInfo:k,outHeight:w,outWidth:_}=nQ(o,u,l,h,g,T,C,s,i),P=a?f*m:f,M;return i==="channelsFirst"?M=[p,P,w,_]:i==="channelsLast"&&(M=[p,w,_,P]),{batchSize:p,dataFormat:i,inHeight:u,inWidth:l,inChannels:m,outHeight:w,outWidth:_,outChannels:P,padInfo:k,strideHeight:h,strideWidth:g,filterHeight:c,filterWidth:d,effectiveFilterHeight:T,effectiveFilterWidth:C,dilationHeight:b,dilationWidth:x,inShape:r,outShape:M,filterShape:t}}function V1(r,t,e,n,o,s=!1,a="channelsLast",i){let[p,u,l,m,c]=[-1,-1,-1,-1,-1];if(a==="channelsLast")[p,u,l,m,c]=r;else if(a==="channelsFirst")[p,c,u,l,m]=r;else throw new Error(`Unknown dataFormat ${a}`);let[d,f,h,,g]=t,[b,x,T]=EA(e),[C,k,w]=EA(n),_=gc(d,C),P=gc(f,k),M=gc(h,w),{padInfo:R,outDepth:$,outHeight:G,outWidth:W}=oQ(o,u,l,m,b,x,T,_,P,M,i),U=s?g*c:g,V;return a==="channelsFirst"?V=[p,U,$,G,W]:a==="channelsLast"&&(V=[p,$,G,W,U]),{batchSize:p,dataFormat:a,inDepth:u,inHeight:l,inWidth:m,inChannels:c,outDepth:$,outHeight:G,outWidth:W,outChannels:U,padInfo:R,strideDepth:b,strideHeight:x,strideWidth:T,filterDepth:d,filterHeight:f,filterWidth:h,effectiveFilterDepth:_,effectiveFilterHeight:P,effectiveFilterWidth:M,dilationDepth:C,dilationHeight:k,dilationWidth:w,inShape:r,outShape:V,filterShape:t}}function tQ(r,t,e,n,o){n==null&&(n=BA(r,t,e));let s=r[0],a=r[1],i=Mh((s-t+2*n)/e+1,o),p=Mh((a-t+2*n)/e+1,o);return[i,p]}function rQ(r,t,e,n,o,s){o==null&&(o=BA(r,t[0],n[0]));let a=[0,0,0,e];for(let i=0;i<3;i++)r[i]+2*o>=t[i]&&(a[i]=Mh((r[i]-t[i]+2*o)/n[i]+1,s));return a}function BA(r,t,e,n=1){let o=gc(t,n);return Math.floor((r[0]*(e-1)-e+o)/2)}function _h(r){return typeof r=="number"?[r,r,r]:r.length===2?[r[0],r[1],1]:r}function EA(r){return typeof r=="number"?[r,r,r]:r}function gc(r,t){return t<=1?r:r+(r-1)*(t-1)}function nQ(r,t,e,n,o,s,a,i,p){let u,l,m;if(typeof r=="number"){u={top:r,bottom:r,left:r,right:r,type:r===0?"VALID":"NUMBER"};let d=tQ([t,e],s,n,r,i);l=d[0],m=d[1]}else if(r==="same"){l=Math.ceil(t/n),m=Math.ceil(e/o);let c=Math.max(0,(l-1)*n+s-t),d=Math.max(0,(m-1)*o+a-e),f=Math.floor(c/2),h=c-f,g=Math.floor(d/2),b=d-g;u={top:f,bottom:h,left:g,right:b,type:"SAME"}}else if(r==="valid")u={top:0,bottom:0,left:0,right:0,type:"VALID"},l=Math.ceil((t-s+1)/n),m=Math.ceil((e-a+1)/o);else if(typeof r=="object"){let c=p==="channelsLast"?r[1][0]:r[2][0],d=p==="channelsLast"?r[1][1]:r[2][1],f=p==="channelsLast"?r[2][0]:r[3][0],h=p==="channelsLast"?r[2][1]:r[3][1];u={top:c,bottom:d,left:f,right:h,type:c===0&&d===0&&f===0&&h===0?"VALID":"EXPLICIT"},l=Mh((t-s+c+d)/n+1,i),m=Mh((e-a+f+h)/o+1,i)}else throw Error(`Unknown padding parameter: ${r}`);return{padInfo:u,outHeight:l,outWidth:m}}function oQ(r,t,e,n,o,s,a,i,p,u,l){let m,c,d,f;if(r==="valid"&&(r=0),typeof r=="number"){m={top:r,bottom:r,left:r,right:r,front:r,back:r,type:r===0?"VALID":"NUMBER"};let g=rQ([t,e,n,1],[i,p,u],1,[o,s,a],r,l);c=g[0],d=g[1],f=g[2]}else if(r==="same"){c=Math.ceil(t/o),d=Math.ceil(e/s),f=Math.ceil(n/a);let h=(c-1)*o+i-t,g=(d-1)*s+p-e,b=(f-1)*a+u-n,x=Math.floor(h/2),T=h-x,C=Math.floor(g/2),k=g-C,w=Math.floor(b/2),_=b-w;m={top:C,bottom:k,left:w,right:_,front:x,back:T,type:"SAME"}}else throw Error(`Unknown padding parameter: ${r}`);return{padInfo:m,outDepth:c,outHeight:d,outWidth:f}}function Mh(r,t){if(!t)return Math.trunc(r);switch(t){case"round":return Math.round(r);case"ceil":return Math.ceil(r);case"floor":return Math.floor(r);default:throw new Error(`Unknown roundingMode ${t}`)}}function zs(r){let[t,e,n]=_h(r);return t===1&&e===1&&n===1}function Gr(r,t){return zs(r)||zs(t)}function yu(r){return _h(r).every(t=>t>0)}function H1(r){if(r==="NHWC")return"channelsLast";if(r==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${r}`)}function Rt(r,t,e){if(e!=null){if(typeof t=="string")throw Error(`Error in ${r}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);if(typeof t=="number")D(Bu(t),()=>`Error in ${r}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);else if(typeof t=="object")t.forEach(n=>{n.forEach(o=>{D(Bu(o),()=>`Error in ${r}: pad must be an integer when using dimRoundingMode ${e} but got pad ${o}.`)})});else throw Error(`Error in ${r}: Unknown padding parameter: ${t}`)}}function sQ(r,t){let n={x:v(r,"x","reshape","string_or_numeric")},o={shape:t};return N.runKernel(ia,n,o)}var E=A({reshape_:sQ});function aQ(r,t,e,n,o){let s=v(r,"x","avgPool","float32"),a=1;D(Gr(e,a),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${a}'`);let i=s,p=!1;s.rank===3&&(p=!0,i=E(s,[1,s.shape[0],s.shape[1],s.shape[2]])),D(i.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),Rt("avgPool",n,o);let u={x:i},l={filterSize:t,strides:e,pad:n,dimRoundingMode:o},m=N.runKernel(Po,u,l);return m=ne(m,s.dtype),p?E(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var bc=A({avgPool_:aQ});function iQ(r,t,e,n,o,s="NDHWC"){let a=v(r,"x","avgPool3d","float32"),i=a,p=!1;a.rank===4&&(p=!0,i=E(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),D(i.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`),D(s==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),D(typeof e=="number"&&e>0||Array.isArray(e)&&e[0]>0&&e[1]>0&&e[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${e}'`),Rt("avgPool3d",n,o);let u={x:i},l={filterSize:t,strides:e,pad:n,dimRoundingMode:o,dataFormat:s},m=N.runKernel(Qs,u,l);return m=ne(m,i.dtype),p?E(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}var qb=A({avgPool3d_:iQ});function uQ(r,t=0){D(r.length>=1,()=>"Pass at least one tensor to concat");let e=Ku(r,"tensors","concat","string_or_numeric");if(e[0].dtype==="complex64"&&e.forEach(s=>{if(s.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${s.dtype}. `)}),e.length===1)return Tn(e[0]);let n=e,o={axis:t};return N.runKernel(ea,n,o)}var ht=A({concat_:uQ});function pQ(r,t,e=!1,n=!1){let o=v(r,"a","matMul"),s=v(t,"b","matMul");[o,s]=Qe(o,s);let a={a:o,b:s},i={transposeA:e,transposeB:n};return N.runKernel(Ro,a,i)}var He=A({matMul_:pQ});function lQ(r){let e={x:v(r,"x","sigmoid","float32")};return N.runKernel(Ms,e)}var Ln=A({sigmoid_:lQ});function mQ(r,t,e){let n=v(r,"x","slice","string_or_numeric");if(n.rank===0)throw new Error("Slicing scalar is not possible");let o={x:n},s={begin:t,size:e};return N.runKernel(pa,o,s)}var We=A({slice_:mQ});function cQ(r){let e={x:v(r,"x","tanh","float32")};return N.runKernel(Os,e)}var Op=A({tanh_:cQ});function dQ(r,t,e,n,o,s){let a=v(r,"forgetBias","basicLSTMCell"),i=v(t,"lstmKernel","basicLSTMCell"),p=v(e,"lstmBias","basicLSTMCell"),u=v(n,"data","basicLSTMCell"),l=v(o,"c","basicLSTMCell"),m=v(s,"h","basicLSTMCell"),c=ht([u,m],1),d=He(c,i),f=Q(d,p),h=f.shape[0],g=f.shape[1]/4,b=[h,g],x=We(f,[0,0],b),T=We(f,[0,g],b),C=We(f,[0,g*2],b),k=We(f,[0,g*3],b),w=Q(F(Ln(x),Op(T)),F(l,Ln(Q(a,C)))),_=F(Op(w),Ln(k));return[w,_]}var q1=A({basicLSTMCell_:dQ});function fQ(r,t,e){let n=v(r,"x","batchToSpaceND"),o=t.reduce((i,p)=>i*p);D(n.rank>=1+t.length,()=>`input rank is ${n.rank} but should be > than blockShape.length ${t.length}`),D(e.length===t.length,()=>`crops.length is ${e.length} but should be equal to blockShape.length  ${t.length}`),D(n.shape[0]%o===0,()=>`input tensor batch is ${n.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${o}`);let s={x:n},a={blockShape:t,crops:e};return N.runKernel(Js,s,a)}var yc=A({batchToSpaceND_:fQ});function j1(r){let t;return r.rank===0||r.rank===1?t=E(r,[1,1,1,r.size]):r.rank===2?t=E(r,[1,1,r.shape[0],r.shape[1]]):r.rank===3?t=E(r,[1,r.shape[0],r.shape[1],r.shape[2]]):t=r,t}function hQ(r,t,e,n,o,s){s==null&&(s=.001);let a=v(r,"x","batchNorm"),i=v(t,"mean","batchNorm"),p=v(e,"variance","batchNorm"),u;o!=null&&(u=v(o,"scale","batchNorm"));let l;n!=null&&(l=v(n,"offset","batchNorm")),D(i.rank===p.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),D(l==null||i.rank===l.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),D(u==null||i.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let c={x:j1(a),scale:u,offset:l,mean:i,variance:p},d={varianceEpsilon:s},f=N.runKernel(Yo,c,d);return E(f,a.shape)}var zp=A({batchNorm_:hQ});function gQ(r,t,e,n,o,s){let a=v(r,"x","batchNorm"),i=v(t,"mean","batchNorm"),p=v(e,"variance","batchNorm"),u;o!=null&&(u=v(o,"scale","batchNorm"));let l;return n!=null&&(l=v(n,"offset","batchNorm")),D(a.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`),D(i.rank===2||i.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`),D(p.rank===2||p.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${p.rank}.`),u!=null&&D(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),l!=null&&D(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${l.rank}.`),zp(a,i,p,l,u,s)}var jb=A({batchNorm2d_:gQ});function bQ(r,t,e,n,o,s){let a=v(r,"x","batchNorm"),i=v(t,"mean","batchNorm"),p=v(e,"variance","batchNorm"),u;o!=null&&(u=v(o,"scale","batchNorm"));let l;return n!=null&&(l=v(n,"offset","batchNorm")),D(a.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`),D(i.rank===3||i.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`),D(p.rank===3||p.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${p.rank}.`),u!=null&&D(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),l!=null&&D(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${l.rank}.`),zp(a,i,p,l,u,s)}var Xb=A({batchNorm3d_:bQ});function yQ(r,t,e,n,o,s){let a=v(r,"x","batchNorm"),i=v(t,"mean","batchNorm"),p=v(e,"variance","batchNorm"),u;o!=null&&(u=v(o,"scale","batchNorm"));let l;return n!=null&&(l=v(n,"offset","batchNorm")),D(a.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`),D(i.rank===4||i.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`),D(p.rank===4||p.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${p.rank}.`),u!=null&&D(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),l!=null&&D(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${l.rank}.`),zp(a,i,p,l,u,s)}var Yb=A({batchNorm4d_:yQ});function xQ(r,t,e){let n=v(r,"x","bincount"),o=v(t,"weights","bincount");D(n.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${n.dtype}`),D(e>=0,()=>`size must be non-negative, but got ${e}.`),D(o.size===n.size||o.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${n.shape}, weights shape: ${o.shape}.`);let s={x:n,weights:o},a={size:e};return N.runKernel(Ha,s,a)}var Zb=A({bincount_:xQ});function TQ(r,t){let e=v(r,"x","bitwiseAnd"),n=v(t,"y","bitwiseAnd");if(!bn(e.shape,n.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${e.shape}, y: ${n.shape}`);if(e.dtype!=="int32"||n.dtype!=="int32")throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${e.dtype} and type of y: ${n.dtype}`);let o={a:e,b:n};return N.runKernel($u,o)}var X1=A({bitwiseAnd_:TQ});function CQ(r,t){let e=v(r,"s0","broadcastArgs","int32"),n=v(t,"s1","broadcastArgs","int32");if(e.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${e.rank}`);if(n.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${n.rank}`);let o={s0:e,s1:n};return N.runKernel(Qi,o)}var Y1=A({broadcastArgs_:CQ});function IQ(r,t){let e=v(r,"broadcastTo","x"),n=e.shape;if(Ht(t),t.length<e.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${e.rank}.`);if(t.length>e.rank){let u=e.shape.slice();for(;u.length<t.length;)u.unshift(1);e=E(e,u)}let o=e.shape,s=Array.from(t);for(let u=t.length-1;u>=0;u--)if(o[u]===t[u])s[u]=1;else if(e.shape[u]!==1)throw new Error(`broadcastTo(): [${n}] cannot be broadcast to [${t}].`);if(s.map((u,l)=>u>1?l:-1).filter(u=>u>=0).length===0)return Tn(e);let i={x:e},p={reps:s};return N.runKernel(Pn,i,p)}var Gp=A({broadcastTo_:IQ});function kQ(r){let e={x:v(r,"x","ceil","float32")};return N.runKernel(Fo,e)}var Z1=A({ceil_:kQ});function Ca(r,t,e){Ht(r),e=e||xp(t);let n={shape:r,value:t,dtype:e};return N.runKernel(ou,{},n)}function vQ(r,t,e){let n=v(r,"x","clipByValue");if(D(t<=e,()=>`Error in clip: min (${t}) must be less than or equal to max (${e}).`),t===e)return Ca(n.shape,t,n.dtype);let o={x:n},s={clipValueMin:t,clipValueMax:e};return N.runKernel(Xn,o,s)}var Yr=A({clipByValue_:vQ});function SQ(r){return ht(r,0)}var Qb=A({concat1d_:SQ});function wQ(r,t){return ht(r,t)}var Jb=A({concat2d_:wQ});function AQ(r,t){return ht(r,t)}var ey=A({concat3d_:AQ});function NQ(r,t){return ht(r,t)}var ty=A({concat4d_:NQ});function DQ(r,t,e,n,o="NHWC",s=[1,1],a){let i=v(r,"x","conv2d","float32"),p=v(t,"filter","conv2d","float32"),u=i,l=!1;i.rank===3&&(l=!0,u=E(i,[1,i.shape[0],i.shape[1],i.shape[2]])),D(u.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),D(p.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${p.rank}.`),Rt("conv2d",n,a);let m=o==="NHWC"?u.shape[3]:u.shape[1];D(m===p.shape[2],()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${p.shape[2]}.`),D(Gr(e,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${s}'`),D(yu(s),()=>"Error in conv2D: Dilated rates should be larger than 0."),D(yu(e),()=>"Error in conv2D: Strides should be larger than 0.");let c={x:u,filter:p},d={strides:e,pad:n,dataFormat:o,dilations:s,dimRoundingMode:a},f=N.runKernel(Eo,c,d);return l?E(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var Ws=A({conv2d_:DQ});function _Q(r,t,e,n,o="NWC",s=1,a){let i=v(r,"x","conv1d"),p=v(t,"filter","conv1d"),u=i,l=!1;i.rank===2&&(l=!0,u=E(i,[1,i.shape[0],i.shape[1]])),D(u.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),D(p.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${p.rank}.`),Rt("conv1d",n,a),D(u.shape[2]===p.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${p.shape[1]}.`),D(Gr(e,s),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${e} and dilation '${s}'`),D(yu(s),()=>"Error in conv1D: Dilated rates should be larger than 0."),D(yu(e),()=>"Error in conv1D: Stride should be larger than 0."),D(o==="NWC",()=>`Error in conv1d: got dataFormat of ${o} but only NWC is currently supported.`);let m=E(p,[1,p.shape[0],p.shape[1],p.shape[2]]),c=E(u,[u.shape[0],1,u.shape[1],u.shape[2]]),g=Ws(c,m,[1,e],n,"NHWC",[1,s],a);return l?E(g,[g.shape[2],g.shape[3]]):E(g,[g.shape[0],g.shape[2],g.shape[3]])}var ry=A({conv1d_:_Q});function MQ(r,t,e,n,o,s="NHWC",a){D(r.length===t.rank,()=>`Length of inShape (${r.length}) and rank of dy (${t.rank}) must match`);let i=r,p=t,u=!1;t.rank===3&&(u=!0,p=E(t,[1,t.shape[0],t.shape[1],t.shape[2]]),i=[1,r[0],r[1],r[2]]),D(i.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`),D(p.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${p.rank}`),D(e.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${e.rank}`);let l=s==="NHWC"?i[3]:i[1],m=s==="NHWC"?p.shape[3]:p.shape[1];D(l===e.shape[2],()=>`Error in conv2dDerInput: depth of input (${l}) must match input depth for filter ${e.shape[2]}.`),D(m===e.shape[3],()=>`Error in conv2dDerInput: depth of output (${m}) must match output depth for filter ${e.shape[3]}.`),Rt("conv2dDerInput",o,a);let c={dy:p,filter:e},d={strides:n,pad:o,dataFormat:s,dimRoundingMode:a,inputShape:i},f=N.runKernel(Lo,c,d);return u?E(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var xc=A({conv2DBackpropInput_:MQ});function PQ(r,t,e,n,o,s){let a=v(r,"x","conv2dTranspose"),i=v(t,"filter","conv2dTranspose");return xc(e,a,i,n,o,"NHWC",s)}var ny=A({conv2dTranspose_:PQ});function RQ(r,t,e,n,o="NDHWC",s=[1,1,1]){let a=v(r,"x","conv3d"),i=v(t,"filter","conv3d"),p=a,u=!1;a.rank===4&&(u=!0,p=E(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),D(p.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${p.rank}.`),D(i.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`),D(p.shape[4]===i.shape[3],()=>`Error in conv3d: depth of input (${p.shape[4]}) must match input depth for filter ${i.shape[3]}.`),D(Gr(e,s),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${e} and dilations '${s}'`),D(o==="NDHWC",()=>`Error in conv3d: got dataFormat of ${o} but only NDHWC is currently supported.`),D(yu(s),()=>"Error in conv3D: Dilated rates should be larger than 0."),D(yu(e),()=>"Error in conv3D: Strides should be larger than 0.");let l={x:p,filter:i},m={strides:e,pad:n,dataFormat:o,dilations:s},c=N.runKernel(Bo,l,m);return u?E(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}var oy=A({conv3d_:RQ});function FQ(r,t,e,n,o){D(r.length===t.rank,()=>`Length of inShape (${r.length}) and rank of dy (${t.rank}) must match`);let s=r,a=t,i=!1;t.rank===4&&(i=!0,a=E(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,r[0],r[1],r[2],r[3]]);let p=s[4],u=a.shape[4];D(s.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`),D(a.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`),D(e.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${e.rank}`),D(p===e.shape[3],()=>`Error in conv3dDerInput: depth of input (${p}) must match input depth for filter ${e.shape[3]}.`),D(u===e.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${e.shape[4]}.`);let l={dy:a,filter:e},m={pad:o,strides:n,inputShape:s},c=N.runKernel(ja,l,m);return i?E(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}var sy=A({conv3DBackpropInput_:FQ});function EQ(r,t,e,n,o){let s=v(r,"x","conv3dTranspose"),a=v(t,"filter","conv3dTranspose");return sy(e,s,a,n,o)}var ay=A({conv3dTranspose_:EQ});function LQ(r){let e={x:v(r,"x","cos","float32")};return N.runKernel($o,e)}var Tc=A({cos_:LQ});function BQ(r){let e={x:v(r,"x","cosh","float32")};return N.runKernel(Oo,e)}var iy=A({cosh_:BQ});function $Q(r,t=0,e=!1,n=!1){let s={x:v(r,"x","cumprod")},a={axis:t,exclusive:e,reverse:n};return N.runKernel(Xa,s,a)}var Ph=A({cumprod_:$Q});function OQ(r,t=0,e=!1,n=!1){let s={x:v(r,"x","cumsum")},a={axis:t,exclusive:e,reverse:n};return N.runKernel(zo,s,a)}var uy=A({cumsum_:OQ});function zQ(r,t,e,n=!1){let o=v(r,"x","denseBincount"),s=v(t,"weights","denseBincount");D(o.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${o.dtype}`),D(o.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${o.rank}.`),D(e>=0,()=>`size must be non-negative, but got ${e}.`),D(s.size===o.size||s.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${o.shape}, weights shape: ${s.shape}.`);let a={x:o,weights:s},i={size:e,binaryOutput:n};return N.runKernel(eu,a,i)}var Rh=A({denseBincount_:zQ});function GQ(r,t,e="NHWC"){let n=v(r,"x","depthToSpace","float32"),o=e==="NHWC"?n.shape[1]:n.shape[2],s=e==="NHWC"?n.shape[2]:n.shape[3],a=e==="NHWC"?n.shape[3]:n.shape[1];D(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),D(o*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${t}  for depthToSpace with input shape
    ${n.shape}`),D(s*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${t} for depthToSpace with input shape
        ${n.shape}`),D(a%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${a} for depthToSpace with input shape ${n.shape}`);let i={x:n},p={blockSize:t,dataFormat:e};return N.runKernel(Za,i,p)}var Q1=A({depthToSpace_:GQ});function WQ(r,t,e,n,o="NHWC",s=[1,1],a){let i=v(r,"x","depthwiseConv2d","float32"),p=v(t,"filter","depthwiseConv2d","float32"),u=i,l=!1;i.rank===3&&(l=!0,u=E(i,[1,i.shape[0],i.shape[1],i.shape[2]])),D(u.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),D(p.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`);let m=o==="NHWC"?u.shape[3]:u.shape[1];D(m===p.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${m}) must match the inChannels dimension in filter ${p.shape[2]}.`),Rt("depthwiseConv2d",n,a);let c={x:u,filter:p},d={strides:e,pad:n,dataFormat:o,dilations:s,dimRoundingMode:a},f=N.runKernel(Go,c,d);return l?E(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var Wp=A({depthwiseConv2d_:WQ});function UQ(r){let e={x:v(r,"x","diag")};return N.runKernel(tu,e)}var J1=A({diag_:UQ});function KQ(r,t,e,n,o=[1,1],s="NHWC"){let a=v(r,"x","dilation2d"),i=v(t,"filter","dilation2d");D(a.rank===3||a.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`),D(i.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`),D(s==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`);let p=a,u=!1;a.rank===3&&(p=E(a,[1,a.shape[0],a.shape[1],a.shape[2]]),u=!0),D(p.shape[3]===i.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${p.shape[3]} vs ${i.shape[2]}`);let l={x:p,filter:i},m={strides:e,pad:n,dilations:o},c=N.runKernel(Wo,l,m);return u?E(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var eM=A({dilation2d_:KQ});var Mr={};Xe(Mr,{assertAndGetBroadcastShape:()=>ze,getBroadcastDims:()=>tM,getReductionAxes:()=>Nt});function tM(r,t){let e=r.length,n=[];for(let o=0;o<e;o++){let s=e-1-o,a=r[s]||1;(t[t.length-1-o]||1)>1&&a===1&&n.unshift(s)}return n}function Nt(r,t){let e=[];for(let n=0;n<t.length;n++){let o=r[r.length-n-1],s=t.length-n-1,a=t[s];(o==null||o===1&&a>1)&&e.unshift(s)}return e}function ze(r,t){let e=Math.max(r.length,t.length),n=new Array(e);for(let o=0;o<e;o++){let s=r[r.length-o-1];s==null&&(s=1);let a=t[t.length-o-1];if(a==null&&(a=1),s===1)n[e-o-1]=a;else if(a===1)n[e-o-1]=s;else if(s!==a){let i=`Operands could not be broadcast together with shapes ${r} and ${t}.`;throw Error(i)}else n[e-o-1]=s}return n}function VQ(r,t){let e=v(r,"a","equal","string_or_numeric"),n=v(t,"b","equal","string_or_numeric");[e,n]=Qe(e,n),ze(e.shape,n.shape);let o={a:e,b:n};return N.runKernel(Ja,o)}var an=A({equal_:VQ});function HQ(r,t,e){let n=v(t,"a","where"),o=v(e,"b","where"),s=v(r,"condition","where","bool"),a=ze(ze(s.shape,n.shape),o.shape),i=Gp(s,a),p=Gp(n,a),u=Gp(o,a),l={condition:i,t:p,e:u};return N.runKernel(ua,l)}var Et=A({where_:HQ});function qQ(r){let e={x:v(r,"x","zerosLike")};return N.runKernel(da,e)}var De=A({zerosLike_:qQ});function jQ(r,t){let e=v(r,"a","div"),n=v(t,"b","div");[e,n]=Qe(e,n);let o=de(e,n),s=De(o),a=an(n,s);return Et(a,s,o)}var rM=A({divNoNan_:jQ});function XQ(r,t){let e=v(r,"t1","dot"),n=v(t,"t2","dot");D((e.rank===1||e.rank===2)&&(n.rank===1||n.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${e.rank} and ${n.rank}.`);let o=e.rank===1?e.size:e.shape[1],s=n.rank===1?n.size:n.shape[0];if(D(o===s,()=>`Error in dot: inner dimensions of inputs must match, but got ${o} and ${s}.`),e.rank===1&&n.rank===1){let a=E(e,[1,-1]),i=E(n,[-1,1]),p=He(a,i);return E(p,[])}else if(e.rank===1&&n.rank===2){let a=E(e,[1,-1]),i=E(n,[n.shape[0],n.shape[1]]),p=He(a,i);return E(p,[p.size])}else if(e.rank===2&&n.rank===1){let a=E(n,[-1,1]),i=He(e,a);return E(i,[i.size])}else{let a=E(n,[n.shape[0],n.shape[1]]);return He(e,a)}}var nM=A({dot_:XQ});function YQ(r,...t){let e=t.map((o,s)=>v(o,`tensors${s}`,"einsum")),n={equation:r};return N.runKernel(vp,e,n)}var oM=A({einsum_:YQ});function ZQ(r){let e={x:v(r,"x","elu","float32")};return N.runKernel(Ko,e)}var Up=A({elu_:ZQ});function QQ(r,t){let e=v(r,"x","ensureShape","string_or_numeric");if(!rA(e.shape,t))throw new Error(`EnsureShape: Shape of tensor ${e.shape} is not compatible with expected shape ${t}`);return r}var sM=A({ensureShape_:QQ});function JQ(r){let t=v(r,"x","erf");D(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=ne(t,"float32"));let e={x:t};return N.runKernel(Vo,e)}var aM=A({erf_:JQ});function $A(r,t){for(let e=0;e<r.length;++e)if(r[r.length-e-1]!==t-1-e)return!1;return!0}function iM(r,t,e){let n=r.length+t.length,o=[],s=0,a=0;for(let i=0;i<n;i++)e.indexOf(i)===-1?o.push(r[s++]):o.push(t[a++]);return o}function OA(r,t){let e=[],n=r.length;for(let s=0;s<n;s++)t.indexOf(s)===-1&&e.push(r[s]);let o=t.map(s=>r[s]);return[e,o]}function Ia(r,t){let e=t.map(n=>1);return iM(r,e,t)}function e7(r,t,e){D($A(t,e),()=>`${r} supports only inner-most axes for now. Got axes ${t} and rank-${e} input.`)}function zA(r,t){if($A(r,t))return null;let e=[];for(let n=0;n<t;++n)r.indexOf(n)===-1&&e.push(n);return r.forEach(n=>e.push(n)),e}function Fh(r){return r.map((t,e)=>[e,t]).sort((t,e)=>t[1]-e[1]).map(t=>t[0])}function t7(r,t){let e=[];for(let n=t-r;n<t;++n)e.push(n);return e}function r7(r,t=null,e=!1){let o={x:v(r,"x","max")},s={reductionIndices:t,keepDims:e};return N.runKernel(ss,o,s)}var Zr=A({max_:r7});function n7(r,t=null,e=!1){let o={x:v(r,"x","min")},s={axis:t,keepDims:e};return N.runKernel(ps,o,s)}var Dl=A({min_:n7});function o7(r,t){let e=v(r,"base","pow"),n=v(t,"exp","pow");[e,n]=Qe(e,n);let o={a:e,b:n};return N.runKernel(gs,o)}var eo=A({pow_:o7});function he(r,t){if((dr(r)&&t!=="string"||Array.isArray(r))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&dr(r)&&!(r instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return xn(r,[],[],t)}function s7(r){let e={x:v(r,"x","sqrt","float32")};return N.runKernel(Rs,e)}var zt=A({sqrt_:s7});function a7(r){let t=v(r,"x","square"),e={};return N.runKernel("Square",{x:t},e)}var je=A({square_:a7});function i7(r,t=null,e=!1){let n=v(r,"x","sum");n.dtype==="bool"&&(n=ne(n,"int32"));let o={x:n},s={axis:t,keepDims:e};return N.runKernel(Fs,o,s)}var ge=A({sum_:i7});function u7(r,t="euclidean",e=null,n=!1){r=v(r,"x","norm");let o=uM(r,t,e),s=o.shape;if(n){let a=Tr(e,r.shape);s=Ia(o.shape,a)}return E(o,s)}function uM(r,t,e=null){if(r.rank===0)return Ut(r);if(r.rank!==1&&e===null)return uM(E(r,[-1]),t,e);if(r.rank===1||typeof e=="number"||Array.isArray(e)&&e.length===1){if(t===1)return ge(Ut(r),e);if(t===1/0)return Zr(Ut(r),e);if(t===-1/0)return Dl(Ut(r),e);if(t==="euclidean"||t===2)return zt(ge(eo(Ut(r),he(2,"int32")),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(e)&&e.length===2){if(t===1)return Zr(ge(Ut(r),e[0]),e[1]-1);if(t===1/0)return Zr(ge(Ut(r),e[1]),e[0]);if(t===-1/0)return Dl(ge(Ut(r),e[1]),e[0]);if(t==="fro"||t==="euclidean")return zt(ge(je(r),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${e}`)}var _l=A({norm_:u7});function p7(r,t=null,e=!1){return _l(r,"euclidean",t,e)}var pM=A({euclideanNorm_:p7});function l7(r){let e={x:v(r,"x","exp")};return N.runKernel(Ho,e)}var Cr=A({exp_:l7});function m7(r,t=0){let e=v(r,"x","expandDims","string_or_numeric");D(t<=e.rank,()=>"Axis must be <= rank of the tensor");let n={input:e},o={dim:t};return N.runKernel(ta,n,o)}var Ir=A({expandDims_:m7});function c7(r){let e={x:v(r,"x","expm1")};return N.runKernel(qo,e)}var lM=A({expm1_:c7});function d7(r,t){let e=v(r,"x","tile","string_or_numeric");D(e.rank===t.length,()=>`Error in transpose: rank of input ${e.rank} must match length of reps ${t}.`);let n={x:e},o={reps:t};return N.runKernel(Pn,n,o)}var un=A({tile_:d7});function f7(r,t,e,n="float32"){t==null&&(t=r);let o=Ce([r,t],n),s=r<=t?r:t;for(let i=0;i<s;++i)o.set(1,i,i);let a=E(o.toTensor(),[r,t]);if(e==null)return a;if(e.length===1)return un(Ir(a,0),[e[0],1,1]);if(e.length===2)return un(Ir(Ir(a,0),0),[e[0],e[1],1,1]);if(e.length===3)return un(Ir(Ir(Ir(a,0),0),0),[e[0],e[1],e[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${e.length}D.`)}var Ml=A({eye_:f7});function h7(r){let e={x:v(r,"x","floor","float32")};return N.runKernel(jo,e)}var Kp=A({floor_:h7});function g7(r,t,e=0,n=0){let o=v(r,"x","gather"),s=v(t,"indices","gather","int32"),a={x:o,indices:s},i={axis:e,batchDims:n};return N.runKernel(ra,a,i)}var Vp=A({gather_:g7});function b7(r,t){let e=v(r,"a","greater","string_or_numeric"),n=v(t,"b","greater","string_or_numeric");[e,n]=Qe(e,n),ze(e.shape,n.shape);let o={a:e,b:n};return N.runKernel(ri,o)}var tr=A({greater_:b7});function y7(r,t){let e=v(r,"a","greaterEqual","string_or_numeric"),n=v(t,"b","greaterEqual","string_or_numeric");[e,n]=Qe(e,n),ze(e.shape,n.shape);let o={a:e,b:n};return N.runKernel(Zo,o)}var to=A({greaterEqual_:y7});function x7(r){let e={input:v(r,"input","imag")};return N.runKernel(Ap,e)}var Hp=A({imag_:x7});function T7(r){let e={x:v(r,"x","isFinite")};return N.runKernel(Qo,e)}var mM=A({isFinite_:T7});function C7(r){let e={x:v(r,"x","isInf")};return N.runKernel(Jo,e)}var cM=A({isInf_:C7});function I7(r){let e={x:v(r,"x","isNaN")};return N.runKernel(es,e)}var dM=A({isNaN_:I7});function k7(r,t=.2){let n={x:v(r,"x","leakyRelu")},o={alpha:t};return N.runKernel(ts,n,o)}var Cc=A({leakyRelu_:k7});function v7(r,t){let e=v(r,"a","less","string_or_numeric"),n=v(t,"b","less","string_or_numeric");[e,n]=Qe(e,n),ze(e.shape,n.shape);let o={a:e,b:n};return N.runKernel(ni,o)}var Pl=A({less_:v7});function S7(r,t){let e=v(r,"a","lessEqual","string_or_numeric"),n=v(t,"b","lessEqual","string_or_numeric");[e,n]=Qe(e,n),ze(e.shape,n.shape);let o={a:e,b:n};return N.runKernel(oi,o)}var ka=A({lessEqual_:S7});function fM(r,t,e){if(e<=0)throw new Error("The number of values should be positive.");let n={start:r,stop:t,num:e};return N.runKernel(si,{},n)}function w7(r,t=5,e=1,n=1,o=.5){let s=v(r,"x","localResponseNormalization");D(s.rank===4||s.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${s.rank}.`),D(Bu(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let a=s,i=!1;s.rank===3&&(i=!0,a=E(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let p={x:a},u={depthRadius:t,bias:e,alpha:n,beta:o},l=N.runKernel(os,p,u);return i?E(l,[l.shape[1],l.shape[2],l.shape[3]]):l}var hM=A({localResponseNormalization_:w7});function A7(r){let e={x:v(r,"x","log","float32")};return N.runKernel(rs,e)}var Qr=A({log_:A7});function N7(r){let e={x:v(r,"x","log1p")};return N.runKernel(ns,e)}var Ic=A({log1p_:N7});function D7(r){return D(ji(r),()=>"The f passed in grad(f) must be a function"),(t,e)=>{let n=v(t,"x","tf.grad","string_or_numeric"),o=e!=null?v(e,"dy","tf.grad"):null;return N.tidy(()=>{let{value:s,grads:a}=N.gradients(()=>r(n),[n],o);return o!=null&&Wt(s.shape,o.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),ly(a),a[0]})}}function _7(r){return D(ji(r),()=>"The f passed in grads(f) must be a function"),(t,e)=>{D(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");let n=Ku(t,"args","tf.grads","string_or_numeric"),o=e!=null?v(e,"dy","tf.grads"):null;return N.tidy(()=>{let{value:s,grads:a}=N.gradients(()=>r(...n),n,o);return o!=null&&Wt(s.shape,o.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),ly(a),a})}}function M7(r){return D(ji(r),()=>"The f passed in valueAndGrad(f) must be a function"),(t,e)=>{D(t instanceof Ve,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),D(e==null||e instanceof Ve,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");let{grads:n,value:o}=N.gradients(()=>r(t),[t],e);return ly(n),{grad:n[0],value:o}}}function P7(r){return D(ji(r),()=>"The f passed in valueAndGrads(f) must be a function"),(t,e)=>{D(Array.isArray(t)&&t.every(o=>o instanceof Ve),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),D(e==null||e instanceof Ve,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");let n=N.gradients(()=>r(...t),t,e);return e!=null&&Wt(n.value.shape,e.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),ly(n.grads),n}}function py(r,t){D(ji(r),()=>"The f passed in variableGrads(f) must be a function"),D(t==null||Array.isArray(t)&&t.every(u=>u instanceof Wu),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let e=t!=null;if(!e){t=[];for(let u in N.registeredVariables)t.push(N.registeredVariables[u])}let n=e?t.filter(u=>!u.trainable):null,o=t.length;t=t.filter(u=>u.trainable),D(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`);let s=!0,{value:a,grads:i}=N.gradients(r,t,null,s);D(i.some(u=>u!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),D(a.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`);let p={};return t.forEach((u,l)=>{i[l]!=null&&(p[u.name]=i[l])}),n?.forEach(u=>p[u.name]=null),{value:a,grads:p}}function Cn(r){return N.customGrad(r)}function ly(r){if(r.filter(e=>e==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}function R7(r){let e={x:v(r,"x","neg")};return N.runKernel(oa,e)}var Je=A({neg_:R7});function F7(r){let e={x:v(r,"x","softplus")};return N.runKernel(Ps,e)}var Hu=A({softplus_:F7});function E7(r){let t=v(r,"x","logSigmoid");return Cn(n=>({value:Je(Hu(Je(n))),gradFunc:a=>F(a,Ln(Je(n)))}))(t)}var gM=A({logSigmoid_:E7});function L7(r,t){let e=v(r,"a","sub"),n=v(t,"b","sub");[e,n]=Qe(e,n);let o={a:e,b:n};return N.runKernel(Bs,o)}var me=A({sub_:L7});function B7(r,t=-1){let e=v(r,"logits","logSoftmax");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and axis was ${t}`);return Cn((o,s)=>{let i=Zr(o,t,!0),p=me(o,i),u=me(ne(p,"float32"),Qr(ge(Cr(p),t,!0)));return s([u]),{value:u,gradFunc:(m,c)=>{let[d]=c,f=!0,h=Cr(d);return me(m,F(ge(m,t,f),h))}}})(e)}var my=A({logSoftmax_:B7});function $7(r,t=null,e=!1){let n=v(r,"x","logSumExp"),o=Tr(t,n.shape),s=Zr(n,o,!0),a=me(n,s),i=Cr(a),p=ge(i,o),u=Qr(p),l=Q(E(s,u.shape),u);if(e){let m=Ia(l.shape,o);return E(l,m)}return l}var cy=A({logSumExp_:$7});function O7(r,t){let e=v(r,"a","logicalAnd","bool"),n=v(t,"b","logicalAnd","bool");ze(e.shape,n.shape);let o={a:e,b:n};return N.runKernel(ai,o)}var pn=A({logicalAnd_:O7});function z7(r){let e={x:v(r,"x","logicalNot","bool")};return N.runKernel(ii,e)}var kc=A({logicalNot_:z7});function G7(r,t){let e=v(r,"a","logicalOr","bool"),n=v(t,"b","logicalOr","bool");ze(e.shape,n.shape);let o={a:e,b:n};return N.runKernel(ui,o)}var dy=A({logicalOr_:G7});function W7(r,t){let e=v(r,"a","logicalXor","bool"),n=v(t,"b","logicalXor","bool");return ze(e.shape,n.shape),pn(dy(r,t),kc(pn(r,t)))}var bM=A({logicalXor_:W7});var fy=2147483648;function U7(r,t,e="left"){let n=v(r,"sortedSequence","searchSorted"),o=v(t,"values","searchSorted"),s=n.shape[n.shape.length-1],a=o.shape[o.shape.length-1],i=E(n,[-1,s]),p=E(o,[-1,a]);if(i.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(i.shape[0]!==p.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(st(p.shape)>=fy)throw new Error(`values tensor size must less than ${fy}`);if(i.shape[1]>=fy)throw new Error(`trailing dim_size must less than ${fy} for int32 output type, was ${i.shape[1]}`);let u={sortedSequence:i,values:p},l={side:e};return N.runKernel(yi,u,l)}var Eh=A({searchSorted_:U7});function yM(r,t){return Eh(r,t,"left")}function K7(r,t,e,n,o){let s=v(r,"x","maxPool"),a=1,i=s,p=!1;s.rank===3&&(p=!0,i=E(s,[1,s.shape[0],s.shape[1],s.shape[2]])),D(i.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),D(Gr(e,a),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${a}'`),Rt("maxPool",n,o);let u={x:i},l={filterSize:t,strides:e,pad:n,dimRoundingMode:o},m=N.runKernel(is,u,l);return p?E(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var vc=A({maxPool_:K7});function V7(r,t=[1,1,1],e,n,o,s="NDHWC"){let a=v(r,"x","maxPool3d"),i=a,p=!1;a.rank===4&&(p=!0,i=E(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),D(i.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`),D(s==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),Rt("maxPool3d",n,o);let u={x:i},l={filterSize:t,strides:e,pad:n,dimRoundingMode:o,dataFormat:s},m=N.runKernel(na,u,l);return p?E(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}var hy=A({maxPool3d_:V7});function H7(r,t,e,n,o=!1){let a={x:v(r,"x","maxPoolWithArgmax")},i={filterSize:t,strides:e,pad:n,includeBatchInIndex:o},p=N.runKernel(iu,a,i);return{result:p[0],indexes:p[1]}}var xM=A({maxPoolWithArgmax_:H7});function q7(r,t){let e=v(r,"a","maximum"),n=v(t,"b","maximum");[e,n]=Qe(e,n),e.dtype==="bool"&&(e=ne(e,"int32"),n=ne(n,"int32")),ze(e.shape,n.shape);let o={a:e,b:n};return N.runKernel(as,o)}var Us=A({maximum_:q7});function j7(r,t=null,e=!1){let o={x:v(r,"x","mean")},s={axis:t,keepDims:e};return N.runKernel(us,o,s)}var Gt=A({mean_:j7});function It(r,t="float32"){if(Ht(r),t==="complex64"){let n=It(r,"float32"),o=It(r,"float32");return En(n,o)}let e=rc(st(r),t);return N.makeTensor(e,r,t)}function kr(r,t="float32"){if(Ht(r),t==="complex64"){let n=kr(r,"float32"),o=It(r,"float32");return En(n,o)}let e=gh(st(r),t);return N.makeTensor(e,r,t)}function TM(r,t,{indexing:e="xy"}={}){if(e!=="xy"&&e!=="ij")throw new TypeError(`${e} is not a valid third argument to meshgrid`);if(r===void 0)return[];let n=v(r,"x","meshgrid",r instanceof Ve?r.dtype:"float32");if(t===void 0)return[n];let o=v(t,"y","meshgrid",t instanceof Ve?t.dtype:"float32"),s=st(n.shape),a=st(o.shape);return e==="xy"?(n=E(n,[1,-1]),o=E(o,[-1,1]),[He(kr([a,1],n.dtype),n),He(o,kr([1,s],o.dtype))]):(n=E(n,[-1,1]),o=E(o,[1,-1]),[He(n,kr([1,a],n.dtype)),He(kr([s,1],o.dtype),o)])}function X7(r,t){let e=v(r,"a","minimum"),n=v(t,"b","minimum");[e,n]=Qe(e,n),e.dtype==="bool"&&(e=ne(e,"int32"),n=ne(n,"int32")),ze(e.shape,n.shape);let o={a:e,b:n};return N.runKernel(ls,o)}var Ai=A({minimum_:X7});function Y7(r,t,e){D(e==="reflect"||e==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${e}.`);let n=v(r,"x","mirrorPad");if(n.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");D(t.length===n.rank,()=>`Padding doesn't match input. Must be ${n.rank}. Got ${t.length}.`);let o=e==="reflect"?1:0;for(let i=0;i<n.rank;i++)D(t[i].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),D(t[i][0]>=0&&t[i][0]<=n.shape[i]-o&&t[i][1]>=0&&t[i][1]<=n.shape[i]-o,()=>`Padding in dimension ${i} cannot be greater than or equal to ${n.shape[i]-o} or less than 0 for input of shape ${n.shape}`);let s={paddings:t,mode:e},a={x:n};return N.runKernel(ms,a,s)}var CM=A({mirrorPad_:Y7});function Z7(r,t){let e=v(r,"a","mod"),n=v(t,"b","mod");[e,n]=Qe(e,n);let o={a:e,b:n};return N.runKernel(cs,o)}var IM=A({mod_:Z7});function Q7(r,t=null,e=!1){r=v(r,"x","moments");let n=Tr(t,r.shape),o=Gt(r,n,e),s=o.shape;e||(s=Ia(o.shape,n));let a=je(me(ne(r,"float32"),E(o,s))),i=Gt(a,n,e);return{mean:o,variance:i}}var Rl=A({moments_:Q7});function J7(r,t,e,n){let o=v(t,"data","multiRNNCell"),s=Ku(e,"c","multiRNNCell"),a=Ku(n,"h","multiRNNCell"),i=o,p=[];for(let m=0;m<r.length;m++){let c=r[m](i,s[m],a[m]);p.push(c[0]),p.push(c[1]),i=c[1]}let u=[],l=[];for(let m=0;m<p.length;m+=2)u.push(p[m]),l.push(p[m+1]);return[u,l]}var kM=A({multiRNNCell_:J7});function eJ(r,t,e,n=!1){let o=v(r,"logits","multinomial"),s=o.size,a=o.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(a>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${a}`);e=e||Math.random();let p={logits:a===1?E(o,[1,-1]):o},u={numSamples:t,seed:e,normalized:n},l=N.runKernel(li,p,u);return a===1?E(l,[l.size]):l}var vM=A({multinomial_:eJ});function tJ(r,t){let e=v(r,"a","notEqual","string_or_numeric"),n=v(t,"b","notEqual","string_or_numeric");[e,n]=Qe(e,n),ze(e.shape,n.shape);let o={a:e,b:n};return N.runKernel(mi,o)}var qu=A({notEqual_:tJ});function rJ(r,t,e=1,n=0,o="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let a={indices:v(r,"indices","oneHot","int32")},i={dtype:o,depth:t,onValue:e,offValue:n};return N.runKernel(fs,a,i)}var qp=A({oneHot_:rJ});function nJ(r){let e={x:v(r,"x","onesLike")};return N.runKernel(sa,e)}var Wr=A({onesLike_:nJ});function oJ(r,t){let e=v(r,"v1","outerProduct"),n=v(t,"v2","outerProduct");D(e.rank===1&&n.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${e.rank} and ${n.rank}.`);let o=E(e,[-1,1]),s=E(n,[1,-1]);return He(o,s)}var SM=A({outerProduct_:oJ});function sJ(r,t,e=0){let n=v(r,"x","pad");if(n.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let o={paddings:t,constantValue:e},s={x:n};return N.runKernel(hs,s,o)}var ro=A({pad_:sJ});function aJ(r,t,e=0){return D(t.length===2,()=>"Invalid number of paddings. Must be length of 2."),ro(r,[t],e)}var wM=A({pad1d_:aJ});function iJ(r,t,e=0){return D(t.length===2&&t[0].length===2&&t[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),ro(r,t,e)}var AM=A({pad2d_:iJ});function uJ(r,t,e=0){return D(t.length===3&&t[0].length===2&&t[1].length===2&&t[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),ro(r,t,e)}var NM=A({pad3d_:uJ});function pJ(r,t,e=0){return D(t.length===4&&t[0].length===2&&t[1].length===2&&t[2].length===2&&t[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),ro(r,t,e)}var DM=A({pad4d_:pJ});function lJ(r,t,e){let n=v(r,"x","spaceToBatchND");D(n.rank>=1+t.length,()=>`input rank ${n.rank} should be > than [blockShape] ${t.length}`),D(e.length===t.length,()=>`paddings.shape[0] ${e.length} must be equal to [blockShape] ${t.length}`),D(n.shape.reduce((a,i,p)=>p>0&&p<=t.length?a&&(i+e[p-1][0]+e[p-1][1])%t[p-1]===0:a,!0),()=>`input spatial dimensions ${n.shape.slice(1)} with paddings ${e.toString()} must be divisible by blockShapes ${t.toString()}`);let o={x:n},s={blockShape:t,paddings:e};return N.runKernel(la,o,s)}var Sc=A({spaceToBatchND_:lJ});function mJ(r,t,e,n,o,s,a){o==null&&(o=[1,1]),s==null&&(s=1),n===0&&(n="valid");let i=v(r,"x","maxPool"),p=i,u=!1;i.rank===3&&(u=!0,p=E(i,[1,i.shape[0],i.shape[1],i.shape[2]])),D(Gr(s,o),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${o}'`);let l=LA(p.shape,t,s,o,n),m=[l.dilationHeight,l.dilationWidth],c;n==="same"?c=dJ([l.filterHeight,l.filterWidth],m):c=[[0,0],[0,0]];let d=m[0]===1&&m[1]===1,[f,h]=cJ([l.inHeight,l.inWidth],m,c),g=d?n:"valid",b=d?p:Sc(p,m,f),T=(e==="avg"?()=>bc(b,t,s,g,a):()=>vc(b,t,s,g,a))(),C=d?T:yc(T,m,h);return u?E(C,[C.shape[1],C.shape[2],C.shape[3]]):C}function cJ(r,t,e){let n=e.map(l=>l[0]),o=e.map(l=>l[1]),s=r.concat(n,o),a=t.map((l,m)=>(l-s[m]%l)%l),i=o.map((l,m)=>l+a[m]),p=t.map((l,m)=>[n[m],i[m]]),u=t.map((l,m)=>[0,a[m]]);return[p,u]}function dJ(r,t){let n=r.map((a,i)=>a+(a-1)*(t[i]-1)).map(a=>a-1),o=n.map(a=>Math.floor(a/2)),s=n.map((a,i)=>a-o[i]);return n.map((a,i)=>[o[i],s[i]])}var _M=A({pool_:mJ});function fJ(r,t){let e=v(r,"x","prelu"),n=v(t,"alpha","prelu"),o={x:e,alpha:n};return N.runKernel(bs,o)}var wc=A({prelu_:fJ});function hJ(r,t=null,e=!1){let n=v(r,"x","prod");n.dtype==="bool"&&(n=ne(n,"int32"));let o={x:n},s={axis:t,keepDims:e};return N.runKernel(ys,o,s)}var MM=A({prod_:hJ});function gJ(r,t,e,n){let o=r.map((l,m)=>v(l,`tensors${m}`,"raggedGather","int32")),s=v(t,"paramsDenseValues","raggedGather"),a=v(e,"indices","raggedGather","int32"),i={paramsNestedSplits:o,paramsDenseValues:s,indices:a},p={outputRaggedRank:n},u=N.runKernel(nc,i,p);return{outputNestedSplits:u.slice(0,u.length-1),outputDenseValues:u[u.length-1]}}var PM=A({raggedGather_:gJ});function bJ(r,t,e){let n=v(r,"starts","raggedRange"),o=v(t,"limits","raggedRange",n.dtype),s=v(e,"deltas","raggedRange",n.dtype),a={starts:n,limits:o,deltas:s},i=N.runKernel(oc,a);return{rtNestedSplits:i[0],rtDenseValues:i[1]}}var RM=A({raggedRange_:bJ});function yJ(r,t,e,n,o){let s=v(r,"shape","raggedTensorToTensor","int32"),a=v(t,"values","raggedTensorToTensor"),i=v(e,"defaultValue","raggedTensorToTensor",a.dtype),p=n.map((m,c)=>v(m,`tensors${c}`,"raggedTensorToTensor","int32")),u={shape:s,values:a,defaultValue:i,rowPartitionTensors:p},l={rowPartitionTypes:o};return N.runKernel(sc,u,l)}var FM=A({raggedTensorToTensor_:yJ});function xJ(r,t,e){Ht(r);let n=st(r),o=null;if(e==null||e==="float32")o=new Float32Array(n);else if(e==="int32")o=new Int32Array(n);else if(e==="bool")o=new Uint8Array(n);else throw new Error(`Unknown data type ${e}`);for(let s=0;s<n;s++)o[s]=t();return N.makeTensor(o,r,e)}var EM=A({rand_:xJ});var Ty=gl(Lh());var tP={};Xe(tP,{TEST_EPSILON_FLOAT16:()=>QM,createVideoElement:()=>PJ,encodeStrings:()=>eP,expectArrayBuffersEqual:()=>MJ,expectArraysClose:()=>AJ,expectArraysEqual:()=>DJ,expectNumbersClose:()=>JM,expectPromiseToFail:()=>NJ,expectValuesInRange:()=>_J,play:()=>RJ,testEpsilon:()=>by});var wJ=.001,QM=.1;function AJ(r,t,e){return e==null&&(e=by()),jA(r,t,(n,o)=>XA(n,o,e))}function by(){return N.backend.floatPrecision()===32?wJ:QM}function jA(r,t,e){let n=!0;if((dr(r)||dr(t))&&(n=!1),dr(r)&&dr(t)&&(n=!0),n){let a=r.constructor.name,i=t.constructor.name;if(a!==i)throw new Error(`Arrays are of different type. Actual: ${a}. Expected: ${i}`)}if(Array.isArray(r)&&Array.isArray(t)){let a=jr(r),i=jr(t);if(!bn(a,i))throw new Error(`Arrays have different shapes. Actual: [${a}]. Expected: [${i}]`)}let o=dr(r)?r:Si(r),s=dr(t)?t:Si(t);if(o.length!==s.length)throw new Error(`Arrays have different lengths actual: ${o.length} vs expected: ${s.length}.
Actual:   ${o}.
Expected: ${s}.`);for(let a=0;a<s.length;++a){let i=o[a],p=s[a];if(!e(i,p))throw new Error(`Arrays differ: actual[${a}] = ${i}, expected[${a}] = ${p}.
Actual:   ${o}.
Expected: ${s}.`)}typeof expect<"u"&&expect().nothing()}function NJ(r,t){r().then(()=>t.fail(),()=>t()),typeof expect<"u"&&expect().nothing()}function DJ(r,t){let e=typeof t=="string"||typeof t=="number"||typeof t=="boolean"?[t]:t;return Ua(r)||Ua(r[0])||Ua(t)||Ua(t[0])?jA(r,e,(n,o)=>n==o):jA(r,t,(n,o)=>XA(n,o,0))}function JM(r,t,e){if(e==null&&(e=by()),!XA(r,t,e))throw new Error(`Numbers differ: actual === ${r}, expected === ${t}`);typeof expect<"u"&&expect().nothing()}function XA(r,t,e){return!isFinite(r)&&!isFinite(t)?!0:!(isNaN(r)||isNaN(t)||Math.abs(r-t)>e)}function _J(r,t,e){for(let n=0;n<r.length;n++)if(r[n]<t||r[n]>e)throw new Error(`Value out of range:${r[n]} low: ${t}, high: ${e}`)}function MJ(r,t){let e=new Float32Array(r),n=new Float32Array(t);if(e.length!==n.length)throw new Error(`Expected ArrayBuffer to be of length ${n.length}, but it was ${e.length}`);for(let o=0;o<n.length;o++)if(e[o]!==n[o])throw new Error(`Expected ArrayBuffer value at ${o} to be ${n[o]} but got ${e[o]} instead`)}function eP(r){for(let t=0;t<r.length;t++){let e=r[t];Array.isArray(e)?eP(e):r[t]=Fp(e)}return r}function PJ(r){let t=document.createElement("video");return"playsInline"in t&&(t.playsInline=!0),t.muted=!0,t.loop=!0,t.style.position="fixed",t.style.left="0px",t.style.top="0px",t.preload="auto",t.appendChild(r),new Promise(e=>{t.addEventListener("loadeddata",n=>e(t)),t.load()})}async function RJ(r){await r.play(),"requestVideoFrameCallback"in r&&await new Promise(t=>{r.requestVideoFrameCallback(t)})}var El=class{constructor(t,e,n,o,s){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=o,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let a=s||Math.random();this.random=Ty.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){let o=this.nextVal;return this.nextVal=NaN,o}let t,e,n=!1;for(;!n;){let o,s,a;do o=2*this.random()-1,s=2*this.random()-1,a=o*o+s*s;while(a>=1||a===0);let i=Math.sqrt(-2*Math.log(a)/a);t=this.mean+this.stdDev*o*i,e=this.mean+this.stdDev*s*i,(!this.truncated||this.isValidTruncated(t))&&(n=!0)}return(!this.truncated||this.isValidTruncated(e))&&(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return this.dtype==null||this.dtype==="float32"?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}},yy=class{constructor(t,e,n,o){this.alpha=t,this.beta=1/e,this.dtype=n;let s=o||Math.random();this.randu=Ty.alea(s.toString()),this.randn=new El(0,1,n,!1,this.randu()),t<1?this.d=t+2/3:this.d=t-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let t,e,n,o,s,a;for(;;){do o=this.randn.nextValue(),a=1+this.c*o;while(a<=0);if(a*=a*a,t=o*o,e=1-.331*t*t,n=.5*t+this.d*(1-a+Math.log(a)),s=this.randu(),s<e||Math.log(s)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(t){return this.dtype==="float32"?t:Math.round(t)}},xy=class{constructor(t=0,e=1,n,o){this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32";if(this.min=t,this.range=e-t,this.dtype=n,o==null&&(o=Math.random()),typeof o=="number"&&(o=o.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=Ty.alea(o)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function FJ(r,t,e=1,n="float32",o){if(Ht(r),e==null&&(e=1),n==null&&(n="float32"),n!=="float32"&&n!=="int32")throw new Error(`Unsupported data type ${n}`);let s=new yy(t,e,n,o),a=Ce(r,n);for(let i=0;i<a.values.length;i++)a.values[i]=s.nextValue();return a.toTensor()}var rP=A({randomGamma_:FJ});function EJ(r,t=0,e=1,n,o){if(Ht(r),n!=null&&n==="bool")throw new Error(`Unsupported data type ${n}`);let s=new El(t,e,n,!1,o),a=Ce(r,n);for(let i=0;i<a.values.length;i++)a.values[i]=s.nextValue();return a.toTensor()}var Ll=A({randomNormal_:EJ});function LJ(r,t,e){if(t!=null&&t==="bool")throw new Error(`Unsupported data type ${t}`);return Ll(r,0,1,t,e)}var nP=A({randomStandardNormal_:LJ});function BJ(r,t=0,e=1,n="float32",o){Ht(r);let s=Ce(r,n),a=new xy(t,e,null,o);for(let i=0;i<s.values.length;i++)s.values[i]=a.nextValue();return s.toTensor()}var no=A({randomUniform_:BJ});function $J(r,t,e,n){return no(r,t,e,"int32",n)}var oP=A({randomUniformInt_:$J});function xu(r,t,e=1,n="float32"){if(e===0)throw new Error("Cannot have a step of zero");let o={start:r,stop:t,step:e,dtype:n};return N.runKernel(uu,{},o)}function OJ(r){let e={input:v(r,"input","real")};return N.runKernel(Np,e)}var ju=A({real_:OJ});function zJ(r){let e={x:v(r,"x","reciprocal")};return N.runKernel(xs,e)}var sP=A({reciprocal_:zJ});function GJ(r){let e={x:v(r,"x","relu")};return N.runKernel(Ts,e)}var ln=A({relu_:GJ});function WJ(r){let e={x:v(r,"x","relu6")};return N.runKernel(ks,e)}var Cy=A({relu6_:WJ});function UJ(r,t){let n={x:v(r,"x","reverse")},o={dims:t};return N.runKernel(vs,n,o)}var Pr=A({reverse_:UJ});function KJ(r){let t=v(r,"x","reverse");return D(t.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),Pr(t,0)}var aP=A({reverse1d_:KJ});function VJ(r,t){let e=v(r,"x","reverse");return D(e.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${e.rank}.`),Pr(e,t)}var iP=A({reverse2d_:VJ});function HJ(r,t){let e=v(r,"x","reverse");return D(e.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${e.rank}.`),Pr(e,t)}var uP=A({reverse3d_:HJ});function qJ(r,t){let e=v(r,"x","reverse");return D(e.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${e.rank}.`),Pr(e,t)}var pP=A({reverse4d_:qJ});function jJ(r){let e={x:v(r,"x","round")};return N.runKernel(Ss,e)}var Iy=A({round_:jJ});function XJ(r){let e={x:v(r,"x","rsqrt","float32")};return N.runKernel(ws,e)}var ky=A({rsqrt_:XJ});function YJ(r){let e={x:v(r,"x","selu")};return N.runKernel(As,e)}var vy=A({selu_:YJ});function ZJ(r,t,e,n,o,s=[1,1],a="NHWC"){let i=v(r,"x","separableConv2d"),p=v(t,"depthwiseFilter","separableConv2d"),u=v(e,"pointwiseFilter","separableConv2d"),l=i,m=!1;if(i.rank===3&&(m=!0,l=E(i,[1,i.shape[0],i.shape[1],i.shape[2]])),a==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");D(l.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${l.rank}.`),D(p.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${p.rank}.`),D(u.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${p.rank}.`),D(u.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),D(u.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);let c=p.shape[2],d=p.shape[3];D(u.shape[2]===c*d,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${c*d}, but got ${u.shape[2]}.`);let f=Wp(l,p,n,o,a,s),g=Ws(f,u,1,"valid",a);return m?E(g,[g.shape[1],g.shape[2],g.shape[3]]):g}var Sy=A({separableConv2d_:ZJ});async function QJ(r,t){let e=v(r,"x","setdiff1d"),n=v(t,"y","setdiff1d");D(e.dtype===n.dtype,()=>`x and y should have the same dtype, but got x (${e.dtype}) and y (${n.dtype}).`),D(e.rank===1,()=>`x should be 1D tensor, but got x (${e.shape}).`),D(n.rank===1,()=>`y should be 1D tensor, but got y (${n.shape}).`);let o=await e.data(),s=await n.data(),a=new Set(s),i=0;for(let l=0;l<o.length;l++)a.has(o[l])||i++;let p=new ft([i],e.dtype),u=new ft([i],"int32");for(let l=0,m=0;l<o.length;l++)a.has(o[l])||(p.values[m]=o[l],u.values[m]=l,m++);return[p.toTensor(),u.toTensor()]}var lP=QJ;function JJ(r){let e={x:v(r,"x","sign")};return N.runKernel(_s,e)}var mP=A({sign_:JJ});function e9(r){let e={x:v(r,"x","sin","float32")};return N.runKernel(Ns,e)}var wy=A({sin_:e9});function t9(r){let e={x:v(r,"x","sinh")};return N.runKernel(Ds,e)}var Ay=A({sinh_:t9});function r9(r,t,e){let n=v(r,"x","slice1d");return D(n.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${n.rank} tensor`),We(n,[t],[e])}var Ac=A({slice1d_:r9});function n9(r,t,e){let n=v(r,"x","slice2d");return D(n.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${n.rank} tensor`),We(n,t,e)}var Bh=A({slice2d_:n9});function o9(r,t,e){let n=v(r,"x","slice3d");return D(n.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${n.rank} tensor`),We(n,t,e)}var Nc=A({slice3d_:o9});function s9(r,t,e){let n=v(r,"x","slice4d");return D(n.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${n.rank} tensor`),We(n,t,e)}var Bl=A({slice4d_:s9});function a9(r,t=-1){let e=v(r,"logits","softmax","float32");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and dim was ${t}`);let n={logits:e},o={dim:t};return N.runKernel(Es,n,o)}var Dc=A({softmax_:a9});function i9(r){D(r.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${r.dtype}.`);let t={input:r};return N.runKernel(Sp,t)}var _c=A({fft_:i9});function u9(r){D(r.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${r.dtype}.`);let t={input:r};return N.runKernel(wp,t)}var $l=A({ifft_:u9});function p9(r){let t=r.shape[r.shape.length-1],e=r.size/t,n;if(t<=2){let o=E(r,[e,t]);n=$l(o)}else{let o=[e,2*(t-1)],s=E(ju(r),[e,t]),a=E(Hp(r),[e,t]),i=Pr(We(s,[0,1],[e,t-2]),1),p=F(Pr(We(a,[0,1],[e,t-2]),1),he(-1)),u=ht([s,i],1),l=ht([a,p],1),m=E(En(u,l),[o[0],o[1]]);n=$l(m)}if(n=ju(n),r.rank===3&&r.shape[0]!==0){let o=n,s=r.shape[0];n=E(n,[s,n.shape[0]/s,n.shape[1]]),o.dispose()}return n}var Ny=A({irfft_:p9});function l9(r,t,e=0){let o={x:v(r,"x","split")},s={numOrSizeSplits:t,axis:e};return N.runKernel(ma,o,s)}var Rr=A({split_:l9});function m9(r,t){D(r.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${r.dtype}`);let e=r.shape[r.shape.length-1],n=r.size/e,o;if(t!=null&&t<e){let f=r.shape.map(g=>0),h=r.shape.map(g=>g);h[r.shape.length-1]=t,o=We(r,f,h),e=t}else if(t!=null&&t>e){let f=r.shape.map(h=>h);f[r.shape.length-1]=t-e,o=ht([r,It(f)],r.shape.length-1),e=t}else o=r;let s=De(o),a=E(En(o,s),[n,e]),i=_c(a),p=Math.floor(e/2)+1,u=ju(i),l=Hp(i),m=Rr(u,[p,e-p],u.shape.length-1),c=Rr(l,[p,e-p],l.shape.length-1),d=o.shape.slice();return d[o.shape.length-1]=p,E(En(m[0],c[0]),d)}var Mc=A({rfft_:m9});function c9(r,t){let e=v(r,"a","squaredDifference"),n=v(t,"b","squaredDifference");[e,n]=Qe(e,n),ze(e.shape,n.shape);let o={a:e,b:n},s={};return N.runKernel(Ls,o,s)}var Dy=A({squaredDifference_:c9});function d9(r,t){let e=v(r,"x","squeeze","string_or_numeric");return E(e,nA(e.shape,t).newShape)}var va=A({squeeze_:d9});function f9(r,t=0){let e=Ku(r,"tensors","stack","string_or_numeric");D(e.length>=1,()=>"Pass at least one tensor to tf.stack"),e.length>0&&D(t<=e[0].rank,()=>"Axis must be <= rank of the tensor");let n=e,o={axis:t};return N.runKernel(aa,n,o)}var hr=A({stack_:f9});function h9(r,t=0){let n={x:v(r,"x","step")},o={alpha:t};return N.runKernel(Zn,n,o)}var Tu=A({step_:h9});function g9(r,t,e,n,o=0,s=0,a=0,i=0,p=0){let l={x:v(r,"x","stridedSlice","string_or_numeric")},m={begin:t,end:e,strides:n,beginMask:o,endMask:s,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:p};return N.runKernel(Ti,l,m)}var cP=A({stridedSlice_:g9});function b9(r){let e={x:v(r,"x","tan","float32")};return N.runKernel($s,e)}var dP=A({tan_:b9});function rr(r,t){ko(r);let e=jr(r,t);if(e.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return xn(r,null,e,t)}function Ni(r,t,e){if(ko(r),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let n=jr(r,e);if(n.length!==2&&n.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(n.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return xn(r,t,n,e)}function _y(r,t,e){if(ko(r),t!=null&&t.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let n=jr(r,e);if(n.length!==3&&n.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(n.length===1&&t==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return xn(r,t,n,e)}function fP(r,t,e){if(ko(r),t!=null&&t.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let n=jr(r,e);if(n.length!==4&&n.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(n.length===1&&t==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return xn(r,t,n,e)}function hP(r,t,e){if(ko(r),t!=null&&t.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let n=jr(r,e);if(n.length!==5&&n.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(n.length===1&&t==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return xn(r,t,n,e)}function gP(r,t,e){if(ko(r),t!=null&&t.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let n=jr(r,e);if(n.length!==6&&n.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(n.length===1&&t==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||n,xn(r,t,n,e)}var jp={};Xe(jp,{calculateShapes:()=>bP,validateInput:()=>Pc,validateUpdateShape:()=>YA});function YA(r,t,e){let n=t.rank>1?t.shape[t.rank-1]:1,o=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${e.shape}, indices.shape: ${t.shape}, shape: ${r}, sliceDim: ${n}, and batchDim: ${o}.`;if(e.rank<o)throw new Error(s+` update.rank < ${o}. `);if(r.length<n+(e.rank-o))throw new Error(s+` Output shape length < ${n+(e.rank-o)}`);if(e.rank!==o+r.length-n)throw new Error(s+` update.rank != ${o+r.length-n}`);for(let a=0;a<o;++a)if(e.shape[a]!==t.shape[a])throw new Error(s+` updates.shape[${a}] (${e.shape[a]}) != indices.shape[${a}] (${t.shape[a]}).`);for(let a=0;a<e.rank-o;++a)if(e.shape[a+o]!==r[a+n])throw new Error(s+` updates.shape[${a+o}] (${e.shape[a+o]}) != shape[${a+o}] (${r[a+o]})`)}function Pc(r,t,e){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(r.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${r.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(e.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${e}`);if(e.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(r.size===0)throw new Error(`Updates specified for empty output. updates shape: ${r.shape}`)}YA(e,t,r)}function bP(r,t,e){let n=t.shape.length,o=n>1?t.shape[n-1]:1,s=e.length,a=1;for(let m=o;m<s;++m)a*=e[m];let i=o<1?1:o,p=st(t.shape)/i,u=[...Xi(e.slice(0,o)),1],l=st(e);return{sliceRank:o,numUpdates:p,sliceSize:a,strides:u,outputSize:l}}function y9(r,t,e){let n=v(r,"tensor","tensorScatterupdate"),o=v(t,"indices","tensorScatterupdate","int32"),s=v(e,"updates","tensorScatterupdate");if(Pc(s,o,n.shape),n.dtype!==s.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${n.dtype} and ${s.dtype}.`);let a={tensor:n,indices:o,updates:s},i={};return N.runKernel(bi,a,i)}var yP=A({tensorScatterUpdate_:y9});function x9(r,t=1,e=!0){let n=v(r,"x","topk");if(n.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let o=n.shape[n.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>o)throw new Error(`'k' passed to topk() must be <= the last dimension (${o}) but got ${t}`);let s={x:n},a={k:t,sorted:e},[i,p]=N.runKernel(Ci,s,a);return{values:i,indices:p}}var xP=A({topk_:x9});function T9(r,t=0,e=1,n,o){if(Ht(r),n!=null&&n==="bool")throw new Error("Unsupported data type $ { dtype }");let s=new El(t,e,n,!0,o),a=Ce(r,n);for(let i=0;i<a.values.length;i++)a.values[i]=s.nextValue();return a.toTensor()}var Rc=A({truncatedNormal_:T9});function C9(r,t=0){let e=v(r,"x","unique","string_or_numeric");D(e.rank>0,()=>"The input tensor must be at least 1D");let n={x:e},o={axis:t},[s,a]=N.runKernel(Pp,n,o);return{values:s,indices:a}}var TP=A({unique_:C9});function I9(r,t,e){let n=v(r,"x","unsortedSegmentSum"),o=v(t,"segmentIds","unsortedSegmentSum","int32");D(Bu(e),()=>"numSegments must be of dtype int");let s={x:n,segmentIds:o},a={numSegments:e};return N.runKernel(du,s,a)}var My=A({unsortedSegmentSum_:I9});function k9(r,t=0){let e=v(r,"x","unstack","string_or_numeric");D(t>=-e.shape.length&&t<e.shape.length,()=>`Axis = ${t} is not in [-${e.shape.length}, ${e.shape.length})`);let n={value:e},o={axis:t};return N.runKernel(ca,n,o)}var Fr=A({unstack_:k9});function CP(r,t){return Eh(r,t,"right")}function Py(r,t=!0,e,n){return N.makeVariable(r,t,e,n)}function Ry(r,t){let e=[];for(let s=0;s<t.length;s++)t[s]&&e.push(s);let n=Ce(r,"int32"),o=Ce([e.length,r.length],"int32");for(let s=0;s<e.length;s++){let a=n.indexToLoc(e[s]),i=s*r.length;o.values.set(a,i)}return o.toTensor()}async function v9(r){let t=v(r,"condition","whereAsync","bool"),e=await t.data(),n=Ry(t.shape,e);return r!==t&&t.dispose(),n}var Fy=v9;async function S9(r,t,e){let n=v(r,"tensor","boolMask"),o=v(t,"mask","boolMask","bool"),s=e??0,a=o.rank,i=n.shape;D(a>0,()=>"mask cannot be scalar"),Wt(i.slice(s,s+a),o.shape,"mask's shape must match the first K dimensions of tensor's shape,");let p=1;for(let h=s;h<s+a;h++)p*=i[h];let u=i.slice(0,s).concat([p],i.slice(s+a)),l=E(n,u),m=E(o,[-1]),c=await Fy(m),d=va(c,[1]),f=Vp(l,d,s);return r!==n&&n.dispose(),t!==o&&o.dispose(),d.dispose(),l.dispose(),m.dispose(),c.dispose(),f}var w9=S9;function A9(r,t,e){let n=v(r,"x","transpose");if(t==null&&(t=n.shape.map((a,i)=>i).reverse()),D(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`),t.forEach(a=>{D(a>=0&&a<n.rank,()=>`All entries in 'perm' must be between 0 and ${n.rank-1} but got ${t}`)}),n.rank<=1)return n.clone();let o={x:n},s={perm:t};return n.dtype==="complex64"?z(()=>{let a=ju(n),i=Hp(n);return a=N.runKernel(Rn,{x:a},s),i=N.runKernel(Rn,{x:i},s),e&&(i=Je(i)),En(a,i)}):N.runKernel(Rn,o,s)}var qe=A({transpose_:A9});function N9(r,t,e,n,o=!0){let s=v(r,"v","movingAverage"),a=v(t,"x","movingAverage"),i=v(e,"decay","movingAverage");xA(s,a),D(bn(s.shape,a.shape),()=>"Shape mismatch in v and x");let p=he(1),u=me(p,i),l=F(me(a,s),u);if(o){D(n!=null,()=>"When using zeroDebias: true, step is required.");let m=v(n,"step","movingAverage");l=de(l,me(p,eo(i,m)))}return Q(s,l)}var D9=A({movingAverage_:N9});function _9(r,t,e){Ht(e);let n=v(r,"indices","scatterND","int32"),o=v(t,"updates","scatterND");Pc(o,n,e);let s={indices:n,updates:o},a={shape:e};return N.runKernel(gi,s,a)}var M9=A({scatterND_:_9});function IP(r,t,e,n){if(r.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${r.dtype}.`);if(r.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${r.shape}.`);let o=r.rank>0?r.shape[0]:1,s=r.rank>1?r.shape[1]:1;if(e.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${e.length}, should be: ${s}.`);let a=t.size;if(!(t.rank===0||t.rank===1&&a===o))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${o}]`);if(t.dtype!==n.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function R9(r,t,e,n=0){Ht(e);let o=v(r,"sparseIndices","sparseToDense","int32"),s=v(t,"sparseValues","sparseToDense","string_or_numeric"),a=v(n,"defaultValue","sparseToDense",s.dtype);IP(o,s,e,a);let i={sparseIndices:o,sparseValues:s,defaultValue:a},p={outputShape:e};return N.runKernel(xi,i,p)}var F9=A({sparseToDense_:R9});function E9(r,t){let e=v(t,"indices","gatherND","int32"),o={params:v(r,"x","gatherND","string_or_numeric"),indices:e};return N.runKernel(ti,o)}var L9=A({gatherND_:E9});function kP(r,t){if(t==null)return r.shape.slice();if(bn(r.shape,t))return t;if(r.shape.length===t.length){let e=[];for(let n=0;n<r.shape.length;n++)t[n]==null&&r.shape[n]!=null?e.push(r.shape[n]):e.push(t[n]);return e}return t}function B9(r,t,e,n){let o=v(r,"x","dropout");if(D(o.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${o.dtype} tensor instead.`),D(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return r instanceof Ve?o.clone():o;let s=kP(o,e),a=1-t,i=de(Kp(Q(no(s,0,1,"float32",n),a)),a);return F(o,i)}var ZA=A({dropout_:B9});function QA(r){return Math.floor(Math.pow(2,Math.ceil(Math.log(r)/Math.log(2))))}function $h(r,t,e){let n=1-r%2,o=new Float32Array(r);for(let s=0;s<r;++s){let a=2*Math.PI*s/(r+n-1);o[s]=t-e*Math.cos(a)}return rr(o,"float32")}async function $9(r,t,e=1){let n=v(r,"predictions","inTopK"),o=v(t,"targets","inTopK");D(n.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${n.rank}`),D(n.rank-1===o.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${n.rank} and targets rank ${o.rank}`),Wt(n.shape.slice(0,n.shape.length-1),o.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let s=n.shape[n.shape.length-1];D(e>0&&e<=s,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${e}`);let a=await n.data(),i=await o.data(),[p,u]=[a.length/s,s],l=oA("bool",p);for(let m=0;m<p;m++){let c=m*u,d=a.subarray(c,c+u),f=[];for(let h=0;h<d.length;h++)f.push({value:d[h],index:h});f.sort((h,g)=>g.value-h.value),l[m]=0;for(let h=0;h<e;h++)if(f[h].index===i[m]){l[m]=1;break}}return r!==n&&n.dispose(),t!==o&&o.dispose(),fr(l,o.shape,"bool")}var O9=$9;var Xp={};Xe(Xp,{conv2d:()=>vP,depthwiseConv2d:()=>SP,matMul:()=>wP});function z9(r,t,e,n,o,s="NHWC",a){let i=r;r.rank===3&&(i=E(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let p=t;p.rank===3&&(p=E(t,[1,t.shape[0],t.shape[1],t.shape[2]])),D(i.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`),D(p.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${p.shape}.`),D(e.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${e}.`);let u=s==="NHWC"?i.shape[3]:i.shape[1],l=s==="NHWC"?p.shape[3]:p.shape[1];D(u===e[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${e[2]}.`),D(l===e[3],()=>`Error in conv2dDerFilter: depth of dy (${l}) must match output depth for filter (${e[3]}).`),Rt("conv2dDerFilter",o,a);let m={x:i,dy:p},c={strides:n,pad:o,dataFormat:s,dimRoundingMode:a,filterShape:e};return N.runKernel(Cp,m,c)}var Fc=A({conv2DBackpropFilter_:z9});function Ol(r,t,e){if(e==null||e==="linear")return r;if(e==="relu")return F(r,Tu(t));throw new Error(`Cannot compute gradient for fused activation ${e}.`)}function zl(r,t){let e=t,n=Nt(r.shape,t.shape);return n.length>0&&(e=ge(e,n)),E(e,r.shape)}function Gl(r,t,e,n){if(t==="linear")return r;if(t==="relu")return ln(r);if(t==="elu")return Up(r);if(t==="relu6")return Cy(r);if(t==="prelu")return wc(r,e);if(t==="leakyrelu")return Cc(r,n);if(t==="sigmoid")return Ln(r);throw new Error(`Unknown fused activation ${t}.`)}var Wl=(r,t)=>!(r>0)||t==="linear";function G9({x:r,filter:t,strides:e,pad:n,dataFormat:o="NHWC",dilations:s=[1,1],dimRoundingMode:a,bias:i,activation:p="linear",preluActivationWeights:u,leakyreluAlpha:l}){if(p=p||"linear",Wl(N.state.gradientDepth,p)===!1){D(o==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${o} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let w=Ws(r,t,e,n,o,s,a);return i!=null&&(w=Q(w,i)),Gl(w,p,u,l)}let m=v(r,"x","conv2d","float32"),c=v(t,"filter","conv2d","float32"),d=m,f=!1;m.rank===3&&(f=!0,d=E(m,[1,m.shape[0],m.shape[1],m.shape[2]])),D(d.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${d.rank}.`),D(c.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${c.rank}.`),Rt("fused conv2d",n,a);let h=o==="NHWC"?d.shape[3]:d.shape[1];D(c.shape[2]===h,()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${c.shape[2]}.`),D(Gr(e,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${s}'`);let g=Nl(d.shape,c.shape,e,s,n,a),b;i!=null&&(b=v(i,"bias","fused conv2d"),[b]=Qe(b,m),o==="NHWC"?ze(g.outShape,b.shape):(D(b.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${b.shape.length}.`),D(b.shape.length===0||b.shape[0]===g.outChannels||b.shape[0]===1,()=>`Error in fused conv2d: bias shape (${b.shape}) is not compatible with the number of output channels (${g.outChannels})`)));let x;if(u!=null){let w=u.shape;if(D(w.length<=1||w.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${w.length}.`),w.length===1)D(w[0]===1||w[0]===g.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${w}) is not compatible with the number of output channels (${g.outChannels}).`);else if(w.length===3)try{ze(w,g.outShape)}catch{let P=`Error in fused conv2d: PReLU activation weights (${w}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(P)}x=v(u,"prelu weights","fused conv2d")}let T=(w,_)=>{D(o==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${o} but only NHWC is currently supported.`);let[P,M,R,$]=_,G=Ol(w,R,p);D(zs(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let W=xc(M.shape,G,P,e,n),U=Fc(M,G,P.shape,e,n),V=[W,U];if($!=null){let K=zl($,G);V.push(K)}return V},C={x:d,filter:c,bias:b,preluActivationWeights:x},k={strides:e,pad:n,dataFormat:o,dilations:s,dimRoundingMode:a,activation:p,leakyreluAlpha:l};return i==null?Cn((_,P,M)=>{let R=N.runKernel(ha,C,k);return M([P,_,R]),f&&(R=E(R,[R.shape[1],R.shape[2],R.shape[3]])),{value:R,gradFunc:T}})(d,c):Cn((_,P,M,R)=>{let $=N.runKernel(ha,C,k);return R([P,_,$,M]),f&&($=E($,[$.shape[1],$.shape[2],$.shape[3]])),{value:$,gradFunc:T}})(d,c,b)}var vP=A({fusedConv2d_:G9});function W9(r,t,e,n,o,s=[1,1],a){let i=r;r.rank===3&&(i=E(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let p=t;p.rank===3&&(p=E(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={x:i,dy:p},l={strides:n,pad:o,dimRoundingMode:a,dilations:s,filterShape:e};return N.runKernel(Ip,u,l)}var Ey=A({depthwiseConv2dNativeBackpropFilter_:W9});function U9(r,t,e,n,o,s=[1,1],a){let i=t,p=!1;t.rank===3&&(p=!0,i=E(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={dy:i,filter:e},l={strides:n,pad:o,dimRoundingMode:a,dilations:s,inputShape:r},m=N.runKernel(kp,u,l);return p?E(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var Ly=A({depthwiseConv2dNativeBackpropInput_:U9});function K9({x:r,filter:t,strides:e,pad:n,dataFormat:o="NHWC",dilations:s=[1,1],dimRoundingMode:a,bias:i,activation:p="linear",preluActivationWeights:u,leakyreluAlpha:l}){if(Wl(N.state.gradientDepth,p)===!1){let k=Wp(r,t,e,n,o,s,a);return i!=null&&(k=Q(k,i)),Gl(k,p,u,l)}let m=v(r,"x","depthwiseConv2d","float32"),c=v(t,"filter","depthwiseConv2d","float32"),d=m,f=!1;m.rank===3&&(f=!0,d=E(m,[1,m.shape[0],m.shape[1],m.shape[2]])),D(d.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${d.rank}.`),D(c.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${c.rank}.`),D(d.shape[3]===c.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${d.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),s==null&&(s=[1,1]),D(Gr(e,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${e} and dilations '${s}'`),Rt("fused depthwiseConv2d",n,a);let h=Nl(d.shape,c.shape,e,s,n,a,!0),g;i!=null&&(g=v(i,"bias","fused conv2d"),[g]=Qe(g,m),ze(h.outShape,g.shape));let b;u!=null&&(b=v(u,"prelu weights","fused depthwiseConv2d"));let x=(k,w)=>{D(zs(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);let[_,P,M,R]=w,$=Ol(k,M,p),G=Ly(P.shape,$,_,e,n,s,a),W=Ey(P,$,_.shape,e,n,s,a);if(R!=null){let U=zl(g,$);return[G,W,U]}return[G,W]},T={x:d,filter:c,bias:g,preluActivationWeights:b},C={strides:e,pad:n,dataFormat:o,dilations:s,dimRoundingMode:a,activation:p,leakyreluAlpha:l};return i==null?Cn((w,_,P)=>{let M=N.runKernel(ga,T,C);return P([_,w,M]),f&&(M=E(M,[M.shape[1],M.shape[2],M.shape[3]])),{value:M,gradFunc:x}})(d,c):Cn((w,_,P,M)=>{let R=N.runKernel(ga,T,C);return M([_,w,R,P]),f&&(R=E(R,[R.shape[1],R.shape[2],R.shape[3]])),{value:R,gradFunc:x}})(d,c,g)}var SP=A({fusedDepthwiseConv2d_:K9});function V9({a:r,b:t,transposeA:e=!1,transposeB:n=!1,bias:o,activation:s="linear",preluActivationWeights:a,leakyreluAlpha:i=.2}){if(Wl(N.state.gradientDepth,s)===!1){let $=He(r,t,e,n);return o!=null&&($=Q($,o)),Gl($,s,a,i)}let p=v(r,"a","fused matMul"),u=v(t,"b","fused matMul");[p,u]=Qe(p,u);let l=e?p.shape[p.rank-2]:p.shape[p.rank-1],m=n?u.shape[u.rank-1]:u.shape[u.rank-2],c=e?p.shape[p.rank-1]:p.shape[p.rank-2],d=n?u.shape[u.rank-2]:u.shape[u.rank-1],f=p.shape.slice(0,-2),h=u.shape.slice(0,-2),g=st(f),b=st(h);D(l===m,()=>`Error in fused matMul: inner shapes (${l}) and (${m}) of Tensors with shapes ${p.shape} and ${u.shape} and transposeA=${e} and transposeB=${n} must match.`);let T=ze(p.shape.slice(0,-2),u.shape.slice(0,-2)).concat([c,d]),C=e?E(p,[g,l,c]):E(p,[g,c,l]),k=n?E(u,[b,d,m]):E(u,[b,m,d]),w;o!=null&&(w=v(o,"bias","fused matMul"),[w]=Qe(w,p),ze(T,w.shape));let _;a!=null&&(_=v(a,"prelu weights","fused matMul"));let P=($,G)=>{let[W,U,V,K]=G,q=Ol(E($,V.shape),V,s),j,te;if(!e&&!n?(j=He(q,U,!1,!0),te=He(W,q,!0,!1)):!e&&n?(j=He(q,U,!1,!1),te=He(q,W,!0,!1)):e&&!n?(j=He(U,q,!1,!0),te=He(W,q,!1,!1)):(j=He(U,q,!0,!0),te=He(q,W,!0,!0)),o!=null){let se=zl(K,q);return[j,te,se]}else return[j,te]},M={a:C,b:k,bias:w,preluActivationWeights:_},R={transposeA:e,transposeB:n,activation:s,leakyreluAlpha:i};return o==null?Cn((G,W,U)=>{let V=N.runKernel(fa,M,R);return U([G,W,V]),{value:E(V,T),gradFunc:P}})(C,k):Cn((G,W,U,V)=>{let K=N.runKernel(fa,M,R);return V([G,W,K,U]),{value:E(K,T),gradFunc:P}})(C,k,w)}var wP=A({fusedMatMul_:V9});function H9(r){return $h(r,.54,.46)}var AP=A({hammingWindow_:H9});function q9(r){return $h(r,.5,.5)}var By=A({hannWindow_:q9});function j9(r,t,e,n=!1,o=0){let s=0,a=[];for(;s+t<=r.size;)a.push(We(r,s,t)),s+=e;if(n)for(;s<r.size;){let i=s+t-r.size,p=ht([We(r,s,t-i),Ca([i],o)]);a.push(p),s+=e}return a.length===0?Ni([],[0,t]):E(ht(a),[a.length,t])}var $y=A({frame_:j9});function X9(r,t,e,n,o=By){n==null&&(n=QA(t));let s=$y(r,t,e),a=F(s,o(t));return Mc(a,n)}var NP=A({stft_:X9});function Y9(r,t,e,n,o="bilinear",s=0){let a=v(r,"image","cropAndResize"),i=v(t,"boxes","cropAndResize","float32"),p=v(e,"boxInd","cropAndResize","int32"),u=i.shape[0];D(a.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`),D(i.rank===2&&i.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${i.shape}.`),D(p.rank===1&&p.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${i.shape}.`),D(n.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${n.length}.`),D(n[0]>=1&&n[1]>=1,()=>`cropSize must be atleast [1,1], but was ${n}`),D(o==="bilinear"||o==="nearest",()=>`method must be bilinear or nearest, but was ${o}`);let l={image:a,boxes:i,boxInd:p},m={method:o,extrapolationValue:s,cropSize:n};return N.runKernel(Ya,l,m)}var DP=A({cropAndResize_:Y9});function Z9(r){let t=v(r,"image","flipLeftRight","float32");D(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);let e={image:t};return N.runKernel(ei,e,{})}var _P=A({flipLeftRight_:Z9});function Q9(r){let t=v(r,"image","grayscaleToRGB"),e=t.rank-1,n=t.shape[e];D(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),D(n===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${n}.`);let o=new Array(t.rank);return o.fill(1,0,e),o[e]=3,un(t,o)}var MP=A({grayscaleToRGB_:Q9});function J9(r,t,e=0,n=.5){let o=v(r,"image","rotateWithOffset","float32");D(o.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${o.rank}.`);let s={image:o},a={radians:t,fillValue:e,center:n};return N.runKernel(ki,s,a)}var PP=A({rotateWithOffset_:J9});function Sa(r,t,e,n,o,s){n==null&&(n=.5),o==null&&(o=Number.NEGATIVE_INFINITY),s==null&&(s=0);let a=r.shape[0];return e=Math.min(e,a),D(0<=n&&n<=1,()=>`iouThreshold must be in [0, 1], but was '${n}'`),D(r.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${r.rank}'`),D(r.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${r.shape[1]}`),D(t.rank===1,()=>"scores must be a 1D tensor"),D(t.shape[0]===a,()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${t.shape[0]}`),D(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:e,iouThreshold:n,scoreThreshold:o,softNmsSigma:s}}function eee(r,t,e,n=.5,o=Number.NEGATIVE_INFINITY){let s=v(r,"boxes","nonMaxSuppression","float32"),a=v(t,"scores","nonMaxSuppression","float32"),i=Sa(s,a,e,n,o);e=i.maxOutputSize,n=i.iouThreshold,o=i.scoreThreshold;let p={maxOutputSize:e,iouThreshold:n,scoreThreshold:o};return N.runKernel(ci,{boxes:s,scores:a},p)}var RP=A({nonMaxSuppression_:eee});function FP(r,t,e){let n=tee(r,t,e),o=n<0?-(n+1):n;r.splice(o,0,t)}function tee(r,t,e){return nee(r,t,e||ree)}function ree(r,t){return r>t?1:r<t?-1:0}function nee(r,t,e){let n=0,o=r.length,s=0,a=!1;for(;n<o;){s=n+(o-n>>>1);let i=e(t,r[s]);i>0?n=s+1:(o=s,a=!i)}return a?n:-n-1}function Oy(r,t,e,n,o){return JA(r,t,e,n,o,0)}function zy(r,t,e,n,o,s){return JA(r,t,e,n,o,0,!1,s,!0)}function Gy(r,t,e,n,o,s){return JA(r,t,e,n,o,s,!0)}function JA(r,t,e,n,o,s,a=!1,i=!1,p=!1){let u=[];for(let g=0;g<t.length;g++)t[g]>o&&u.push({score:t[g],boxIndex:g,suppressBeginIndex:0});u.sort(EP);let l=s>0?-.5/s:0,m=[],c=[];for(;m.length<e&&u.length>0;){let g=u.pop(),{score:b,boxIndex:x,suppressBeginIndex:T}=g;if(b<o)break;let C=!1;for(let k=m.length-1;k>=T;--k){let w=oee(r,x,m[k]);if(w>=n){C=!0;break}if(g.score=g.score*see(n,l,w),g.score<=o)break}g.suppressBeginIndex=m.length,C||(g.score===b?(m.push(x),c.push(g.score)):g.score>o&&FP(u,g,EP))}let d=m.length,f=e-d;i&&f>0&&(m.push(...new Array(f).fill(0)),c.push(...new Array(f).fill(0)));let h={selectedIndices:m};return a&&(h.selectedScores=c),p&&(h.validOutputs=d),h}function oee(r,t,e){let n=r.subarray(t*4,t*4+4),o=r.subarray(e*4,e*4+4),s=Math.min(n[0],n[2]),a=Math.min(n[1],n[3]),i=Math.max(n[0],n[2]),p=Math.max(n[1],n[3]),u=Math.min(o[0],o[2]),l=Math.min(o[1],o[3]),m=Math.max(o[0],o[2]),c=Math.max(o[1],o[3]),d=(i-s)*(p-a),f=(m-u)*(c-l);if(d<=0||f<=0)return 0;let h=Math.max(s,u),g=Math.max(a,l),b=Math.min(i,m),x=Math.min(p,c),T=Math.max(b-h,0)*Math.max(x-g,0);return T/(d+f-T)}function see(r,t,e){let n=Math.exp(t*e*e);return e<=r?n:0}function EP(r,t){return r.score-t.score||r.score===t.score&&t.boxIndex-r.boxIndex}async function aee(r,t,e,n=.5,o=Number.NEGATIVE_INFINITY){let s=v(r,"boxes","nonMaxSuppressionAsync"),a=v(t,"scores","nonMaxSuppressionAsync"),i=Sa(s,a,e,n,o);e=i.maxOutputSize,n=i.iouThreshold,o=i.scoreThreshold;let p=await Promise.all([s.data(),a.data()]),u=p[0],l=p[1],{selectedIndices:m}=Oy(u,l,e,n,o);return s!==r&&s.dispose(),a!==t&&a.dispose(),rr(m,"int32")}var LP=aee;function iee(r,t,e,n=.5,o=Number.NEGATIVE_INFINITY,s=0){let a=v(r,"boxes","nonMaxSuppression"),i=v(t,"scores","nonMaxSuppression"),p=Sa(a,i,e,n,o,s);e=p.maxOutputSize,n=p.iouThreshold,o=p.scoreThreshold,s=p.softNmsSigma;let u={boxes:a,scores:i},l={maxOutputSize:e,iouThreshold:n,scoreThreshold:o,softNmsSigma:s},m=N.runKernel(di,u,l);return{selectedIndices:m[0],selectedScores:m[1]}}var BP=A({nonMaxSuppressionWithScore_:iee});async function uee(r,t,e,n=.5,o=Number.NEGATIVE_INFINITY,s=0){let a=v(r,"boxes","nonMaxSuppressionAsync"),i=v(t,"scores","nonMaxSuppressionAsync"),p=Sa(a,i,e,n,o,s);e=p.maxOutputSize,n=p.iouThreshold,o=p.scoreThreshold,s=p.softNmsSigma;let u=await Promise.all([a.data(),i.data()]),l=u[0],m=u[1],{selectedIndices:c,selectedScores:d}=Gy(l,m,e,n,o,s);return a!==r&&a.dispose(),i!==t&&i.dispose(),{selectedIndices:rr(c,"int32"),selectedScores:rr(d)}}var $P=uee;function pee(r,t,e,n=.5,o=Number.NEGATIVE_INFINITY,s=!1){let a=v(r,"boxes","nonMaxSuppression"),i=v(t,"scores","nonMaxSuppression"),p=Sa(a,i,e,n,o,null),u=p.maxOutputSize,l=p.iouThreshold,m=p.scoreThreshold,c={boxes:a,scores:i},d={maxOutputSize:u,iouThreshold:l,scoreThreshold:m,padToMaxOutputSize:s},f=N.runKernel(Ou,c,d);return{selectedIndices:f[0],validOutputs:f[1]}}var OP=A({nonMaxSuppressionPadded_:pee});async function lee(r,t,e,n=.5,o=Number.NEGATIVE_INFINITY,s=!1){let a=v(r,"boxes","nonMaxSuppressionAsync"),i=v(t,"scores","nonMaxSuppressionAsync"),p=Sa(a,i,e,n,o,null),u=p.maxOutputSize,l=p.iouThreshold,m=p.scoreThreshold,[c,d]=await Promise.all([a.data(),i.data()]),{selectedIndices:f,validOutputs:h}=zy(c,d,u,l,m,s);return a!==r&&a.dispose(),i!==t&&i.dispose(),{selectedIndices:rr(f,"int32"),validOutputs:he(h,"int32")}}var zP=lee;function mee(r,t,e=!1,n=!1){let o=v(r,"images","resizeBilinear");D(o.rank===3||o.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${o.rank}.`),D(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),D(n===!1||e===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let s=o,a=!1;o.rank===3&&(a=!0,s=E(o,[1,o.shape[0],o.shape[1],o.shape[2]]));let[]=t,i={images:s},p={alignCorners:e,halfPixelCenters:n,size:t},u=N.runKernel(Is,i,p);return a?E(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var GP=A({resizeBilinear_:mee});function cee(r,t,e=!1,n=!1){let o=v(r,"images","resizeNearestNeighbor");D(o.rank===3||o.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${o.rank}.`),D(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),D(o.dtype==="float32"||o.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),D(n===!1||e===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let s=o,a=!1;o.rank===3&&(a=!0,s=E(o,[1,o.shape[0],o.shape[1],o.shape[2]]));let[]=t,i={images:s},p={alignCorners:e,halfPixelCenters:n,size:t},u=N.runKernel(Cs,i,p);return a?E(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var WP=A({resizeNearestNeighbor_:cee});function dee(r,t="binary",e=!1,n=.5){let o=v(r,"image","threshold"),s=.2989,a=.587,i=.114,p=o.shape[0]*o.shape[1],u=F(rr([n]),255),l,m,c,d;if(D(o.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${o.rank}.`),D(o.shape[2]===3||o.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${o.shape[2]}.`),D(o.dtype==="int32"||o.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${o.dtype}.`),D(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),o.shape[2]===3){[l,m,c]=Rr(o,[1,1,1],-1);let g=F(l,s),b=F(m,a),x=F(c,i);d=Q(Q(g,b),x)}else d=r;if(t==="otsu"){let g=Zb(ne(Iy(d),"int32"),fr([]),256);u=fee(g,p)}let f=e?ka(d,u):tr(d,u);return ne(F(f,255),"int32")}function fee(r,t){let e=rr([-1]),n=rr([0]),o=rr([0]),s,a,i,p,u,l;for(let m=0;m<r.size-1;m++){s=We(r,0,m+1),a=We(r,m+1),u=de(ge(s),t),l=de(ge(a),t);let c=ge(F(s,xu(0,s.size)));i=de(c,ge(s));let d=Ca(a.shape,s.size),f=Q(xu(0,a.size),d),h=F(a,f);p=de(ge(h),ge(a));let g=me(i,p),b=me(i,p),x=F(u,l);o=F(F(x,g),b);let T=tr(o,n);n=Et(T,o,n),e=Et(T,rr([m]),e)}return e}var UP=A({threshold_:dee});function hee(r,t,e="nearest",n="constant",o=0,s){let a=v(r,"image","transform","float32"),i=v(t,"transforms","transform","float32");D(a.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${a.rank}.`),D(i.rank===2&&(i.shape[0]===a.shape[0]||i.shape[0]===1)&&i.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),D(s==null||s.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`);let p={image:a,transforms:i},u={interpolation:e,fillMode:n,fillValue:o,outputShape:s};return N.runKernel(Ii,p,u)}var KP=A({transform_:hee});function gee(r,t,e){let n=v(r,"a","bandPart");D(n.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${n.rank}.`);let o=n.shape,[s,a]=n.shape.slice(-2),i,p;typeof t=="number"?(D(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),D(t<=s,()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`),i=v(t<0?s:t,"numLower","bandPart")):(D(t.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),i=Et(Pl(t,0),s,Ai(t,s))),typeof e=="number"?(D(e%1===0,()=>`bandPart(): numUpper must be an integer, got ${e}.`),D(e<=a,()=>`bandPart(): numUpper (${e}) must not be greater than the number of columns (${a}).`),p=v(e<0?a:e,"numUpper","bandPart")):(D(e.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),p=Et(Pl(e,0),a,Ai(e,a)));let u=E(xu(0,s,1,"int32"),[-1,1]),l=xu(0,a,1,"int32"),m=me(u,l),c=pn(ka(m,i),to(m,Je(p))),d=It([s,a],n.dtype);return E(hr(Fr(E(n,[-1,s,a])).map(f=>Et(c,f,d))),o)}var VP=A({bandPart_:gee});function bee(r){let t;if(Array.isArray(r)){t=!1,D(r!=null&&r.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let o=r[0].shape[0];for(let s=1;s<r.length;++s)D(r[s].shape[0]===o,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${r[s].shape[0]} vs. ${o})`)}else t=!0,r=Rr(r,r.shape[0],0).map(o=>va(o,[0]));D(r.length<=r[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${r.length}) exceeds number of dimensions (${r[0].shape[0]}).`);let e=[],n=r;for(let o=0;o<r.length;++o)e.push(N.tidy(()=>{let s=n[o];if(o>0)for(let a=0;a<o;++a){let i=F(ge(F(e[a],s)),e[a]);s=me(s,i)}return de(s,_l(s,"euclidean"))}));return t?hr(e,0):e}var HP=A({gramSchmidt_:bee});function yee(r,t=!1){if(D(r.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${r.rank}`),r.rank===2)return qP(r,t);{let e=r.shape.slice(0,r.shape.length-2).reduce((p,u)=>p*u),n=Fr(E(r,[e,r.shape[r.shape.length-2],r.shape[r.shape.length-1]]),0),o=[],s=[];n.forEach(p=>{let[u,l]=qP(p,t);o.push(u),s.push(l)});let a=E(hr(o,0),r.shape),i=E(hr(s,0),r.shape);return[a,i]}}function qP(r,t=!1){return N.tidy(()=>{D(r.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${r.shape.length}D Tensor.`);let e=r.shape[0],n=r.shape[1],o=Ml(e),s=Tn(r),a=Ni([[1]],[1,1]),i=Tn(a),p=e>=n?n:e;for(let u=0;u<p;++u){let l=s,m=i,c=o;[i,s,o]=N.tidy(()=>{let d=We(s,[u,u],[e-u,1]),f=_l(d),h=We(s,[u,u],[1,1]),g=Et(tr(h,0),Ni([[-1]]),Ni([[1]])),b=me(h,F(g,f)),x=de(d,b);x.shape[0]===1?i=Tn(a):i=ht([a,We(x,[1,0],[x.shape[0]-1,x.shape[1]])],0);let T=Je(de(He(g,b),f)),C=We(s,[u,0],[e-u,n]),k=F(T,i),w=qe(i);if(u===0)s=me(C,He(k,He(w,C)));else{let M=me(C,He(k,He(w,C)));s=ht([We(s,[0,0],[u,n]),M],0)}let _=qe(k),P=We(o,[0,u],[e,o.shape[1]-u]);if(u===0)o=me(P,He(He(P,i),_));else{let M=me(P,He(He(P,i),_));o=ht([We(o,[0,0],[e,u]),M],1)}return[i,s,o]}),Pe([l,m,c])}return!t&&e>n&&(o=We(o,[0,0],[e,n]),s=We(s,[0,0],[n,n])),[o,s]})}var jP=A({qr_:yee});var Di=(o=>(o[o.NONE=0]="NONE",o[o.MEAN=1]="MEAN",o[o.SUM=2]="SUM",o[o.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS",o))(Di||{});function xee(r,t,e=3){let n=v(r,"losses","computeWeightedLoss"),o=null;t!=null&&(o=v(t,"weights","computeWeightedLoss"));let s=o==null?n:F(n,o);if(e===0)return s;if(e===2)return ge(s);if(e===1){if(o==null)return Gt(s);{let a=n.size/o.size,i=de(ge(s),ge(o));return a>1?de(i,he(a)):i}}if(e===3){if(o==null)return de(ge(s),he(n.size));{let a=F(o,kr(n.shape)),i=ne(ge(qu(a,he(0))),"float32");return de(ge(s),i)}}throw Error(`Unknown reduction: ${e}`)}var Jr=A({computeWeightedLoss_:xee});function Tee(r,t,e,n=3){let o=v(r,"labels","absoluteDifference"),s=v(t,"predictions","absoluteDifference"),a=null;e!=null&&(a=v(e,"weights","absoluteDifference")),Wt(o.shape,s.shape,"Error in absoluteDifference: ");let i=Ut(me(o,s));return Jr(i,a,n)}var XP=A({absoluteDifference_:Tee});function Cee(r,t,e,n,o=3){let s=v(r,"labels","cosineDistance"),a=v(t,"predictions","cosineDistance"),i=null;n!=null&&(i=v(n,"weights","cosineDistance")),Wt(s.shape,a.shape,"Error in cosineDistance: ");let p=he(1),u=me(p,ge(F(s,a),e,!0));return Jr(u,i,o)}var YP=A({cosineDistance_:Cee});function Iee(r,t,e,n=3){let o=v(r,"labels","hingeLoss"),s=v(t,"predictions","hingeLoss"),a=null;e!=null&&(a=v(e,"weights","hingeLoss")),Wt(o.shape,s.shape,"Error in hingeLoss: ");let i=he(1);o=me(F(he(2),o),i);let p=ln(me(i,F(o,s)));return Jr(p,a,n)}var ZP=A({hingeLoss_:Iee});function kee(r,t,e,n=1,o=3){let s=v(r,"labels","huberLoss"),a=v(t,"predictions","huberLoss"),i=null;e!=null&&(i=v(e,"weights","huberLoss")),Wt(s.shape,a.shape,"Error in huberLoss: ");let p=he(n),u=Ut(me(a,s)),l=Ai(u,p),m=me(u,l),c=Q(F(he(.5),je(l)),F(p,m));return Jr(c,i,o)}var QP=A({huberLoss_:kee});function vee(r,t,e,n=1e-7,o=3){let s=v(r,"labels","logLoss"),a=v(t,"predictions","logLoss"),i=null;e!=null&&(i=v(e,"weights","logLoss")),Wt(s.shape,a.shape,"Error in logLoss: ");let p=he(1),u=he(n),l=Je(F(s,Qr(Q(a,u)))),m=F(me(p,s),Qr(Q(me(p,a),u))),c=me(l,m);return Jr(c,i,o)}var JP=A({logLoss_:vee});function See(r,t,e,n=3){let o=v(r,"labels","meanSquaredError"),s=v(t,"predictions","meanSquaredError"),a=null;e!=null&&(a=v(e,"weights","meanSquaredError")),Wt(o.shape,s.shape,"Error in meanSquaredError: ");let i=Dy(o,s);return Jr(i,a,n)}var eR=A({meanSquaredError_:See});function wee(r,t){let e=v(r,"labels","sigmoidCrossEntropyWithLogits"),n=v(t,"logits","sigmoidCrossEntropyWithLogits");Wt(e.shape,n.shape,"Error in sigmoidCrossEntropyWithLogits: ");let o=ln(n),s=F(n,e),a=Ic(Cr(Je(Ut(n))));return Q(me(o,s),a)}function Aee(r,t,e,n=0,o=3){let s=v(r,"multiClassLabels","sigmoidCrossEntropy"),a=v(t,"logits","sigmoidCrossEntropy"),i=null;if(e!=null&&(i=v(e,"weights","sigmoidCrossEntropy")),Wt(s.shape,a.shape,"Error in sigmoidCrossEntropy: "),n>0){let u=he(n),l=he(1),m=he(.5);s=Q(F(s,me(l,u)),F(m,u))}let p=wee(s,a);return Jr(p,i,o)}var tR=A({sigmoidCrossEntropy_:Aee});function Nee(r,t,e=-1){if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${e}`);return Cn((o,s,a)=>{let p=cy(s,[e],!0),u=me(ne(s,"float32"),p);a([o,u]);let l=Je(F(u,o));return{value:ge(l,[e]),gradFunc:(d,f)=>{let[h,g]=f,b=Ia(d.shape,[e]);return[F(E(d,b),me(ne(h,"float32"),Cr(g))),F(E(d,b),me(Cr(g),ne(h,"float32")))]}}})(r,t)}function Dee(r,t,e,n=0,o=3){let s=v(r,"onehotLabels","softmaxCrossEntropy"),a=v(t,"logits","softmaxCrossEntropy"),i=null;if(e!=null&&(i=v(e,"weights","softmaxCrossEntropy")),Wt(s.shape,a.shape,"Error in softmaxCrossEntropy: "),n>0){let u=he(n),l=he(1),m=he(s.shape[1]);s=Q(F(s,me(l,u)),de(u,m))}let p=Nee(s,a);return Jr(p,i,o)}var rR=A({softmaxCrossEntropy_:Dee});function _ee(r,t,e,n){let o=v(r,"indices","sparseFillEmptyRows","int32"),s=v(t,"values","sparseFillEmptyRows"),a=v(e,"denseShape","sparseFillEmptyRows","int32"),i=v(n,"defaultValue","sparseFillEmptyRows",s.dtype);if(o.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${o.shape}`);if(s.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(a.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${a.shape}`);if(i.rank!==0)throw new Error(`Default value should be a scalar but received shape ${i.shape}`);let p={indices:o,values:s,denseShape:a,defaultValue:i},u=N.runKernel(Dp,p);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}var nR=A({sparseFillEmptyRows_:_ee});function Mee(r,t,e){let n=v(r,"inputIndices","sparseReshape","int32"),o=v(t,"inputShape","sparseReshape","int32"),s=v(e,"newShape","sparseReshape","int32");if(n.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${n.shape}`);if(o.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${o.shape}`);if(s.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);let a={inputIndices:n,inputShape:o,newShape:s},i=N.runKernel(zu,a);return{outputIndices:i[0],outputShape:i[1]}}var oR=A({sparseReshape_:Mee});function Pee(r,t,e){let n=v(r,"data","sparseSegmentMean"),o=v(t,"indices","sparseSegmentMean","int32"),s=v(e,"segmentIds","sparseSegmentMean","int32");if(n.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${o.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${s.shape}`);let a={data:n,indices:o,segmentIds:s};return N.runKernel(pu,a)}var sR=A({sparseSegmentMean_:Pee});function Ree(r,t,e){let n=v(r,"data","sparseSegmentSum"),o=v(t,"indices","sparseSegmentSum","int32"),s=v(e,"segmentIds","sparseSegmentSum","int32");if(n.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${o.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${s.shape}`);let a={data:n,indices:o,segmentIds:s};return N.runKernel(lu,a)}var aR=A({sparseSegmentSum_:Ree});function Fee(r,t,e,n,o,s,a,i){let p=v(r,"data","stringNGrams","string");if(p.dtype!=="string")throw new Error("Data must be of datatype string");if(p.shape.length!==1)throw new Error(`Data must be a vector, saw: ${p.shape}`);let u=v(t,"dataSplits","stringNGrams");if(u.dtype!=="int32")throw new Error("Data splits must be of datatype int32");let l={separator:e,nGramWidths:n,leftPad:o,rightPad:s,padWidth:a,preserveShortSequences:i},m={data:p,dataSplits:u},c=N.runKernel(cu,m,l);return{nGrams:c[0],nGramsSplits:c[1]}}var iR=A({stringNGrams_:Fee});function Eee(r,t,e=!0){let n=v(r,"input","stringSplit","string"),o=v(t,"delimiter","stringSplit","string");if(n.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${n.shape}`);if(o.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${o.shape}`);let s={skipEmpty:e},a={input:n,delimiter:o},i=N.runKernel(_p,a,s);return{indices:i[0],values:i[1],shape:i[2]}}var uR=A({stringSplit_:Eee});function Lee(r,t){let e=v(r,"input","stringToHashBucketFast","string"),n={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");let o={input:e};return N.runKernel(Mp,o,n)}var pR=A({stringToHashBucketFast_:Lee});function Bee(r,t,e,n=!0){let o=v(r,"input","staticRegexReplace","string"),s={pattern:t,rewrite:e,replaceGlobal:n};return N.runKernel(Tl,{x:o},s)}var lR=A({staticRegexReplace_:Bee});var $ee={fft:_c,ifft:$l,rfft:Mc,irfft:Ny},Oee={hammingWindow:AP,hannWindow:By,frame:$y,stft:NP},In={flipLeftRight:_P,grayscaleToRGB:MP,resizeNearestNeighbor:WP,resizeBilinear:GP,rotateWithOffset:PP,cropAndResize:DP,nonMaxSuppression:RP,nonMaxSuppressionAsync:LP,nonMaxSuppressionWithScore:BP,nonMaxSuppressionWithScoreAsync:$P,nonMaxSuppressionPadded:OP,nonMaxSuppressionPaddedAsync:zP,threshold:UP,transform:KP},eN={bandPart:VP,gramSchmidt:HP,qr:jP},zee={absoluteDifference:XP,computeWeightedLoss:Jr,cosineDistance:YP,hingeLoss:ZP,huberLoss:QP,logLoss:JP,meanSquaredError:eR,sigmoidCrossEntropy:tR,softmaxCrossEntropy:rR},Gee={sparseFillEmptyRows:nR,sparseReshape:oR,sparseSegmentMean:sR,sparseSegmentSum:aR},Wee={stringNGrams:iR,stringSplit:uR,stringToHashBucketFast:pR,staticRegexReplace:lR};var J={};Xe(J,{Serializable:()=>Oh,SerializationMap:()=>Cu,getRegisteredName:()=>Kee,registerClass:()=>rN});var Uee=new Map,tN=new Map,Oh=class{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}},Cu=class{constructor(){this.classNameMap={}}static getMap(){return Cu.instance==null&&(Cu.instance=new Cu),Cu.instance}static register(t){Cu.getMap().classNameMap[t.className]=[t,t.fromConfig]}};function rN(r,t,e){D(r.className!=null,()=>"Class being registered does not have the static className property defined."),D(typeof r.className=="string",()=>"className is required to be a string, but got type "+typeof r.className),D(r.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof t>"u"&&(t="Custom"),typeof e>"u"&&(e=r.className);let n=e,o=t+">"+n;return Cu.register(r),Uee.set(o,r),tN.set(r,o),r}function Kee(r){return tN.has(r)?tN.get(r):r.className}var en=class extends Oh{minimize(e,n=!1,o){let{value:s,grads:a}=this.computeGradients(e,o);if(o!=null){let i=o.map(p=>({name:p.name,tensor:a[p.name]}));this.applyGradients(i)}else this.applyGradients(a);return Pe(a),n?s:(s.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,n){return py(e,n)}dispose(){this.iterations_!=null&&Pe(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:he(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(en,Symbol.hasInstance,{value:r=>r.minimize!=null&&r.computeGradients!=null&&r.applyGradients!=null});var Ul=class extends en{constructor(e,n,o=null){super();this.learningRate=e;this.rho=n;this.epsilon=o;this.accumulatedGrads=[];this.accumulatedUpdates=[];o==null&&(this.epsilon=N.backend.epsilon())}static get className(){return"Adadelta"}applyGradients(e){(Array.isArray(e)?e.map(o=>o.name):Object.keys(e)).forEach((o,s)=>{let a=N.registeredVariables[o],i=!1;this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${o}/accum_grad`,variable:z(()=>De(a).variable(i))}),this.accumulatedUpdates[s]==null&&(this.accumulatedUpdates[s]={originalName:`${o}/accum_var`,variable:z(()=>De(a).variable(i))});let p=Array.isArray(e)?e[s].tensor:e[o];if(p==null)return;let u=this.accumulatedGrads[s].variable,l=this.accumulatedUpdates[s].variable;z(()=>{let m=Q(F(u,this.rho),F(je(p),1-this.rho)),c=F(de(zt(Q(l,this.epsilon)),zt(Q(u,this.epsilon))),p),d=Q(F(l,this.rho),F(je(c),1-this.rho));u.assign(m),l.assign(d);let f=Q(F(c,-this.learningRate),a);a.assign(f)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Pe(this.accumulatedGrads.map(e=>e.variable)),Pe(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(n=>({name:n.originalName,tensor:n.variable})))}async setWeights(e){e=await this.extractIterations(e);let n=e.length/2,o=!1;this.accumulatedGrads=e.slice(0,n).map(s=>({originalName:s.name,variable:s.tensor.variable(o)})),this.accumulatedUpdates=e.slice(n,n*2).map(s=>({originalName:s.name,variable:s.tensor.variable(o)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,n){return new e(n.learningRate,n.rho,n.epsilon)}};var Kl=class extends en{constructor(e,n=.1){super();this.learningRate=e;this.initialAccumulatorValue=n;this.accumulatedGrads=[]}static get className(){return"Adagrad"}applyGradients(e){(Array.isArray(e)?e.map(o=>o.name):Object.keys(e)).forEach((o,s)=>{let a=N.registeredVariables[o];this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${o}/accumulator`,variable:z(()=>Ca(a.shape,this.initialAccumulatorValue).variable(!1))});let i=Array.isArray(e)?e[s].tensor:e[o];if(i==null)return;let p=this.accumulatedGrads[s].variable;z(()=>{let u=Q(p,je(i));p.assign(u);let l=Q(F(de(i,zt(Q(u,N.backend.epsilon()))),-this.learningRate),a);a.assign(l)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Pe(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let n=!1;this.accumulatedGrads=e.map(o=>({originalName:o.name,variable:o.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,n){return new e(n.learningRate,n.initialAccumulatorValue)}};var Vl=class extends en{constructor(e,n,o,s=null){super();this.learningRate=e;this.beta1=n;this.beta2=o;this.epsilon=s;this.accumulatedFirstMoment=[];this.accumulatedSecondMoment=[];z(()=>{this.accBeta1=he(n).variable(),this.accBeta2=he(o).variable()}),s==null&&(this.epsilon=N.backend.epsilon())}static get className(){return"Adam"}applyGradients(e){let n=Array.isArray(e)?e.map(o=>o.name):Object.keys(e);z(()=>{let o=me(1,this.accBeta1),s=me(1,this.accBeta2);n.forEach((a,i)=>{let p=N.registeredVariables[a],u=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${a}/m`,variable:z(()=>De(p).variable(u))}),this.accumulatedSecondMoment[i]==null&&(this.accumulatedSecondMoment[i]={originalName:`${a}/v`,variable:z(()=>De(p).variable(u))});let l=Array.isArray(e)?e[i].tensor:e[a];if(l==null)return;let m=this.accumulatedFirstMoment[i].variable,c=this.accumulatedSecondMoment[i].variable,d=Q(F(m,this.beta1),F(l,1-this.beta1)),f=Q(F(c,this.beta2),F(je(l),1-this.beta2)),h=de(d,o),g=de(f,s);m.assign(d),c.assign(f);let b=Q(F(de(h,Q(zt(g),this.epsilon)),-this.learningRate),p);p.assign(b)}),this.accBeta1.assign(F(this.accBeta1,this.beta1)),this.accBeta2.assign(F(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Pe(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&Pe(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(n=>({name:n.originalName,tensor:n.variable})))}async setWeights(e){e=await this.extractIterations(e),z(()=>{this.accBeta1.assign(eo(this.beta1,this.iterations_+1)),this.accBeta2.assign(eo(this.beta2,this.iterations_+1))});let n=e.length/2,o=!1;this.accumulatedFirstMoment=e.slice(0,n).map(s=>({originalName:s.name,variable:s.tensor.variable(o)})),this.accumulatedSecondMoment=e.slice(n,n*2).map(s=>({originalName:s.name,variable:s.tensor.variable(o)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,n){return new e(n.learningRate,n.beta1,n.beta2,n.epsilon)}};var Hl=class extends en{constructor(e,n,o,s=null,a=0){super();this.learningRate=e;this.beta1=n;this.beta2=o;this.epsilon=s;this.decay=a;this.accumulatedFirstMoment=[];this.accumulatedWeightedInfNorm=[];z(()=>{this.iteration=he(0).variable(),this.accBeta1=he(n).variable()}),s==null&&(this.epsilon=N.backend.epsilon())}static get className(){return"Adamax"}applyGradients(e){let n=Array.isArray(e)?e.map(o=>o.name):Object.keys(e);z(()=>{let o=me(1,this.accBeta1),s=de(-this.learningRate,Q(F(this.iteration,this.decay),1));n.forEach((a,i)=>{let p=N.registeredVariables[a],u=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${a}/m`,variable:De(p).variable(u)}),this.accumulatedWeightedInfNorm[i]==null&&(this.accumulatedWeightedInfNorm[i]={originalName:`${a}/v`,variable:De(p).variable(u)});let l=Array.isArray(e)?e[i].tensor:e[a];if(l==null)return;let m=this.accumulatedFirstMoment[i].variable,c=this.accumulatedWeightedInfNorm[i].variable,d=Q(F(m,this.beta1),F(l,1-this.beta1)),f=F(c,this.beta2),h=Ut(l),g=Us(f,h);m.assign(d),c.assign(g);let b=Q(F(de(s,o),de(d,Q(g,this.epsilon))),p);p.assign(b)}),this.iteration.assign(Q(this.iteration,1)),this.accBeta1.assign(F(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Pe(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&Pe(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,n){return new e(n.learningRate,n.beta1,n.beta2,n.epsilon,n.decay)}};var Xu=class extends en{constructor(e){super();this.learningRate=e;this.setLearningRate(e)}static get className(){return"SGD"}applyGradients(e){(Array.isArray(e)?e.map(o=>o.name):Object.keys(e)).forEach((o,s)=>{let a=Array.isArray(e)?e[s].tensor:e[o];if(a==null)return;let i=N.registeredVariables[o];z(()=>{let p=Q(F(this.c,a),i);i.assign(p)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=Ot(he(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,n){return new e(n.learningRate)}};var ql=class extends Xu{constructor(e,n,o=!1){super(e);this.learningRate=e;this.momentum=n;this.useNesterov=o;this.accumulations=[];this.m=he(this.momentum)}static get className(){return"Momentum"}applyGradients(e){(Array.isArray(e)?e.map(o=>o.name):Object.keys(e)).forEach((o,s)=>{let a=N.registeredVariables[o];this.accumulations[s]==null&&(this.accumulations[s]={originalName:`${o}/momentum`,variable:z(()=>De(a).variable(!1))});let i=this.accumulations[s].variable,p=Array.isArray(e)?e[s].tensor:e[o];p!=null&&z(()=>{let u,l=Q(F(this.m,i),p);this.useNesterov?u=Q(F(this.c,Q(p,F(l,this.m))),a):u=Q(F(this.c,l),a),i.assign(l),a.assign(u)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Pe(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let n=!1;this.accumulations=e.map(o=>({originalName:o.name,variable:o.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,n){return new e(n.learningRate,n.momentum,n.useNesterov)}};var jl=class extends en{constructor(e,n=.9,o=0,s=null,a=!1){super();this.learningRate=e;this.decay=n;this.momentum=o;this.epsilon=s;this.accumulatedMeanSquares=[];this.accumulatedMoments=[];this.accumulatedMeanGrads=[];if(this.centered=a,s==null&&(this.epsilon=N.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}static get className(){return"RMSProp"}applyGradients(e){(Array.isArray(e)?e.map(o=>o.name):Object.keys(e)).forEach((o,s)=>{let a=N.registeredVariables[o],i=!1;this.accumulatedMeanSquares[s]==null&&(this.accumulatedMeanSquares[s]={originalName:`${o}/rms`,variable:z(()=>De(a).variable(i))}),this.accumulatedMoments[s]==null&&(this.accumulatedMoments[s]={originalName:`${o}/momentum`,variable:z(()=>De(a).variable(i))}),this.accumulatedMeanGrads[s]==null&&this.centered&&(this.accumulatedMeanGrads[s]={originalName:`${o}/mg`,variable:z(()=>De(a).variable(i))});let p=Array.isArray(e)?e[s].tensor:e[o];if(p==null)return;let u=this.accumulatedMeanSquares[s].variable,l=this.accumulatedMoments[s].variable;z(()=>{let m=Q(F(u,this.decay),F(je(p),1-this.decay));if(this.centered){let c=this.accumulatedMeanGrads[s].variable,d=Q(F(c,this.decay),F(p,1-this.decay)),f=de(F(p,this.learningRate),zt(me(m,Q(je(d),this.epsilon)))),h=Q(F(l,this.momentum),f);u.assign(m),c.assign(d),l.assign(h);let g=me(a,h);a.assign(g)}else{let c=Q(F(u,this.decay),F(je(p),1-this.decay)),d=Q(F(l,this.momentum),de(F(p,this.learningRate),zt(Q(c,this.epsilon))));u.assign(c),l.assign(d);let f=me(a,d);a.assign(f)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Pe(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Pe(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&Pe(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(n=>({name:n.originalName,tensor:n.variable})))}async setWeights(e){e=await this.extractIterations(e);let n=this.centered?e.length/3:e.length/2,o=!1;this.accumulatedMeanSquares=e.slice(0,n).map(s=>({originalName:s.name,variable:s.tensor.variable(o)})),this.accumulatedMoments=e.slice(n,n*2).map(s=>({originalName:s.name,variable:s.tensor.variable(o)})),this.centered&&(this.accumulatedMeanGrads=e.slice(n*2,n*3).map(s=>({originalName:s.name,variable:s.tensor.variable(o)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,n){return new e(n.learningRate,n.decay,n.momentum,n.epsilon,n.centered)}};var Vee=[Ul,Kl,Vl,Hl,ql,jl,Xu];function mR(){for(let r of Vee)rN(r)}var Ur={};Xe(Ur,{CompositeArrayBuffer:()=>_r,browserFiles:()=>dR,browserHTTPRequest:()=>gR,concatenateArrayBuffers:()=>b1,copyModel:()=>M1,decodeWeights:()=>$b,encodeWeights:()=>f1,fromMemory:()=>bR,fromMemorySync:()=>uN,getLoadHandlers:()=>C1,getModelArtifactsForJSON:()=>dc,getModelArtifactsForJSONSync:()=>AA,getModelArtifactsInfoForJSON:()=>hu,getSaveHandlers:()=>T1,getWeightSpecs:()=>zb,http:()=>Ky,isHTTPScheme:()=>Uy,listModels:()=>D1,loadWeights:()=>fR,moveModel:()=>P1,registerLoadRouter:()=>x1,registerSaveRouter:()=>y1,removeModel:()=>_1,weightsLoaderFactory:()=>aN,withSaveHandler:()=>yR,withSaveHandlerSync:()=>xR});var Hee="model",qee=".json",jee=".weights.bin";function cR(r){return new Promise(t=>setTimeout(t)).then(r)}var Wy=class{constructor(t){if(!L().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(Wy.URL_SCHEME)&&(t=t.slice(Wy.URL_SCHEME.length)),(t==null||t.length===0)&&(t=Hee),this.modelJsonFileName=t+qee,this.weightDataFileName=t+jee}async save(t){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let e=_r.join(t.weightData),n=window.URL.createObjectURL(new Blob([e],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let o=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],s=Ob(t,o),a=window.URL.createObjectURL(new Blob([JSON.stringify(s)],{type:"application/json"})),i=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(i.download=this.modelJsonFileName,i.href=a,await cR(()=>i.dispatchEvent(new MouseEvent("click"))),t.weightData!=null){let p=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;p.download=this.weightDataFileName,p.href=n,await cR(()=>p.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:hu(t)}}}},Ec=Wy;Ec.URL_SCHEME="downloads://";var nN=class{constructor(t){if(t==null||t.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${t}`);this.jsonFile=t[0],this.weightsFiles=t.slice(1)}async load(){return new Promise((t,e)=>{let n=new FileReader;n.onload=o=>{let s=JSON.parse(o.target.result),a=s.modelTopology;if(a==null){e(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(s.weightsManifest==null){e(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){t({modelTopology:a});return}let p=dc(s,u=>this.loadWeights(u));t(p)},n.onerror=o=>e(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)})}loadWeights(t){let e=[],n=[];for(let a of t)e.push(...a.weights),n.push(...a.paths);let o=this.checkManifestAndWeightFiles(t),s=n.map(a=>this.loadWeightsFile(a,o[a]));return Promise.all(s).then(a=>[e,a])}loadWeightsFile(t,e){return new Promise((n,o)=>{let s=new FileReader;s.onload=a=>{let i=a.target.result;n(i)},s.onerror=a=>o(`Failed to weights data from file of path '${t}'.`),s.readAsArrayBuffer(e)})}checkManifestAndWeightFiles(t){let e=[],n=this.weightsFiles.map(s=>wA(s.name)),o={};for(let s of t)s.paths.forEach(a=>{let i=wA(a);if(e.indexOf(i)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${i}'`);if(e.push(i),n.indexOf(i)===-1)throw new Error(`Weight file with basename '${i}' is not provided.`);o[a]=this.weightsFiles[n.indexOf(i)]});if(e.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${e.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return o}},Xee=r=>L().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(Ec.URL_SCHEME)?Yee(r.slice(Ec.URL_SCHEME.length)):null;Pt.registerSaveRouter(Xee);function Yee(r="model"){return new Ec(r)}function dR(r){return new nN(r)}function oN(r,t,e,n){a(r),e=e??0,n=n??1,i(e,n);let o=0,s=p=>(p.then(u=>{let l=e+ ++o/r.length*(n-e);return t(l),u}),p);function a(p){D(p!=null&&Array.isArray(p)&&p.length>0,()=>"promises must be a none empty array")}function i(p,u){D(p>=0&&p<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${p}`),D(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${u}`),D(u>=p,()=>`startFraction must be no more than endFraction, but got startFraction ${p} and endFraction ${u}`)}return Promise.all(r.map(s))}async function sN(r,t){t==null&&(t={});let e=t.fetchFunc==null?L().platform.fetch:t.fetchFunc,n=r.map(m=>e(m,t.requestInit,{isBinary:!0})),o=0,s=.5,i=(t.onProgress==null?await Promise.all(n):await oN(n,t.onProgress,o,s)).map(m=>m.arrayBuffer()),p=.5,u=1;return t.onProgress==null?await Promise.all(i):await oN(i,t.onProgress,p,u)}async function fR(r,t="",e,n){return aN(a=>sN(a,{requestInit:n}))(r,t,e)}function aN(r){return async(t,e="",n)=>{let o=t.map(()=>!1),s={},a=n!=null?n.map(()=>!1):[],i=[];if(t.forEach((d,f)=>{let h=0;d.weights.forEach(g=>{let b="quantization"in g?g.quantization.dtype:g.dtype,x=Ah[b]*st(g.shape),T=()=>{o[f]=!0,s[f]==null&&(s[f]=[]),s[f].push({manifestEntry:g,groupOffset:h,sizeBytes:x})};n!=null?n.forEach((C,k)=>{C===g.name&&(T(),a[k]=!0)}):T(),i.push(g.name),h+=x})}),!a.every(d=>d)){let d=n.filter((f,h)=>!a[h]);throw new Error(`Could not find weights in manifest with names: ${d.join(", ")}. 
Manifest JSON has weights with names: ${i.join(", ")}.`)}let p=o.reduce((d,f,h)=>(f&&d.push(h),d),[]),u=[];p.forEach(d=>{t[d].paths.forEach(f=>{let h=e+(e.endsWith("/")?"":"/")+f;u.push(h)})});let l=await r(u),m={},c=0;return p.forEach(d=>{let f=t[d].paths.length,h=new _r(l.slice(c,c+f));s[d].forEach(b=>{let x=h.slice(b.groupOffset,b.groupOffset+b.sizeBytes),T=$b(x,[b.manifestEntry]);for(let C in T)m[C]=T[C]}),c+=f}),m}}var Zee="application/octet-stream",Qee="application/json",zh=class{constructor(t,e){this.DEFAULT_METHOD="POST";if(e==null&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,this.weightUrlConverter=e.weightUrlConverter,e.fetchFunc!=null?(D(typeof e.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=e.fetchFunc):this.fetch=L().platform.fetch,D(t!=null&&t.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(t)&&D(t.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`),this.path=t,e.requestInit!=null&&e.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;let n=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],o=Ob(t,n);if(e.body.append("model.json",new Blob([JSON.stringify(o)],{type:Qee}),"model.json"),t.weightData!=null){let a=_r.join(t.weightData);e.body.append("model.weights.bin",new Blob([a],{type:Zee}),"model.weights.bin")}let s=await this.fetch(this.path,e);if(s.ok)return{modelArtifactsInfo:hu(t),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){let t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let e;try{e=await t.json()}catch{let a=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?a+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":a+=" Please make sure the server is serving valid JSON for this request.",new Error(a)}let n=e.modelTopology,o=e.weightsManifest;if(n==null&&o==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return dc(e,s=>this.loadWeights(s))}async loadWeights(t){let e=Array.isArray(this.path)?this.path[1]:this.path,[n,o]=Jee(e),s=this.weightPathPrefix||n,a=zb(t),i=[],p=[];for(let l of t)for(let m of l.paths)this.weightUrlConverter!=null?p.push(this.weightUrlConverter(m)):i.push(s+m+o);this.weightUrlConverter&&i.push(...await Promise.all(p));let u=await sN(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[a,u]}};zh.URL_SCHEME_REGEX=/^https?:\/\//;function Jee(r){let t=r.lastIndexOf("/"),e=r.lastIndexOf("?"),n=r.substring(0,t),o=e>t?r.substring(e):"";return[n+"/",o]}function Uy(r){return r.match(zh.URL_SCHEME_REGEX)!=null}var hR=(r,t)=>{if(typeof fetch>"u"&&(t==null||t.fetchFunc==null))return null;{let e=!0;if(Array.isArray(r)?e=r.every(n=>Uy(n)):e=Uy(r),e)return Ky(r,t)}return null};Pt.registerSaveRouter(hR);Pt.registerLoadRouter(hR);function Ky(r,t){return new zh(r,t)}function gR(r,t){return Ky(r,t)}var Gh=class{constructor(t){this.modelArtifacts=t}load(){return this.modelArtifacts}},Vy=class{constructor(t){this.saveHandler=t}save(t){return this.saveHandler(t)}},iN=class{constructor(t){t.load&&(this.load=()=>Promise.resolve(t.load())),t.save&&(this.save=e=>Promise.resolve(t.save(e)))}};function bR(r,t,e,n){let o=arguments;return new iN(uN(...o))}function uN(r,t,e,n){return arguments.length===1?r.modelTopology!=null||r.weightSpecs!=null?new Gh(r):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Gh({modelTopology:r})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Gh({modelTopology:r,weightSpecs:t,weightData:e,trainingConfig:n}))}function yR(r){return new Vy(r)}function xR(r){return new Vy(r)}var CR={};Xe(CR,{confusionMatrix:()=>TR});function ete(r,t,e){let n=v(r,"labels","confusionMatrix"),o=v(t,"predictions","confusionMatrix");D(e==null||e>0&&Number.isInteger(e),()=>`If provided, numClasses must be a positive integer, but got ${e}`),D(n.rank===1,()=>`Expected the rank of labels to be 1, but got ${n.rank}`),D(o.rank===1,()=>`Expected the rank of predictions to be 1, but got ${o.rank}`),D(n.shape[0]===o.shape[0],()=>`Mismatch in the number of examples: ${n.shape[0]} vs. ${o.shape[0]}. Labels and predictions should have the same number of elements.`),D(e>0&&Number.isInteger(e),()=>`numClasses is required to be a positive integer, but got ${e}`);let s=qp(ne(n,"int32"),e),a=qp(ne(o,"int32"),e),i=qe(s),p=He(i,a);return ne(p,"int32")}var TR=A({confusionMatrix_:ete});var Hy={};Xe(Hy,{draw:()=>ute,fromPixels:()=>pte,fromPixelsAsync:()=>ste,toPixels:()=>ite});var Xl,IR=!1;function kR(r,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(r==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let e=!1,n=!1,o=!1,s=!1,a=!1,i=!1;if(r.data instanceof Uint8Array)e=!0;else if(typeof ImageData<"u"&&r instanceof ImageData)n=!0;else if(typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement)o=!0;else if(typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement)s=!0;else if(r.getContext!=null)a=!0;else if(typeof ImageBitmap<"u"&&r instanceof ImageBitmap)i=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${r.constructor.name}`);if(ic(Cl,N.backendName)!=null){let f={pixels:r},h={numChannels:t};return N.runKernel(Cl,f,h)}let[u,l]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],m;if(a)m=r.getContext("2d").getImageData(0,0,u,l).data;else if(n||e)m=r.data;else if(s||o||i){if(Xl==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")Xl=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else Xl=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Xl.canvas.width=u,Xl.canvas.height=l,Xl.drawImage(r,0,0,u,l),m=Xl.getImageData(0,0,u,l).data}let c;if(t===4)c=new Int32Array(m);else{let f=u*l;c=new Int32Array(f*t);for(let h=0;h<f;h++)for(let g=0;g<t;++g)c[h*t+g]=m[h*4+g]}return _y(c,[l,u,t],"int32")}function tte(r){return r!=null&&r.data instanceof Uint8Array}function rte(){return typeof window<"u"&&typeof ImageBitmap<"u"&&window.hasOwnProperty("createImageBitmap")}function nte(r){return r!=null&&r.width!==0&&r.height!==0}function ote(r){return rte()&&!(r instanceof ImageBitmap)&&nte(r)&&!tte(r)}async function ste(r,t=3){let e=null;if(L().getBool("WRAP_TO_IMAGEBITMAP")&&ote(r)){let n;try{n=await createImageBitmap(r,{premultiplyAlpha:"none"})}catch{n=null}n!=null&&n.width===r.width&&n.height===r.height?e=n:e=r}else e=r;return kR(e,t)}function vR(r){if(r.rank!==2&&r.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${r.rank}.`);let t=r.rank===2?1:r.shape[2];if(t>4||t===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${t}`);if(r.dtype!=="float32"&&r.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${r.dtype}. Please use float32 or int32 tensors.`)}function ate(r){let t=r?.alpha||1;if(t>1||t<0)throw new Error(`Alpha value ${t} is suppoed to be in range [0 - 1].`)}async function ite(r,t){let e=v(r,"img","toPixels");if(!(r instanceof Ve)){let u=e;e=ne(u,"int32"),u.dispose()}vR(e);let[n,o]=e.shape.slice(0,2),s=e.rank===2?1:e.shape[2],a=await e.data(),i=e.dtype==="float32"?255:1,p=new Uint8ClampedArray(o*n*4);for(let u=0;u<n*o;++u){let l=[0,0,0,255];for(let c=0;c<s;c++){let d=a[u*s+c];if(e.dtype==="float32"){if(d<0||d>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${d}.`)}else if(e.dtype==="int32"&&(d<0||d>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${d}.`);s===1?(l[0]=d*i,l[1]=d*i,l[2]=d*i):l[c]=d*i}let m=u*4;p[m+0]=Math.round(l[0]),p[m+1]=Math.round(l[1]),p[m+2]=Math.round(l[2]),p[m+3]=Math.round(l[3])}if(t!=null){IR||ic(xh,N.backendName)!=null&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),IR=!0),t.width=o,t.height=n;let u=t.getContext("2d"),l=new ImageData(p,o,n);u.putImageData(l,0,0)}return e!==r&&e.dispose(),p}function ute(r,t,e){let n=v(r,"img","draw");if(!(r instanceof Ve)){let a=n;n=ne(a,"int32"),a.dispose()}vR(n),ate(e?.imageOptions);let o={image:n},s={canvas:t,options:e};N.runKernel(xh,o,s)}var pte=A({fromPixels_:kR});var qy={};Xe(qy,{prepareAndValidate:()=>SR});function SR(r,t){let e=r.shape.length,n=t.shape.length;if(e<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${e}.`);if(n<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${n}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[n-1]>e)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[n-1]} vs. ${e}`);if(st(r.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${r.shape}.`);let o=t.shape,s=o[o.length-1],a=1;for(let m=0;m<o.length-1;++m)a*=o[m];let i=r.shape,p=o.slice();p.pop();let u=1;for(let m=s;m<e;++m)u*=i[m],p.push(i[m]);let l=[...Xi(r.shape).map(m=>m/u),1].slice(0,s);return[p,a,u,l]}var kt={};Xe(kt,{assertParamsValid:()=>mte,computeFlatOffset:()=>gte,computeOutShape:()=>dte,getNormalizedAxes:()=>fte,isSliceContinous:()=>hte,maskToAxes:()=>cte,parseSliceParams:()=>lN,sliceInfo:()=>bte,startForAxis:()=>RR,startIndicesWithElidedDims:()=>_R,stopForAxis:()=>FR,stopIndicesWithElidedDims:()=>MR,stridesForAxis:()=>PR,stridesWithElidedDims:()=>AR});var pN=-2,lte=-1;function mte(r,t,e){let n=r.shape.length;D(n===t.length,()=>`Error in slice${n}D: Length of begin ${t} must match the rank of the array (${n}).`),D(n===e.length,()=>`Error in slice${n}D: Length of size ${e} must match the rank of the array (${n}).`);for(let o=0;o<n;++o)D(t[o]+e[o]<=r.shape[o],()=>`Error in slice${n}D: begin[${o}] + size[${o}] (${t[o]+e[o]}) would overflow input.shape[${o}] (${r.shape[o]})`)}function cte(r){let t=[],e=0;for(;r>0;)r&1&&t.push(e),r/=2,e++;return t}function dte(r,t,e){let n=[];for(let o=0;o<r.length;o++)n[o]=Math.ceil((t[o]-r[o])/e[o]);return n}function AR(r,t,e,n){let o=[...r];for(let s=o.length;s<n.length;s++)o.push(1);for(let s=0;s<e;s++)s===0?o[t]=1:(o.splice(t,0,1),o.pop());return o}function NR(r,t,e){return e<=r?e:e-(t-1)}function DR(r,t){let e=[];for(let n=0;n<r;n++)e.push(t+n);return e}function fte(r,t,e,n,o,s,a,i,p){let u=r.length,l=new Array(u),m=new Array(u),c=new Array(u);if(t.length&&e>0){let d=t[0],f=e+1;l=_R(a,d,f,n,r),m=MR(i,d,f,o,r),c=AR(s,d,f,r)}else for(let d=0;d<u;d++)l[d]=RR(a,n,s,r,d,p),m[d]=FR(i,o,s,r,d,p),c[d]=PR(s,d,p);return{begin:l,end:m,strides:c}}function _R(r,t,e,n,o){let s=[...o],a=DR(e,t);for(let i=0;i<s.length;i++)if(a.indexOf(i)>-1)s[i]=0;else{let p=NR(t,e,i),u=n[p];r&1<<p&&(u=0),s[i]=u}return s}function MR(r,t,e,n,o){let s=[...o],a=DR(e,t);for(let i=0;i<s.length;i++)if(a.indexOf(i)>-1)s[i]=Number.MAX_SAFE_INTEGER;else{let p=NR(t,e,i),u=n[p];r&1<<p&&(u=Number.MAX_SAFE_INTEGER),s[i]=u}for(let i=0;i<s.length;i++){let p=o[i];s[i]<0&&(s[i]+=p),s[i]=Jm(0,s[i],o[i])}return s}function PR(r,t,e){let n=r[t];return(e&1<<t||n==null)&&(n=1),n}function RR(r,t,e,n,o,s){let a=t[o],i=e[o]||1;(r&1<<o||s&1<<o||a==null)&&(i>0?a=Number.MIN_SAFE_INTEGER:a=Number.MAX_SAFE_INTEGER);let p=n[o];return a<0&&(a+=p),a=Jm(0,a,p-1),a}function FR(r,t,e,n,o,s){let a=t[o],i=e[o]||1;(r&1<<o||s&1<<o||a==null)&&(i>0?a=Number.MAX_SAFE_INTEGER:a=Number.MIN_SAFE_INTEGER);let p=n[o];return a<0&&(a+=p),i>0?a=Jm(0,a,p):a=Jm(-1,a,p-1),a}function hte(r,t,e){let n=e.length;for(let o=0;o<e.length;o++)if(e[o]>1){n=o;break}for(let o=n+1;o<e.length;o++)if(t[o]>0||e[o]!==r[o])return!1;return!0}function gte(r,t){let e=r.length>0?r[r.length-1]:1;for(let n=0;n<r.length-1;n++)e+=r[n]*t[n];return e}function lN(r,t,e){let n,o=r.shape.length;typeof t=="number"?n=[t,...new Array(o-1).fill(0)]:t.length<o?n=t.concat(new Array(o-t.length).fill(0)):n=t.slice(),n.forEach(a=>{D(a!==-1,()=>"slice() does not support negative begin indexing.")});let s;return e==null?s=new Array(o).fill(-1):typeof e=="number"?s=[e,...new Array(o-1).fill(-1)]:e.length<o?s=e.concat(new Array(o-e.length).fill(-1)):s=e,s=s.map((a,i)=>a>=0?a:(D(a===-1,()=>`Negative size values should be exactly -1 but got ${a} for the slice() size at index ${i}.`),r.shape[i]-n[i])),[n,s]}function bte(r,t,e,n,o,s,a,i,p){let u;if(n==null?(u=new Array(t.length),u.fill(1)):u=n,a!=null&&a&a-1)throw new Error("Multiple ellipses in slice is not allowed.");let l=!1,m={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:e.slice(),strides:u.slice(),beginMask:o,endMask:s,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:p};for(let T=0;T<m.dims;T++)l&&1<<T&i&&m.numAddAxisAfterEllipsis++,1<<T&a&&(l=!0);l||(m.ellipsisMask|=1<<m.dims,m.dims++);let c={dims:r.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};yte(m,c);let d=!0,f=!0,h=!0,g=[],b=[];for(let T=0;T<r.length;++T){if(c.strides[T]===0)throw Error(`strides[${T}] must be non-zero`);let C=!!(c.shrinkAxisMask&1<<T),k=r[T];if(k===-1){g.push(C?1:-1);continue}let w=[c.beginMask&1<<T,c.endMask&1<<T],_=[c.strides[T]>0?0:-1,c.strides[T]>0?k:k-1];if(C&&c.strides[T]<=0)throw Error("only stride 1 allowed on non-range indexing.");h=h&&c.strides[T]===1;let P=!!(c.beginMask&1<<T&&c.endMask&1<<T);if(c.beginValid&&c.endValid){if(C){let G=c.begin[T]<0?k+c.begin[T]:c.begin[T];if(c.begin[T]=G,c.end[T]=c.begin[T]+1,G<0||G>=k)throw Error(`slice index ${c.begin[T]} of dimension ${T} out of bounds.`)}else c.begin[T]=wR(c.begin[T],0,c.strides[T],k,w,_),c.end[T]=wR(c.end[T],1,c.strides[T],k,w,_);let $=c.strides[T]===1&&c.begin[T]===0&&c.end[T]===k;d=d&&$,f=f&&(T===0&&c.strides[T]===1||$)}else d=d&&c.strides[T]===1&&P,f=f&&(T===0&&c.strides[T]===1||P);let M,R=!1;if(c.beginValid&&c.endValid?(M=c.end[T]-c.begin[T],R=!0):C?(M=1,R=!0):P&&k>=0&&(c.strides[T]<0?M=-k:M=k,R=!0),R){let $;M===0||M<0!=c.strides[T]<0?$=0:$=Math.trunc(M/c.strides[T])+(M%c.strides[T]!==0?1:0),g.push($)}else g.push(-1)}for(let T=0;T<c.finalShapeGatherIndices.length;++T){let C=c.finalShapeGatherIndices[T];C>=0?b.push(g[C]):C===pN&&b.push(1)}return{finalShapeSparse:b.filter((T,C)=>c.finalShapeGatherIndices[C]!==pN),finalShape:b,isIdentity:d,sliceDim0:f,isSimpleSlice:h,begin:c.begin,end:c.end,strides:c.strides}}function yte(r,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let e=0;t.beginValid=r.begin!=null,t.endValid=r.end!=null,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let n=0;n<r.dims;n++)if(1<<n&r.ellipsisMask){let o=Math.min(t.dims-(r.dims-n)+1+r.numAddAxisAfterEllipsis,t.dims);for(;e<o;e++)t.begin[e]=0,t.end[e]=0,t.strides[e]=1,t.beginMask|=1<<e,t.endMask|=1<<e,t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[e]=n}else if(1<<n&r.newAxisMask)t.finalShapeGatherIndices.push(pN),t.finalShapeGatherIndicesSparse.push(-1);else{if(e===t.begin.length)throw Error(`Index out of range using input dim ${e}; input has only ${t.dims} dims, ${t.begin.length}.`);r.begin!=null&&(t.begin[e]=r.begin[n]),r.end!=null&&(t.end[e]=r.end[n]),t.strides[e]=r.strides[n],r.beginMask&1<<n&&(t.beginMask|=1<<e),r.endMask&1<<n&&(t.endMask|=1<<e),r.shrinkAxisMask&1<<n?(t.finalShapeGatherIndices.push(lte),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<e):(t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(n)),t.inputShapeGatherIndicesSparse[e]=n,e++}}function wR(r,t,e,n,o,s){if(o[t])return e>0?s[t]:s[t+1&1];{let a=r<0?n+r:r;return a<s[0]?s[0]:a>s[1]?s[1]:a}}var xte="0.0.0";var Wh=class{static sgd(t){return new Xu(t)}static momentum(t,e,n=!1){return new ql(t,e,n)}static rmsprop(t,e=.9,n=0,o=null,s=!1){return new jl(t,e,n,o,s)}static adam(t=.001,e=.9,n=.999,o=null){return new Vl(t,e,n,o)}static adadelta(t=.001,e=.95,n=null){return new Ul(t,e,n)}static adamax(t=.002,e=.9,n=.999,o=null,s=0){return new Hl(t,e,n,o,s)}static adagrad(t,e=.1){return new Kl(t,e)}};var Yl=Wh;var Tte=(()=>typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:r=>r())();function Uh(){return new Promise(r=>Tte(()=>r()))}var I={};Xe(I,{ERF_A1:()=>Ete,ERF_A2:()=>Lte,ERF_A3:()=>Bte,ERF_A4:()=>$te,ERF_A5:()=>Ote,ERF_P:()=>Fte,PARALLELIZE_THRESHOLD:()=>jy,RowPartitionType:()=>ER,SELU_SCALE:()=>cN,SELU_SCALEALPHA:()=>mN,applyActivation:()=>Gl,assertAndGetBroadcastShape:()=>ze,assertAxesAreInnerMostDims:()=>e7,assertParamsConsistent:()=>Cte,assignToTypedArray:()=>Vte,axesAreInnerMostDims:()=>$A,calculateShapes:()=>bP,checkEinsumDimSizes:()=>Zte,checkPadOnDimRoundingMode:()=>Rt,combineLocations:()=>iM,combineRaggedTensorToTensorShapes:()=>kte,complexWithEvenIndex:()=>Wte,complexWithOddIndex:()=>Ute,computeConv2DInfo:()=>Nl,computeConv3DInfo:()=>V1,computeDefaultPad:()=>BA,computeDilation2DInfo:()=>JZ,computeOptimalWindowSize:()=>Ate,computeOutAndReduceShapes:()=>OA,computeOutShape:()=>Ite,computePool2DInfo:()=>LA,computePool3DInfo:()=>eQ,convertConv2DDataFormat:()=>H1,decodeEinsumEquation:()=>Xte,eitherStridesOrDilationsAreOne:()=>Gr,expandShapeToKeepDim:()=>Ia,exponent:()=>qte,exponents:()=>Hte,fromStringArrayToUint8:()=>yre,fromUint8ToStringArray:()=>bre,getAxesPermutation:()=>zA,getBroadcastDims:()=>tM,getComplexWithIndex:()=>Kte,getEinsumComputePath:()=>Qte,getEinsumPermutation:()=>Yte,getFusedBiasGradient:()=>zl,getFusedDyActivation:()=>Ol,getImageCenter:()=>Nte,getInnerMostAxes:()=>t7,getPermuted:()=>_te,getRaggedRank:()=>Ste,getReductionAxes:()=>Nt,getReshaped:()=>Dte,getReshapedPermuted:()=>Mte,getRowPartitionTypesHelper:()=>vte,getSliceBeginCoords:()=>Pte,getSliceSize:()=>Rte,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>rre,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>nre,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>ore,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>ire,getSparseReshapeInputOutputMismatchErrorMessage:()=>pre,getSparseReshapeInputOutputMultipleErrorMessage:()=>ure,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>sre,getSparseReshapeNegativeOutputDimErrorMessage:()=>are,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>dre,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>lre,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>mre,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>cre,getUndoAxesPermutation:()=>Fh,isIdentityPermutation:()=>Jte,log:()=>qY,mergeRealAndImagArrays:()=>zte,prepareAndValidate:()=>SR,prepareSplitSize:()=>tre,segment_util:()=>fN,shouldFuse:()=>Wl,slice_util:()=>kt,splitRealAndImagArrays:()=>Gte,stridesOrDilationsArePositive:()=>yu,tupleValuesAreOne:()=>zs,upcastType:()=>At,validateDefaultValueShape:()=>wte,validateInput:()=>Pc,validateUpdateShape:()=>YA,warn:()=>fu});function Cte(r,t){let e=r[0].length;r.forEach((o,s)=>{D(o.length===e,()=>`Error in concat${e}D: rank of tensors[${s}] must be the same as the rank of the rest (${e})`)}),D(t>=0&&t<e,()=>`Error in concat${e}D: axis must be between 0 and ${e-1}.`);let n=r[0];r.forEach((o,s)=>{for(let a=0;a<e;a++)D(a===t||o[a]===n[a],()=>`Error in concat${e}D: Shape of tensors[${s}] (${o}) does not match the shape of the rest (${n}) along the non-concatenated axis ${s}.`)})}function Ite(r,t){let e=r[0].slice();for(let n=1;n<r.length;n++)e[t]+=r[n][t];return e}var ER=(a=>(a[a.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",a[a.VALUE_ROWIDS=1]="VALUE_ROWIDS",a[a.ROW_LENGTHS=2]="ROW_LENGTHS",a[a.ROW_SPLITS=3]="ROW_SPLITS",a[a.ROW_LIMITS=4]="ROW_LIMITS",a[a.ROW_STARTS=5]="ROW_STARTS",a))(ER||{});function kte(r,t,e){let n=new Array;if(e==null&&t==null)return n;if(t==null)for(;n.length<r+e.length;)n.push(-1);else n=t.slice();if(e==null)return n;if(r+e.length!==n.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${r+e.length}, but shape.rank = ${n.length}`);for(let o=1;o<e.length;++o){let s=e[o],a=n[n.length-e.length+o],i=n[a];if(s>=0)if(i>=0){if(i!==s)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${o+r}] = ${s} but shape[${o+r}] = ${i}`)}else n[a]=s}return n}function vte(r){let t={FIRST_DIM_SIZE:0,VALUE_ROWIDS:1,ROW_LENGTHS:2,ROW_SPLITS:3,ROW_LIMITS:4,ROW_STARTS:5},e=[];for(let n of r)if(n in t)e.push(t[n]);else break;return e}function Ste(r){return r.length===0?0:r[0]===0?r.length-1:r.length}function wte(r,t){if(r==null||t==null)return;let e=r.length,n=t.length;if(e>=n)throw new Error(`defaultValue.shape=${r} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${e} must be less than ragged tensor input flatValues.rank = ${n})`);for(let o=0;o<Math.min(e,n-1);++o){let s=r[o],a=t[o+1];if(s>=0&&a>=0&&s!==1&&s!==a)throw new Error(`defaultValue.shape=${r}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${o-r.length}] = ${s} but ragged tensor input.flatValues.shape[${o-r.length}] = ${a}`)}}var jy=30;function Ate(r){return r<=jy?r:tc(r,Math.floor(Math.sqrt(r)))}function Nte(r,t,e){let n=e*(typeof r=="number"?r:r[0]),o=t*(typeof r=="number"?r:r[1]);return[n,o]}function Dte(r,t,e,n=!0){let o=[];if(n)o=o.concat(t.slice(0)),o.push(r[0]/e),o=o.concat(r.slice(1));else{o=o.concat(r[0]);let s=t.length;for(let a=0;a<s;++a)o=o.concat([r[a+1]/t[a],t[a]]);o=o.concat(r.slice(s+1))}return o}function _te(r,t,e=!0){let n=[];if(e){n.push(t);for(let o=t+1;o<r;++o)o<=2*t?(n.push(o),n.push(o-(t+1))):n.push(o)}else{let o=[],s=[];for(let a=1;a<r;++a)a>=t*2+1||a%2===1?s.push(a):o.push(a);n.push(...o),n.push(0),n.push(...s)}return n}function Mte(r,t,e,n=!0){let o=[];n?o.push(r[0]/e):o.push(r[0]*e);for(let s=1;s<r.length;++s)s<=t.length?n?o.push(t[s-1]*r[s]):o.push(r[s]/t[s-1]):o.push(r[s]);return o}function Pte(r,t){let e=[0];for(let n=0;n<t;++n)e.push(r[n][0]);return e}function Rte(r,t,e){let n=r.slice(0,1);for(let o=0;o<e;++o)n.push(r[o+1]-t[o][0]-t[o][1]);return n}var mN=1.7580993408473768,cN=1.0507009873554805;var Fte=.3275911,Ete=.254829592,Lte=-.284496736,Bte=1.421413741,$te=-1.453152027,Ote=1.061405429;function zte(r,t){if(r.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${r.length}, imag: ${t.length}.`);let e=new Float32Array(r.length*2);for(let n=0;n<e.length;n+=2)e[n]=r[n/2],e[n+1]=t[n/2];return e}function Gte(r){let t=new Float32Array(r.length/2),e=new Float32Array(r.length/2);for(let n=0;n<r.length;n+=2)t[n/2]=r[n],e[n/2]=r[n+1];return{real:t,imag:e}}function Wte(r){let t=Math.ceil(r.length/4),e=new Float32Array(t),n=new Float32Array(t);for(let o=0;o<r.length;o+=4)e[Math.floor(o/4)]=r[o],n[Math.floor(o/4)]=r[o+1];return{real:e,imag:n}}function Ute(r){let t=Math.floor(r.length/4),e=new Float32Array(t),n=new Float32Array(t);for(let o=2;o<r.length;o+=4)e[Math.floor(o/4)]=r[o],n[Math.floor(o/4)]=r[o+1];return{real:e,imag:n}}function Kte(r,t){let e=r[t*2],n=r[t*2+1];return{real:e,imag:n}}function Vte(r,t,e,n){r[n*2]=t,r[n*2+1]=e}function Hte(r,t){let e=new Float32Array(r/2),n=new Float32Array(r/2);for(let o=0;o<Math.ceil(r/2);o++){let s=(t?2:-2)*Math.PI*(o/r);e[o]=Math.cos(s),n[o]=Math.sin(s)}return{real:e,imag:n}}function qte(r,t,e){let n=(e?2:-2)*Math.PI*(r/t),o=Math.cos(n),s=Math.sin(n);return{real:o,imag:s}}var dN="->",jte=/->/g,LR=",",BR="...";function Xte(r,t){r=r.replace(/\s/g,"");let e=(r.length-r.replace(jte,"").length)/dN.length;if(e<1)throw new Error("Equations without an arrow are not supported.");if(e>1)throw new Error(`Equation must contain exactly one arrow ("${dN}").`);let[n,o]=r.split(dN);D(n.indexOf(BR)===-1,()=>`The ellipsis notation ("${BR}") is not supported yet.`);let s=n.split(LR),a=s.length;if(t!==a)throw new Error(`Expected ${a} input tensors, received ${t}`);if(a>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let i=[];for(let c=0;c<o.length;++c){let d=o[c];if(!s.some(f=>f.indexOf(d)!==-1))throw new Error(`Output subscripts contain the label ${d} not present in the input subscripts.`);i.indexOf(d)===-1&&i.push(d)}for(let c=0;c<n.length;++c){let d=n[c];i.indexOf(d)===-1&&d!==LR&&i.push(d)}let p=new Array(s.length);for(let c=0;c<a;++c){if(new Set(s[c].split("")).size!==s[c].length)throw new Error(`Found duplicate axes in input component ${s[c]}. Support for duplicate axes in input is not implemented yet.`);p[c]=[];for(let d=0;d<s[c].length;++d)p[c].push(i.indexOf(s[c][d]))}let u=i.length,l=o.length,m=[];for(let c=l;c<u;++c)m.push(c);return{allDims:i,summedDims:m,idDims:p}}function Yte(r,t){let e=new Array(r);e.fill(-1);for(let o=0;o<t.length;++o)e[t[o]]=o;let n=[];for(let o=0;o<r;++o)e[o]===-1&&n.push(o);return e=e.filter(o=>o!==-1),{permutationIndices:e,expandDims:n}}function Zte(r,t,e){let n=new Array(r);for(let o=0;o<e.length;++o){let s=e[o].shape;for(let a=0;a<t[o].length;++a)n[t[o][a]]===void 0?n[t[o][a]]=s[a]:D(n[t[o][a]]===s[a],()=>`Expected dimension ${n[t[o][a]]} at axis ${a} of input shaped ${JSON.stringify(s)}, but got dimension ${s[a]}`)}}function Qte(r,t){let e=r,n=[],o=0;r.length===0&&e.push(-1),o=r.length+1;for(let a=0;a<o;++a)n.push([]);let s=[];for(let a=0;a<e.length;++a){let i=e[a],p=ere(t,i);for(let u of p)s.indexOf(u)===-1&&(n[a].push(u),s.push(u))}return{path:e,steps:n}}function Jte(r){return r.every((t,e)=>t===e)}function ere(r,t){let e=[];for(let n=0;n<r.length;++n)(r[n].length===0||r[n].indexOf(t)!==-1||t===-1)&&e.push(n);return e}function tre(r,t,e=0){let n=[];if(typeof t=="number")D(r.shape[e]%t===0,()=>"Number of splits must evenly divide the axis."),n=new Array(t).fill(r.shape[e]/t);else{let o=t.reduce((a,i)=>(i===-1&&(a+=1),a),0);D(o<=1,()=>"There should be only one negative value in split array.");let s=t.indexOf(-1);if(s!==-1){let a=t.reduce((i,p)=>p>0?i+p:i);t[s]=r.shape[e]-a}D(r.shape[e]===t.reduce((a,i)=>a+i),()=>"The sum of sizes must match the size of the axis dimension."),n=t}return n}function rre(r){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${r}`}function nre(r,t){return`indices(${r}, 0) is invalid: ${t} < 0`}function ore(r,t,e){return`indices(${r}, 0) is invalid: ${t} >= ${e}`}function sre(r,t){return`only one output dimension may be -1, not both ${r} and ${t}`}function are(r,t){return`size ${r} must be non-negative, not ${t}`}function ire(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function ure(r,t){let e=st(r),n=st(t);return`Input to reshape is a SparseTensor with ${e}
  dense values, but the requested shape requires a multiple of ${n}. inputShape=${r} outputShape= ${t}`}function pre(r,t){let e=st(r),n=st(t);return`Input to reshape is a tensor with ${e} dense values, but the requested shape has ${n}. inputShape=${r} outputShape=${t}`}function lre(){return"segment ids must be >= 0"}function mre(){return"segment ids are not increasing"}function cre(r,t){return`Segment id ${r} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function dre(r,t,e){return`Bad: indices[${r}] == ${t} out of range [0, ${e})`}var fN={};Xe(fN,{collectGatherOpShapeInfo:()=>gre,computeOutShape:()=>hre,segOpComputeOptimalWindowSize:()=>fre});function fre(r,t){let e=!1,n;for(r<=jy?(n=r,e=!0):n=tc(r,Math.floor(Math.sqrt(r)));!e;)n>t||n===r?e=!0:n=tc(r,n+1);return n}function hre(r,t,e){let n=[],o=r.length;for(let s=0;s<o;s++)s!==t?n.push(r[s]):n.push(e);return n}function gre(r,t,e,n){let o=t.shape.length,s=r.shape.length;if(n!==0&&(n<-o||n>o))throw new Error(`Expect batchDims in the range of [-${o}, ${o}], but got ${n}`);if(n<0&&(n+=o),n>s)throw new Error(`batchDims (${n}) must be less than rank(x) (
    ${s}).`);if(e<n)throw new Error(`batchDims (${n}) must be less than or equal to axis (${e}).`);for(let m=0;m<n;++m)if(r.shape[m]!==t.shape[m])throw new Error(`x.shape[${m}]: ${r.shape[m]} should be equal to indices.shape[${m}]: ${t.shape[m]}.`);let a=r.shape[e],i=[],p=1,u=1,l=1;for(let m=0;m<n;++m)i.push(r.shape[m]),p*=r.shape[m];for(let m=n;m<e;m++)i.push(r.shape[m]),u*=r.shape[m];for(let m=n;m<o;m++)i.push(t.shape[m]);for(let m=e+1;m<s;m++)i.push(r.shape[m]),l*=r.shape[m];return{batchSize:p,sliceSize:l,outerSize:u,dimSize:a,outputShape:i}}function bre(r){try{return r.map(t=>mc(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function yre(r){return r.map(t=>Fp(t))}var vr={};Xe(vr,{nonMaxSuppressionV3Impl:()=>Oy,nonMaxSuppressionV4Impl:()=>zy,nonMaxSuppressionV5Impl:()=>Gy,whereImpl:()=>Ry});mR();var Bn=class extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Bn.prototype)}},tn=class extends Error{constructor(t){super(t),Object.setPrototypeOf(this,tn.prototype)}},O=class extends Error{constructor(t){super(t),Object.setPrototypeOf(this,O.prototype)}},Me=class extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Me.prototype)}},Lc=class extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Lc.prototype)}};var Kh=class{constructor(t){this.maxEntries=t||100,this.cache=new Map}get(t){let e;return this.cache.has(t)&&(e=this.cache.get(t),this.cache.delete(t),this.cache.set(t,e)),e}put(t,e){if(this.cache.has(t))this.cache.delete(t);else if(this.cache.size>=this.maxEntries){let n=this.cache.keys().next().value;this.cache.delete(n)}this.cache.set(t,e)}getMaxEntries(){return this.maxEntries}setMaxEntries(t){if(t<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${t}.`);if(this.maxEntries>t)for(let e=0;e<this.maxEntries-t;e++){let n=this.cache.keys().next().value;this.cache.delete(n)}this.maxEntries=t}};function Aa(r,t){if(Array.isArray(r)){let e=[];for(let n=0;n<t;n++)e=e.concat(r);return e}else{let e=new Array(t);return e.fill(r),e}}function Ks(r,t){if(!r)throw new Lc(t)}function gN(r,t){let e=0;for(let n of r)n===t&&e++;return e}function Er(r){return r.length===1?r[0]:r}function Dt(r){return Array.isArray(r)?r:[r]}function Na(r){let e=r.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return e[0]!=="_"?e:"private"+e}function Yu(r){return r.length<=1||r.indexOf("_")===-1?r:r.replace(/[_]+(\w|$)/g,(t,e)=>e.toUpperCase())}var wa={};function Bc(r){if(r==null)return null;let t={};return t.className=r.getClassName(),t.config=r.getConfig(),t}function hN(r){if(!(r==null||typeof r!="object"))if(Array.isArray(r))r.forEach(t=>hN(t));else{let t=Object.keys(r);for(let e of t){let n=r[e];n!=null&&typeof n=="object"&&(!Array.isArray(n)&&n.type==="ndarray"&&typeof n.value=="number"?r[e]=n.value:hN(n))}}}function Iu(r,t={},e={},n="object",o=!1){if(typeof r=="string"){let s=r,a;if(s in e)a=e[s];else if(s in wa)a=wa[s];else if(a=t[s],a==null)throw new O(`Unknown ${n}: ${r}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}else{let s=r;if(s.className==null||s.config==null)throw new O(`${n}: Improper config format: ${JSON.stringify(s)}.
'className' and 'config' must set.`);let a=s.className,i,p;if(a in e?[i,p]=e[a]:a in wa?[i,p]=wa.className:a in t&&([i,p]=t[a]),i==null)throw new O(`Unknown ${n}: ${a}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(p!=null){let u={};for(let d of Object.keys(wa))u[d]=wa[d];for(let d of Object.keys(e))u[d]=e[d];let l=s.config;l.customObjects=u;let m={...wa};for(let d of Object.keys(e))wa[d]=e[d];hN(s.config);let c=p(i,s.config,e,o);return wa={...m},c}else{let u={...wa};for(let m of Object.keys(e))wa[m]=e[m];let l=new i(s.config);return wa={...u},l}}}function xre(r,t){return r<t?-1:r>t?1:0}function Vh(r,t){return-1*xre(r,t)}function Da(r){if(r==null)return r;let t=[];for(let e of r)t.indexOf(e)===-1&&t.push(e);return t}function $R(r){if(r==null)throw new O(`Invalid value in obj: ${JSON.stringify(r)}`);for(let t in r)if(r.hasOwnProperty(t))return!1;return!0}function ku(r,t,e){if(e!=null&&r.indexOf(e)<0)throw new O(`${e} is not a valid ${t}.  Valid values are ${r} or null/undefined.`)}function Xy(r,t,e=0,n=1/0){return Ks(e>=0),Ks(n>=e),Array.isArray(r)&&r.length>=e&&r.length<=n&&r.every(o=>typeof o===t)}function ir(r,t){Array.isArray(r)?(y.assert(r.length>0,()=>`${t} is unexpectedly an empty array.`),r.forEach((e,n)=>ir(e,`element ${n+1} of ${t}`))):y.assert(Number.isInteger(r)&&r>0,()=>`Expected ${t} to be a positive integer, but got ${OR(r)}.`)}function OR(r){return r===null?"null":Array.isArray(r)?"["+r.map(t=>OR(t)).join(",")+"]":typeof r=="string"?`"${r}"`:`${r}`}function zR(r,t,e){let n=e!=null?e():y.now(),o;return(...a)=>{let i=e!=null?e():y.now();return i-n<t||(n=i,o=r(...a)),o}}function Yy(r){return r==="relu"?"relu":r==="linear"?"linear":r==="elu"?"elu":null}var Tre=0;function Qy(){return Tre++}var Zy={};function Yp(r=""){return r in Zy||(Zy[r]=0),Zy[r]+=1,r+Zy[r].toString()}var GR=["channelsFirst","channelsLast"],WR=["nearest","bilinear"],UR=["valid","same","causal"],KR=["max","avg"],VR=["sum","mul","concat","ave"];var $c=new Map;function Kt(r){ku(GR,"DataFormat",r)}function qR(r){ku(WR,"InterpolationFormat",r)}function kn(r){ku(UR,"PaddingMode",r)}function bN(r){ku(KR,"PoolMode",r)}var Hh=[],HR="/";function Mi(r,t){Hh.push(r);try{let e=t();return Hh.pop(),e}catch(e){throw Hh.pop(),e}}function Cre(){return Hh.length===0?"":Hh.join(HR)+HR}function Jy(r){if(!jR(r))throw new Error("Not a valid tensor name: '"+r+"'");return Cre()+r}function ex(r){if(!jR(r))throw new Error("Not a valid tensor name: '"+r+"'");$c.has(r)||$c.set(r,0);let t=$c.get(r);if($c.set(r,$c.get(r)+1),t>0){let e=`${r}_${t}`;return $c.set(e,1),e}else return r}var Ire=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function jR(r){return!!r.match(Ire)}function XR(r){return r===parseInt(r.toString(),10)}function _a(r,t,e){t==null&&(t=0),e==null&&(e=r.length);let n=1;for(let o=t;o<e;++o)n*=r[o];return n}function Zl(r){if(r.length===0)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let e=0;e<r.length;e++){let n=r[e];n<t&&(t=n)}return t}function Pi(r){if(r.length===0)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let e=0;e<r.length;e++){let n=r[e];n>t&&(t=n)}return t}function vn(r,t){if(t<r)throw new O(`end (${t}) < begin (${r}) is forbidden.`);let e=[];for(let n=r;n<t;++n)e.push(n);return e}var yN;function br(){return yN==null&&(yN=E1().epsilon()),yN}function Sn(){return"channelsLast"}function mn(r,t){return ne(r,t)}function Qu(r,t=-1){let e=r.shape.slice();return t<0&&(t=e.length+t+1),e.splice(t,0,1),E(r,e)}function YR(r,t){return z(()=>{if(r.shape.length!==2)throw new O(`repeat() expects a rank-2 tensor, but received a rank-${r.shape.length} tensor.`);let e=Qu(r,1);return rx(e,[1,t,1])})}function ZR(r){let t=[_a(r.shape)];return E(r,t)}function QR(r){if(r.rank<=1)throw new O(`batchFlatten requires a minimum rank of 2. Got rank: ${r.rank}.`);let t=[r.shape[0],_a(r.shape,1)];return E(r,t)}function Zu(r,t,e){return z(()=>{switch(r.rank){case 1:return Ac(r,t,e);case 2:return Bh(r,[t,0],[e,r.shape[1]]);case 3:return Nc(r,[t,0,0],[e,r.shape[1],r.shape[2]]);case 4:return Bl(r,[t,0,0,0],[e,r.shape[1],r.shape[2],r.shape[3]]);case 5:return We(r,[t,0,0,0,0],[e,r.shape[1],r.shape[2],r.shape[3],r.shape[4]]);case 6:return We(r,[t,0,0,0,0,0],[e,r.shape[1],r.shape[2],r.shape[3],r.shape[4],r.shape[5]]);default:throw new O(`sliceAlongFirstAxis() received an unsupported tensor rank: ${r.rank}`)}})}function xN(r,t,e){return z(()=>{switch(r.rank){case 1:return Ac(r,t,e);case 2:return Bh(r,[0,t],[r.shape[0],e]);case 3:return Nc(r,[0,0,t],[r.shape[0],r.shape[1],e]);case 4:return Bl(r,[0,0,0,t],[r.shape[0],r.shape[1],r.shape[2],e]);default:throw new O(`sliceAlongLastAxis() received an unsupported tensor rank: ${r.rank}`)}})}function qh(r,t,e,n){return z(()=>{switch(r.rank){case 1:return Ac(r,t,e);case 2:switch(n){case 1:return Zu(r,t,e);case 2:return xN(r,t,e);default:throw new O(`The axis is not within the rank of the tensor ${n}`)}case 3:switch(n){case 1:return Zu(r,t,e);case 2:return Nc(r,[0,t,0],[r.shape[0],e,r.shape[2]]);case 3:return xN(r,t,e);default:throw new O(`The axis is not within the rank of the tensor ${n}`)}case 4:switch(n){case 1:return Zu(r,t,e);case 2:return Bl(r,[0,t,0,0],[r.shape[0],e,r.shape[2],r.shape[3]]);case 3:return Bl(r,[0,0,t,0],[r.shape[0],r.shape[1],e,r.shape[3]]);case 4:return xN(r,t,e);default:throw new O(`The axis is not within the rank of the tensor ${n}`)}default:throw new O(`sliceAlongLastAxis() received an unsupported tensor rank: ${r.rank}`)}})}function Oc(r,t=-1){let e;return t<0&&(e=r[0].rank,e!==0?t=e:t=0),t===r[0].rank&&(t=-1),ht(r,t)}function CN(r,t){switch(r.rank){case 1:return Qb([r,t]);case 2:return Jb([r,t],0);case 3:return ey([r,t],0);case 4:return ty([r,t],0);default:throw new O(`concatAlongFirstAxis() received an unsupported tensor rank: ${r.rank}`)}}function rx(r,t){if(Array.isArray(t)||(t=[t]),r.rank!==t.length)throw new O(`The length of input n (${t.length}) does not match the number of dimensions in input x (${r.rank})`);return un(r,t)}function zc(r,t=0,e=1,n,o){return Ll(r,t,e,n,o)}function Ma(r,t,e,n){if(r.rank<2||t.rank<2)throw new Me(`dot requires both inputs to be rank >= 2 but got x shape = ${r.shape} and y shape = ${t.shape}`);if(t.rank>=3){let o=r.shape.slice(-1)[0],s=t.shape.slice(-2)[0];if(o!==s)throw new Me(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${r.shape} and  y shape = ${t.shape}`)}if(r.rank===2&&t.rank===2)return Xp.matMul({a:r,b:t,transposeA:!1,transposeB:!1,bias:n?TN(r.rank,n,Sn()):null,activation:e});{let o=r.shape.slice(),s=o.pop();r=E(r,[-1,s]);let a=t.shape.slice(),i=a.pop(),p=a.pop(),u=[...a,i],l=Array.from({length:t.rank},(f,h)=>h===0?t.rank-2:h<=t.rank-2?h-1:h);t=E(qe(t,l),[p,-1]);let m=[...o,...u],c=!1,d=!1;return E(Xp.matMul({a:r,b:t,transposeA:c,transposeB:d,bias:n?TN(r.rank,n,Sn()):null,activation:e}),m)}}function nx(r,t,e){return z(()=>(Array.isArray(t)?t=rr(t,"int32"):t=ne(t,"int32"),Vp(r,t,e)))}function Ql(r){return F(r,r)}function TN(r,t,e){let n=t.shape;if(t.rank!==1&&t.rank!==r)throw new O(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${r}`);if(r===5){if(e==="channelsFirst")return n.length===1?E(t,[1,n[0],1,1,1]):E(t,[1,n[3],n[0],n[1],n[2]]);if(e==="channelsLast")return n.length===1?E(t,[1,1,1,1,n[0]]):E(t,[1].concat(n))}else if(r===4){if(e==="channelsFirst")return n.length===1?E(t,[1,n[0],1,1]):E(t,[1,n[2],n[0],n[1]]);if(e==="channelsLast")return n.length===1?E(t,[1,1,1,n[0]]):E(t,[1].concat(n))}else if(r===3){if(e==="channelsFirst")return n.length===1?E(t,[1,n[0],1]):E(t,[1,n[1],n[0]]);if(e==="channelsLast")return n.length===1?E(t,[1,1,n[0]]):E(t,[1].concat(n))}else if(r<3)return t;throw new O(`Unsupported input rank by biasAdd: ${t.rank}`)}function wn(r,t,e){return z(()=>(e==null&&(e=Sn()),Kt(e),Q(r,TN(r.rank,t,e))))}function JR(r,t=1){if(t!==1)throw new Me(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Up(r)}function eF(r){return z(()=>de(r,Q(Ut(r),1)))}function ox(r,t,e,n){return z(()=>ZA(r,t,e,n))}function tF(r){return z(()=>{let t=Q(.5,F(.2,r));return Yr(t,0,1)})}function Zp(r,t,e=!1){return e?r():t()}var rF=["fanIn","fanOut","fanAvg"],nF=["normal","uniform","truncatedNormal"];function kre(r){ku(rF,"FanMode",r)}function vre(r){ku(nF,"Distribution",r)}var An=class extends J.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},Gc=class extends An{apply(t,e){return It(t,e)}};Gc.className="Zeros";J.registerClass(Gc);var Qp=class extends An{apply(t,e){return kr(t,e)}};Qp.className="Ones";J.registerClass(Qp);var Wc=class extends An{constructor(e){super();if(typeof e!="object")throw new O(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new O(`config must have value set but got ${e}`);this.value=e.value}apply(e,n){return z(()=>F(he(this.value),kr(e,n)))}getConfig(){return{value:this.value}}};Wc.className="Constant";J.registerClass(Wc);var Uc=class extends An{constructor(e){super();this.DEFAULT_MINVAL=-.05;this.DEFAULT_MAXVAL=.05;this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,n){return no(e,this.minval,this.maxval,n,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};Uc.className="RandomUniform";J.registerClass(Uc);var Kc=class extends An{constructor(e){super();this.DEFAULT_MEAN=0;this.DEFAULT_STDDEV=.05;this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,n){if(n=n||"float32",n!=="float32"&&n!=="int32")throw new Me(`randomNormal does not support dType ${n}.`);return zc(e,this.mean,this.stddev,n,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};Kc.className="RandomNormal";J.registerClass(Kc);var Vc=class extends An{constructor(e){super();this.DEFAULT_MEAN=0;this.DEFAULT_STDDEV=.05;this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,n){if(n=n||"float32",n!=="float32"&&n!=="int32")throw new Me(`truncatedNormal does not support dType ${n}.`);return Rc(e,this.mean,this.stddev,n,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};Vc.className="TruncatedNormal";J.registerClass(Vc);var Hc=class extends An{constructor(e){super();this.gain=e.gain!=null?e.gain:1}apply(e,n){return z(()=>{if(e.length!==2||e[0]!==e[1])throw new O("Identity matrix initializer can only be used for 2D square matrices.");return F(this.gain,Ml(e[0]))})}getConfig(){return{gain:this.gain}}};Hc.className="Identity";J.registerClass(Hc);function Sre(r,t="channelsLast"){let e,n;if(Kt(t),r.length===2)e=r[0],n=r[1];else if([3,4,5].indexOf(r.length)!==-1){if(t==="channelsFirst"){let o=_a(r,2);e=r[1]*o,n=r[0]*o}else if(t==="channelsLast"){let o=_a(r,0,r.length-2);e=r[r.length-2]*o,n=r[r.length-1]*o}}else{let o=_a(r);e=Math.sqrt(o),n=Math.sqrt(o)}return[e,n]}var rn=class extends An{constructor(e){super();if(e.scale<0)throw new O(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,kre(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,vre(this.distribution),this.seed=e.seed}apply(e,n){let o=Sre(e),s=o[0],a=o[1],i=this.scale;if(this.mode==="fanIn"?i/=Math.max(1,s):this.mode==="fanOut"?i/=Math.max(1,a):i/=Math.max(1,(s+a)/2),this.distribution==="normal"){let p=Math.sqrt(i);if(n=n||"float32",n!=="float32"&&n!=="int32")throw new Me(`${this.getClassName()} does not support dType ${n}.`);return Rc(e,0,p,n,this.seed)}else{let p=Math.sqrt(3*i);return no(e,-p,p,n,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};rn.className="VarianceScaling";J.registerClass(rn);var Jl=class extends rn{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return rn.className}};Jl.className="GlorotUniform";J.registerClass(Jl);var em=class extends rn{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return rn.className}};em.className="GlorotNormal";J.registerClass(em);var tm=class extends rn{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return rn.className}};tm.className="HeNormal";J.registerClass(tm);var rm=class extends rn{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return rn.className}};rm.className="HeUniform";J.registerClass(rm);var nm=class extends rn{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return rn.className}};nm.className="LeCunNormal";J.registerClass(nm);var om=class extends rn{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return rn.className}};om.className="LeCunUniform";J.registerClass(om);var qc=class extends An{constructor(e){super();this.DEFAULT_GAIN=1;this.ELEMENTS_WARN_SLOW=2e3;this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,n){return z(()=>{if(e.length<2)throw new Me("Shape must be at least 2D.");if(n!=="int32"&&n!=="float32"&&n!==void 0)throw new TypeError(`Unsupported data type ${n}.`);n=n;let o=y.sizeFromShape(e.slice(0,-1)),s=e[e.length-1],a=o*s;a>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${a}) elements: Slowness may result.`);let i=[Math.max(s,o),Math.min(s,o)],p=zc(i,0,1,n,this.seed),u=eN.qr(p,!1),l=u[0],c=u[1].flatten().stridedSlice([0],[Math.min(s,o)*Math.min(s,o)],[Math.min(s,o)+1]);return l=F(l,c.sign()),o<s&&(l=l.transpose()),F(he(this.gain),l.reshape(e))})}getConfig(){return{gain:this.gain,seed:this.seed}}};qc.className="Orthogonal";J.registerClass(qc);var oF={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function sF(r,t={}){return Iu(r,J.SerializationMap.getMap().classNameMap,t,"initializer")}function Ft(r){return Bc(r)}function vt(r){if(typeof r=="string"){let t=r in oF?oF[r]:r;if(t==="GlorotNormal")return new em;if(t==="GlorotUniform")return new Jl;if(t==="HeNormal")return new tm;if(t==="HeUniform")return new rm;if(t==="LeCunNormal")return new nm;if(t==="LeCunUniform")return new om;{let e={};return e.className=t,e.config={},sF(e)}}else return r instanceof An?r:sF(r)}function sx(r){return Array.isArray(r)&&Array.isArray(r[0])}function jc(r){return r.length===0?[]:Array.isArray(r[0])?r:[r]}function Ne(r){let t;if(Array.isArray(r)){if(r.length!==1)throw new O(`Expected Tensor length to be 1; got ${r.length}`);t=r[0]}else t=r;return t}function Ke(r){if(Array.isArray(r)&&Array.isArray(r[0])){if(r.length===1)return r=r,r[0];throw new O(`Expected exactly 1 Shape; got ${r.length}`)}else return r}function Xc(r){let t=0;for(let e of r)e.shape.length===0?t+=1:t+=e.shape.reduce((n,o)=>n*o);return t}var iF="Variable",jh=class{constructor(t,e="float32",n=iF,o=!0,s=null){this.dtype=e??"float32",this.shape=t.shape,this.id=Qy(),n=n??iF,this.originalName=Jy(n),this.name=ex(this.originalName),this.trainable_=o,this.constraint=s,this.val=Py(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),Are(this.val,t),this.val.id!==t.id&&(this.val.assign(t),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}};function Are(r,t){if(r.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(r.shape)+" vs. "+JSON.stringify(t.shape))}function Xh(r){return r.map(t=>t.read())}function Yc(r){r.forEach(t=>{t[0].write(t[1])})}var _t=class{constructor(t){this.dtype=t.dtype,this.shape=t.shape,t.shape!=null?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}},cn=class{constructor(t,e,n,o,s,a,i){this.dtype=t;this.shape=e;this.sourceLayer=n;this.inputs=o;this.callArgs=s;this.outputTensorIndex=i;this.id=Qy(),a!=null&&(this.originalName=Jy(a),this.name=ex(this.originalName)),this.rank=e.length}},Nre=0,Ju=class{constructor(t,e){this.callArgs=e;this.id=Nre++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(let n of t.inboundLayers)n?.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){let t=[];for(let e of this.inboundLayers)e!=null?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},Dre=0,Re=class extends J.Serializable{constructor(e={}){super();this._callHook=null;this._addedWeightNames=[];this._stateful=!1;this.id=Dre++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let n=e.name;if(!n){let o=this.getClassName();n=Na(o)+"_"+Yp(o)}if(this.name=n,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let o;if(e.batchInputShape!=null)o=e.batchInputShape;else if(e.inputShape!=null){let a=null;e.batchSize!=null&&(a=e.batchSize),o=[a].concat(e.inputShape)}this.batchInputShape=o;let s=e.dtype;s==null&&(s=e.inputDType),s==null&&(s="float32"),this.dtype=s}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,n){return e.name+"_ib-"+n.toString()}getNodeAtIndex(e,n){if(this.inboundNodes.length===0)throw new tn(`The layer has never been called and thus has no defined ${n}.`);if(this.inboundNodes.length<=e)throw new O(`Asked to get ${n} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Er(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Er(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Bn(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new Bn(`Layer ${this.name} is not connected, no input to return.`);return Er(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new Bn(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Bn(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Er(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(n=>n.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=Dt(e),this.inputSpec==null||this.inputSpec.length===0)return;let n=Dt(this.inputSpec);if(e.length!==n.length)throw new O(`Layer ${this.name} expects ${n.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let o=0;o<e.length;o++){let s=e[o],a=n[o];if(a==null)continue;let i=s.rank;if(a.ndim!=null&&i!==a.ndim)throw new O(`Input ${o} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${i}`);if(a.maxNDim!=null&&i>a.maxNDim)throw new O(`Input ${o} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${i}`);if(a.minNDim!=null&&i<a.minNDim)throw new O(`Input ${o} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${i}.`);if(a.dtype!=null&&s.dtype!==a.dtype)throw new O(`Input ${o} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${s.dtype}.`);if(a.axes){let p=s.shape;for(let u in a.axes){let l=Number(u),m=a.axes[u],c=l>=0?p[l]:p[p.length+l];if(m!=null&&[m,null].indexOf(c)===-1)throw new O(`Input ${o} is incompatible with layer ${this.name}: expected axis ${l} of input shape to have value ${m} but got shape ${p}.`)}}if(a.shape!=null)for(let p=0;p<a.shape.length;++p){let u=a.shape[p],l=s.shape[p];if(u!=null&&l!=null&&u!==l)throw new O(`Input ${o} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${s.shape}.`)}}}call(e,n){return e}invokeCallHook(e,n){this._callHook!=null&&this._callHook(e,n)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,n){n=n||{},this.assertNotDisposed();let o=Dt(e),s=!0;for(let i of o)if(!(i instanceof cn)){s=!1;break}let a=!0;for(let i of o)if(i instanceof cn){a=!1;break}if(s===a)throw new O("Arguments to apply() must be all SymbolicTensors or all Tensors");return Mi(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);let i=[];for(let p of Dt(e))i.push(p.shape);this.build(Er(i)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let i=this.call(e,n),p=Dt(i),u=[];for(let l of p)o.indexOf(l)!==-1&&(l=l.clone()),u.push(l);if(i=Er(u),this.activityRegularizer!=null)throw new Me("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return i}else{let i=_re(e),p=this.computeOutputShape(i),u,l=Mre(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?i[0]:i),p!=null&&p.length>0&&Array.isArray(p[0])?u=p.map((m,c)=>new cn(l,m,this,Dt(e),n,this.name,c)):u=new cn(l,p,this,Dt(e),n,this.name),this.addInboundNode(e,u,null,null,i,p,n),this._refCount++,this.activityRegularizer!=null)throw new Me("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return u}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let n=!1;this.batchInputShape.forEach((o,s)=>{o!=null&&e[s]!=null&&e[s]!==o&&(n=!0)}),n&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new Bn(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let n of this.inboundNodes){let o=JSON.stringify(n.outputShapes);e.indexOf(o)===-1&&e.push(o)}if(e.length===1){let n=this.inboundNodes[0].outputShapes;return Array.isArray(n)&&Array.isArray(n[0])&&n.length===1?n[0]:n}else throw new Bn(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new tn(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Xc(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Xh(e?this.trainableWeights:this.weights)}setWeights(e){z(()=>{let n=this.weights;if(n.length!==e.length)throw new O(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${n.length} weights. Provided weights: ${e}...`);if(n.length===0)return;let o=[],s=Xh(n);for(let a=0;a<s.length;++a){let i=s[a],p=n[a],u=e[a];if(!y.arraysEqual(i.shape,u.shape))throw new O(`Layer weight shape ${i.shape} not compatible with provided weight shape ${u.shape}`);o.push([p,u])}Yc(o)})}addWeight(e,n,o,s,a,i,p,u){if(this._addedWeightNames.indexOf(e)!==-1)throw new O(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),o==null&&(o="float32"),this.fastWeightInitDuringBuild&&(s=u!=null?u():vt("zeros"));let l=s.apply(n,o),m=new jh(l,o,e,i,p);return l.dispose(),a!=null&&this.addLoss(()=>a.apply(m.read())),i==null&&(i=!0),i?this._trainableWeights.push(m):this._nonTrainableWeights.push(m),m}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=Dt(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,n){if(!this.supportsMasking){if(n!=null)if(Array.isArray(n))n.forEach(o=>{if(o!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return n}addInboundNode(e,n,o,s,a,i,p=null){let u=Dt(e);n=Dt(n),o=Dt(o),s=Dt(s),a=jc(a),i=jc(i);let l=[],m=[],c=[];for(let d of u)l.push(d.sourceLayer),m.push(d.nodeIndex),c.push(d.tensorIndex);new Ju({outboundLayer:this,inboundLayers:l,nodeIndices:m,tensorIndices:c,inputTensors:u,outputTensors:n,inputMasks:o,outputMasks:s,inputShapes:a,outputShapes:i},p);for(let d=0;d<n.length;d++)n[d].sourceLayer=this,n[d].nodeIndex=this.inboundNodes.length-1,n[d].tensorIndex=d}getConfig(){let e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function _re(r){r=Dt(r);let t=[];for(let e of r)t.push(e.shape);return Er(t)}function Mre(r){return"float32"}function IN(r,t,e){if((t==null||e!=null&&e>0)&&(t=r.sourceLayer,e=r.nodeIndex),t.inboundNodes.length===0)return[r];{let n=t.inboundNodes[e];if(n.inboundLayers.length===0)return n.inputTensors;{let o=[];for(let s=0;s<n.inboundLayers.length;s++){let a=n.inputTensors[s],i=n.inboundLayers[s],p=n.nodeIndices[s],u=IN(a,i,p);for(let l of u)o.indexOf(l)===-1&&o.push(l)}return o}}}var Ri=class extends Re{constructor(e){super({dtype:e.dtype,name:e.name!=null?e.name:Yp("input").toString()});if(e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new O("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let n=e.batchInputShape;if(n==null){if(e.inputShape==null)throw new O("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");n=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new O("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let o=e.dtype||"float32";this.batchInputShape=n,this.dtype=o,this.inputSpec=[{shape:n}];let s=new cn(this.dtype,this.batchInputShape,this,[],{},this.name);s.nodeIndex=0,s.tensorIndex=0,new Ju({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[s],outputTensors:[s],inputMasks:[null],outputMasks:[null],inputShapes:[n],outputShapes:[n]})}apply(e,n){throw new O(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};Ri.className="InputLayer";J.registerClass(Ri);function ax(r){if(r.batchShape==null&&r.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(r.batchShape!=null&&r.shape!=null)throw new O("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=r.batchShape;r.shape!=null&&t==null&&(t=[null].concat(r.shape));let e=r.dtype;return e==null&&(e="float32"),new Ri({batchInputShape:t,name:r.name,dtype:e,sparse:r.sparse}).inboundNodes[0].outputTensors[0]}function Pre(r,t){if(r.dtype==null||r.dtype===t.dtype)return t;try{return ne(t,r.dtype)}catch{throw new O(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${r.name}' (${r.dtype}).`)}}var Pa=class{constructor(t){this.id2Value={};this.id2Mask={};this.name2Id={};if(t instanceof Pa)for(let e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(t==null)return;for(let e of t)this.add(e.key,e.value)}}add(t,e,n){if(this.id2Value[t.id]==null)this.id2Value[t.id]=Pre(t,e),this.name2Id[t.name]=t.id,n!=null&&(this.id2Mask[t.id]=n);else throw new O(`Duplicate key: name=${t.name}, id=${t.id}`);return this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return this.id2Value[t.id]!=null}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof cn){if(this.id2Value[t.id]==null)throw new O(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}else{let e=this.name2Id[t];if(e==null)throw new O(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[e]}}getMask(t){if(t instanceof cn){if(this.id2Value[t.id]==null)throw new O(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}else{let e=this.name2Id[t];if(e==null)throw new O(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[e]}}disposeMasks(){this.id2Mask!=null&&Pe(this.id2Mask)}},ix=new Kh,ux=new Kh;function pF(r){ix?.setMaxEntries(r),ux?.setMaxEntries(r)}function sm(r,t,e,n){let o=e==null?!1:e.training,s=Array.isArray(r),a=s?r:[r],i=a.map(f=>f.name),p=[],u=t.names();for(let f of i)u.indexOf(f)!==-1?p.push(t.getValue(f)):p.push(null);n!=null&&(n.maxNumTensors=-1/0,n.minNumTensors=1/0);let l=i.join(",")+"|"+t.names().sort().join(","),m=ix.get(l),c;if(m==null){let f=Rre(a,t);m=f.sorted,c=f.recipientCounts,ix.put(l,m),ux.put(l,c)}c={},o||Object.assign(c,ux.get(l));let d=new Pa(t);for(let f=0;f<m.length;++f){if(n!=null){let M=Nh().numTensors;M>n.maxNumTensors&&(n.maxNumTensors=M),M<n.minNumTensors&&(n.minNumTensors=M)}let h=m[f],g=h.sourceLayer;if(g instanceof Ri)continue;let b=[],x=[],T=[],C=!1;for(let M of h.inputs){let R=d.getValue(M),$=d.getMask(M);b.push(R),x.push($),$!=null&&(C=!0),o||(c[M.name]--,c[M.name]===0&&!t.hasKey(M)&&i.indexOf(M.name)===-1&&!R.isDisposed&&M.sourceLayer.stateful!==!0&&T.push(R))}C&&(e=e||{},e.mask=x[0]);let k=Dt(g.apply(b,e)),w=null;g.supportsMasking&&(w=g.computeMask(b,x));let _=Ere(h),P=Array.isArray(_)?_:[_];for(let M=0;M<P.length;++M){d.hasKey(P[M])||d.add(P[M],k[M],Array.isArray(w)?w[0]:w);let R=i.indexOf(P[M].name);R!==-1&&(p[R]=k[M])}o||Pe(T)}return d.disposeMasks(),s?p:p[0]}function Rre(r,t){y.assert(r!=null&&r.length>0,()=>"Expected at least one fetch, got none");let e=[],n={};if(r.length===1){let o=uF(r[0],t);e=o.sorted,n=o.recipientMap}else{let o=new Set;for(let s of r){let{sorted:a,recipientMap:i}=uF(s,t);for(let p of a)o.has(p.name)||(e.push(p),o.add(p.name));for(let p in i)n[p]==null&&(n[p]=new Set),i[p].forEach(u=>n[p].add(u))}}return{sorted:e,recipientCounts:Fre(n)}}function Fre(r){let t={};for(let e in r)t[e]=r[e].size;return t}function uF(r,t){let e=new Set,n=[],o={};for(let i of t.names())e.add(i);let s=[],a=[];for(s.push(r);s.length>0;){let i=s[s.length-1];if(e.has(i.name)){s.pop();continue}let p=a[a.length-1]===s.length-1;if(i.inputs.length===0||p)s.pop(),n.push(i),e.add(i.name),p&&a.pop();else{a.push(s.length-1);for(let u of i.inputs)o[u.name]==null&&(o[u.name]=new Set),o[u.name].add(i.name),!e.has(u.name)&&s.push(u)}}return{sorted:n,recipientMap:o}}function Ere(r){let t;if(r.sourceLayer.inboundNodes.length===1)t=r.sourceLayer.output;else{let e=null;for(let n=0;n<r.sourceLayer.inboundNodes.length;++n)for(let o of r.sourceLayer.inboundNodes[n].outputTensors)if(o.id===r.id){e=n;break}t=r.sourceLayer.getOutputAt(e)}return t}var Lre=L();Lre.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,pF);var px={kernelName:Xs,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>F(r,Tu(ne(e,"float32"),-1))}}};var lF={kernelName:vo,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>{let n=je(ne(e,"float32")),o=zt(me(he(1),n));return Je(de(r,o))}}}};var mF={kernelName:So,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>{let n=zt(me(je(ne(e,"float32")),1));return de(r,n)}}}};var cF={kernelName:Mn,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t,o=ze(e.shape,n.shape);return{a:()=>{let i=r,p=Nt(e.shape,o);return p.length>0&&(i=ge(i,p)),E(i,e.shape)},b:()=>{let i=r,p=Nt(n.shape,o);return p.length>0&&(i=ge(i,p)),E(i,n.shape)}}}};var dF={kernelName:wo,saveAllInputs:!0,gradFunc:(r,t)=>{let e={};return t.forEach((n,o)=>{e[o]=()=>r.clone()}),e}};var fF={kernelName:Ys,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>De(e)}}};var hF={kernelName:Zs,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>De(e)}}};var gF={kernelName:Ao,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>de(r,zt(me(he(1),je(ne(e,"float32")))))}}};var bF={kernelName:No,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>{let n=zt(Q(he(1),je(ne(e,"float32"))));return de(r,n)}}}};var yF={kernelName:Mo,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t,o=ze(e.shape,n.shape);return{a:()=>{let i=Q(je(e),je(n)),p=F(r,de(n,i)),u=Nt(e.shape,o);return u.length>0&&(p=ge(p,u)),E(p,e.shape)},b:()=>{let i=Q(je(e),je(n)),p=Je(F(r,de(e,i))),u=Nt(n.shape,o);return u.length>0&&(p=ge(p,u)),E(p,n.shape)}}}};var xF={kernelName:Do,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>de(r,Q(je(ne(e,"float32")),1))}}};var TF={kernelName:_o,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>de(r,me(he(1),je(ne(e,"float32"))))}}};function Bre(r,t,e,n,o,s){let a=v(r,"dy","avgPool3dGrad"),i=v(t,"input","avgPool3dGrad"),p=a,u=i,l=!1;i.rank===4&&(l=!0,p=E(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),u=E(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),D(p.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${p.rank}.`),D(u.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),Rt("avgPool3dGrad",o,s);let m={dy:p,input:u},c={filterSize:e,strides:n,pad:o,dimRoundingMode:s},d=N.runKernel(Zi,m,c);return l?E(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var CF=A({avgPool3dGrad_:Bre});var IF={kernelName:Qs,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[n]=t,{filterSize:o,strides:s,pad:a,dimRoundingMode:i}=e;return{x:()=>CF(r,n,o,s,a,i)}}};function $re(r,t,e,n,o){let s=v(r,"dy","avgPoolGrad"),a=v(t,"input","avgPoolGrad");D(a.rank===s.rank,()=>`Rank of input (${a.rank}) does not match rank of dy (${s.rank})`);let i=a,p=s,u=!1;a.rank===3&&(u=!0,i=E(a,[1,a.shape[0],a.shape[1],a.shape[2]]),p=E(s,[1,s.shape[0],s.shape[1],s.shape[2]])),D(p.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${p.rank}.`),D(i.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${i.rank}.`);let l={dy:p,input:i},m={filterSize:e,strides:n,pad:o},c=N.runKernel(Yi,l,m);return u?E(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var kF=A({avgPoolGrad_:$re});var vF={kernelName:Po,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[n]=t,{filterSize:o,strides:s,pad:a}=e;return{x:()=>kF(r,n,o,s,a)}}};var SF={kernelName:Ro,inputsToSave:["a","b"],gradFunc:(r,t,e)=>{let[n,o]=t,{transposeA:s,transposeB:a}=e;return!s&&!a?{a:()=>He(r,o,!1,!0),b:()=>He(n,r,!0,!1)}:!s&&a?{a:()=>He(r,o,!1,!1),b:()=>He(r,n,!0,!1)}:s&&!a?{a:()=>He(o,r,!1,!0),b:()=>He(n,r,!1,!1)}:{a:()=>He(o,r,!0,!0),b:()=>He(r,n,!0,!0)}}};var wF={kernelName:Js,gradFunc:(r,t,e)=>{let{blockShape:n,crops:o}=e;return{x:()=>Sc(r,n,o)}}};var AF={kernelName:P_,gradFunc:(r,t,e)=>{let n=e,o=n.inputShape,s=n.shape,a=Array.from(s);for(let p=o.length-1;p>=0;p--)if(o[p]===s[p])a[p]=1;else if(o[p]!==1)throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${s}].`);let i=[];for(let p=0;p<a.length;p++)a[p]>1&&i.push(p);return{x:()=>ge(r,i,!0)}}};var NF={kernelName:jn,gradFunc:r=>({x:()=>r.clone()})};var DF={kernelName:Fo,gradFunc:r=>({x:()=>De(r)})};var _F={kernelName:Xn,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[n]=t,{clipValueMin:o,clipValueMax:s}=e;return{x:()=>Et(pn(to(n,o),ka(n,s)),r,De(r))}}};var MF={kernelName:Ji,inputsToSave:["x"],gradFunc:px.gradFunc};var PF={kernelName:ea,saveAllInputs:!0,gradFunc:(r,t,e)=>{let n=t.map(p=>p.shape),{axis:o}=e,s=Tr(o,t[0].shape)[0],a=n.map(p=>p[s]);return Rr(r,a,s).map(p=>()=>p)}};var RF={kernelName:Eo,inputsToSave:["x","filter"],gradFunc:(r,t,e)=>{let[n,o]=t,{dilations:s,strides:a,pad:i,dataFormat:p}=e;return D(zs(s),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`),{x:()=>xc(n.shape,r,o,a,i,p),filter:()=>Fc(n,r,o.shape,a,i,p)}}};var FF={kernelName:Lo,inputsToSave:["dy","filter"],gradFunc:(r,t,e)=>{let[n,o]=t,{strides:s,pad:a,dataFormat:i,dimRoundingMode:p}=e;return{dy:()=>Ws(r,o,s,a,i,1,p),filter:()=>Fc(r,n,o.shape,s,a,i,p)}}};function Ore(r,t,e,n,o){let s=r;r.rank===4&&(s=E(r,[1,r.shape[0],r.shape[1],r.shape[2],r.shape[3]]));let a=t;a.rank===4&&(a=E(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),D(s.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`),D(a.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${a.shape}.`),D(e.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${e}.`),D(s.shape[4]===e[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${e[3]}.`),D(a.shape[4]===e[4],()=>`Error in conv3dDerFilter: depth of dy (${a.shape[4]}) must match output depth for filter (${e[4]}).`);let i={x:s,dy:a},p={strides:n,pad:o,filterShape:e};return N.runKernel(qa,i,p)}var EF=A({conv3DBackpropFilter_:Ore});var LF={kernelName:Bo,inputsToSave:["x","filter"],gradFunc:(r,t,e)=>{let{dilations:n,strides:o,pad:s}=e;D(zs(n),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${n}'`);let[a,i]=t;return{x:()=>sy(a.shape,r,i,o,s),filter:()=>EF(a,r,i.shape,o,s)}}};var BF={kernelName:$o,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>F(Je(wy(ne(e,"float32"))),r)}}};var $F={kernelName:Oo,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>F(Ay(ne(e,"float32")),r)}}};var OF={kernelName:zo,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[n]=t,{axis:o,exclusive:s,reverse:a}=e;return{x:()=>{let i=zA([o],n.rank),p=uy(r,o,s,!a);return i!=null&&(p=qe(p,i)),p}}}};var zF={kernelName:Go,inputsToSave:["x","filter"],gradFunc:(r,t,e)=>{let{dilations:n,strides:o,pad:s,dimRoundingMode:a}=e,i=n??[1,1];D(zs(i),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);let[p,u]=t;return D(p.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${p.rank}.`),D(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),D(p.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),D(Gr(o,i),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${o} and dilations '${i}'.`),Rt("depthwiseConv2d",s,a),{x:()=>Ly(p.shape,r,u,o,s,i,a),filter:()=>Ey(p,r,u.shape,o,s,i,a)}}};var GF={kernelName:Wo,inputsToSave:["x","filter"],gradFunc:(r,t,e)=>{let[n,o]=t,s={x:n,filter:o,dy:r},a={x:n,filter:o,dy:r};return{x:()=>N.runKernel(ru,s,e),filter:()=>N.runKernel(nu,a,e)}}};var WF={kernelName:Ko,outputsToSave:[!0],gradFunc:(r,t)=>{let[e]=t,n={dy:r,y:e};return{x:()=>N.runKernel(Qa,n)}}};var UF={kernelName:Vo,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t,n=F(Cr(Je(je(e))),2/Math.sqrt(Math.PI));return{x:()=>F(r,n)}}};var KF={kernelName:Ho,outputsToSave:[!0],gradFunc:(r,t)=>{let[e]=t;return{x:()=>F(r,e)}}};var VF={kernelName:ta,inputsToSave:["input"],gradFunc:(r,t)=>{let[e]=t;return{input:()=>E(r,e.shape)}}};var HF={kernelName:qo,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>F(r,Cr(e))}}};var qF={kernelName:jo,gradFunc:r=>({x:()=>De(r)})};var jF={kernelName:Xo,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t,o=ze(e.shape,n.shape);return{a:()=>{let i=de(r,ne(n,"float32")),p=Nt(e.shape,o);return p.length>0?E(ge(i,p),e.shape):i},b:()=>{let i=F(r,ne(e,"float32")),p=Nt(n.shape,o);p.length>0&&(i=E(ge(i,p),n.shape));let u=je(n);return Je(de(i,ne(u,"float32")))}}}};var XF={kernelName:Yo,inputsToSave:["x","mean","variance","scale"],gradFunc:(r,t,e)=>{let{varianceEpsilon:n}=e,[o,s,a,i]=t,p=i??he(1),u=Nt(s.shape,o.shape),l=[];if(s.rank===1){for(let C=0;C<o.shape.length-1;++C)l.push(o.shape[C]);l.push(1)}let m=me(o,s),c=F(r,p),d=ky(Q(a,he(n))),f=F(F(F(d,d),d),he(-.5));return{x:()=>s.rank===1?E(F(F(r,un(E(d,[1,1,1,s.shape[0]]),l)),p),o.shape):E(F(F(r,d),p),o.shape),mean:()=>{let C=F(F(d,he(-1)),c);return s.rank===1&&(C=ge(C,u)),E(C,s.shape)},variance:()=>{let C=F(F(f,m),c);return s.rank===1&&(C=ge(C,u)),E(C,s.shape)},scale:()=>{let C=F(m,d),k=F(r,C);return s.rank===1&&(k=ge(k,u)),E(k,s.shape)},offset:()=>{let C=r;return s.rank===1&&(C=ge(C,u)),E(C,s.shape)}}}};var QF={kernelName:ra,inputsToSave:["x","indices"],gradFunc:(r,t,e)=>{let[n,o]=t,{axis:s}=e,a=Tr(s,n.shape)[0];return{x:()=>{let p=n.shape,u=o.size,l=p.slice(0,a),m=l.length,c=p.slice(s,p.length).slice(1),d=c.length,f=YF(0,m),h=YF(m+1,m+1+d),g=ZF([l,[u],c]),b=E(r,g),x=E(o,[u]),T=ZF([[m],f,h]),C=qe(b,T),k=My(C,x,n.shape[a]),w=Fh(T);return k=qe(k,w),k},indices:()=>o}}};function YF(r,t){let e=[];for(let n=r;n<t;++n)e.push(n);return e}function ZF(r){let t=[];for(let e=0;e<r.length;++e)for(let n=0;n<r[e].length;++n)t.push(r[e][n]);return t}var JF={kernelName:Zo,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t;return{a:()=>De(e),b:()=>De(n)}}};var eE={kernelName:Yn,gradFunc:r=>({x:()=>ne(r,"float32")})};var tE={kernelName:Qo,gradFunc:r=>({x:()=>De(r)})};var rE={kernelName:Jo,gradFunc:r=>({x:()=>De(r)})};var nE={kernelName:es,gradFunc:r=>({x:()=>De(r)})};var oE={kernelName:ts,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[n]=t,{alpha:o}=e,s=tr(n,0);return{x:()=>Et(s,r,F(r,o))}}};var sE={kernelName:ns,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>de(r,Q(e,1))}}};var aE={kernelName:rs,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>de(r,ne(e,"float32"))}}};var iE={kernelName:F_,inputsToSave:[],outputsToSave:[!0],gradFunc:(r,t,e)=>{let[n]=t,{axis:o}=e;return{logits:()=>{let a=Cr(n);return me(r,F(ge(r,o,!0),a))}}}};function zre(r,t,e,n=5,o=1,s=1,a=.5){let i={x:r,y:t,dy:e},p={depthRadius:n,bias:o,alpha:s,beta:a};return N.runKernel(pi,i,p)}var uE=A({localResponseNormalizationBackprop_:zre});var pE={kernelName:os,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,t,e)=>{let[n,o]=t,{depthRadius:s,bias:a,alpha:i,beta:p}=e;return{x:()=>uE(n,o,r,s,a,i,p)}}};function lx(r,t,e,n){return t.rank<e.rank&&(t=E(t,Ia(t.shape,n))),r.rank<e.rank&&(r=E(r,Ia(r.shape,n))),{x:()=>F(r,ne(an(e,t),r.dtype))}}var kN={kernelName:ss,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,t,e)=>{let n=e,{reductionIndices:o}=n,s=t[0],a=t[1],i=Tr(o,s.shape),p=lx(r,a,s,i);return{x:()=>p.x()}}};var lE={kernelName:as,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t;return{a:()=>F(r,ne(to(e,n),"float32")),b:()=>F(r,ne(Pl(e,n),"float32"))}}};function Gre(r,t,e,n,o,s,a){let i=v(r,"dy","maxPool3dGrad"),p=v(t,"input","maxPool3dGrad"),u=v(e,"output","maxPool3dGrad"),l=i,m=p,c=u,d=!1;p.rank===4&&(d=!0,l=E(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),m=E(p,[1,p.shape[0],p.shape[1],p.shape[2],p.shape[3]]),c=E(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),D(l.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),D(m.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${m.rank}.`),D(c.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${c.rank}.`),Rt("maxPool3dGrad",s,a);let f={dy:l,input:m,output:c},h={filterSize:n,strides:o,pad:s,dimRoundingMode:a},g=N.runKernel(au,f,h);return d?E(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}var mE=A({maxPool3dGrad_:Gre});var cE={kernelName:na,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,t,e)=>{let[n,o]=t,{filterSize:s,strides:a,pad:i,dimRoundingMode:p}=e;return{x:()=>mE(r,n,o,s,a,i,p)}}};function Wre(r,t,e,n,o,s,a){let i=v(r,"dy","maxPoolGrad"),p=v(t,"input","maxPoolGrad"),u=v(e,"output","maxPoolGrad");D(p.rank===i.rank,()=>`Rank of input (${p.rank}) does not match rank of dy (${i.rank})`),D(i.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${i.rank}.`),D(p.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${p.rank}.`),Rt("maxPoolGrad",s,a);let l={dy:i,input:p,output:u},m={filterSize:n,strides:o,pad:s,dimRoundingMode:a};return N.runKernel(su,l,m)}var dE=A({maxPoolGrad_:Wre});var fE={kernelName:is,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,t,e)=>{let[n,o]=t,{filterSize:s,strides:a,pad:i}=e;return{x:()=>dE(r,n,o,s,a,i)}}};var hE={kernelName:us,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[n]=t,{axis:o}=e,s=Tr(o,n.shape),i=OA(n.shape,s)[1],p=st(i);return{x:()=>{let l=n.shape.slice();s.forEach(d=>{l[d]=1});let m=E(r,l);return de(F(m,kr(n.shape,"float32")),p)}}}};var gE={kernelName:ps,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,t,e)=>{let n=e,{axis:o}=n,[s,a]=t,i=Tr(o,s.shape),p=lx(r,a,s,i);return{x:()=>p.x()}}};var bE={kernelName:ls,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t;return{a:()=>F(r,ne(ka(e,n),"float32")),b:()=>F(r,ne(tr(e,n),"float32"))}}};var yE={kernelName:ms,inputsToSave:["x"],gradFunc:(r,t,e)=>{let n=t[0],{paddings:o}=e,s=o.map(a=>a[0]);return{x:()=>We(r,s,n.shape)}}};var xE={kernelName:cs,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t,o=ze(e.shape,n.shape);return{a:()=>{let i=Nt(e.shape,o);return i.length>0?E(ge(r,i),e.shape):r},b:()=>{let i=F(r,Je(Kp(de(e,n)))),p=Nt(n.shape,o);return p.length>0?E(ge(i,p),n.shape):i}}}};var TE={kernelName:ds,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t,o=ze(e.shape,n.shape);return{a:()=>{let i=F(r,ne(n,"float32")),p=Nt(e.shape,o);return p.length>0?E(ge(i,p),e.shape):i},b:()=>{let i=F(r,ne(e,"float32")),p=Nt(n.shape,o);return p.length>0?E(ge(i,p),n.shape):i}}}};var CE={kernelName:oa,gradFunc:r=>({x:()=>Je(r)})};var IE={kernelName:fs,inputsToSave:["indices"],gradFunc:(r,t)=>{let e=t[0];return{indices:()=>It(e.shape,"float32")}}};var kE={kernelName:sa,gradFunc:r=>({x:()=>De(r)})};var vE={kernelName:aa,saveAllInputs:!0,gradFunc:(r,t,e)=>{let{axis:n}=e;return Fr(r,n).map(s=>()=>s)}};var vN={kernelName:hs,inputsToSave:["x"],gradFunc:(r,t,e)=>{let n=t[0],{paddings:o}=e,s=o.map(a=>a[0]);return{x:()=>We(r,s,n.shape)}}};var SE={kernelName:gs,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(r,t)=>{let[e,n,o]=t,s=e,a=n,i=ze(s.shape,a.shape);return{a:()=>{let l=ne(a,"float32"),m=F(r,F(l,eo(s,me(l,he(1))))),c=Nt(s.shape,i);return c.length>0&&(m=ge(m,c)),E(m,s.shape)},b:()=>{let l=tr(s,0),m=Et(l,Qr(s),De(s)),c=F(r,F(o,m)),d=Nt(a.shape,i);return d.length>0&&(c=ge(c,d)),E(c,a.shape)}}}};var wE={kernelName:bs,inputsToSave:["x","alpha"],gradFunc:(r,t)=>{let[e,n]=t,o=tr(e,0);return{x:()=>Et(o,r,F(r,n)),alpha:()=>{let s=Et(o,De(r),F(r,e)),a=Nt(n.shape,r.shape);return a.length>0&&(s=ge(s,a)),E(s,n.shape)}}}};function Ure(r,t,e){let n=r.shape.slice();n[e]=1;let o=E(t,n),s=Ph(r,e,!0,!1),a=Ph(r,e,!0,!0),i=F(s,a);return F(o,i)}function Kre(r,t,e){let n=r.shape.length,o=n-e.length,s=I.getAxesPermutation(e,n),a=r;s!=null&&(a=qe(r,s));let i=a.shape.slice(),u=i.splice(n-e.length,e.length).reduce((c,d)=>c*d,1);i.push(u);let l=a.reshape(i),m=Ure(l,t,o);if(m=m.reshape(a.shape),s!=null){let c=I.getUndoAxesPermutation(s);m=qe(m,c)}return m}var AE={kernelName:ys,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[n]=t,{axis:o}=e,s=[];return o==null?s=n.shape.map((a,i)=>i):typeof o=="number"?s=[o]:s=o,{x:()=>Kre(n,r,s)}}};var NE={kernelName:Uo,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t,o=ze(e.shape,n.shape);return{a:()=>{let i=de(r,ne(n,"float32")),p=Nt(e.shape,o);return p.length>0?E(ge(i,p),e.shape):i},b:()=>{let i=F(r,ne(e,"float32")),p=Nt(n.shape,o);p.length>0&&(i=E(ge(i,p),n.shape));let u=je(n);return Je(de(i,ne(u,"float32")))}}}};var DE={kernelName:xs,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>de(r,Je(je(e)))}}};var _E={kernelName:ks,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t,n=F(ka(e,6),Tu(e));return{x:()=>F(r,ne(n,"float32"))}}};var ME={kernelName:Ts,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>F(r,ne(Tu(e),"float32"))}}};var PE={kernelName:ia,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>E(r,e.shape)}}};var RE={kernelName:Is,inputsToSave:["images"],gradFunc:(r,t,e)=>{let[n]=t,o={dy:r,images:n};return{images:()=>N.runKernel(hi,o,e)}}};var FE={kernelName:Cs,inputsToSave:["images"],gradFunc:(r,t,e)=>{let[n]=t,o={dy:r,images:n};return{images:()=>N.runKernel(fi,o,e)}}};var EE={kernelName:vs,gradFunc:(r,t,e)=>{let{dims:n}=e,o=Tr(n,r.shape);return{x:()=>Pr(r,o)}}};var LE={kernelName:Ss,gradFunc:r=>({x:()=>De(r)})};var BE={kernelName:ws,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>Je(de(r,F(eo(e,1.5),2)))}}};var $E={kernelName:ua,inputsToSave:["condition"],gradFunc:(r,t)=>{let[e]=t;return{condition:()=>ne(De(e),"float32"),t:()=>F(r,ne(e,r.dtype)),e:()=>F(r,ne(kc(e),r.dtype))}}};var OE={kernelName:As,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>{let n=tr(e,he(0)),o=he(mN),s=he(cN),a=F(r,s),i=F(F(r,o),Cr(ne(e,"float32")));return Et(n,a,i)}}}};var zE={kernelName:Ms,outputsToSave:[!0],gradFunc:(r,t)=>{let[e]=t;return{x:()=>F(r,F(e,me(he(1),e)))}}};var GE={kernelName:_s,gradFunc:r=>({x:()=>De(r)})};var WE={kernelName:Ns,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>F(Tc(ne(e,"float32")),r)}}};var UE={kernelName:Ds,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>F(iy(ne(e,"float32")),r)}}};var KE={kernelName:pa,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[n]=t,{begin:o,size:s}=e,a=n.shape,[i,p]=lN(n,o,s),u=[];for(let l=0;l<r.rank;l++)u.push([i[l],a[l]-i[l]-p[l]]);return{x:()=>ro(r,u)}}};var VE={kernelName:Es,outputsToSave:[!0],gradFunc:(r,t,e)=>{let[n]=t,{dim:o}=e,s=!0,a=F(r,n);return{logits:()=>me(a,F(ge(a,[o],s),n))}}};var HE={kernelName:Ps,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>F(r,Ln(e))}}};var SN={kernelName:la,gradFunc:(r,t,e)=>{let{blockShape:n,paddings:o}=e;return{x:()=>yc(r,n,o)}}};var wN={kernelName:ma,gradFunc:(r,t,e)=>{let{axis:n}=e;return{x:()=>ht(r,n)}}};var qE={kernelName:Rs,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>de(r,F(zt(ne(e,"float32")),2))}}};var jE={kernelName:mu,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>F(r,F(ne(e,"float32"),2))}}};var XE={kernelName:Ls,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t,o=he(2);return{a:()=>F(r,F(o,me(e,n))),b:()=>F(r,F(o,me(n,e)))}}};var YE={kernelName:Zn,gradFunc:r=>({x:()=>De(r)})};var ZE={kernelName:Bs,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t,o=ze(e.shape,n.shape);return{a:()=>{let i=r,p=Nt(e.shape,o);return p.length>0&&(i=ge(i,p)),E(i,e.shape)},b:()=>{let i=r,p=Nt(n.shape,o);return p.length>0&&(i=ge(i,p)),E(Je(i),n.shape)}}}};var QE={kernelName:Fs,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[n]=t,o=n.shape.slice(),{axis:s}=e;Tr(s,n.shape).forEach(u=>{o[u]=1});let i=E(r,o),p=F(i,kr(n.shape,"float32"));return{x:()=>p}}};var JE={kernelName:$s,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>de(r,je(Tc(e)))}}};var eL={kernelName:Os,outputsToSave:[!0],gradFunc:(r,t)=>{let[e]=t;return{x:()=>F(me(he(1),je(e)),r)}}};var tL={kernelName:Pn,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[n]=t,{reps:o}=e;return{x:()=>{let a=De(n);if(n.rank===1)for(let i=0;i<o[0];++i)a=Q(a,We(r,[i*n.shape[0]],[n.shape[0]]));else if(n.rank===2)for(let i=0;i<o[0];++i)for(let p=0;p<o[1];++p)a=Q(a,We(r,[i*n.shape[0],p*n.shape[1]],[n.shape[0],n.shape[1]]));else if(n.rank===3)for(let i=0;i<o[0];++i)for(let p=0;p<o[1];++p)for(let u=0;u<o[2];++u)a=Q(a,We(r,[i*n.shape[0],p*n.shape[1],u*n.shape[2]],[n.shape[0],n.shape[1],n.shape[2]]));else if(n.rank===4)for(let i=0;i<o[0];++i)for(let p=0;p<o[1];++p)for(let u=0;u<o[2];++u)for(let l=0;l<o[3];++l)a=Q(a,We(r,[i*n.shape[0],p*n.shape[1],u*n.shape[2],l*n.shape[3]],[n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${n.rank} tensors yet.`);return a}}}};var rL={kernelName:Rn,gradFunc:(r,t,e)=>{let n=e,{perm:o}=n,s=Fh(o);return{x:()=>qe(r,s)}}};var nL={kernelName:ca,gradFunc:(r,t,e)=>{let n=e,{axis:o}=n;return{value:()=>hr(r,o)}}};var oL={kernelName:du,inputsToSave:["segmentIds"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>Vre(r,e)}}};function Vre(r,t){let e=Us(t,De(t)),n=Vp(r,e),o=to(t,he(0,"int32")),s=n.rank-o.rank;for(let i=0;i<s;++i)o=Ir(o,i+1);o=pn(o,kr(n.shape,"bool"));let a=De(n);return Et(o,n,a)}var sL={kernelName:da,gradFunc:r=>({x:()=>De(r)})};var Hre=[px,lF,mF,cF,dF,fF,hF,gF,bF,yF,xF,TF,IF,vF,SF,wF,AF,NF,DF,_F,MF,PF,FF,RF,LF,BF,$F,OF,zF,GF,NE,WF,UF,KF,VF,HF,jF,qF,XF,QF,JF,eE,tE,rE,nE,oE,sE,aE,iE,pE,kN,kN,lE,cE,fE,hE,gE,bE,yE,xE,TE,CE,IE,kE,vE,vN,vN,SE,wE,AE,DE,_E,ME,PE,RE,FE,EE,LE,BE,$E,OE,zE,GE,WE,UE,KE,VE,HE,SN,SN,wN,wN,qE,XE,jE,YE,ZE,QE,JE,eL,tL,rL,nL,oL,sL];for(let r of Hre)L_(r);var uL={};Xe(uL,{maxNorm:()=>qre,minMaxNorm:()=>Yre,nonNeg:()=>Xre,unitNorm:()=>jre});function AN(r,t){return z(()=>zt(ge(F(r,r),t,!0)))}var am=class extends J.Serializable{getConfig(){return{}}},Zc=class extends am{constructor(e){super();this.defaultMaxValue=2;this.defaultAxis=0;this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return z(()=>{let n=AN(e,this.axis),o=Yr(n,0,this.maxValue);return F(e,de(o,Q(br(),n)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};Zc.className="MaxNorm";J.registerClass(Zc);var Qc=class extends am{constructor(e){super();this.defaultAxis=0;this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return z(()=>de(e,Q(br(),AN(e,this.axis))))}getConfig(){return{axis:this.axis}}};Qc.className="UnitNorm";J.registerClass(Qc);var Jc=class extends am{apply(t){return ln(t)}};Jc.className="NonNeg";J.registerClass(Jc);var ed=class extends am{constructor(e){super();this.defaultMinValue=0;this.defaultMaxValue=1;this.defaultRate=1;this.defaultAxis=0;this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return z(()=>{let n=AN(e,this.axis),o=Q(F(this.rate,Yr(n,this.minValue,this.maxValue)),F(1-this.rate,n));return F(e,de(o,Q(br(),n)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};ed.className="MinMaxNorm";J.registerClass(ed);var aL={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function jt(r){return Bc(r)}function iL(r,t={}){return Iu(r,J.SerializationMap.getMap().classNameMap,t,"constraint")}function Xt(r){if(r==null)return null;if(typeof r=="string"){let e={className:r in aL?aL[r]:r,config:{}};return iL(e)}else return r instanceof am?r:iL(r)}function qre(r){return new Zc(r)}function jre(r){return new Qc(r)}function Xre(){return new Jc}function Yre(r){return new ed(r)}var pL={};Xe(pL,{constant:()=>Jre,glorotNormal:()=>ane,glorotUniform:()=>sne,heNormal:()=>ine,heUniform:()=>une,identity:()=>nne,leCunNormal:()=>pne,leCunUniform:()=>lne,ones:()=>Qre,orthogonal:()=>mne,randomNormal:()=>tne,randomUniform:()=>ene,truncatedNormal:()=>rne,varianceScaling:()=>one,zeros:()=>Zre});function Zre(){return new Gc}function Qre(){return new Qp}function Jre(r){return new Wc(r)}function ene(r){return new Uc(r)}function tne(r){return new Kc(r)}function rne(r){return new Vc(r)}function nne(r){return new Hc(r)}function one(r){return new rn(r)}function sne(r){return new Jl(r)}function ane(r){return new em(r)}function ine(r){return new tm(r)}function une(r){return new rm(r)}function pne(r){return new nm(r)}function lne(r){return new om(r)}function mne(r){return new qc(r)}var WL={};Xe(WL,{Layer:()=>Re,RNN:()=>Vs,RNNCell:()=>rp,activation:()=>Noe,add:()=>Boe,alphaDropout:()=>Tse,average:()=>$oe,averagePooling1d:()=>VN,averagePooling2d:()=>HN,averagePooling3d:()=>qN,avgPool1d:()=>qoe,avgPool2d:()=>Xoe,avgPool3d:()=>Zoe,avgPooling1d:()=>joe,avgPooling2d:()=>Yoe,avgPooling3d:()=>Qoe,batchNormalization:()=>Koe,bidirectional:()=>cse,categoryEncoding:()=>Sse,centerCrop:()=>kse,concatenate:()=>Ooe,conv1d:()=>xoe,conv2d:()=>Toe,conv2dTranspose:()=>Coe,conv3d:()=>Ioe,conv3dTranspose:()=>koe,convLstm2d:()=>use,convLstm2dCell:()=>pse,cropping2D:()=>Soe,dense:()=>Doe,depthwiseConv2d:()=>Aoe,dot:()=>Uoe,dropout:()=>_oe,elu:()=>doe,embedding:()=>Loe,flatten:()=>Poe,gaussianDropout:()=>xse,gaussianNoise:()=>yse,globalAveragePooling1d:()=>Joe,globalAveragePooling2d:()=>ese,globalMaxPool1d:()=>fse,globalMaxPool2d:()=>hse,globalMaxPooling1d:()=>$L,globalMaxPooling2d:()=>OL,gru:()=>rse,gruCell:()=>nse,input:()=>EN,inputLayer:()=>coe,layerNormalization:()=>Voe,leakyReLU:()=>hoe,lstm:()=>ose,lstmCell:()=>sse,masking:()=>Cse,maxPool1d:()=>gse,maxPool2d:()=>bse,maxPooling1d:()=>zL,maxPooling2d:()=>GL,maxPooling3d:()=>tse,maximum:()=>zoe,minimum:()=>Goe,multiply:()=>Woe,permute:()=>Eoe,prelu:()=>goe,randomWidth:()=>wse,reLU:()=>foe,repeatVector:()=>Roe,rescaling:()=>Ise,reshape:()=>Foe,resizing:()=>vse,rnn:()=>lse,separableConv2d:()=>voe,simpleRNN:()=>ase,simpleRNNCell:()=>ise,softmax:()=>boe,spatialDropout1d:()=>Moe,stackedRNNCells:()=>mse,thresholdedReLU:()=>yoe,timeDistributed:()=>dse,upSampling2d:()=>woe,zeroPadding2d:()=>Hoe});async function vu(r){if(r==null)return;let t=[],e=[],n=[];for(let o in r){let s=r[o];if(typeof s!="number"){let a=s;t.push(a.data()),e.push(o),n.push(a)}}if(t.length>0){let o=await Promise.all(t);for(let s=0;s<o.length;++s)r[e[s]]=o[s][0];Pe(n)}}function mx(r){if(r!=null)for(let t in r){let e=r[t];typeof e!="number"&&e.dispose()}}var cne=125,ep=class{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}},cx=class{constructor(t,e=10){t==null&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(let e of this.callbacks)e.setParams(t)}setModel(t){for(let e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){e==null&&(e={});for(let n of this.callbacks)await n.onEpochBegin(t,e)}async onEpochEnd(t,e){e==null&&(e={});for(let n of this.callbacks)await n.onEpochEnd(t,e)}async onBatchBegin(t,e){e==null&&(e={});for(let n of this.callbacks)await n.onBatchBegin(t,e)}async onBatchEnd(t,e){e==null&&(e={});for(let n of this.callbacks)await n.onBatchEnd(t,e)}async onTrainBegin(t){t==null&&(t={});for(let e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){t==null&&(t={});for(let e of this.callbacks)await e.onTrainEnd(t)}},NN=class extends ep{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,n){n==null&&(n={});let o=n.size==null?0:n.size;this.seen+=o;for(let s in n){let a=n[s];if(typeof a=="number")this.totals.hasOwnProperty(s)||(this.totals[s]=0),this.totals[s]=this.totals[s]+a*o;else{let i;s in this.totals?i=this.totals[s]:this.totals[s]=0;let p=z(()=>Q(this.totals[s],F(a,o)));this.totals[s]=p,i?.dispose()}}}async onEpochEnd(e,n){if(n!=null)for(let o of this.params.metrics)this.totals[o]!=null&&(typeof this.totals[o]=="number"?n[o]=this.totals[o]/this.seen:z(()=>{let s=F(de(1,this.seen),this.totals[o]);n[o]=s,this.totals[o].dispose(),Ot(n[o])}))}},dx=class extends ep{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,n){n==null&&(n={}),this.epoch.push(e);for(let o in n)this.history[o]==null&&(this.history[o]=[]),this.history[o].push(n[o])}async syncData(){let e=[],n=[],o=[];for(let a in this.history){let i=this.history[a];for(let p=0;p<i.length;++p)if(typeof i[p]!="number"){let u=i[p];e.push(u.data()),n.push(a),o.push(p)}}let s=await Promise.all(e);for(let a=0;a<s.length;++a)this.history[n[a]][o[a]].dispose(),this.history[n[a]][o[a]]=s[a][0]}},fx=class extends ep{constructor(e,n){super();this.currentEpoch=0;if(this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||Uh,this.yieldEvery=n||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=cne),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");y.isNumber(this.yieldEvery)&&(this.maybeWait=zR(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,n,o){let s=[];this.yield!=null&&(await vu(o),s.push(this.yield(e,n,o))),s.push(this.nextFrameFunc()),await Promise.all(s)}async onEpochBegin(e,n){this.currentEpoch=e,this.epochBegin!=null&&(await vu(n),await this.epochBegin(e,n))}async onEpochEnd(e,n){let o=[];this.epochEnd!=null&&(await vu(n),o.push(this.epochEnd(e,n))),this.yieldEvery==="epoch"&&o.push(this.nextFrameFunc()),await Promise.all(o)}async onBatchBegin(e,n){this.batchBegin!=null&&(await vu(n),await this.batchBegin(e,n))}async onBatchEnd(e,n){let o=[];this.batchEnd!=null&&(await vu(n),o.push(this.batchEnd(e,n))),this.yieldEvery==="batch"?o.push(this.nextFrameFunc()):y.isNumber(this.yieldEvery)&&o.push(this.maybeWait(this.currentEpoch,e,n)),await Promise.all(o)}async onTrainBegin(e){this.trainBegin!=null&&(await vu(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await vu(e),await this.trainEnd(e))}};function hx(r,t){return r==null&&(r={}),r instanceof ep?[r]:Array.isArray(r)&&r[0]instanceof ep?r:Dt(r).map(n=>new fx(n,t))}var Fi=class{constructor(){}static registerCallbackConstructor(t,e){y.assert(t>=0&&Number.isInteger(t),()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`),Fi.checkForDuplicate(e),Fi.constructors[t]==null&&(Fi.constructors[t]=[]),Fi.constructors[t].push(e)}static checkForDuplicate(t){for(let e in Fi.constructors)Fi.constructors[+e].forEach(o=>{if(o===t)throw new O("Duplicate callback constructor.")})}static clear(){Fi.constructors={}}static createCallbacks(t){let e=[];for(let n in Fi.constructors){let o=+n;t>=o&&e.push(...Fi.constructors[o])}return e.map(n=>new n)}},td=Fi;td.constructors={};function gx(r,t,e,n,o,s,a,i,p){let u=new dx,l=[new NN,...td.createCallbacks(t)];r!=null&&l.push(...r),l.push(u);let m=new cx(l);return m.setParams({epochs:e,initialEpoch:n,samples:o,steps:s,batchSize:a,verbose:t,doValidation:i,metrics:p}),{callbackList:m,history:u}}function Nn(r,t={},e=!1){return Iu(r,J.SerializationMap.getMap().classNameMap,t,"layer",e)}function Yh(r,t){return z(()=>{r.dtype!=="float32"&&(r=ne(r,"float32"));let e=ge(Ql(r),t,!0),n=Ca(e.shape,br()),o=zt(Us(e,n));return de(r,o)})}function Su(r,t){return z(()=>Gt(Ql(me(t,r)),-1))}function rd(r,t){return z(()=>Gt(Ut(me(t,r)),-1))}function Jp(r,t){return z(()=>{let e=me(r,t),n=Yr(Ut(r),br(),Number.MAX_VALUE),o=Ut(de(e,n));return F(100,Gt(o,-1))})}function dne(r,t){return z(()=>{let e=Yr(t,br(),Number.MAX_VALUE),n=Qr(Q(1,e)),o=Yr(r,br(),Number.MAX_VALUE),s=Qr(Q(1,o));return Gt(Ql(me(n,s)),-1)})}function fne(r,t){return z(()=>{let e=Us(0,me(1,F(r,t)));return Gt(Ql(e),-1)})}function hne(r,t){return z(()=>{let e=Us(0,me(1,F(r,t)));return Gt(e,-1)})}function gne(r,t){return z(()=>{let e=ge(F(r,t),-1),n=Zr(F(me(1,r),t),-1);return Us(0,Q(1,me(n,e)))})}function bne(r,t){return z(()=>{let e=Math.log(2),n=me(t,r),o=me(Q(n,Hu(F(-2,n))),e);return Gt(o,-1)})}function im(r,t,e=!1){return z(()=>{if(e)t=Dc(t);else{let n=ge(t,t.shape.length-1,!0);t=de(t,n)}return t=Yr(t,br(),1-br()),Je(ge(F(ne(r,"float32"),Qr(t)),t.shape.length-1))})}function nd(r,t,e=!1){return z(()=>{let n=ne(Kp(ZR(r)),"int32");t=Yr(t,br(),1-br());let o=t.shape,s=E(qp(n,o[o.length-1]),o);return im(s,t,e)})}function yne(r,t){if(!y.arraysEqual(r.shape,t.shape))throw new O(`logits and labels must have the same shape, but got shapes ${JSON.stringify(r.shape)} and ${JSON.stringify(t.shape)}`);return z(()=>{let e=ln(t),n=Je(Ut(t));return Q(me(e,F(t,r)),Ic(Cr(n)))})}function od(r,t){return z(()=>{let e;return e=Yr(t,br(),1-br()),e=Qr(de(e,me(1,e))),Gt(yne(r,e),-1)})}function xne(r,t){return z(()=>{let e=Yr(r,br(),1),n=Yr(t,br(),1);return ge(F(r,Qr(de(e,n))),-1)})}function Tne(r,t){return z(()=>{let e=Qr(Q(br(),t));return Gt(me(t,F(r,e)),-1)})}function Qh(r,t){return z(()=>{let e=Yh(r,-1),n=Yh(t,-1),o=F(e,n);return Je(ge(o,-1))})}var Zh={meanSquaredError:Su,meanAbsoluteError:rd,meanAbsolutePercentageError:Jp,meanSquaredLogarithmicError:dne,squaredHinge:fne,hinge:hne,categoricalHinge:gne,logcosh:bne,categoricalCrossentropy:im,sparseCategoricalCrossentropy:nd,binaryCrossentropy:od,kullbackLeiblerDivergence:xne,poisson:Tne,cosineProximity:Qh};function bx(r){if(typeof r=="string"){if(r in Zh)return Zh[r];let t=`Unknown loss ${r}`;throw r.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${r}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new O(t)}else return r}function Jh(r,t){return z(()=>{let e=F(.5,Wr(t)),n=mn(tr(t,e),r.dtype);return Gt(an(r,n),-1)})}function eg(r,t){return z(()=>mn(an($p(r,-1),$p(t,-1)),"float32"))}function mL(r,t){return z(()=>ne(ge(pn(an(r,1),an(t,1))),"float32"))}function Cne(r,t){return z(()=>ne(ge(pn(an(r,1),an(t,0))),"float32"))}function Ine(r,t){return z(()=>ne(ge(pn(an(r,0),an(t,1))),"float32"))}function DN(r,t){return z(()=>{let e=mL(r,t),n=Ine(r,t),o=Q(e,n);return ne(Et(tr(o,0),de(e,o),0),"float32")})}function cL(r,t){return z(()=>{let e=mL(r,t),n=Cne(r,t),o=Q(e,n);return ne(Et(tr(o,0),de(e,o),0),"float32")})}function xx(r,t){return od(r,t)}function Tx(r,t){return r.rank===t.rank&&(r=va(r,[r.rank-1])),t=$p(t,-1),t.dtype!==r.dtype&&(t=ne(t,r.dtype)),ne(an(r,t),"float32")}var kne=Su,vne=Su,Sne=rd,wne=rd,Ane=Jp,Nne=Jp,tg=im,Dne=Qh,_N=nd,yx={binaryAccuracy:Jh,categoricalAccuracy:eg,precision:DN,categoricalCrossentropy:tg,sparseCategoricalCrossentropy:_N,mse:kne,MSE:vne,mae:Sne,MAE:wne,mape:Ane,MAPE:Nne,cosine:Dne};function dL(r){if(typeof r=="string"&&r in yx)return yx[r];if(typeof r!="string"&&r!=null)return r;throw new O(`Unknown metric ${r}`)}function rg(r){if(Ks(r!==null,`Unknown LossOrMetricFn ${r}`),typeof r=="string")return r;{let t;for(let e of Object.keys(Zh))if(Zh[e]===r){t=e;break}if(t!==void 0)return t;for(let e of Object.keys(yx))if(yx[e]===r){t=e;break}return t!==void 0?t:r.name}}function hL(r){let t={Adagrad:()=>Yl.adagrad(.01),Adadelta:()=>Yl.adadelta(1,.95,br()),Adam:()=>Yl.adam(.001,.9,.999,br()),Adamax:()=>Yl.adamax(.002,.9,.999,br(),0),RMSProp:()=>Yl.rmsprop(.001,.9,0,br()),SGD:()=>Yl.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,r in t)return t[r]();throw new O(`Unknown Optimizer ${r}`)}function PN(r,t,e=!1){if(r==null||typeof r!="object"||Object.getPrototypeOf(r)!==Object.prototype||!MN(r))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(e){let n=JSON.stringify(r);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function MN(r){if(r===null)return!0;if(typeof r=="object")if(Object.getPrototypeOf(r)===Object.prototype){let t=Object.keys(r);for(let e of t)if(typeof e!="string"||!MN(r[e]))return!1;return!0}else if(Array.isArray(r)){for(let t of r)if(!MN(t))return!1;return!0}else return!1;else{let t=typeof r;return t==="string"||t==="number"||t==="boolean"}}function gL(r,t,e,n=console.log){let o=Pne(r),s=["Layer (type)","Input Shape","Output shape","Param #"];o?(t=t||90,e=e||[.32,.61,.89,1]):(t=t||115,e=e||[.24,.48,.7,.8,1]),e[e.length-1]<=1&&(e=e.map(l=>Math.floor(t*l)));let a;if(!o){s.push("Receives inputs"),a=[];for(let l in r.nodesByDepth)a.push(...r.nodesByDepth[l])}n("_".repeat(t)),Cx(s,e,n),n("=".repeat(t));let i=r.layers;for(let l=0;l<i.length;++l)o?Rne(i[l],e,n):Fne(i[l],e,a,n),n((l===i.length-1?"=":"_").repeat(t));r.checkTrainableWeightsConsistency();let p=Mne(r),u=Xc(r.nonTrainableWeights);n(`Total params: ${p+u}`),n(`Trainable params: ${p}`),n(`Non-trainable params: ${u}`),n("_".repeat(t))}function Mne(r){let t;return r.collectedTrainableWeights!=null?t=Xc(r.collectedTrainableWeights):t=Xc(r.trainableWeights),t}function Pne(r){let t=!0,e=[],n=[];for(let o in r.nodesByDepth)e.push(r.nodesByDepth[o]);for(let o of e){if(o.length>1||o.length===1&&o[0].inboundLayers.length>1){t=!1;break}n.push(...o)}if(t)for(let o of r.layers){let s=!1;for(let a of o.inboundNodes)if(n.indexOf(a)!==-1)if(s){t=!1;break}else s=!0;if(!t)break}return t}function Cx(r,t,e=console.log){let n="";for(let o=0;o<r.length;++o)o>0&&(n=n.slice(0,n.length-1)+" "),n+=r[o],n=n.slice(0,t[o]),n+=" ".repeat(t[o]-n.length);e(n)}function Rne(r,t,e){let n,o;try{o=r.inboundNodes.map(p=>JSON.stringify(p.inputShapes)).join(",")}catch{o="multiple"}try{n=JSON.stringify(r.outputShape)}catch{n="multiple"}let s=r.name,a=r.getClassName(),i=[`${s} (${a})`,o,n,r.countParams().toString()];Cx(i,t,e)}function Fne(r,t,e,n){let o,s;try{s=r.inboundNodes.map(m=>JSON.stringify(m.inputShapes)).join(",")}catch{s="multiple"}try{o=JSON.stringify(r.outputShape)}catch{o="multiple"}let a=[];for(let m of r.inboundNodes)if(!(e!=null&&e.length>0&&e.indexOf(m)===-1))for(let c=0;c<m.inboundLayers.length;++c){let d=m.inboundLayers[c].name,f=m.nodeIndices[c],h=m.tensorIndices[c];a.push(`${d}[${f}][${h}]`)}let i=r.name,p=r.getClassName(),u=a.length===0?"":a[0],l=[`${i} (${p})`,s,o,r.countParams().toString(),u];Cx(l,t,n);for(let m=1;m<a.length;++m)Cx(["","","","",a[m]],t,n)}function bL(r,t,e){return(r==="inboundNodes"||r==="outputLayers"||r==="inputLayers")&&t===0&&typeof e=="string"}function um(r,t){if(r===null)return null;if(typeof r=="string")return Yu(r);if(typeof r=="number"||typeof r=="boolean")return r;if(r instanceof Array){let e=[],n=r.length;for(let o=0;o<n;++o){let s=r[o];bL(t,o,s)?e.push(s):e.push(um(s,t))}return e}else{let e={};for(let n of Object.keys(r)){let o=r[n];if(n==="name"&&typeof o=="string")e[n]=o;else{let s=Yu(n);e[s]=um(o,s)}}return e}}function Ix(r,t){if(r==null)return null;if(typeof r=="string")return Na(r);if(typeof r=="number"||typeof r=="boolean")return r;if(r instanceof Array){let e=[],n=r.length;for(let o=0;o<n;++o){let s=r[o];bL(t,o,s)?e.push(s):e.push(Ix(s,t))}return e}else{let e={};for(let n of Object.keys(r)){let o=r[n],s=Na(n);(n==="name"||n==="className")&&typeof o=="string"?e[s]=o:e[s]=Ix(o,n)}return e}}var ng="0.0.0";var oo=class extends Re{constructor(e){super({});this.containerNodes=new Set;if(this.name=e.name,this.name==null){let T=this.getClassName().toLowerCase();this.name=Yp(T)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Da(this.inputs).length!==this.inputs.length)throw new O(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(T=>T.name)}`);Da(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(T=>T.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let T of this.outputs){let C=T.sourceLayer,k=T.nodeIndex,w=T.tensorIndex;this.outputLayers.push(C),this.outputLayersNodeIndices.push(k),this.outputLayersTensorIndices.push(w)}for(let T of this.inputs){let C=T.sourceLayer,k=T.nodeIndex,w=T.tensorIndex;Ks(k===0,"input layer has >1 nodes"),Ks(w===0,"input layer has >1 tensors"),this.inputLayers.push(C),this.inputLayersNodeIndices.push(k),this.inputLayersTensorIndices.push(w)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let T=0;T<this.inputLayers.length;T++){let C=this.inputLayers[T];if(!(C instanceof Ri))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${T} (0-based) originates from layer type ${C.getClassName()}.`);this.inputNames.push(C.name),this.feedInputShapes.push(C.batchInputShape),this.feedInputNames.push(C.name)}for(let T of this.outputLayers)this.outputNames.push(T.name);this.internalInputShapes=this.inputs.map(T=>T.shape),this.internalOutputShapes=this.outputs.map(T=>T.shape);let n={},o={},s={},a={},i={},p=[],u=(T,C,k,w,_,P)=>{(w==null||_==null||P==null)&&(w=T.sourceLayer,_=T.nodeIndex,P=T.tensorIndex);let M=w.inboundNodes[_];if(k.indexOf(M)!==-1)throw new tn(`The tensor ${T.name} at layer "${w.name}" is part of a cycle.`);if(C.indexOf(M)!==-1)return;this.containerNodes.add(oo.nodeKey(w,_)),w.id in i||(i[w.id]=Object.keys(i).length),k.indexOf(M)===-1&&k.push(M);let R=M.inboundLayers.length;for(let $=0;$<R;$++){let G=M.inputTensors[$],W=M.inboundLayers[$],U=M.nodeIndices[$],V=M.tensorIndices[$];u(G,C,k,W,U,V)}for(C.push(M);k.indexOf(M)>=0;)k.splice(k.indexOf(M),1);p.push(M)},l=[],m=[];for(let T of this.outputs)u(T,l,m);let c=p.slice().reverse();for(let T of c){o[T.id]=T,T.id in n||(n[T.id]=0);let C=n[T.id],k=s[T.outboundLayer.id]==null?0:s[T.outboundLayer.id];C=Math.max(C,k),s[T.outboundLayer.id]=C,a[T.outboundLayer.id]=T.outboundLayer,n[T.id]=C;for(let w=0;w<T.inboundLayers.length;w++){let _=T.inboundLayers[w],P=T.nodeIndices[w],M=_.inboundNodes[P],R=n[M.id]==null?0:n[M.id];n[M.id]=Math.max(C+1,R),o[M.id]=M}}let d={};for(let T in n){let C=n[T];C in d||(d[C]=[]),d[C].push(o[T])}let f={};for(let T in s){let C=s[T];C in f||(f[C]=[]),f[C].push(a[T])}let h=Object.keys(f).map(T=>parseInt(T,10)).sort(Vh);this.layers=[];for(let T of h){let C=f[T];C.sort((k,w)=>{let _=i[k.id],P=i[w.id];return _<P?-1:_>P?1:0});for(let k of C)k instanceof oo&&this.internalContainerRefs.push(k),this.layers.push(k)}this.layersByDepth=f,h=Object.keys(d).map(T=>parseInt(T,10)).sort(Vh);let g=this.inputs.slice(),b=[];for(let T of h)for(let C of d[T]){let k=C.outboundLayer;if(k!=null){for(let w of C.inputTensors)if(g.indexOf(w)===-1)throw new tn(`Graph disconnected: cannot obtain value for tensor ${w} at layer "${k.name}". The following previous layers were accessed without issue: ${b}`);for(let w of C.outputTensors)g.push(w);b.push(k.name)}}this.nodesByDepth=d;let x=this.layers.map(T=>T.name);for(let T of x){let C=x.filter(k=>k===T).length;if(C!==1)throw new tn(`The name "${T}" is used ${C} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(x))}this.outboundNodes=[],this.inboundNodes=[],new Ju({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(T=>null),outputMasks:this.outputs.map(T=>null),inputShapes:this.inputs.map(T=>T.shape),outputShapes:this.outputs.map(T=>T.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(let n of this.layers)e.numDisposedVariables+=n.dispose().numDisposedVariables;for(let n of this.internalContainerRefs)e.numDisposedVariables+=n.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(n=>{n._trainableWeights.forEach(o=>o.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new O("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let n of this.layers)e=e.concat(n.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let n of this.layers)e.push(...n.nonTrainableWeights);if(!this.trainable){let n=[];for(let o of this.layers)n.push(...o.trainableWeights);return n.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,n=!0){let o={},s=0;for(let i of this.layers)for(let p of i.weights){if(o[p.originalName]!=null)throw new O(`Duplicate weight name: ${p.originalName}`);o[p.originalName]=p,s++}let a=[];for(let i in e){let p=i;if(o[i]==null){let u=i.split("/");p=u.slice(0,-2).concat([u[u.length-1]]).join("/")}if(o[p]!=null)a.push([o[p],e[i]]);else if(n)throw new O(`Provided weight data has no target variable: ${i}`);delete o[p]}if(n){let i=[];for(let p in o)i.push(p);if(i.length>0)throw new O(`${i.length} of ${s} weights are not set: ${i}`)}Yc(a)}updatedConfig(){let e=this.getConfig(),n={};return n.className=this.getClassName(),n.config=e,n.kerasVersion=`tfjs-layers ${ng}`,n.backend="TensorFlow.js",n}toJSON(e,n=!0){let o=Ix(this.updatedConfig());return n?JSON.stringify(o):o}call(e,n){return z(()=>{e=Dt(e);let o=new Pa;for(let s=0;s<this.inputs.length;++s)o.add(this.inputs[s],e[s]);return sm(this.outputs,o,n)})}computeMask(e,n){return z(()=>{e=Dt(e);let o;return n==null?o=Aa(null,e.length):o=Dt(n),this.runInternalGraph(e,o)[1]})}computeOutputShape(e){let n=jc(e);if(n.length!==this.inputLayers.length)throw new O(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let o={};for(let p=0;p<n.length;p++){let u=this.inputLayers[p],l=n[p],m=u.name+"_0_0";o[m]=l}let s=Object.keys(this.nodesByDepth).map(p=>parseInt(p,10)).sort(Vh);if(s.length>1)for(let p of s){let u=this.nodesByDepth[p];for(let l of u){let m=l.outboundLayer;if(this.inputLayers.map(g=>g.id).indexOf(m.id)!==-1)continue;let c=[];for(let g=0;g<l.inboundLayers.length;g++){let b=l.inboundLayers[g],x=l.nodeIndices[g],T=l.tensorIndices[g],C=`${b.name}_${x}_${T}`,k=o[C];c.push(k)}let d=m.computeOutputShape(Er(c)),f=jc(d),h=m.inboundNodes.indexOf(l);for(let g=0;g<f.length;g++){let b=`${m.name}_${h}_${g}`;o[b]=f[g]}}}let a=[],i=[];for(let p=0;p<this.outputLayers.length;p++){let u=this.outputLayers[p],l=this.outputLayersNodeIndices[p],m=this.outputLayersTensorIndices[p],c=`${u.name}_${l}_${m}`;i.push(c)}for(let p=0;p<i.length;p++){let u=i[p];Ks(u in o),a.push(o[u])}return Er(a)}runInternalGraph(e,n){n==null&&(n=Aa(null,e.length));let o={};for(let u=0;u<this.inputs.length;++u){let l=this.inputs[u],m=e[u],c=n[u];o[l.id]=[m,c]}let s=Object.keys(this.nodesByDepth).map(u=>parseInt(u,10)).sort(Vh);for(let u of s){let l=this.nodesByDepth[u];for(let m of l){let c=m.outboundLayer,d=m.inputTensors,f=m.outputTensors,h=new Array;for(let g of d)g.id in o&&h.push(o[g.id]);if(h.length===d.length){let g={},b,x,T,C;if(m.callArgs!=null&&(g=m.callArgs),h.length===1){let[k,w]=h[0];g.mask==null&&(g.mask=w),T=Dt(c.call(k,g)),C=Dt(c.computeMask(k,w)),b=[k],x=[w]}else b=h.map(k=>k[0]),x=h.map(k=>k[1]),g.mask==null&&(g.mask=x),T=Dt(c.call(b,g)),C=Dt(c.computeMask(b,x));if(c.activityRegularizer)throw new Me("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let k=0;k<f.length;++k){let w=f[k],_=T[k],P=C[k];o[w.id]=[_,P]}}}}let a=[],i=[],p=[];for(let u of this.outputs){Ks(u.id in o,`Could not compute output ${u.name} : ${u.id}`);let[l,m]=o[u.id];p.push(l.shape),a.push(l),i.push(m)}return[a,i,p]}buildNodeConversionMap(e){let n={},o;for(let s of this.layers){o=s instanceof oo?1:0;for(let a=0;a<s.inboundNodes.length;a++){let i=oo.nodeKey(s,a);this.containerNodes.has(i)&&(n[i]=o,o+=1)}}return n}getLayer(e,n){if(n!=null)return this.findLayer(n);if(e==null)throw new O("Provide either a layer name or layer index");if(typeof e=="number")return this.findLayer(e);for(let o of this.layers)if(o.name===e)return o;throw new O(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new O(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return z(()=>{let e=[];for(let n of this.layers)for(let o=0;o<n.inboundNodes.length;++o){let s=oo.nodeKey(n,o);this.containerNodes.has(s)&&e.push(...n.calculateLosses())}return e})}getConfig(){let e={name:this.name},n=this.buildNodeConversionMap(this.layers),o=[];for(let i of this.layers){let p=i.getClassName(),u=i.getConfig(),l=[];for(let c=0;c<i.inboundNodes.length;c++){let d=i.inboundNodes[c],f=oo.nodeKey(i,c),h={};if(this.containerNodes.has(f)){if(d.callArgs)try{JSON.stringify(d.callArgs),h=d.callArgs}catch{console.warn(`Layer ${i.name} was passed non-serializable keyword arguments: ${d.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),h={}}if(d.inboundLayers.length>0){let g=[];for(let b=0;b<d.inboundLayers.length;b++){let x=d.inboundLayers[b],T=d.nodeIndices[b],C=d.tensorIndices[b],k=oo.nodeKey(x,T),w=n[k];w==null&&(w=0),g.push([x.name,w,C,h])}l.push(g)}}}let m={};m.name=i.name,m.className=p,m.config=u,m.inboundNodes=l,o.push(m)}e.layers=o;let s=[];for(let i=0;i<this.inputLayers.length;i++){let p=this.inputLayers[i],u=this.inputLayersNodeIndices[i],l=oo.nodeKey(p,u);if(!this.containerNodes.has(l))continue;let m=n[l];m==null&&(m=0);let c=this.inputLayersTensorIndices[i];s.push([p.name,m,c])}e.inputLayers=s;let a=[];for(let i=0;i<this.outputLayers.length;i++){let p=this.outputLayers[i],u=this.outputLayersNodeIndices[i],l=oo.nodeKey(p,u);if(!this.containerNodes.has(l))continue;let m=n[l];m==null&&(m=0);let c=this.outputLayersTensorIndices[i];a.push([p.name,m,c])}return e.outputLayers=a,e}static fromConfig(e,n,o={},s=!1){let a={},i={};function p(b,x){b.name in i?i[b.name].push(x):i[b.name]=[x]}function u(b,x){let T=[],C;for(let k of x){let w=k[0],_=k[1],P=k[2];if(C=k[3]==null?{}:k[3],!(w in a)){p(b,x);return}let M=a[w];if(M.inboundNodes.length<=_){p(b,x);return}let R=M.inboundNodes[_];T.push(R.outputTensors[P])}T.length>0&&b.apply(Er(T),C)}function l(b){let x=b.name,T=Nn(b,n.customObjects!=null?n.customObjects:{});T.setFastWeightInitDuringBuild(s),a[x]=T,b.inboundNodes.forEach(k=>{if(!(k instanceof Array))throw new O(`Corrupted configuration, expected array for nodeData: ${k}`);p(T,k)})}let m=n.name,c=n.layers;for(let b of c)l(b);for(;!$R(i);)for(let b of c){let x=a[b.name];if(x.name in i){let T=i[x.name];delete i[x.name];for(let C of T)u(x,C)}}let d=[],f=[],h=n.inputLayers;for(let b of h){let x=b[0],T=b[1],C=b[2];Ks(x in a);let w=a[x].inboundNodes[T].outputTensors;d.push(w[C])}let g=n.outputLayers;for(let b of g){let x=b[0],T=b[1],C=b[2];Ks(x in a);let w=a[x].inboundNodes[T].outputTensors;f.push(w[C])}return new e({inputs:d,outputs:f,name:m})}get stateful(){if(this._stateful)throw new O("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){z(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}};function Ene(r,t,e){let n=t.length;if(r==null||Array.isArray(r)&&r.length===0)return t.map(o=>null);if(n===1)return Array.isArray(r)&&r.length===1?r:typeof r=="object"&&t[0]in r?[r[t[0]]]:[r];if(Array.isArray(r)){if(r.length!==n)throw new Error(`Provided ${e} is an array of ${r.length} element(s), but the model has ${n} outputs. Make sure a set of weights is provided for each model output.`);return r}else if(typeof r=="object"&&Object.keys(r).length>0&&typeof r[Object.keys(r)[0]]=="object"){let o=[];return t.forEach(s=>{s in r?o.push(r[s]):o.push(null)}),o}else throw new Error(`The model has multiple (${n}) outputs, so ${e} must be either an array with ${n} elements or an object with ${t} keys. Provided ${e} not understood: ${JSON.stringify(r)}`)}function kx(r,t){return Ene(r,t,"classWeight")}async function vx(r,t,e,n){if(t!=null||n!=null)throw new Error("Support sampleWeight is not implemented yet");if(e!=null){let o=z(()=>{if(r.shape.length===1)return Tn(r);if(r.shape.length===2){if(r.shape[1]>1)return $p(r,1);if(r.shape[1]===1)return E(r,[r.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${r.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${r.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),s=Array.from(await o.data());Pe(o);let a=[];return s.forEach(i=>{if(e[i]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${i} exists in the data but not in classWeight`);a.push(e[i])}),rr(a,"float32")}else return null}function yL(r,t){return F(r,t)}var Lne=32;function CL(r,t){let e,n,o=t;e=o.xs,n=o.ys,y.assert(e!=null&&n!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);let s=xL("input",r.inputNames,e),a=xL("output",r.outputNames,n),i=s[0].shape[0];y.assert(s.length===r.inputs.length,()=>`LayersModel has ${r.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(r.inputNames)})`),y.assert(a.length===r.outputs.length,()=>`LayersModel has ${r.outputs.length} outputs, but the dataset provides ${a.length} outputs.  (Expected output keys: ${JSON.stringify(r.outputNames)})`);for(let p=0;p<s.length;p++)y.assert(s[p].shape[0]===i,()=>`Batch size mismatch: input ${r.inputNames[p]} has ${s[p].shape[0]}; expected  ${i} based on input ${r.inputNames[0]}.`);for(let p=0;p<a.length;p++)y.assert(a[p].shape[0]===i,()=>`Batch size mismatch: output ${r.outputNames[p]} has ${a[p].shape[0]}; expected  ${i} based on input ${r.inputNames[0]}.`);return{xs:s,ys:a}}function xL(r,t,e){if(e instanceof Ve)return[e];if(Array.isArray(e))return y.assert(e.length===t.length,()=>`Received an array of ${e.length} Tensors, but expected ${t.length} to match the ${r} keys ${t}.`),e;{let n=[];for(let o of t){if(e[o]==null)throw new O(`The feature data generated by the dataset lacks the required ${r} key '${o}'.`);n.push(e[o])}return n}}function Bne(r){if(r.length===3)throw new Me("Validation with sample weights is not implemented yet.");return{xs:r[0],ys:r[1]}}async function IL(r,t,e){let n=e.batchesPerEpoch!=null;if(y.assert(r.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),y.assert(e!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),y.assert(e.epochs!=null&&e.epochs>0&&Number.isInteger(e.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${e.epochs}`),y.assert(!n||e.batchesPerEpoch>0&&Number.isInteger(e.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${e.batchesPerEpoch}`),y.assert(e.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),r.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");r.isTraining=!0;try{let o=e.validationData!=null,s,a;if(o)if(TL(e.validationData))y.assert(e.validationBatches==null||e.validationBatches>0&&Number.isInteger(e.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${e.validationBatches}`);else{let g=Bne(e.validationData);s=g.xs,a=g.ys}let i=r.makeTrainFunction(),p=r.getDedupedMetricsNames(),u;o?u=p.slice().concat(p.map(g=>"val_"+g)):u=p.slice();let l=hx(e.callbacks,e.yieldEvery),m=e.verbose==null?1:e.verbose,{callbackList:c,history:d}=gx(l,m,e.epochs,null,null,$ne(t,e),null,o,u);c.setModel(r),r.history=d,await c.onTrainBegin(),r.stopTraining_=!1;let f=e.initialEpoch==null?0:e.initialEpoch,h=await t.iterator();for(;f<e.epochs;){let g={};await c.onEpochBegin(f);let b=0,x=0;for(n||(h=await t.iterator());!n||b<e.batchesPerEpoch;){let T=await h.next();if(n&&T.done){console.warn(`You provided \`batchesPerEpoch\` as ${e.batchesPerEpoch}, but your dataset iterator ran out of data after ${b} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${e.batchesPerEpoch*e.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(T.value!=null){let{xs:C,ys:k}=CL(r,T.value),w={};w.batch=x,w.size=C[0].shape[0],await c.onBatchBegin(x,w);let _=[];if(e.classWeight!=null){let R=kx(e.classWeight,r.outputNames);for(let $=0;$<R.length;++$)_.push(await vx(k[$],null,R[$]))}let P=C.concat(k).concat(_),M=i(P);Pe(P);for(let R=0;R<p.length;++R){let $=p[R],G=M[R];w[$]=G,Ot(G)}await c.onBatchEnd(x,w),mx(w),x++,b++}if(n?b>=e.batchesPerEpoch:T.done){if(o){let C;TL(e.validationData)?C=Dt(await r.evaluateDataset(e.validationData,{batches:e.validationBatches})):C=Dt(r.evaluate(s,a,{batchSize:e.validationBatchSize==null?Lne:e.validationBatchSize,verbose:0}));for(let k=0;k<r.metricsNames.length;++k)g[`val_${r.metricsNames[k]}`]=C[k]}break}if(r.stopTraining_)break}if(await c.onEpochEnd(f,g),f++,r.stopTraining_)break}return await c.onTrainEnd(),await r.history.syncData(),r.history}finally{r.isTraining=!1}}function $ne(r,t){let e=null;return t.batchesPerEpoch!=null?e=t.batchesPerEpoch:Number.isFinite(r.size)&&(e=r.size),e}function TL(r){return typeof r.iterator=="function"}function One(r){return typeof r.next=="function"}async function kL(r,t,e){e=e||{};let n=e.batches!=null,o=r.testFunction,s=[];if(e.verbose>0)throw new Me("Verbose mode is not implemented yet.");y.assert(!n||e.batches>0&&Number.isInteger(e.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(e.batches)}`);let a=One(t)?t:await t.iterator(),i=0,p=0;for(;!n||p<e.batches;){let u=await a.next();if(s=z(()=>{if(u.value){let{xs:l,ys:m}=CL(r,u.value),c=l.concat(m),d=z(()=>o(c));if(Pe(c),p===0)for(let h=0;h<d.length;++h)s.push(he(0));let f=c[0].shape[0];for(let h=0;h<d.length;++h){let g=d[h],b=s[h];s[h]=z(()=>Q(s[h],F(f,g))),p>0&&Pe(b)}Pe(d),i+=f,++p}return s}),u.done){n&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${e.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<s.length;++u){let l=s[u];s[u]=de(s[u],i),Pe(l)}return Er(s)}function Sx(r){y.assert(r>0&&Number.isInteger(r),()=>`batchSize is required to be a positive integer, but got ${r}`)}function sd(r,t,e){return r==null?[null]:Array.isArray(r)?r.map(n=>Zu(n,t,e-t)):Zu(r,t,e-t)}function wx(r,t){return z(()=>r==null?null:Array.isArray(r)?r.map(e=>wx(e,t)):nx(r,t.dtype==="int32"?t:ne(t,"int32")))}function Ax(r,t){let e=[],n=0,o=null;for(;n<r;)o=n+t,o>=r&&(o=r),e.push([n,o]),n=o;return e}function RN(r){let t=[];r instanceof Ve&&(r=[r]);for(let e=0;e<r.length;++e){let n=r[e];if(n.rank===1)t.push(Qu(n,1));else{if(n.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(n)}}return t}function Ra(r,t){if(r==null)return;let e=[];if(t instanceof Ve)e.push(t.id);else if(Array.isArray(t))t.forEach(o=>e.push(o.id));else if(t!=null)for(let o in t){let s=t[o];e.push(s.id)}let n=[];if(r instanceof Ve)e.indexOf(r.id)===-1&&n.push(r);else if(Array.isArray(r))r.forEach(o=>{e.indexOf(o.id)===-1&&n.push(o)});else if(r!=null)for(let o in r){let s=r[o];e.indexOf(s.id)===-1&&n.push(s)}n.forEach(o=>{o.isDisposed||o.dispose()})}function zne(r){return r instanceof Ve}function FN(r){return Array.isArray(r)}function vL(r){return!zne(r)&&!FN(r)}function SL(r,t,e,n=!0,o=""){if(t==null||t.length===0){if(r!=null){let a=!1;if(FN(r)&&r.length>0)a=!0;else if(vL(r)){for(let i in r)if(r.hasOwnProperty(i)){a=!0;break}}else a=!0;if(a)throw new O(`Error when checking model ${o} expected no data, but got ${r}`)}return[]}if(r==null)return t.map(a=>null);let s;if(vL(r)){r=r,s=[];for(let a of t){if(r[a]==null)throw new O(`No data provided for "${a}". Need data for each key in: ${t}`);s.push(r[a])}}else if(FN(r)){if(r=r,r.length!==t.length)throw new O(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${r}`);s=r}else{if(r=r,t.length>1)throw new O(`The model ${o} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${r.shape}`);s=[r]}if(s=RN(s),e!=null)for(let a=0;a<t.length;++a){if(e[a]==null)continue;let i=s[a];if(i.shape.length!==e[a].length)throw new O(`Error when checking ${o}: expected ${t[a]} to have ${e[a].length} dimension(s). but got array with shape ${i.shape}`);for(let p=0;p<e[a].length;++p){if(p===0&&!n)continue;let u=i.shape[p],l=e[a][p];if(l!=null&&l>=0&&u!==l)throw new O(`${o} expected a batch of elements where each example has shape [${e[a].slice(1,e[a].length)}] (i.e.,tensor shape [*,${e[a].slice(1,e[a].length)}]) but the ${o} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return s}function Gne(r,t,e){let n=Da(r.map(s=>s.shape[0]));n.sort();let o=Da(t.map(s=>s.shape[0]));if(o.sort(),n.length>1)throw new O(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(r.map(s=>s.shape))}`);if(o.length>1)throw new O(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(s=>s.shape))}`);if(n.length>0&&o.length>0&&!y.arraysEqual(n,o))throw new O(`Input Tensors should have the same number of samples as target Tensors. Found ${n[0]} input sample(s) and ${o[0]} target sample(s).`)}function Wne(r,t,e){let n=[Su,od,im];for(let o=0;o<r.length;++o){let s=r[o],a=t[o],i=e[o];if(a!=null){if(a===im&&s.shape[s.shape.length-1]===1)throw new O(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(n.indexOf(a)!==-1){let p=s.shape.slice(1),u=i.slice(1);for(let l=0;l<p.length;++l){let m=p[l],c=u[l];if(c!=null&&m!==c)throw new O(`A target Tensor with shape ${s.shape} was passed for an output of shape ${i}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function wL(r,t,e,n=!0,o=""){let s;if(Array.isArray(r)){if(r.length!==t.length)throw new O(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${r.length} Tensors(s).`);s=r}else{if(t.length>1)throw new O(`The model expects ${t.length} ${o} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(r.shape)}.`);s=[r]}if(e!=null)for(let a=0;a<t.length;++a){if(e[a]==null)continue;let i=s[a];if(i.shape.length!==e[a].length)throw new O(`Error when checking ${o}: expected ${t[a]} to have ${e[a].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let p=0;p<e[a].length;++p){if(p===0&&!n)continue;let u=i.shape[p],l=e[a][p];if(l!=null&&l!==u)throw new O(`Error when checking ${o}: expected ${t[a]} to have shape ${JSON.stringify(e[a])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}function Une(r,t){if(r==null||Array.isArray(r)&&r.length===0)return t.map(n=>[]);let e;if(typeof r=="string"||typeof r=="function")e=[r];else if(Array.isArray(r)||typeof r=="object")e=r;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${r}`);if(Array.isArray(e))return t.map(n=>e);{let n=[];for(let o of t){let s=e.hasOwnProperty(o)?e[o]:[];Array.isArray(s)||(s=[s]),n.push(s)}return n}}var Kne="layers-model",so=class extends oo{constructor(e){super(e);this.isTraining=!1}summary(e,n,o=console.log){if(!this.built)throw new O("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");gL(this,e,n,o)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=hL(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof en))throw new O("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let n=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(let i in e.loss)if(this.outputNames.indexOf(i)===-1)throw new O(`Unknown entry in loss dictionary: "${i}". Only expected the following keys: ${this.outputNames}`);for(let i of this.outputNames)e.loss[i]==null&&console.warn(`Output "${i}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${i} during training`),n.push(bx(e.loss[i]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new O(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);n=e.loss.map(p=>bx(p))}else{let i=bx(e.loss);this.outputs.forEach(p=>{n.push(i)})}this.lossFunctions=n,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let i=0;i<this.outputs.length;++i){let p=this.internalOutputShapes[i],u=this.outputNames[i];this.feedOutputNames.push(u),this.feedOutputShapes.push(p),this.feedLossFns.push(this.lossFunctions[i])}let o=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Mi("loss",()=>{for(let i=0;i<this.outputs.length;++i){if(o.indexOf(i)!==-1)continue;let p=this.lossFunctions[i];this.outputs.length>1&&(this.metricsTensors.push([p,i]),this.metricsNames.push(this.outputNames[i]+"_loss"))}});let s=Une(e.metrics,this.outputNames),a=(i,p,u)=>{this.outputNames.length>1&&(p=this.outputNames[i]+"_"+p),this.metricsNames.push(p),this.metricsTensors.push([u,i])};Mi("metric",()=>{for(let i=0;i<this.outputs.length;++i){if(o.indexOf(i)!==-1)continue;let p=s[i];(l=>{let m="",c,d,f;for(let h of l){if(typeof h=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(h)!==-1){let b=this.internalOutputShapes[i];b[b.length-1]===1||this.lossFunctions[i]===od?["accuracy","acc"].indexOf(h)!==-1?d=Jh:["crossentropy","ce"].indexOf(h)!==-1&&(d=xx):this.lossFunctions[i]===nd?["accuracy","acc"].indexOf(h)!==-1?d=Tx:["crossentropy","ce"].indexOf(h)!==-1&&(d=_N):["accuracy","acc"].indexOf(h)!==-1?d=eg:["crossentropy","ce"].indexOf(h)!==-1&&(d=tg);let x;["accuracy","acc"].indexOf(h)!==-1?x="acc":["crossentropy","ce"].indexOf(h)!==-1&&(x="ce"),f=d,c=m+x}else f=dL(h),c=m+rg(h);let g;Mi(c,()=>{g=f}),a(i,c,g)}})(p)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,n,o={}){let s=o.batchSize==null?32:o.batchSize;Sx(s);let a=!0,i=this.standardizeUserDataXY(e,n,a,s);try{let p=i[0].concat(i[1]);this.makeTestFunction();let u=this.testFunction,l=this.testLoop(u,p,s,o.verbose,o.steps);return Er(l)}finally{Ra(i[0],e),Ra(i[1],n)}}async evaluateDataset(e,n){return this.makeTestFunction(),kL(this,e,n)}checkNumSamples(e,n,o,s="steps"){let a;if(o!=null){if(a=null,n!=null)throw new O(`If ${s} is set, batchSize must be null or undefined.Got batchSize = ${n}`)}else if(e!=null)Array.isArray(e)?a=e[0].shape[0]:a=e.shape[0];else throw new O(`Either the input data should have a defined shape, or ${s} shoud be specified.`);return a}execute(e,n){if(Array.isArray(n)&&n.length===0)throw new O("`outputs` is an empty Array, which is not allowed.");let o=Array.isArray(n),s=o?n:[n],a=this.retrieveSymbolicTensors(s),i=new Pa;if(e instanceof Ve&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new O(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let u=0;u<this.inputs.length;++u)i.add(this.inputs[u],e[u])}else for(let u of this.inputs){let l=e[u.name];if(l==null)throw new O(`No value is provided for the model's input ${u.name}`);i.add(u,l)}let p=sm(a,i);return o?p:p[0]}retrieveSymbolicTensors(e){let n=Aa(null,e.length),o=e.length;for(let s of this.layers){let a=Array.isArray(s.output)?s.output:[s.output],i=a.map(p=>p.name);for(let p=0;p<e.length;++p){let u=i.indexOf(e[p]);if(u!==-1&&(n[p]=a[u],o--),o===0)break}if(o===0)break}if(o>0){let s=[];throw n.forEach((a,i)=>{a==null&&s.push(e[i])}),new O(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(s)}`)}return n}predictLoop(e,n=32,o=!1){return z(()=>{let s=this.checkNumSamples(e);if(o)throw new Me("Verbose predictLoop() is not implemented yet.");let a=Ax(s,n),i=this.outputs.map(p=>[]);for(let p=0;p<a.length;++p)z(()=>{let l=a[p][0],m=a[p][1],c=sd(e,l,m),d=[];if(Array.isArray(c))for(let h=0;h<c.length;++h)d.push({key:this.inputs[h],value:c[h]});else d.push({key:this.inputs[0],value:c});let f=new Pa(d);return sm(this.outputs,f)}).forEach((l,m)=>i[m].push(l));return Er(i.map(p=>ht(p,0)))})}predict(e,n={}){let o=RN(e);wL(o,this.inputNames,this.feedInputShapes,!1);try{let s=n.batchSize==null?32:n.batchSize;return Sx(s),this.predictLoop(o,s)}finally{Ra(o,e)}}predictOnBatch(e){wL(e,this.inputNames,this.feedInputShapes,!0);let n=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,n)}standardizeUserDataXY(e,n,o=!0,s){if(this.optimizer_==null)throw new tn("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let a=[];for(let i=0;i<this.feedOutputShapes.length;++i){let p=this.feedOutputShapes[i];this.feedLossFns[i]===nd?a.push(p.slice(0,p.length-1).concat([1])):a.push(p)}if(e=SL(e,this.feedInputNames,this.feedInputShapes,!1,"input"),n=SL(n,this.feedOutputNames,a,!1,"target"),Gne(e,n,null),Wne(n,this.feedLossFns,this.feedOutputShapes),this.stateful&&s!=null&&s>0&&e[0].shape[0]%s!==0)throw new O(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${s}. Found: ${e[0].shape[0]} sample(s).`);return[e,n]}async standardizeUserData(e,n,o,s,a=!0,i){let[p,u]=this.standardizeUserDataXY(e,n,a,i);if(o!=null)throw new Error("sample weight is not supported yet.");let l=null;if(s!=null){let m=kx(s,this.outputNames);l=[];for(let c=0;c<m.length;++c)l.push(await vx(u[c],null,m[c]))}return[p,u,l]}testLoop(e,n,o,s=0,a){return z(()=>{let i=this.checkNumSamples(n,o,a,"steps"),p=[];if(s>0)throw new Me("Verbose mode is not implemented yet.");if(a!=null)throw new Me("steps mode in testLoop() is not implemented yet");{let u=Ax(i,o),l=rr(vn(0,i));for(let m=0;m<u.length;++m){let c=u[m][0],d=u[m][1],f=Zu(l,c,d-c),h=wx(n,f),g=e(h);if(m===0)for(let b=0;b<g.length;++b)p.push(he(0));for(let b=0;b<g.length;++b){let x=g[b];p[b]=Q(p[b],F(d-c,x))}}for(let m=0;m<p.length;++m)p[m]=de(p[m],i)}return p})}getDedupedMetricsNames(){let e=this.metricsNames,n=[];for(let o=0;o<e.length;++o){let s=e[o],a=s;if(gN(e,s)>1){let i=gN(e.slice(0,o),s);a+=`_${i}`}n.push(a)}return n}makeTrainFunction(){return e=>{let n=[],o=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),i=[],p=()=>{let c=[];for(let g=0;g<this.inputs.length;++g)c.push({key:this.inputs[g],value:o[g]});let d=new Pa(c),f=sm(this.outputs,d,{training:!0}),h;for(let g=0;g<this.lossFunctions.length;++g){let b=this.lossFunctions[g],x=b(s[g],f[g]);a[g]!=null&&(x=yL(x,a[g]));let T=Gt(x);n.push(T),g===0?h=x:h=Q(h,x)}for(let g=0;g<this.metricsTensors.length;++g){let b;if(this.outputs.length>1&&g<this.outputs.length)b=n[g];else{let x=this.metricsTensors[g][0],T=this.metricsTensors[g][1];b=Gt(x(s[T],f[T]))}Ot(b),i.push(b)}return h=Gt(h),this.calculateLosses().forEach(g=>{h=Q(h,g)}),h},u=this.collectedTrainableWeights.map(c=>c.read()),l=!0;return[this.optimizer_.minimize(p,l,u)].concat(i)}}makeTestFunction(){this.testFunction=e=>z(()=>{let n=[],o,s=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let l=0;l<this.inputs.length;++l)i.push({key:this.inputs[l],value:s[l]});let p=new Pa(i),u=sm(this.outputs,p);for(let l=0;l<this.lossFunctions.length;++l){let m=this.lossFunctions[l],c=Gt(m(a[l],u[l]));l===0?o=c:o=Q(o,c),n.push(o)}for(let l=0;l<this.metricsTensors.length;++l){let m=this.metricsTensors[l][0],c=this.metricsTensors[l][1],d=Gt(m(a[c],u[c]));n.push(d)}return n})}async fit(e,n,o={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;let s,a,i,p,u,l,m,c,d;try{let f=o.batchSize==null?32:o.batchSize;Sx(f);let h=!1,g=await this.standardizeUserData(e,n,o.sampleWeight,o.classWeight,h,f);s=g[0],a=g[1],d=g[2];let b=!1,x;if(o.validationData!=null&&o.validationData.length>0){if(b=!0,o.validationData.length===2)u=o.validationData[0],l=o.validationData[1];else throw o.validationData.length===3?new Me("validationData including sample weights is not supported yet."):new O(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${o.validationData} is invalid.`);let R=!0,$=await this.standardizeUserData(u,l,null,null,R,f);m=$[0],c=$[1],x=m.concat(c)}else if(o.validationSplit!=null&&o.validationSplit>0&&o.validationSplit<1){b=!0;let R=Math.floor(s[0].shape[0]*(1-o.validationSplit)),$=s[0].shape[0];m=sd(s,R,$),i=s,s=sd(s,0,R),c=sd(a,R,$),p=a,a=sd(a,0,R),x=m.concat(c)}else o.validationSteps!=null&&(b=!0);let T=s.concat(a).concat(d);this.checkTrainableWeightsConsistency();let C=this.makeTrainFunction(),k=this.getDedupedMetricsNames(),w,_;b?(this.makeTestFunction(),w=this.testFunction,_=k.slice().concat(k.map(R=>"val_"+R))):(w=null,x=[],_=k.slice());let P=hx(o.callbacks,o.yieldEvery);return await this.fitLoop(C,T,k,f,o.epochs,o.verbose,P,w,x,o.shuffle,_,o.initialEpoch,null,null)}finally{this.isTraining=!1,Ra(s,e),Ra(a,n),Ra(i,e),Ra(p,n),Ra(m,u),Ra(c,l),d!=null&&Pe(d)}}async fitLoop(e,n,o,s,a,i,p,u,l,m,c,d,f,h){s==null&&(s=32),a==null&&(a=1),m==null&&(m=!0),d==null&&(d=0);let g=!1;if(u!=null&&l!=null&&(g=!0),h!=null&&(g=!0,f==null))throw new O("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let b=this.checkNumSamples(n,s,f,"steps_per_epoch"),x;b!=null&&(x=vn(0,b)),i==null&&(i=1);let{callbackList:T,history:C}=gx(p,i,a,d,b,f,s,g,c);T.setModel(this),this.history=C,await T.onTrainBegin(),this.stopTraining_=!1;for(let k=d;k<a;++k){await T.onEpochBegin(k);let w={};if(f!=null)throw new Me("stepsPerEpoch mode is not implemented yet.");{if(m==="batch")throw new Me("batch shuffling is not implemneted yet");m&&y.shuffle(x);let _=rr(x),P=Ax(b,s);for(let M=0;M<P.length;++M){let R={};if(await T.onBatchBegin(M,R),z(()=>{let $=P[M][0],G=P[M][1],W=Zu(_,$,G-$);R.batch=M,R.size=G-$;let U=wx(n,W),V=e(U);for(let K=0;K<o.length;++K){let q=o[K],j=V[K];R[q]=j,Ot(j)}if(M===P.length-1&&g){let K=this.testLoop(u,l,s);for(let q=0;q<o.length;++q){let j=o[q],te=K[q];Ot(te),w["val_"+j]=te}}}),await T.onBatchEnd(M,R),mx(R),this.stopTraining_)break}_.dispose()}if(await T.onEpochEnd(k,w),this.stopTraining_)break}return await T.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,n){return IL(this,e,n)}async trainOnBatch(e,n){let o=await this.standardizeUserData(e,n),s=o[0],a=o[1],p=this.makeTrainFunction()(s.concat(a)),u=[];for(let l of p){let m=await l.data();u.push(m[0])}return Pe(p),Ra(o[0],e),Ra(o[1],n),Er(u)}getNamedWeights(e){let n=[],o=e!=null&&e.trainableOnly,s=o?this.trainableWeights:this.weights,a=this.getWeights(o);for(let i=0;i<s.length;++i)o&&!s[i].trainable||n.push({name:s[i].originalName,tensor:a[i]});return n}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){let n=Nh().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=n-Nh().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=Na(this.loss);else if(Array.isArray(this.loss)){for(let n of this.loss)if(typeof n!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(n=>Na(n))}else{let n=Object.keys(this.loss);e={};let o=this.loss;for(let s of n)if(typeof o[s]=="string")e[s]=Na(o[s]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[Na(rg(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>Na(rg(e)));{let e={};for(let n in this.metrics)e[n]=Na(rg(this.metrics[n]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");let n=um(e.optimizer_config),o=Nn(n),s;if(typeof e.loss=="string")s=Yu(e.loss);else if(Array.isArray(e.loss))s=e.loss.map(i=>Yu(i));else if(e.loss!=null){s={};for(let i in e.loss)s[i]=Yu(e.loss[i])}let a;if(Array.isArray(e.metrics))a=e.metrics.map(i=>Yu(i));else if(e.metrics!=null){a={};for(let i in e.metrics)a[i]=Yu(e.metrics[i])}this.compile({loss:s,metrics:a,optimizer:o})}async save(e,n){if(typeof e=="string"){let l=Ur.getSaveHandlers(e);if(l.length===0)throw new O(`Cannot find any save handlers for URL '${e}'`);if(l.length>1)throw new O(`Found more than one (${l.length}) save handlers for URL '${e}'`);e=l[0]}if(e.save==null)throw new O("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let o=await Ur.encodeWeights(this.getNamedWeights(n)),s=!1,a=null,p={modelTopology:this.toJSON(a,s),format:Kne,generatedBy:`TensorFlow.js tfjs-layers v${ng}`,convertedBy:null};if((n==null?!1:n.includeOptimizer)&&this.optimizer!=null){p.trainingConfig=this.getTrainingConfig();let l="optimizer",{data:m,specs:c}=await Ur.encodeWeights(await this.optimizer.getWeights(),l);o.specs.push(...c),o.data=Ur.concatenateArrayBuffers([o.data,m])}return this.userDefinedMetadata!=null&&(PN(this.userDefinedMetadata,this.name,!0),p.userDefinedMetadata=this.userDefinedMetadata),p.weightData=o.data,p.weightSpecs=o.specs,e.save(p)}setUserDefinedMetadata(e){PN(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};so.className="Model";J.registerClass(so);var Nx=class extends so{};Nx.className="Functional";J.registerClass(Nx);async function AL(r,t){"modelTopology"in r||(r={modelTopology:r}),r=r;let e=r.modelTopology;e.model_config!=null&&(e=e.model_config);let n=um(e),o=Nn(n,t);if(r.weightsManifest!=null){let s=await Ur.loadWeights(r.weightsManifest,r.pathPrefix,o.weights.map(i=>i.originalName)),a={};for(let i of o.weights)a[i.originalName]=s[i.originalName];o.loadWeights(a),Pe(s)}return o}async function NL(r,t){if(t==null&&(t={}),typeof r=="string"){let e=Ur.getLoadHandlers(r,t);if(e.length===0)e.push(Ur.browserHTTPRequest(r,t));else if(e.length>1)throw new O(`Found more than one (${e.length}) load handlers for URL '${r}'`);r=e[0]}return Vne(r,void 0,t)}async function Vne(r,t,e){if(e==null&&(e={}),r.load==null)throw new O("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let n=await r.load(),o=n.modelTopology;o.model_config!=null&&(o=o.model_config);let s=e.strict==null?!0:e.strict,a=n.weightData!=null&&n.weightSpecs!=null&&s,i=Nn(um(o),t,a),p=n.trainingConfig;if(p!=null&&i.loadTrainingConfig(p),n.userDefinedMetadata!=null&&i.setUserDefinedMetadata(n.userDefinedMetadata),n.weightData!=null){if(n.weightSpecs==null)throw new O("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:u,optimizerWeights:l}=Hne(n.weightData,n.weightSpecs);i.loadWeights(u,s),i.optimizer!=null&&l.length>0&&await i.optimizer.setWeights(l),Pe(u),Pe(l.map(m=>m.tensor))}return i}function Hne(r,t){let e=Ur.decodeWeights(r,t),n={},o=[];return t.forEach(s=>{s.group==="optimizer"?o.push({name:s.name,tensor:e[s.name]}):n[s.name]=e[s.name]}),{modelWeights:n,optimizerWeights:o}}var Dx=class extends so{constructor(e){super({inputs:[],outputs:[]});if(e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:Yp("sequential_"),e.layers!=null)for(let n of e.layers)this.add(n)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(o=>o<0))throw new O(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let n=e instanceof Dx||e instanceof so,o;if(n){if(o=e,o.outputs.length!==1)throw new O("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(o.inputs.length!==1)throw new O("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new O("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let s=ax({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(s)}if(n)this.outputs=o.outputs,this.inputs=o.inputs;else{if(e.inboundNodes.length!==1)throw new O(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new O("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=IN(this.outputs[0])}this.inboundNodes=[],new Ju({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Aa(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(s=>s.shape),outputShapes:this.outputs[0].shape})}else{let s=e.apply(this.outputs[0]);if(Array.isArray(s))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[s],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,n){return this.model==null&&this.build(),this.model.call(e,n)}build(e){if(Ke(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new so({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,n,o=console.log){this.built||this.build(),super.summary(e,n,o)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,n,o={}){if(!this.built)throw new tn("The model needs to be compiled before being used.");return this.model.evaluate(e,n,o)}async evaluateDataset(e,n){if(!this.built)throw new tn("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,n)}predict(e,n={}){return this.model==null&&this.build(),this.model.predict(e,n)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,n,o={}){if(!this.built)throw new tn("The model needs to be compiled before being used.");return this.model.fit(e,n,o)}async fitDataset(e,n){if(!this.built)throw new tn("The model needs to be compiled before being used.");return this.model.fitDataset(e,n)}async trainOnBatch(e,n){return this.model.trainOnBatch(e,n)}static fromConfig(e,n,o={},s=!1){let a,i={};if(n instanceof Array){if(n[0].className==null||n[0].className==="Merge")throw new O("Legacy serialization format not supported yet.");a=n}else y.assert(n.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),a=n.layers,delete n.layers,i=n;let p=new e(i);if(!(p instanceof Dx))throw new Me(`Sequential.fromConfig called on non-Sequential input: ${p}`);for(let u of a){let m=Nn(u,void 0,s);s&&m.setFastWeightInitDuringBuild(!0),p.add(m)}return p}set stopTraining(e){if(this.model==null)throw new O("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new O("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let n of this.layers){let o={};o.className=n.getClassName(),o.config=n.getConfig(),e.push(o)}return{name:this.name,layers:e}}},pm=Dx;pm.className="Sequential";J.registerClass(pm);function qne(r){return new so(r)}function jne(r){return new pm(r)}function EN(r){return ax(r)}function Xne(r,t){td.registerCallbackConstructor(r,t)}var dn=class extends J.Serializable{getConfig(){return{}}},_x=class extends dn{apply(t,e=1){return JR(t,e)}};_x.className="elu";J.registerClass(_x);var Mx=class extends dn{apply(t){return vy(t)}};Mx.className="selu";J.registerClass(Mx);var Px=class extends dn{apply(t){return ln(t)}};Px.className="relu";J.registerClass(Px);var Rx=class extends dn{apply(t){return z(()=>Ai(6,ln(t)))}};Rx.className="relu6";J.registerClass(Rx);var Fx=class extends dn{apply(t){return t}};Fx.className="linear";J.registerClass(Fx);var Ex=class extends dn{apply(t){return Ln(t)}};Ex.className="sigmoid";J.registerClass(Ex);var Lx=class extends dn{apply(t){return tF(t)}};Lx.className="hardSigmoid";J.registerClass(Lx);var Bx=class extends dn{apply(t){return Hu(t)}};Bx.className="softplus";J.registerClass(Bx);var $x=class extends dn{apply(t){return eF(t)}};$x.className="softsign";J.registerClass($x);var Ox=class extends dn{apply(t){return Op(t)}};Ox.className="tanh";J.registerClass(Ox);var ad=class extends dn{apply(t,e=-1){return Dc(t,e)}};ad.className="softmax";J.registerClass(ad);var zx=class extends dn{apply(t,e=-1){return my(t,e)}};zx.className="logSoftmax";J.registerClass(zx);var Gx=class extends dn{apply(t,e=1){return z(()=>F(Ln(F(t,e)),t))}};Gx.className="swish";J.registerClass(Gx);var Wx=class extends dn{apply(t){return z(()=>F(t,Op(Hu(t))))}};Wx.className="mish";J.registerClass(Wx);function Ei(r){return r.getClassName()}function LN(r,t={}){return Iu(r,J.SerializationMap.getMap().classNameMap,t,"activation")}function Li(r){if(r==null){let t={};return t.className="linear",t.config={},LN(t)}if(typeof r=="string"){let t={};return t.className=r,t.config={},LN(t)}else return r instanceof dn?r:LN(r)}function BN(r){if(r!=null&&typeof r!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${r}`)}var Ux=class extends J.Serializable{},el=class extends Ux{constructor(e){super();BN(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return z(()=>{let n=It([1]);return this.hasL1&&(n=Q(n,ge(F(this.l1,Ut(e))))),this.hasL2&&(n=Q(n,ge(F(this.l2,Ql(e))))),E(n,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,n){return new e({l1:n.l1,l2:n.l2})}};el.className="L1L2";J.registerClass(el);function ML(r){return BN(r),new el({l1:r!=null?r.l1:null,l2:0})}function PL(r){return BN(r),new el({l2:r!=null?r.l2:null,l1:0})}var DL={l1l2:"L1L2"};function xt(r){return Bc(r)}function _L(r,t={}){return Iu(r,J.SerializationMap.getMap().classNameMap,t,"regularizer")}function Mt(r){if(r==null)return null;if(typeof r=="string"){let e={className:r in DL?DL[r]:r,config:{}};return _L(e)}else return r instanceof Ux?r:_L(r)}var id=class extends Re{constructor(e){super(e??{});this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,n){e=Ne(e);let o=ln(e);return this.maxValue!=null&&(o=Yr(o,0,this.maxValue)),o}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},n=super.getConfig();return Object.assign(e,n),e}};id.className="ReLU";J.registerClass(id);var ud=class extends Re{constructor(e){super(e??{});this.DEFAULT_ALPHA=.3;e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,n){let o=Ne(e);return Cc(o,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},n=super.getConfig();return Object.assign(e,n),e}};ud.className="LeakyReLU";J.registerClass(ud);var pd=class extends Re{constructor(e){super(e??{});this.DEFAULT_ALPHA_INITIALIZER="zeros";if(e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=vt(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Mt(e.alphaRegularizer),this.alphaConstraint=Xt(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new O(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=Ke(e);let n=e.slice(1);if(this.sharedAxes!=null)for(let s of this.sharedAxes)n[s-1]=1;this.alpha=this.addWeight("alpha",n,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let o={};if(this.sharedAxes!=null)for(let s=1;s<e.length;++s)o[s]=e[s];this.inputSpec=[new _t({ndim:e.length,axes:o})],this.built=!0}call(e,n){return e=Ne(e),wc(e,this.alpha.read())}getConfig(){let e={alphaInitializer:Ft(this.alphaInitializer),alphaRegularizer:xt(this.alphaRegularizer),alphaConstraint:jt(this.alphaConstraint),sharedAxes:this.sharedAxes},n=super.getConfig();return Object.assign(e,n),e}};pd.className="PReLU";J.registerClass(pd);var ld=class extends Re{constructor(e){super(e??{});this.DEFAULT_ALPHA=1;if(e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new Me(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,n){let o=Ne(e);return Up(o)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},n=super.getConfig();return Object.assign(e,n),e}};ld.className="ELU";J.registerClass(ld);var md=class extends Re{constructor(e){super(e??{});this.DEFAULT_THETA=1;e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,n){let o=Ne(e);return F(o,ne(tr(o,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},n=super.getConfig();return Object.assign(e,n),e}};md.className="ThresholdedReLU";J.registerClass(md);var cd=class extends Re{constructor(e){super(e??{});this.DEFAULT_AXIS=1;e==null&&(e={}),this.softmax=new ad().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,n){let o=Ne(e);return this.softmax(o,this.axis)}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},n=super.getConfig();return Object.assign(e,n),e}};cd.className="Softmax";J.registerClass(cd);function tl(r,t,e){if(typeof r=="number")return Aa(r,t);if(r.length!==t)throw new O(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${r.length} elements.`);for(let n=0;n<t;++n){let o=r[n];if(!XR(o))throw new O(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(r)} including a non-integer number ${o}`)}return r}function $n(r,t,e,n,o=1){if(r==null)return r;let s=t+(t-1)*(o-1),a;return e==="same"?a=r:a=r-s+1,Math.floor((a+n-1)/n)}function Bi(r,t,e,n){if(r==null)return null;if(n==="valid")r=r*t+Pi([e-t,0]);else if(n==="same")r=r*t;else throw new O(`Unsupport padding mode: ${n}.`);return r}function og(r,t){return z(()=>(Kt(t),t==="channelsFirst"?qe(r,[0,2,3,1]):r))}function $N(r,t){return z(()=>(Kt(t),t==="channelsFirst"?qe(r,[0,2,3,4,1]):r))}function Zne(r,t,e,n=1,o="valid",s,a=1){return z(()=>{if(s==null&&(s=Sn()),Kt(s),r.shape.length!==3)throw new O(`The input of a conv1dWithBias operation should be 3, but is ${r.shape.length} instead.`);if(t.shape.length!==3)throw new O(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(e!=null&&e.shape.length!==1)throw new O(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(s==="channelsFirst"&&(r=qe(r,[0,2,1])),o==="causal")throw new Me("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=ry(r,t,n,o==="same"?"same":"valid","NWC",a);return e!=null&&(i=wn(i,e)),i})}function RL(r,t,e,n=[1,1],o="valid",s,a,i=null){return z(()=>{if(s==null&&(s=Sn()),Kt(s),r.rank!==3&&r.rank!==4)throw new O(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${r.rank}.`);if(t.rank!==3&&t.rank!==4)throw new O(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${r.rank}.`);let p=og(r,s);if(o==="causal")throw new Me("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return p=Xp.conv2d({x:p,filter:t,strides:n,pad:o==="same"?"same":"valid",dilations:a,dataFormat:"NHWC",bias:e,activation:i}),s==="channelsFirst"&&(p=qe(p,[0,3,1,2])),p})}function Qne(r,t,e,n=[1,1,1],o="valid",s,a){return z(()=>{if(s==null&&(s=Sn()),Kt(s),r.rank!==4&&r.rank!==5)throw new O(`conv3dWithBias expects input to be of rank 4 or 5, but received ${r.rank}.`);if(t.rank!==4&&t.rank!==5)throw new O(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${r.rank}.`);let i=$N(r,s);if(o==="causal")throw new Me("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=oy(i,t,n,o==="same"?"same":"valid","NDHWC",a),e!=null&&(i=wn(i,e)),s==="channelsFirst"&&(i=qe(i,[0,4,1,2,3])),i})}var cm=class extends Re{constructor(e,n){super(n);this.bias=null;this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_BIAS_INITIALIZER="zeros";if(cm.verifyArgs(n),this.rank=e,ir(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new Me(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=tl(n.kernelSize,e,"kernelSize"),this.strides=tl(n.strides==null?1:n.strides,e,"strides"),this.padding=n.padding==null?"valid":n.padding,kn(this.padding),this.dataFormat=n.dataFormat==null?"channelsLast":n.dataFormat,Kt(this.dataFormat),this.activation=Li(n.activation),this.useBias=n.useBias==null?!0:n.useBias,this.biasInitializer=vt(n.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Xt(n.biasConstraint),this.biasRegularizer=Mt(n.biasRegularizer),this.activityRegularizer=Mt(n.activityRegularizer),this.dilationRate=tl(n.dilationRate==null?1:n.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new O(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new O(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new O(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(Ks("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!Xy(e.kernelSize,"number",1,3))throw new O(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Ei(this.activation),useBias:this.useBias,biasInitializer:Ft(this.biasInitializer),biasRegularizer:xt(this.biasRegularizer),activityRegularizer:xt(this.activityRegularizer),biasConstraint:jt(this.biasConstraint)},n=super.getConfig();return Object.assign(e,n),e}},rl=class extends cm{constructor(e,n){super(e,n);this.kernel=null;rl.verifyArgs(n),this.filters=n.filters,ir(this.filters,"filters"),this.kernelInitializer=vt(n.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Xt(n.kernelConstraint),this.kernelRegularizer=Mt(n.kernelRegularizer)}build(e){e=Ke(e);let n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new O(`The channel dimension of the input should be defined. Found ${e[n]}`);let o=e[n],s=this.kernelSize.concat([o,this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[n]:o}}],this.built=!0}call(e,n){return z(()=>{e=Ne(e);let o,s=this.bias==null?null:this.bias.read(),a=Yy(this.activation.getClassName());if(a!=null&&this.rank===2)o=RL(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate,a);else{if(this.rank===1)o=Zne(e,this.kernel.read(),s,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)o=RL(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)o=Qne(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new Me("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(o=this.activation.apply(o))}return o})}computeOutputShape(e){e=Ke(e);let n=[],o=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let a=0;a<o.length;++a){let i=$n(o[a],this.kernelSize[a],this.padding,this.strides[a],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[a]);n.push(i)}let s=[e[0]];return this.dataFormat==="channelsLast"?(s=s.concat(n),s.push(this.filters)):(s.push(this.filters),s=s.concat(n)),s}getConfig(){let e={filters:this.filters,kernelInitializer:Ft(this.kernelInitializer),kernelRegularizer:xt(this.kernelRegularizer),kernelConstraint:jt(this.kernelConstraint)},n=super.getConfig();return Object.assign(e,n),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new O(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},ON=class extends rl{constructor(t){super(2,t),ON.verifyArgs(t)}getConfig(){let t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!Xy(t.kernelSize,"number",1,2))throw new O(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}},lm=ON;lm.className="Conv2D";J.registerClass(lm);var zN=class extends rl{constructor(t){super(3,t),zN.verifyArgs(t)}getConfig(){let t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!(Array.isArray(t.kernelSize)&&(t.kernelSize.length===1||t.kernelSize.length===3)))throw new O(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}},mm=zN;mm.className="Conv3D";J.registerClass(mm);var dd=class extends lm{constructor(t){if(super(t),this.inputSpec=[new _t({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new O(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=Ke(t),t.length!==4)throw new O("Input should have rank 4; Received input shape: "+JSON.stringify(t));let e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new O("The channel dimension of the inputs should be defined. Found `None`.");let n=t[e],o=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",o,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new _t({ndim:4,axes:{[e]:n}})],this.built=!0}call(t,e){return z(()=>{let n=Ne(t);if(n.shape.length!==4)throw new O(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let o=n.shape,s=o[0],a,i;this.dataFormat==="channelsFirst"?(a=2,i=3):(a=1,i=2);let p=o[a],u=o[i],l=this.kernelSize[0],m=this.kernelSize[1],c=this.strides[0],d=this.strides[1],f=Bi(p,c,l,this.padding),h=Bi(u,d,m,this.padding),g=[s,f,h,this.filters];this.dataFormat!=="channelsLast"&&(n=qe(n,[0,2,3,1]));let b=ny(n,this.kernel.read(),g,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(b=qe(b,[0,3,1,2])),this.bias!=null&&(b=wn(b,this.bias.read(),this.dataFormat)),this.activation!=null&&(b=this.activation.apply(b)),b})}computeOutputShape(t){t=Ke(t);let e=t.slice(),n,o,s;this.dataFormat==="channelsFirst"?(n=1,o=2,s=3):(n=3,o=1,s=2);let a=this.kernelSize[0],i=this.kernelSize[1],p=this.strides[0],u=this.strides[1];return e[n]=this.filters,e[o]=Bi(e[o],p,a,this.padding),e[s]=Bi(e[s],u,i,this.padding),e}getConfig(){let t=super.getConfig();return delete t.dilationRate,t}};dd.className="Conv2DTranspose";J.registerClass(dd);var fd=class extends mm{constructor(t){if(super(t),this.inputSpec=[new _t({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new O(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=Ke(t),t.length!==5)throw new O("Input should have rank 5; Received input shape: "+JSON.stringify(t));let e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new O("The channel dimension of the inputs should be defined. Found `None`.");let n=t[e],o=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",o,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new _t({ndim:5,axes:{[e]:n}})],this.built=!0}call(t,e){return z(()=>{let n=Ne(t);if(n.shape.length!==5)throw new O(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let o=n.shape,s=o[0],a,i,p;this.dataFormat==="channelsFirst"?(p=2,a=3,i=4):(p=1,a=2,i=3);let u=o[p],l=o[a],m=o[i],c=this.kernelSize[0],d=this.kernelSize[1],f=this.kernelSize[2],h=this.strides[0],g=this.strides[1],b=this.strides[2],x=Bi(u,h,c,this.padding),T=Bi(l,g,d,this.padding),C=Bi(m,b,f,this.padding),k=[s,x,T,C,this.filters];this.dataFormat!=="channelsLast"&&(n=qe(n,[0,2,3,4,1]));let w=ay(n,this.kernel.read(),k,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(w=qe(w,[0,4,1,2,3])),this.bias!==null&&(w=wn(w,this.bias.read(),this.dataFormat)),this.activation!==null&&(w=this.activation.apply(w)),w})}computeOutputShape(t){t=Ke(t);let e=t.slice(),n,o,s,a;this.dataFormat==="channelsFirst"?(n=1,o=2,s=3,a=4):(n=4,o=1,s=2,a=3);let i=this.kernelSize[0],p=this.kernelSize[1],u=this.kernelSize[2],l=this.strides[0],m=this.strides[1],c=this.strides[2];return e[n]=this.filters,e[o]=Bi(e[o],l,i,this.padding),e[s]=Bi(e[s],m,p,this.padding),e[a]=Bi(e[a],c,u,this.padding),e}getConfig(){let t=super.getConfig();return delete t.dilationRate,t}};fd.className="Conv3DTranspose";J.registerClass(fd);var Kx=class extends rl{constructor(e,n){super(e,n);this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform";this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform";this.depthwiseKernel=null;this.pointwiseKernel=null;if(n.filters==null)throw new O("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(n.kernelInitializer!=null||n.kernelRegularizer!=null||n.kernelConstraint!=null)throw new O("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(n.padding!=null&&n.padding!=="same"&&n.padding!=="valid")throw new O(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(n.padding)}`);this.depthMultiplier=n.depthMultiplier==null?1:n.depthMultiplier,this.depthwiseInitializer=vt(n.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Mt(n.depthwiseRegularizer),this.depthwiseConstraint=Xt(n.depthwiseConstraint),this.pointwiseInitializer=vt(n.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Mt(n.pointwiseRegularizer),this.pointwiseConstraint=Xt(n.pointwiseConstraint)}build(e){if(e=Ke(e),e.length<this.rank+2)throw new O(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null||e[n]<0)throw new O(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[n])}`);let o=e[n],s=this.kernelSize.concat([o,this.depthMultiplier]),a=[];for(let p=0;p<this.rank;++p)a.push(1);a.push(o*this.depthMultiplier,this.filters);let i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",s,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new _t({ndim:this.rank+2,axes:{[n]:o}})],this.built=!0}call(e,n){return z(()=>{e=Ne(e);let o;if(this.rank===1)throw new Me("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=qe(e,[0,2,3,1])),o=Sy(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(o=wn(o,this.bias.read(),this.dataFormat)),this.activation!=null&&(o=this.activation.apply(o)),this.dataFormat==="channelsFirst"&&(o=qe(o,[0,3,1,2])),o})}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Ft(this.depthwiseInitializer),e.pointwiseInitializer=Ft(this.pointwiseInitializer),e.depthwiseRegularizer=xt(this.depthwiseRegularizer),e.pointwiseRegularizer=xt(this.pointwiseRegularizer),e.depthwiseConstraint=jt(this.depthwiseConstraint),e.pointwiseConstraint=jt(this.pointwiseConstraint),e}};Kx.className="SeparableConv";var hd=class extends Kx{constructor(t){super(2,t)}};hd.className="SeparableConv2D";J.registerClass(hd);var GN=class extends rl{constructor(t){super(1,t),GN.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){let t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!Xy(t.kernelSize,"number",1,1))throw new O(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}},gd=GN;gd.className="Conv1D";J.registerClass(gd);var bd=class extends Re{constructor(e){super(e);typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,n){return z(()=>{if(e=Ne(e),this.dataFormat==="channelsLast"){let o=qh(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return qh(o,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{let o=qh(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return qh(o,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(e,n),e}};bd.className="Cropping2D";J.registerClass(bd);var yd=class extends Re{constructor(e){super(e);this.DEFAULT_SIZE=[2,2];this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Kt(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,qR(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){let n=e[2]==null?null:this.size[0]*e[2],o=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],n,o]}else{let n=e[1]==null?null:this.size[0]*e[1],o=e[2]==null?null:this.size[1]*e[2];return[e[0],n,o,e[3]]}}call(e,n){return z(()=>{let o=Ne(e),s=o.shape;if(this.dataFormat==="channelsFirst"){o=qe(o,[0,2,3,1]);let a=this.size[0]*s[2],i=this.size[1]*s[3],p=this.interpolation==="nearest"?In.resizeNearestNeighbor(o,[a,i]):In.resizeBilinear(o,[a,i]);return qe(p,[0,3,1,2])}else{let a=this.size[0]*s[1],i=this.size[1]*s[2];return this.interpolation==="nearest"?In.resizeNearestNeighbor(o,[a,i]):In.resizeBilinear(o,[a,i])}})}getConfig(){let e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},n=super.getConfig();return Object.assign(e,n),e}};yd.className="UpSampling2D";J.registerClass(yd);function Jne(r,t,e=[1,1],n="valid",o,s){return z(()=>{o==null&&(o=Sn()),Kt(o);let a=og(r,o);if(r.rank!==4)throw new O(`Input for depthwiseConv2d is required to be 4-D, but is instead ${r.rank}-D`);if(t.rank!==4)throw new O(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return a=Wp(a,t,e,n==="same"?"same":"valid","NHWC",s),o==="channelsFirst"&&(a=qe(a,[0,3,1,2])),a})}var xd=class extends cm{constructor(e){super(2,e);this.depthwiseKernel=null;this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=vt(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Xt(e.depthwiseConstraint),this.depthwiseRegularizer=Mt(e.depthwiseRegularizer)}build(e){if(e=Ke(e),e.length<4)throw new O(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let n=this.dataFormat==="channelsFirst"?1:3;if(e[n]==null||e[n]<0)throw new O(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[n]}).`);let o=e[n],s=[this.kernelSize[0],this.kernelSize[1],o,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",s,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[o*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,n){return z(()=>{e=Ne(e);let o=Jne(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(o=wn(o,this.bias.read(),this.dataFormat)),this.activation!=null&&(o=this.activation.apply(o)),o})}computeOutputShape(e){e=Ke(e);let n=this.dataFormat==="channelsFirst"?e[2]:e[1],o=this.dataFormat==="channelsFirst"?e[3]:e[2],s=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,a=$n(n,this.kernelSize[0],this.padding,this.strides[0]),i=$n(o,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],s,a,i]:[e[0],a,i,s]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Ft(this.depthwiseInitializer),e.depthwiseRegularizer=xt(this.depthwiseRegularizer),e.depthwiseConstraint=jt(this.depthwiseRegularizer),e}};xd.className="DepthwiseConv2D";J.registerClass(xd);function WN(r,t,e,n){if(Array.isArray(r)){if(t!=null||e!=null)throw new O("When inputs is an array, neither initialState or constants should be provided");n!=null&&(e=r.slice(r.length-n,r.length),r=r.slice(0,r.length-n)),r.length>1&&(t=r.slice(1,r.length)),r=r[0]}function o(s){return s==null||Array.isArray(s)?s:[s]}return t=o(t),e=o(e),{inputs:r,initialState:t,constants:e}}function UN(r,t,e,n=!1,o,s,a=!1,i=!1){return z(()=>{let p=t.shape.length;if(p<3)throw new O(`Input should be at least 3D, but is ${p}D.`);let u=[1,0].concat(vn(2,p));if(t=qe(t,u),s!=null)throw new Me("The rnn() functoin of the deeplearn.js backend does not support constants yet.");a&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),o!=null&&(o=ne(ne(o,"bool"),"float32"),o.rank===p-1&&(o=Ir(o,-1)),o=qe(o,u)),n&&(t=Pr(t,0),o!=null&&(o=Pr(o,0)));let l=[],m,c=e,d=t.shape[0],f=Fr(t),h;o!=null&&(h=Fr(o));for(let b=0;b<d;++b){let x=f[b],T=z(()=>r(x,c));if(o==null)m=T[0],c=T[1];else{let C=z(()=>{let k=h[b],w=me(Wr(k),k),_=Q(F(T[0],k),F(c[0],w)),P=c.map((M,R)=>Q(F(T[1][R],k),F(M,w)));return{output:_,newStates:P}});m=C.output,c=C.newStates}i&&l.push(m)}let g;return i&&(g=hr(l,1)),[m,g,c]})}var KN=class extends Re{constructor(e){super(e);let n;if(e.cell==null)throw new O("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?n=new hm({cells:e.cell}):n=e.cell,n.stateSize==null)throw new O("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=n,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new _t({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return vn(0,e).map(n=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){sx(e)&&(e=e[0]),e=e;let n=this.cell.stateSize;Array.isArray(n)||(n=[n]);let o=n[0],s;if(this.returnSequences?s=[e[0],e[1],o]:s=[e[0],o],this.returnState){let a=[];for(let i of n)a.push([e[0],i]);return[s].concat(a)}else return s}computeMask(e,n){return z(()=>{Array.isArray(n)&&(n=n[0]);let o=this.returnSequences?n:null;if(this.returnState){let s=this.states.map(a=>null);return[o].concat(s)}else return o})}get states(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,n=[];for(let o=0;o<e;++o)n.push(null);return n}else return this.states_}set states(e){this.states_=e}build(e){if(this.numConstants!=null)throw new Me("Constants support is not implemented in RNN yet.");sx(e)&&(e=e[0]),e=e;let o=this.stateful?e[0]:null,s=e.slice(2);this.inputSpec[0]=new _t({shape:[o,null,...s]});let a=[e[0]].concat(e.slice(2));this.cell.build(a);let i;if(Array.isArray(this.cell.stateSize)?i=this.cell.stateSize:i=[this.cell.stateSize],this.stateSpec!=null){if(!y.arraysEqual(this.stateSpec.map(p=>p.shape[p.shape.length-1]),i))throw new O(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=i.map(p=>new _t({shape:[null,p]}));this.stateful&&this.resetStates()}resetStates(e,n=!1){z(()=>{if(!this.stateful)throw new Bn("Cannot call resetStates() on an RNN Layer that is not stateful.");let o=this.inputSpec[0].shape[0];if(o==null)throw new O("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(s=>It([o,s])):this.states_=[It([o,this.cell.stateSize])];else if(e==null)Pe(this.states_),this.keptStates!=null&&(Pe(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(s=>It([o,s])):this.states_[0]=It([o,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new O(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);n===!0?this.keptStates.push(this.states_.slice()):Pe(this.states_);for(let s=0;s<this.states_.length;++s){let a=e[s],i=Array.isArray(this.cell.stateSize)?this.cell.stateSize[s]:this.cell.stateSize,p=[o,i];if(!y.arraysEqual(a.shape,p))throw new O(`State ${s} is incompatible with layer ${this.name}: expected shape=${p}, received shape=${a.shape}`);this.states_[s]=a}}this.states_=this.states_.map(s=>Ot(s.clone()))})}apply(e,n){let o=n==null?null:n.initialState,s=n==null?null:n.constants;n==null&&(n={});let a=WN(e,o,s,this.numConstants);e=a.inputs,o=a.initialState,s=a.constants;let i=[],p=[];if(o!=null){n.initialState=o,i=i.concat(o),this.stateSpec=[];for(let l of o)this.stateSpec.push(new _t({shape:l.shape}));p=p.concat(this.stateSpec)}if(s!=null&&(n.constants=s,i=i.concat(s),this.numConstants=s.length),i[0]instanceof cn){let l=[e].concat(i),m=this.inputSpec.concat(p),c=this.inputSpec;this.inputSpec=m;let d=super.apply(l,n);return this.inputSpec=c,d}else return super.apply(e,n)}call(e,n){return z(()=>{let o=n==null?null:n.mask,s=n==null?null:n.training,a=n==null?null:n.initialState;e=Ne(e),a==null&&(this.stateful?a=this.states_:a=this.getInitialState(e));let i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==i)throw new O(`RNN Layer has ${i} state(s) but was passed ${a.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let p={training:s},l=UN((h,g)=>{let b=this.cell.call([h].concat(g),p);return[b[0],b.slice(1)]},e,a,this.goBackwards,o,null,this.unroll,this.returnSequences),m=l[0],c=l[1],d=l[2];this.stateful&&this.resetStates(d,s);let f=this.returnSequences?c:m;return this.returnState?[f].concat(d):f})}getInitialState(e){return z(()=>{let n=It(e.shape);return n=ge(n,[1,2]),n=Qu(n),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(o=>o>1?rx(n,[1,o]):n):this.cell.stateSize>1?[rx(n,[1,this.cell.stateSize])]:[n]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),n={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(n.numConstants=this.numConstants);let o=this.cell.getConfig();return this.getClassName()===KN.className&&(n.cell={className:this.cell.getClassName(),config:o}),{...o,...e,...n}}static fromConfig(e,n,o={}){let s=n.cell,a=Nn(s,o);return new e(Object.assign(n,{cell:a}))}},Vs=KN;Vs.className="RNN";J.registerClass(Vs);var rp=class extends Re{},dm=class extends rp{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh";this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_RECURRENT_INITIALIZER="orthogonal";this.DEFAULT_BIAS_INITIALIZER="zeros";this.units=e.units,ir(this.units,"units"),this.activation=Li(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=vt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=vt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=vt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Mt(e.kernelRegularizer),this.recurrentRegularizer=Mt(e.recurrentRegularizer),this.biasRegularizer=Mt(e.biasRegularizer),this.kernelConstraint=Xt(e.kernelConstraint),this.recurrentConstraint=Xt(e.recurrentConstraint),this.biasConstraint=Xt(e.biasConstraint),this.dropout=Zl([1,Pi([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Zl([1,Pi([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Ke(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,n){return z(()=>{if(e=e,e.length!==2)throw new O(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let o=e[1];e=e[0];let s=n.training==null?!1:n.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=np({ones:()=>Wr(e),rate:this.dropout,training:s,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=np({ones:()=>Wr(o),rate:this.recurrentDropout,training:s,dropoutFunc:this.dropoutFunc}));let a,i=this.dropoutMask,p=this.recurrentDropoutMask;i!=null?a=Ma(F(e,i),this.kernel.read()):a=Ma(e,this.kernel.read()),this.bias!=null&&(a=wn(a,this.bias.read())),p!=null&&(o=F(o,p));let u=Q(a,Ma(o,this.recurrentKernel.read()));return this.activation!=null&&(u=this.activation.apply(u)),[u,u]})}getConfig(){let e=super.getConfig(),n={units:this.units,activation:Ei(this.activation),useBias:this.useBias,kernelInitializer:Ft(this.kernelInitializer),recurrentInitializer:Ft(this.recurrentInitializer),biasInitializer:Ft(this.biasInitializer),kernelRegularizer:xt(this.kernelRegularizer),recurrentRegularizer:xt(this.recurrentRegularizer),biasRegularizer:xt(this.biasRegularizer),activityRegularizer:xt(this.activityRegularizer),kernelConstraint:jt(this.kernelConstraint),recurrentConstraint:jt(this.recurrentConstraint),biasConstraint:jt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return{...e,...n}}};dm.className="SimpleRNNCell";J.registerClass(dm);var Td=class extends Vs{constructor(t){t.cell=new dm(t),super(t)}call(t,e){return z(()=>{this.cell.dropoutMask!=null&&(Pe(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Pe(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=e==null?null:e.mask,o=e==null?null:e.training,s=e==null?null:e.initialState;return super.call(t,{mask:n,training:o,initialState:s})})}static fromConfig(t,e){return new t(e)}};Td.className="SimpleRNN";J.registerClass(Td);var fm=class extends rp{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh";this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid";this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_RECURRENT_INITIALIZER="orthogonal";this.DEFAULT_BIAS_INITIALIZER="zeros";if(e.resetAfter)throw new O("GRUCell does not support reset_after parameter set to true.");this.units=e.units,ir(this.units,"units"),this.activation=Li(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Li(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=vt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=vt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=vt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Mt(e.kernelRegularizer),this.recurrentRegularizer=Mt(e.recurrentRegularizer),this.biasRegularizer=Mt(e.biasRegularizer),this.kernelConstraint=Xt(e.kernelConstraint),this.recurrentConstraint=Xt(e.recurrentConstraint),this.biasConstraint=Xt(e.biasConstraint),this.dropout=Zl([1,Pi([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Zl([1,Pi([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Ke(e);let n=e[e.length-1];this.kernel=this.addWeight("kernel",[n,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,n){return z(()=>{if(e=e,e.length!==2)throw new O(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let o=n.training==null?!1:n.training,s=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=np({ones:()=>Wr(e),rate:this.dropout,training:o,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=np({ones:()=>Wr(s),rate:this.recurrentDropout,training:o,count:3,dropoutFunc:this.dropoutFunc}));let a=this.dropoutMask,i=this.recurrentDropoutMask,p,u,l;0<this.dropout&&this.dropout<1&&(e=F(e,a[0]));let m=Ma(e,this.kernel.read());this.useBias&&(m=wn(m,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(s=F(s,i[0]));let c=this.recurrentKernel.read(),[d,f]=Rr(c,[2*this.units,this.units],c.rank-1),h=Ma(s,d),[g,b,x]=Rr(m,3,m.rank-1),[T,C]=Rr(h,2,h.rank-1);p=this.recurrentActivation.apply(Q(g,T)),u=this.recurrentActivation.apply(Q(b,C));let k=Ma(F(u,s),f);l=this.activation.apply(Q(x,k));let w=Q(F(p,s),F(Q(1,Je(p)),l));return[w,w]})}getConfig(){let e=super.getConfig(),n={units:this.units,activation:Ei(this.activation),recurrentActivation:Ei(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ft(this.kernelInitializer),recurrentInitializer:Ft(this.recurrentInitializer),biasInitializer:Ft(this.biasInitializer),kernelRegularizer:xt(this.kernelRegularizer),recurrentRegularizer:xt(this.recurrentRegularizer),biasRegularizer:xt(this.biasRegularizer),activityRegularizer:xt(this.activityRegularizer),kernelConstraint:jt(this.kernelConstraint),recurrentConstraint:jt(this.recurrentConstraint),biasConstraint:jt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return{...e,...n}}};fm.className="GRUCell";J.registerClass(fm);var Cd=class extends Vs{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new fm(t),super(t)}call(t,e){return z(()=>{this.cell.dropoutMask!=null&&(Pe(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Pe(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=e==null?null:e.mask,o=e==null?null:e.training,s=e==null?null:e.initialState;return super.call(t,{mask:n,training:o,initialState:s})})}static fromConfig(t,e){return e.implmentation===0&&(e.implementation=1),new t(e)}};Cd.className="GRU";J.registerClass(Cd);var tp=class extends rp{constructor(e){super(e);this.DEFAULT_ACTIVATION="tanh";this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid";this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_RECURRENT_INITIALIZER="orthogonal";this.DEFAULT_BIAS_INITIALIZER="zeros";this.units=e.units,ir(this.units,"units"),this.activation=Li(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Li(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=vt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=vt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=vt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Mt(e.kernelRegularizer),this.recurrentRegularizer=Mt(e.recurrentRegularizer),this.biasRegularizer=Mt(e.biasRegularizer),this.kernelConstraint=Xt(e.kernelConstraint),this.recurrentConstraint=Xt(e.recurrentConstraint),this.biasConstraint=Xt(e.biasConstraint),this.dropout=Zl([1,Pi([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Zl([1,Pi([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var s;e=Ke(e);let n=e[e.length-1];this.kernel=this.addWeight("kernel",[n,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let o;if(this.useBias){if(this.unitForgetBias){let a=this.biasInitializer,i=this.units;o=new(s=class extends An{apply(u,l){let m=a.apply([i]),c=new Qp().apply([i]),d=a.apply([i*2]);return CN(CN(m,c),d)}},s.className="CustomInit",s)}else o=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,o,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,n){return z(()=>{let o=n.training==null?!1:n.training;if(e=e,e.length!==3)throw new O(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let s=e[1],a=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=np({ones:()=>Wr(e),rate:this.dropout,training:o,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=np({ones:()=>Wr(s),rate:this.recurrentDropout,training:o,count:4,dropoutFunc:this.dropoutFunc}));let i=this.dropoutMask,p=this.recurrentDropoutMask,u,l,m,c;0<this.dropout&&this.dropout<1&&(e=F(e,i[0]));let d=Ma(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(s=F(s,p[0])),d=Q(d,Ma(s,this.recurrentKernel.read())),this.useBias&&(d=wn(d,this.bias.read()));let[f,h,g,b]=Rr(d,4,d.rank-1);u=this.recurrentActivation.apply(f),l=this.recurrentActivation.apply(h),m=Q(F(l,a),F(u,this.activation.apply(g))),c=this.recurrentActivation.apply(b);let x=F(c,this.activation.apply(m));return[x,x,m]})}getConfig(){let e=super.getConfig(),n={units:this.units,activation:Ei(this.activation),recurrentActivation:Ei(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ft(this.kernelInitializer),recurrentInitializer:Ft(this.recurrentInitializer),biasInitializer:Ft(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:xt(this.kernelRegularizer),recurrentRegularizer:xt(this.recurrentRegularizer),biasRegularizer:xt(this.biasRegularizer),activityRegularizer:xt(this.activityRegularizer),kernelConstraint:jt(this.kernelConstraint),recurrentConstraint:jt(this.recurrentConstraint),biasConstraint:jt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return{...e,...n}}};tp.className="LSTMCell";J.registerClass(tp);var Id=class extends Vs{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new tp(t),super(t)}call(t,e){return z(()=>{this.cell.dropoutMask!=null&&(Pe(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Pe(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=e==null?null:e.mask,o=e==null?null:e.training,s=e==null?null:e.initialState;return super.call(t,{mask:n,training:o,initialState:s})})}static fromConfig(t,e){return e.implmentation===0&&(e.implementation=1),new t(e)}};Id.className="LSTM";J.registerClass(Id);var hm=class extends rp{constructor(e){super(e);this.cells=e.cells}get stateSize(){let e=[];for(let n of this.cells.slice().reverse())Array.isArray(n.stateSize)?e.push(...n.stateSize):e.push(n.stateSize);return e}call(e,n){return z(()=>{e=e;let o=e.slice(1),s=[];for(let p of this.cells.slice().reverse())Array.isArray(p.stateSize)?s.push(o.splice(0,p.stateSize.length)):s.push(o.splice(0,1));s.reverse();let a=[],i;for(let p=0;p<this.cells.length;++p){let u=this.cells[p];o=s[p],p===0?i=[e[0]].concat(o):i=[i[0]].concat(o),i=u.call(i,n),a.push(i.slice(1))}o=[];for(let p of a.slice().reverse())o.push(...p);return[i[0]].concat(o)})}build(e){sx(e)&&(e=e[0]),e=e;let n;this.cells.forEach((o,s)=>{Mi(`RNNCell_${s}`,()=>{o.build(e),Array.isArray(o.stateSize)?n=o.stateSize[0]:n=o.stateSize,e=[e[0],n]})}),this.built=!0}getConfig(){let e=super.getConfig(),n=a=>({className:a.getClassName(),config:a.getConfig()}),s={cells:this.cells.map(n)};return{...e,...s}}static fromConfig(e,n,o={}){let s=[];for(let a of n.cells)s.push(Nn(a,o));return new e({cells:s})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let n of this.cells)e.push(...n.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let n of this.cells)e.push(...n.nonTrainableWeights);if(!this.trainable){let n=[];for(let o of this.cells)n.push(...o.trainableWeights);return n.concat(e)}return e}getWeights(){let e=[];for(let n of this.cells)e.push(...n.weights);return Xh(e)}setWeights(e){let n=[];for(let o of this.cells){let s=o.weights.length,a=e.splice(s);for(let i=0;i<o.weights.length;++i)n.push([o.weights[i],a[i]])}Yc(n)}};hm.className="StackedRNNCells";J.registerClass(hm);function np(r){let{ones:t,rate:e,training:n=!1,count:o=1,dropoutFunc:s}=r,a=()=>s!=null?s(t(),e):ox(t(),e),i=()=>Zp(a,t,n);return!o||o<=1?Ot(i().clone()):Array(o).fill(void 0).map(i).map(u=>Ot(u.clone()))}var Vx=class extends Vs{constructor(t){if(t.unroll)throw new Me("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new Me("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new _t({ndim:5})]}call(t,e){return z(()=>{if(this.cell.dropoutMask!=null&&(Pe(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Pe(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new O("ConvRNN2D cell does not support constants");let n=e==null?null:e.mask,o=e==null?null:e.training,s=e==null?null:e.initialState;return super.call(t,{mask:n,training:o,initialState:s})})}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return z(()=>{let{stateSize:e}=this.cell,n=t.shape,o=this.computeSingleOutputShape(n),s=[o[0],...o.slice(2)],a=It(s);return Array.isArray(e)?Array(e.length).fill(a):[a]})}resetStates(t,e=!1){z(()=>{if(!this.stateful)throw new Bn("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,o=this.computeSingleOutputShape(n),s=[o[0],...o.slice(2)];if(n[0]==null)throw new O("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>It(s)):this.states_=[It(s)];else if(t==null)Pe(this.states_),this.keptStates!=null&&(Pe(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>It(s)):this.states_[0]=It(s);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new O(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e?this.keptStates.push(this.states_.slice()):Pe(this.states_);for(let i=0;i<this.states_.length;++i){let p=t[i],u=s;if(!y.arraysEqual(p.shape,u))throw new O(`State ${i} is incompatible with layer ${this.name}: expected shape=${u}, received shape=${p.shape}`);this.states_[i]=p}}this.states_=this.states_.map(i=>Ot(i.clone()))})}computeSingleOutputShape(t){let{dataFormat:e,filters:n,kernelSize:o,padding:s,strides:a,dilationRate:i}=this.cell,p=e==="channelsFirst",u=t[p?3:2],l=t[p?4:3],m=$n(u,o[0],s,a[0],i[0]),c=$n(l,o[1],s,a[1],i[1]);return[...t.slice(0,2),...p?[n,m,c]:[m,c,n]]}};Vx.className="ConvRNN2D";var gm=class extends tp{constructor(e){let{filters:n,kernelSize:o,strides:s,padding:a,dataFormat:i,dilationRate:p}=e;super({...e,units:n});this.filters=n,ir(this.filters,"filters"),this.kernelSize=tl(o,2,"kernelSize"),this.kernelSize.forEach(u=>ir(u,"kernelSize")),this.strides=tl(s||1,2,"strides"),this.strides.forEach(u=>ir(u,"strides")),this.padding=a||"valid",kn(this.padding),this.dataFormat=i||"channelsLast",Kt(this.dataFormat),this.dilationRate=tl(p||1,2,"dilationRate"),this.dilationRate.forEach(u=>ir(u,"dilationRate"))}build(e){var p;e=Ke(e);let n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new O(`The channel dimension of the input should be defined. Found ${e[n]}`);let o=e[n],s=4,a=this.kernelSize.concat([o,this.filters*s]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let i=this.kernelSize.concat([this.filters,this.filters*s]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let u;if(this.unitForgetBias){let l=this.biasInitializer,m=this.filters;u=new(p=class extends An{apply(d,f){let h=l.apply([m]),g=kr([m]),b=l.apply([m*2]);return Oc([h,g,b])}},p.className="CustomInit",p)}else u=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*s],null,u,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,n){return z(()=>{if(e.length!==3)throw new O(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let o=n.training||!1,s=e[0],a=e[1],i=e[2],p=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=np({ones:()=>Wr(s),rate:this.dropout,training:o,count:p,dropoutFunc:this.dropoutFunc}));let u=this.dropoutMask,l=(ie,pe,ae)=>!pe||!pe[ae]?ie:F(pe[ae],ie),m=l(s,u,0),c=l(s,u,1),d=l(s,u,2),f=l(s,u,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=np({ones:()=>Wr(a),rate:this.recurrentDropout,training:o,count:p,dropoutFunc:this.dropoutFunc}));let h=this.recurrentDropoutMask,g=l(a,h,0),b=l(a,h,1),x=l(a,h,2),T=l(a,h,3),C=3,[k,w,_,P]=Rr(this.kernel.read(),p,C),[M,R,$,G]=this.useBias?Rr(this.bias.read(),p):[null,null,null,null];m=this.inputConv(m,k,M,this.padding),c=this.inputConv(c,w,R,this.padding),d=this.inputConv(d,_,$,this.padding),f=this.inputConv(f,P,G,this.padding);let[W,U,V,K]=Rr(this.recurrentKernel.read(),p,C);g=this.recurrentConv(g,W),b=this.recurrentConv(b,U),x=this.recurrentConv(x,V),T=this.recurrentConv(T,K);let q=this.recurrentActivation.apply(Q(m,g)),j=this.recurrentActivation.apply(Q(c,b)),te=Q(F(j,i),F(q,this.activation.apply(Q(d,x)))),se=F(this.recurrentActivation.apply(Q(f,T)),this.activation.apply(te));return[se,se,te]})}getConfig(){let{units:e,...n}=super.getConfig(),o={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return{...n,...o}}inputConv(e,n,o,s){let a=Ws(e,n,this.strides,s||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return o?wn(a,o,this.dataFormat):a}recurrentConv(e,n){return Ws(e,n,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}};gm.className="ConvLSTM2DCell";J.registerClass(gm);var kd=class extends Vx{constructor(t){let e=new gm(t);super({...t,cell:e})}static fromConfig(t,e){return new t(e)}};kd.className="ConvLSTM2D";J.registerClass(kd);var bm=class extends Re{constructor(e){super(e);this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;let n=e.shape,o=[];for(let s=0;s<this.noiseShape.length;++s)o.push(this.noiseShape[s]==null?n[s]:this.noiseShape[s]);return o}call(e,n){return z(()=>{this.invokeCallHook(e,n);let o=Ne(e);if(0<this.rate&&this.rate<1){let s=n.training==null?!1:n.training,a=this.getNoiseShape(o);return Zp(()=>ox(o,this.rate,a,this.seed),()=>o,s)}return e})}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},n=super.getConfig();return Object.assign(e,n),e}dispose(){return super.dispose()}};bm.className="Dropout";J.registerClass(bm);var vd=class extends bm{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){let e=t.shape;return[e[0],1,e[2]]}};vd.className="SpatialDropout1D";J.registerClass(vd);var Sd=class extends Re{constructor(e){super(e);this.activation=null;this.useBias=!0;this.kernel=null;this.bias=null;this.DEFAULT_KERNEL_INITIALIZER="glorotNormal";this.DEFAULT_BIAS_INITIALIZER="zeros";if(e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let n=null;e.batchSize!=null&&(n=e.batchSize),this.batchInputShape=[n,e.inputDim]}this.units=e.units,ir(this.units,"units"),this.activation=Li(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=vt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=vt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Xt(e.kernelConstraint),this.biasConstraint=Xt(e.biasConstraint),this.kernelRegularizer=Mt(e.kernelRegularizer),this.biasRegularizer=Mt(e.biasRegularizer),this.activityRegularizer=Mt(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=Ke(e);let n=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[n,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{-1:n}}],this.built=!0}computeOutputShape(e){e=Ke(e);let n=e.slice();return n[n.length-1]=this.units,n}call(e,n){return z(()=>{this.invokeCallHook(e,n);let o=Ne(e),s=Yy(this.activation.getClassName()),a;return s!=null?a=Ma(o,this.kernel.read(),s,this.bias?this.bias.read():null):(a=Ma(o,this.kernel.read()),this.bias!=null&&(a=wn(a,this.bias.read())),this.activation!=null&&(a=this.activation.apply(a))),a})}getConfig(){let e={units:this.units,activation:Ei(this.activation),useBias:this.useBias,kernelInitializer:Ft(this.kernelInitializer),biasInitializer:Ft(this.biasInitializer),kernelRegularizer:xt(this.kernelRegularizer),biasRegularizer:xt(this.biasRegularizer),activityRegularizer:xt(this.activityRegularizer),kernelConstraint:jt(this.kernelConstraint),biasConstraint:jt(this.biasConstraint)},n=super.getConfig();return Object.assign(e,n),e}};Sd.className="Dense";J.registerClass(Sd);var wd=class extends Re{constructor(e){e=e||{};super(e);this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Ke(e);for(let n of e.slice(1))if(n==null)throw new O(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],_a(e,1)]}call(e,n){return z(()=>{this.invokeCallHook(e,n);let o=Ne(e);if(this.dataFormat==="channelsFirst"&&o.rank>1){let s=[0];for(let a=2;a<o.rank;++a)s.push(a);s.push(1),o=qe(o,s)}return QR(o)})}getConfig(){let e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);let n=super.getConfig();return Object.assign(e,n),e}};wd.className="Flatten";J.registerClass(wd);var Ad=class extends Re{constructor(e){super(e);this.supportsMasking=!0,this.activation=Li(e.activation)}call(e,n){return z(()=>{this.invokeCallHook(e,n);let o=Ne(e);return this.activation.apply(o)})}getConfig(){let e={activation:Ei(this.activation)},n=super.getConfig();return Object.assign(e,n),e}};Ad.className="Activation";J.registerClass(Ad);var Nd=class extends Re{constructor(e){super(e);this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,n){return z(()=>(e=Ne(e),YR(e,this.n)))}getConfig(){let e={n:this.n},n=super.getConfig();return Object.assign(e,n),e}};Nd.className="RepeatVector";J.registerClass(Nd);var Dd=class extends Re{constructor(e){super(e);this.targetShape=e.targetShape;for(let n=0;n<this.targetShape.length;++n)this.isUnknown(this.targetShape[n])&&(this.targetShape[n]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,n){let o="Total size of new array must be unchanged.",s=n.slice(),a=1,i=null;for(let u=0;u<s.length;++u){let l=s[u];if(this.isUnknown(l))if(i===null)i=u;else throw new O("Can only specifiy one unknown dimension.");else a*=l}let p=_a(e);if(i!==null){if(a===0||p%a!==0)throw new O(o);s[i]=p/a}else if(p!==a)throw new O(o);return s}computeOutputShape(e){let n=!1;for(let o=0;o<e.length;++o)if(this.isUnknown(e[o])){n=!0;break}return n?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,n){return z(()=>{this.invokeCallHook(e,n);let o=Ne(e),s=o.shape,a=s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape));return E(o,a)})}getConfig(){let e={targetShape:this.targetShape},n=super.getConfig();return Object.assign(e,n),e}};Dd.className="Reshape";J.registerClass(Dd);var _d=class extends Re{constructor(e){super(e);if(e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let n=vn(1,e.dims.length+1);if(!y.arraysEqual(e.dims.slice().sort(),n))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new _t({ndim:this.dims.length+1})]}computeOutputShape(e){e=Ke(e);let n=e.slice();return this.dims.forEach((o,s)=>{n[s+1]=e[o]}),n}call(e,n){return qe(Ne(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},n=super.getConfig();return Object.assign(e,n),e}};_d.className="Permute";J.registerClass(_d);var Md=class extends Re{constructor(e){super(e??{});this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),n={maskValue:this.maskValue};return Object.assign(n,e),n}computeMask(e,n){let o=Ne(e),s=-1;return Dh(qu(o,this.maskValue),s)}call(e,n){return z(()=>{this.invokeCallHook(e,n);let o=Ne(e),s=-1,a=!0,i=Dh(qu(o,this.maskValue),s,a);return F(o,ne(i,o.dtype))})}};Md.className="Masking";J.registerClass(Md);var Pd=class extends Re{constructor(e){super(e);this.embeddings=null;this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform";if(e.batchInputShape==null&&e.inputShape==null){let n=null;e.batchSize!=null&&(n=e.batchSize),e.inputLength==null?this.batchInputShape=[n,null]:this.batchInputShape=[n].concat(Dt(e.inputLength))}this.inputDim=e.inputDim,ir(this.inputDim,"inputDim"),this.outputDim=e.outputDim,ir(this.outputDim,"outputDim"),this.embeddingsInitializer=vt(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Mt(e.embeddingsRegularizer),this.activityRegularizer=Mt(e.activityRegularizer),this.embeddingsConstraint=Xt(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,n){return z(()=>this.maskZero?(e=Ne(e),qu(e,De(e))):null)}computeOutputShape(e){if(e=Ke(e),this.inputLength==null)return[...e,this.outputDim];let n=Dt(this.inputLength);if(n.length!==e.length-1)throw new O(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let o=0;for(let s=0;s<n.length;++s){let a=n[s],i=e[s+1];if(a!=null&&i!=null&&a!==i)throw new O(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);a==null&&(n[o]=i),o++}}return[e[0],...n,this.outputDim]}call(e,n){return z(()=>{this.invokeCallHook(e,n);let o=Ne(e);o.dtype!=="int32"&&(o=mn(o,"int32"));let s=nx(this.embeddings.read(),E(o,[o.size]));return E(s,Ke(this.computeOutputShape(o.shape)))})}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Ft(this.embeddingsInitializer),embeddingsRegularizer:xt(this.embeddingsRegularizer),activityRegularizer:xt(this.activityRegularizer),embeddingsConstraint:jt(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},n=super.getConfig();return Object.assign(e,n),e}};Pd.className="Embedding";J.registerClass(Pd);var op=class extends Re{constructor(e){super(e||{});this.supportsMasking=!0}mergeFunction(e){throw new Me}computeElementwiseOpOutputShape(e,n){if(e==null||n==null)return null;if(e.length<n.length)return this.computeElementwiseOpOutputShape(n,e);if(n.length===0)return e;let o=e.slice(0,e.length-n.length);for(let s=0;s<n.length;++s){let a=e[e.length-n.length+s],i=n[s];if(a==null||i==null||a<0||i<0)o.push(null);else if(a===1)o.push(i);else if(i===1)o.push(a);else{if(a!==i)throw new O("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(n));o.push(a)}}return o}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Ke(e)]),e=e,e.length<2)throw new O(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let n=[];for(let a of e)a!=null&&a[0]!==null&&n.push(a[0]);if(n=Da(n),n.length>1)throw new O(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let o=e[0]==null?null:e[0].slice(1);for(let a=1;a<e.length;++a){let i=e[a]==null?null:e[a].slice(1);o=this.computeElementwiseOpOutputShape(o,i)}let s=e.map(a=>a.length);e.indexOf(null)===-1&&Da(s).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,n){return z(()=>{if(e=e,this.reshapeRequired){let o=[],s=e.map(a=>a.rank);if(s.indexOf(null)===-1){let a=Pi(s);for(let i of e){let p=i.rank;for(let u=0;u<a-p;++u)i=Qu(i,1);o.push(i)}return this.mergeFunction(o)}else{let a=!1;for(let u of e){let l=u.rank;if(l==null){let m=u.shape,c=m[0],d=m.slice(1).concat([c]),f=E(u,[c].concat(_a(m.slice(1))));f=qe(f,[1,0]),f=E(f,d),o.push(f),a=!0}else if(l>1){let m=vn(1,l).concat([0]);o.push(qe(u,m)),a=!0}else o.push(u)}let i=this.mergeFunction(o),p=i.rank;if(a){if(p==null){let u=i.shape,l=u.length,m=u[l-1],c=[m].concat(u.slice(0,u.length-1));i=E(qe(E(i,[-1,m]),[1,0]),c)}else if(p>1){let u=[p-1].concat(vn(0,p-1));i=qe(i,u)}}return i}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let n;e[0]==null?n=null:n=e[0].slice(1);for(let s=1;s<e.length;++s){let a=e[s]==null?null:e[s].slice(1);n=this.computeElementwiseOpOutputShape(n,a)}let o=[];for(let s of e)s!=null&&s[0]!==null&&o.push(s[0]);return o=Da(o),o.length===1?n=o.concat(n):n=[null].concat(n),n}computeMask(e,n){return z(()=>{if(n==null)return null;if(!Array.isArray(n))throw new O("`mask` should be an Array");if(!Array.isArray(e))throw new O("`inputs` should be an Array");if(n.length!==e.length)throw new O(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${n.length})`);if(n.every(s=>s==null))return null;n=n.map(s=>s==null?s:Ir(s,0));let o=n[0];for(let s=1;s<n.length-1;++s)o=pn(o,n[s]);return o})}},Rd=class extends op{constructor(t){super(t)}mergeFunction(t){return z(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Q(e,t[n]);return e})}};Rd.className="Add";J.registerClass(Rd);var Fd=class extends op{constructor(t){super(t)}mergeFunction(t){return z(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=F(e,t[n]);return e})}};Fd.className="Multiply";J.registerClass(Fd);var Ed=class extends op{constructor(t){super(t)}mergeFunction(t){return z(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Q(e,t[n]);return F(1/t.length,e)})}};Ed.className="Average";J.registerClass(Ed);var Ld=class extends op{constructor(t){super(t)}mergeFunction(t){return z(()=>{let e=t[0];for(let n=1;n<t.length;++n)e=Us(e,t[n]);return e})}};Ld.className="Maximum";J.registerClass(Ld);var Bd=class extends op{constructor(t){super(t)}mergeFunction(t){return z(()=>{let e=t[0];for(let n=1;n<t.length;++n)e=Ai(e,t[n]);return e})}};Bd.className="Minimum";J.registerClass(Bd);var $d=class extends op{constructor(e){super(e);this.DEFAULT_AXIS=-1;e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new O("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let n=!0;for(let s of e)if(s!=null){n=!1;break}if(n)return;let o=[];for(let s=0;s<e.length;++s){let a=e[s].slice();a.splice(this.axis,1);let i=!1;for(let p of o)if(y.arraysEqual(p,a)){i=!0;break}i||o.push(a)}if(o.length>1)throw new O("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return z(()=>Oc(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new O("A `Concatenate` layer should be called on a list of inputs.");let n=e,o=n[0].slice(),s=this.axis<0?o.length+this.axis:this.axis;for(let a of n.slice(1)){if(o[s]==null||a[s]==null){o[s]=null;break}o[s]+=a[s]}return o}computeMask(e,n){if(n==null)return null;if(!Array.isArray(n))throw new O("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new O("`inputs` should be an array for Concatenate");if(n.length!==e.length)throw new O(`Mismatch in the length of mask (${n.length}) and the legnth of inputs (${e.length})`);return z(()=>{let o=!0;if(n.forEach(i=>{if(i!=null){o=!1;return}}),o)return null;let s=[];for(let i=0;i<e.length;++i)n[i]==null?s.push(ne(Wr(e[i]),"bool")):n[i].rank<e[i].rank?s.push(Ir(n[i],-1)):s.push(n[i]);let a=ht(s,this.axis);return Hb(a,-1,!1)})}getConfig(){let e={axis:this.axis},n=super.getConfig();return Object.assign(e,n),e}};$d.className="Concatenate";J.registerClass($d);function sg(r,t){for(;r<0;)r+=t;return r}function eoe(r,t,e){if(r.shape.length>3||t.shape.length>3)throw new Me("batchDot is not implemented for tensors of 4D or higher rank yet");if(y.assert(r.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${r.shape.length}`),y.assert(r.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof e=="number"&&(e=[e,e]),r.dtype==="complex64"||t.dtype==="complex64")throw new Me("batchDot is not implemented for complex64-type Tensors yet.");let n=r.shape.length,o=t.shape.length;e==null&&(e=[n-1,o-2]);let s=e;return z(()=>{let a;if(n>o){a=n-o;let p=[];for(let u=0;u<a;++u)p.push(1);t=E(t,t.shape.concat(p))}else if(o>n){a=o-n;let p=[];for(let u=0;u<a;++u)p.push(1);r=E(r,r.shape.concat(p))}else a=0;let i;if(r.shape.length===2&&t.shape.length===2)s[0]===s[1]?i=ge(F(r,t),s[0]):i=ge(F(qe(r,[1,0]),t),s[1]);else{let p=s[0]!==r.shape.length-1,u=s[1]===t.shape.length-1;i=He(r,t,p,u)}if(a>0){let p;n>o?p=n+o-3:p=n-1;let u=[];for(let l=p;l<p+a;++l)u.push(l);i=va(i,u)}return i.shape.length===1&&(i=Ir(i,1)),i})}var Od=class extends op{constructor(e){super(e);this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){y.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let n=e[0],o=e[1];if(n.length>3||o.length>3)throw new Me("Dot layer does not support tensors of 4D or higher rank yet.");let s=this.interpretAxes(n,o);if(n[s[0]]!==o[s[1]])throw new O(`Dimension incompatibility: ${n[s[0]]} !== ${o[s[1]]}`)}mergeFunction(e){if(e.length!==2)throw new O(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let n=e[0],o=e[1],s;return Array.isArray(this.axes)?s=this.axes.map((a,i)=>sg(a,e[i].shape.length)):s=[sg(this.axes,n.shape.length),sg(this.axes,o.shape.length)],this.normalize&&(n=Yh(n,s[0]),o=Yh(o,s[1])),eoe(n,o,s)}interpretAxes(e,n){let o;return Array.isArray(this.axes)?o=this.axes:o=[sg(this.axes,e.length),sg(this.axes,n.length)],o}computeOutputShape(e){y.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let n=e[0].slice(),o=e[1].slice();if(n.length>3||o.length>3)throw new Me("Dot layer does not support tensors of 4D or higher rank yet.");let s=this.interpretAxes(n,o);n.splice(s[0],1),o.splice(s[1],1),o.splice(0,1);let a=n.concat(o);return a.length===1&&a.push(1),a}computeMask(e,n){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},n=super.getConfig();return Object.assign(e,n),e}};Od.className="Dot";J.registerClass(Od);var zd=class extends Re{constructor(e){super(e);this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),n={stddev:this.stddev};return Object.assign(n,e),n}call(e,n){return z(()=>{this.invokeCallHook(e,n);let o=Ne(e);return Zp(()=>Q(zc(o.shape,0,this.stddev),o),()=>o,n.training||!1)})}};zd.className="GaussianNoise";J.registerClass(zd);var Gd=class extends Re{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),n={rate:this.rate};return Object.assign(n,e),n}call(e,n){return z(()=>{this.invokeCallHook(e,n);let o=Ne(e);return this.rate>0&&this.rate<1?Zp(()=>{let a=Math.sqrt(this.rate/(1-this.rate));return F(o,zc(o.shape,1,a))},()=>o,n.training||!1):o})}};Gd.className="GaussianDropout";J.registerClass(Gd);var Wd=class extends Re{constructor(e){super(e);this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Ne(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),n={rate:this.rate};return Object.assign(n,e),n}call(e,n){return z(()=>{if(this.rate<1&&this.rate>0){let o=this._getNoiseShape(e);return Zp(()=>{let a=Ne(e),i=1.6732632423543772,p=1.0507009873554805,u=-i*p,l=to(no(o),this.rate);l=mn(l,"float32");let m=((1-this.rate)*(1+this.rate*u**2))**-.5,c=-m*u*this.rate,d=Q(F(a,l),F(Q(l,-1),u));return Q(F(d,m),c)},()=>Ne(e),n.training||!1)}return e})}};Wd.className="AlphaDropout";J.registerClass(Wd);function ag(r,t,e,n,o,s=.001){let a;if(r.rank===2)a=jb(r,t,e,n,o,s);else if(r.rank===3)a=Xb(r,t,e,n,o,s);else if(r.rank===4)a=Yb(r,t,e,n,o,s);else throw new Me(`batchNormalization is not implemented for array of rank ${r.rank} yet`);return a}function toe(r,t,e,n,o=.001){return z(()=>{let s=Rl(r,n),a=s.mean,i=s.variance;return[ag(r,a,i,e,t,o),a,i]})}function roe(r,t,e,n,o=.001){return z(()=>{let s=Rl(r,n),a=s.mean,i=s.variance,p=[];for(let f of vn(0,r.rank))n.indexOf(f)!==-1?p.push(1):p.push(r.shape[f]);let u=E(a,p),l=E(i,p),m=t==null?null:E(t,p),c=e==null?null:E(e,p);return[ag(r,u,l,c,m,o),a,i]})}function noe(r,t,e,n,o=.001){return y.arraysEqual(n.slice().sort(),vn(0,r.rank-1))?toe(r,t,e,n,o):roe(r,t,e,n,o)}var Ud=class extends Re{constructor(e){e==null&&(e={});super(e);this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=vt(e.betaInitializer||"zeros"),this.gammaInitializer=vt(e.gammaInitializer||"ones"),this.movingMeanInitializer=vt(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=vt(e.movingVarianceInitializer||"ones"),this.betaConstraint=Xt(e.betaConstraint),this.gammaConstraint=Xt(e.gammaConstraint),this.betaRegularizer=Mt(e.betaRegularizer),this.gammaRegularizer=Mt(e.gammaRegularizer)}build(e){e=Ke(e);let n=this.axis>=0?this.axis:this.axis+e.length,o=e[n];if(o==null)throw new O(`Axis ${n} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new _t({ndim:e.length,axes:{[n]:o}})];let s=[o];this.scale&&(this.gamma=this.addWeight("gamma",s,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",s,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",s,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",s,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,n){return z(()=>{let o=n.training==null?!1:n.training,s=Ne(e),a=s.shape,i=a.length,p=vn(0,i),u=this.axis>=0?this.axis:this.axis+i;p.splice(u,1);let l=Aa(1,i);l[u]=a[u];let m=p.slice();m.sort();let c=!y.arraysEqual(m,vn(0,i).slice(0,i-1)),d=()=>{if(c){let T=E(this.movingMean.read(),l),C=E(this.movingVariance.read(),l),k=this.center?E(this.beta.read(),l):null,w=this.scale?E(this.gamma.read(),l):null;return ag(s,T,C,k,w,this.epsilon)}else return ag(s,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!o)return d();let[f,h,g]=noe(s,this.gamma.read(),this.beta.read(),p,this.epsilon),b=(T,C,k)=>{z(()=>{let w=1-k,_=T.read(),P=F(me(_,C),w);T.write(me(_,P))})};return(()=>{b(this.movingMean,h,this.momentum),b(this.movingVariance,g,this.momentum)})(),f})}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ft(this.betaInitializer),gammaInitializer:Ft(this.gammaInitializer),movingMeanInitializer:Ft(this.movingMeanInitializer),movingVarianceInitializer:Ft(this.movingVarianceInitializer),betaRegularizer:xt(this.betaRegularizer),gammaRegularizer:xt(this.gammaRegularizer),betaConstraint:jt(this.betaConstraint),gammaConstraint:jt(this.gammaConstraint)},n=super.getConfig();return Object.assign(e,n),e}};Ud.className="BatchNormalization";J.registerClass(Ud);var Kd=class extends Re{constructor(e){e==null&&(e={});super(e);if(this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let n of this.axis)if(!Number.isInteger(n))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=vt(e.betaInitializer||"zeros"),this.gammaInitializer=vt(e.gammaInitializer||"ones"),this.betaRegularizer=Mt(e.betaRegularizer),this.gammaRegularizer=Mt(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=Ke(e);let n=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let a=0;a<this.axis.length;++a)this.axis[a]<0&&(this.axis[a]+=n);for(let a of this.axis)if(a<0||a>=n)throw new Error(`Invalid axis: ${a}`);if(this.axis.length!==Da(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let o=this.axis.map(a=>e[a]),s=!0;this.scale?this.gamma=this.addWeight("gamma",o,"float32",this.gammaInitializer,this.gammaRegularizer,s):this.gamma=null,this.center?this.beta=this.addWeight("beta",o,"float32",this.betaInitializer,this.betaRegularizer,s):this.beta=null,this.built=!0}call(e,n){let o=Ne(e),s=o.shape,a=s.length;return z(()=>{let{mean:p,variance:u}=Rl(o,this.axis,!0),l=Aa(1,a);for(let g of this.axis)l[g]=s[g];let m=g=>g!=null&&g.shape.length!==a?E(g,l):g,c=this.scale?m(this.gamma.read()):null,d=this.center?m(this.beta.read()):null,f=[],h=[];for(let g=0;g<a;++g)this.axis.indexOf(g)!==-1?(f.push(s[g]),h.push(1)):(f.push(1),h.push(s[g]));return p=un(p,f),u=un(u,f),c!=null&&(c=un(c,h)),d!=null&&(d=un(d,h)),ag(o,p,u,d,c,this.epsilon)})}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ft(this.betaInitializer),gammaInitializer:Ft(this.gammaInitializer),betaRegularizer:xt(this.betaRegularizer),gammaRegularizer:xt(this.gammaRegularizer)},n=super.getConfig();return Object.assign(e,n),e}};Kd.className="LayerNormalization";J.registerClass(Kd);function ooe(r,t,e){return z(()=>{if(r.rank!==4)throw new O(`temporalPadding expects input tensor to be 4-D, but received a ${r.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new O("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(e==null&&(e=Sn()),e!=="channelsLast"&&e!=="channelsFirst")throw new O(`Unknown data format: ${e}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let n;return e==="channelsFirst"?n=[[0,0],[0,0],t[0],t[1]]:n=[[0,0],t[0],t[1],[0,0]],ro(r,n)})}var Vd=class extends Re{constructor(e){e==null&&(e={});super(e);if(this.dataFormat=e.dataFormat==null?Sn():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new O(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let n,o;if(typeof e.padding[0]=="number")n=[e.padding[0],e.padding[0]],o=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new O(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(n=e.padding[0],e.padding[1].length!==2)throw new O(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);o=e.padding[1]}this.padding=[n,o]}this.inputSpec=[new _t({ndim:4})]}computeOutputShape(e){e=Ke(e);let n,o;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?n=e[2]+this.padding[0][0]+this.padding[0][1]:n=null,e[3]!=null&&e[3]>=0?o=e[3]+this.padding[1][0]+this.padding[1][1]:o=null,[e[0],e[1],n,o]):(e[1]!=null&&e[1]>=0?n=e[1]+this.padding[0][0]+this.padding[0][1]:n=null,e[2]!=null&&e[2]>=0?o=e[2]+this.padding[1][0]+this.padding[1][1]:o=null,[e[0],n,o,e[3]])}call(e,n){return z(()=>ooe(Ne(e),this.padding,this.dataFormat))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(e,n),e}};Vd.className="ZeroPadding2D";J.registerClass(Vd);function Zx(r,t,e,n,o,s){return z(()=>{Kt(o),bN(s),kn(n),e==null&&(e=[1,1]),n==null&&(n="valid"),o==null&&(o=Sn()),s==null&&(s="max"),r=og(r,o);let a,i=n==="same"?"same":"valid";return s==="max"?a=vc(r,t,e,i):a=bc(r,t,e,i),o==="channelsFirst"&&(a=qe(a,[0,3,1,2])),a})}function FL(r,t,e,n,o,s){return z(()=>{Kt(o),bN(s),kn(n),e==null&&(e=[1,1,1]),n==null&&(n="valid"),o==null&&(o=Sn()),s==null&&(s="max"),r=$N(r,o);let a,i=n==="same"?"same":"valid";return s==="max"?a=hy(r,t,e,i):a=qb(r,t,e,i),o==="channelsFirst"&&(a=qe(a,[0,4,1,2,3])),a})}var Hx=class extends Re{constructor(e){e.poolSize==null&&(e.poolSize=2);super(e);if(typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new O(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(ir(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new O(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);ir(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,kn(this.padding),this.inputSpec=[new _t({ndim:3})]}computeOutputShape(e){e=Ke(e);let n=$n(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],n,e[2]]}call(e,n){return z(()=>{this.invokeCallHook(e,n),e=Qu(Ne(e),2);let o=this.poolingFunction(Ne(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return va(o,[2])})}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},n=super.getConfig();return Object.assign(e,n),e}},Hd=class extends Hx{constructor(t){super(t)}poolingFunction(t,e,n,o,s){return Kt(s),kn(o),Zx(t,e,n,o,s,"max")}};Hd.className="MaxPooling1D";J.registerClass(Hd);var qd=class extends Hx{constructor(t){super(t)}poolingFunction(t,e,n,o,s){return Kt(s),kn(o),Zx(t,e,n,o,s,"avg")}};qd.className="AveragePooling1D";J.registerClass(qd);var qx=class extends Re{constructor(e){e.poolSize==null&&(e.poolSize=[2,2]);super(e);if(this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new O(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];ir(this.poolSize,"poolSize"),ir(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Kt(this.dataFormat),kn(this.padding),this.inputSpec=[new _t({ndim:4})]}computeOutputShape(e){e=Ke(e);let n=this.dataFormat==="channelsFirst"?e[2]:e[1],o=this.dataFormat==="channelsFirst"?e[3]:e[2];return n=$n(n,this.poolSize[0],this.padding,this.strides[0]),o=$n(o,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],n,o]:[e[0],n,o,e[3]]}call(e,n){return z(()=>(this.invokeCallHook(e,n),this.poolingFunction(Ne(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(e,n),e}},jd=class extends qx{constructor(t){super(t)}poolingFunction(t,e,n,o,s){return Kt(s),kn(o),Zx(t,e,n,o,s,"max")}};jd.className="MaxPooling2D";J.registerClass(jd);var Xd=class extends qx{constructor(t){super(t)}poolingFunction(t,e,n,o,s){return Kt(s),kn(o),Zx(t,e,n,o,s,"avg")}};Xd.className="AveragePooling2D";J.registerClass(Xd);var jx=class extends Re{constructor(e){e.poolSize==null&&(e.poolSize=[2,2,2]);super(e);if(this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new O(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];ir(this.poolSize,"poolSize"),ir(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Kt(this.dataFormat),kn(this.padding),this.inputSpec=[new _t({ndim:5})]}computeOutputShape(e){e=Ke(e);let n=this.dataFormat==="channelsFirst"?e[2]:e[1],o=this.dataFormat==="channelsFirst"?e[3]:e[2],s=this.dataFormat==="channelsFirst"?e[4]:e[3];return n=$n(n,this.poolSize[0],this.padding,this.strides[0]),o=$n(o,this.poolSize[1],this.padding,this.strides[1]),s=$n(s,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],n,o,s]:[e[0],n,o,s,e[4]]}call(e,n){return z(()=>(this.invokeCallHook(e,n),this.poolingFunction(Ne(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(e,n),e}},Yd=class extends jx{constructor(t){super(t)}poolingFunction(t,e,n,o,s){return Kt(s),kn(o),FL(t,e,n,o,s,"max")}};Yd.className="MaxPooling3D";J.registerClass(Yd);var Zd=class extends jx{constructor(t){super(t)}poolingFunction(t,e,n,o,s){return Kt(s),kn(o),FL(t,e,n,o,s,"avg")}};Zd.className="AveragePooling3D";J.registerClass(Zd);var Xx=class extends Re{constructor(t){super(t),this.inputSpec=[new _t({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new Me}},Qd=class extends Xx{constructor(t){super(t||{})}call(t,e){return z(()=>{let n=Ne(t);return Gt(n,1)})}};Qd.className="GlobalAveragePooling1D";J.registerClass(Qd);var Jd=class extends Xx{constructor(t){super(t||{})}call(t,e){return z(()=>{let n=Ne(t);return Zr(n,1)})}};Jd.className="GlobalMaxPooling1D";J.registerClass(Jd);var Yx=class extends Re{constructor(e){super(e);this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Kt(this.dataFormat),this.inputSpec=[new _t({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,n){throw new Me}getConfig(){let e={dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(e,n),e}},ef=class extends Yx{call(t,e){return z(()=>{let n=Ne(t);return this.dataFormat==="channelsLast"?Gt(n,[1,2]):Gt(n,[2,3])})}};ef.className="GlobalAveragePooling2D";J.registerClass(ef);var tf=class extends Yx{call(t,e){return z(()=>{let n=Ne(t);return this.dataFormat==="channelsLast"?Zr(n,[1,2]):Zr(n,[2,3])})}};tf.className="GlobalMaxPooling2D";J.registerClass(tf);var Qx=class extends Re{constructor(e){super(e);this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},n=super.getConfig();return Object.assign(e,n),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,n,o={}){let s=n.layer,a=Nn(s,o);delete n.layer;let i={layer:a};return Object.assign(i,n),new e(i)}},rf=class extends Qx{constructor(t){super(t),this.supportsMasking=!0}build(t){if(t=Ke(t),t.length<3)throw new O(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];let e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){t=Ke(t);let e=[t[0]].concat(t.slice(2)),n=this.layer.computeOutputShape(e),o=t[1];return[n[0],o].concat(n.slice(1))}call(t,e){return z(()=>(t=Ne(t),UN((a,i)=>[Ne(this.layer.call(a,e)),[]],t,[],!1,null,null,!1,!0)[1]))}};rf.className="TimeDistributed";J.registerClass(rf);function soe(r){ku(VR,"BidirectionalMergeMode",r)}var aoe="concat",nf=class extends Qx{constructor(e){super(e);let n=e.layer.getConfig(),o={};o.className=e.layer.getClassName(),o.config=n,this.forwardLayer=Nn(o),n.goBackwards=n.goBackwards!==!0;let s={};if(s.className=e.layer.getClassName(),s.config=n,this.backwardLayer=Nn(s),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?aoe:e.mergeMode,soe(this.mergeMode),e.weights)throw new Me("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let n=e.length,o=Math.floor(n/2);this.forwardLayer.setWeights(e.slice(0,o)),this.backwardLayer.setWeights(e.slice(o))}computeOutputShape(e){let n=this.forwardLayer.computeOutputShape(e);Array.isArray(n)&&Array.isArray(n[0])||(n=[n]),n=n;let o,s,a;return this.returnState&&(a=n.slice(1)),o=n[0],o=o,this.mergeMode==="concat"?(o[o.length-1]*=2,s=[o]):this.mergeMode==null?s=[o,o.slice()]:s=[o],this.returnState?this.mergeMode==null?s.concat(a).concat(a.slice()):[o].concat(a).concat(a.slice()):Er(s)}apply(e,n){let o=n==null?null:n.initialState,s=n==null?null:n.constants;n==null&&(n={});let a=WN(e,o,s,this.numConstants);if(e=a.inputs,o=a.initialState,s=a.constants,Array.isArray(e)&&(o=e.slice(1),e=e[0]),(o==null||o.length===0)&&s==null)return super.apply(e,n);let i=[],p=[];if(o!=null){let l=o.length;if(l%2>0)throw new O("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");n.initialState=o,i.push(...o);let m=o.map(c=>new _t({shape:c.shape}));this.forwardLayer.stateSpec=m.slice(0,l/2),this.backwardLayer.stateSpec=m.slice(l/2),p.push(...m)}if(s!=null)throw new Me("Support for constants in Bidirectional layers is not implemented yet.");let u=i[0]instanceof cn;for(let l of i)if(l instanceof cn!==u)throw new O("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(u){let l=[e].concat(i),m=this.inputSpec.concat(p),c=this.inputSpec;this.inputSpec=m;let d=super.apply(l,n);return this.inputSpec=c,d}else return super.apply(e,n)}call(e,n){return z(()=>{let o=n.initialState,s,a;if(o==null)s=this.forwardLayer.call(e,n),a=this.backwardLayer.call(e,n);else{let u=o.slice(0,o.length/2),l=o.slice(o.length/2);s=this.forwardLayer.call(e,Object.assign(n,{initialState:u})),a=this.backwardLayer.call(e,Object.assign(n,{initialState:l}))}let i;this.returnState&&(Array.isArray(s)&&(i=s.slice(1).concat(a.slice(1))),s=s[0],a=a[0]),this.returnSequences&&(a=Pr(a,1));let p;return this.mergeMode==="concat"?p=Oc([s,a]):this.mergeMode==="sum"?p=Q(s,a):this.mergeMode==="ave"?p=F(.5,Q(s,a)):this.mergeMode==="mul"?p=F(s,a):this.mergeMode==null&&(p=[s,a]),this.returnState?this.mergeMode==null?p.concat(i):[p].concat(i):p})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Mi(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),Mi(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,n){Array.isArray(n)&&(n=n[0]);let o;if(this.returnSequences?this.mergeMode==null?o=[n,n]:o=n:this.mergeMode==null?o=[null,null]:o=null,this.returnState){let a=this.forwardLayer.states.map(i=>null);return Array.isArray(o)?o.concat(a).concat(a):[o].concat(a).concat(a)}else return o}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},n=super.getConfig();return Object.assign(e,n),e}static fromConfig(e,n){let o=Nn(n.layer);if(delete n.layer,n.numConstants!=null)throw new Me("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let s=n;return s.layer=o,new e(s)}};nf.className="Bidirectional";J.registerClass(nf);var of=class extends Re{constructor(e){super(e);this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){let e={scale:this.scale,offset:this.offset},n=super.getConfig();return Object.assign(e,n),e}call(e,n){return z(()=>(e=Ne(e),e.dtype!=="float32"&&(e=mn(e,"float32")),Q(F(e,this.scale),this.offset)))}};of.className="Rescaling";J.registerClass(of);var{resizeBilinear:ioe,cropAndResize:uoe}=In,sf=class extends Re{constructor(e){super(e);this.height=e.height,this.width=e.width}centerCrop(e,n,o,s,a,i,p,u){return z(()=>{let l,m=!1,c=n/i,d=o/p,f=(s+n)/i,h=(a+o)/p,g=[c,d,f,h],b=[];e.rank===3?(m=!0,l=hr([e])):l=e;for(let w=0;w<l.shape[0];w++)b.push(g);let x=fr(b,[b.length,4]),T=xu(0,b.length,1,"int32"),k=uoe(l,x,T,[s,a],"nearest");return m?mn(Ne(Fr(k)),u):mn(k,u)})}upsize(e,n,o,s){return z(()=>{let a=ioe(e,[n,o]);return mn(a,s)})}call(e,n){return z(()=>{let o=Ne(e),s=o.dtype,a=o.shape,i=a[a.length-3],p=a[a.length-2],u=0;i!==this.height&&(u=Math.floor((i-this.height)/2));let l=0;return p!==this.width&&(l=Math.floor((p-this.width)/2),l===0&&(l=1)),u>=0&&l>=0?this.centerCrop(o,u,l,this.height,this.width,i,p,s):this.upsize(e,this.height,this.width,s)})}getConfig(){let e={height:this.height,width:this.width},n=super.getConfig();return Object.assign(e,n),e}computeOutputShape(e){e=Ke(e);let n=e.length-3,o=e.length-2;return e[n]=this.height,e[o]=this.width,e}};sf.className="CenterCrop";J.registerClass(sf);function EL(r,t,e,n){let o=Ne(r);if(o.dtype!=="int32"&&(o=mn(o,"int32")),t==="int")return o;let s=o.shape;if(o.rank===0&&(o=Ir(o,-1)),t==="oneHot"&&o.shape[o.shape.length-1]!==1&&(o=Ir(o,-1)),o.rank>2)throw new O(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${s} which would result in output rank ${o.rank}.`);let a=["multiHot","oneHot"].includes(t),i=o,p;if(typeof n<"u"&&t==="count"?p=Rh(i,n,e,a):p=Rh(i,[],e,a),t!=="tfIdf")return p;if(n)return F(p,n);throw new O("When outputMode is 'tfIdf', weights must be provided.")}var af=class extends Re{constructor(e){super(e);this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){let e={numTokens:this.numTokens,outputMode:this.outputMode},n=super.getConfig();return Object.assign(e,n),e}computeOutputShape(e){return e=Ke(e),e==null?[this.numTokens]:this.outputMode==="oneHot"&&e[e.length-1]!==1?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,n){return z(()=>{e=Ne(e),e.dtype!=="int32"&&(e=mn(e,"int32"));let o;if(typeof n.countWeights<"u"){if(this.outputMode!=="count")throw new O(`countWeights is not used when outputMode !== count.
              Received countWeights=${n.countWeights}`);o=Ne(n.countWeights)}let s=Zr(e),a=Dl(e),i=tr(this.numTokens,s).bufferSync().get(0),p=to(a,0).bufferSync().get(0);if(!(i&&p))throw new O(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return EL(e,this.outputMode,this.numTokens,o)})}};af.className="CategoryEncoding";J.registerClass(af);var loe=["bilinear","nearest"],LL=new Set(loe),uf=class extends Re{constructor(e){super(e);if(this.height=e.height,this.width=e.width,e.interpolation)if(LL.has(e.interpolation))this.interpolation=e.interpolation;else throw new O(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=!!e.cropToAspectRatio}computeOutputShape(e){e=Ke(e);let n=e[2];return[this.height,this.width,n]}getConfig(){let e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},n=super.getConfig();return Object.assign(e,n),e}call(e,n){return z(()=>{let o=[this.height,this.width];if(this.interpolation==="bilinear")return In.resizeBilinear(e,o,!this.cropToAspectRatio);if(this.interpolation==="nearest")return In.resizeNearestNeighbor(e,o,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...LL]} are supported`)})}};uf.className="Resizing";J.registerClass(uf);var ig=class{constructor(t){this.seed=t}next(){if(this.seed!==void 0)return this.seed++}};ig.className="RandomSeed";var ug=class extends Re{constructor(e){super(e);this.randomGenerator=new ig(e.seed)}getConfig(){let e={seed:this.randomGenerator.seed},n=super.getConfig();return Object.assign(e,n),e}};ug.className="BaseRandomLayer";var moe=["bilinear","nearest"],BL=new Set(moe),pf=class extends ug{constructor(e){super(e);let{factor:n,interpolation:o="bilinear"}=e;if(this.factor=n,Array.isArray(this.factor)&&this.factor.length===2)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else if(!Array.isArray(this.factor)&&this.factor>0)this.widthLower=-this.factor,this.widthUpper=this.factor;else throw new O(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);if(this.widthLower<-1||this.widthUpper<-1)throw new O(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new O(`factor cannot have upper bound less than lower bound.
        Got upper bound: ${this.widthUpper}.
        Got lower bound: ${this.widthLower}
      `);if(o)if(BL.has(o))this.interpolation=o;else throw new O(`Invalid interpolation parameter: ${o} is not implemented`)}getConfig(){let e={factor:this.factor,interpolation:this.interpolation},n=super.getConfig();return Object.assign(e,n),e}computeOutputShape(e){e=Ke(e);let n=e[2];return[this.imgHeight,-1,n]}call(e,n){return z(()=>{let o=Ne(e);this.imgHeight=o.shape[o.shape.length-3];let s=o.shape[o.shape.length-2];this.widthFactor=no([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let a=this.widthFactor.dataSync()[0]*s;a=Math.round(a);let i=[this.imgHeight,a];switch(this.interpolation){case"bilinear":return In.resizeBilinear(e,i);case"nearest":return In.resizeNearestNeighbor(e,i);default:throw new Error(`Interpolation is ${this.interpolation}
          but only ${[...BL]} are supported`)}})}};pf.className="RandomWidth";J.registerClass(pf);function coe(r){return new Ri(r)}function doe(r){return new ld(r)}function foe(r){return new id(r)}function hoe(r){return new ud(r)}function goe(r){return new pd(r)}function boe(r){return new cd(r)}function yoe(r){return new md(r)}function xoe(r){return new gd(r)}function Toe(r){return new lm(r)}function Coe(r){return new dd(r)}function Ioe(r){return new mm(r)}function koe(r){return new fd(r)}function voe(r){return new hd(r)}function Soe(r){return new bd(r)}function woe(r){return new yd(r)}function Aoe(r){return new xd(r)}function Noe(r){return new Ad(r)}function Doe(r){return new Sd(r)}function _oe(r){return new bm(r)}function Moe(r){return new vd(r)}function Poe(r){return new wd(r)}function Roe(r){return new Nd(r)}function Foe(r){return new Dd(r)}function Eoe(r){return new _d(r)}function Loe(r){return new Pd(r)}function Boe(r){return new Rd(r)}function $oe(r){return new Ed(r)}function Ooe(r){return new $d(r)}function zoe(r){return new Ld(r)}function Goe(r){return new Bd(r)}function Woe(r){return new Fd(r)}function Uoe(r){return new Od(r)}function Koe(r){return new Ud(r)}function Voe(r){return new Kd(r)}function Hoe(r){return new Vd(r)}function VN(r){return new qd(r)}function qoe(r){return VN(r)}function joe(r){return VN(r)}function HN(r){return new Xd(r)}function Xoe(r){return HN(r)}function Yoe(r){return HN(r)}function qN(r){return new Zd(r)}function Zoe(r){return qN(r)}function Qoe(r){return qN(r)}function Joe(r){return new Qd(r)}function ese(r){return new ef(r)}function $L(r){return new Jd(r)}function OL(r){return new tf(r)}function zL(r){return new Hd(r)}function GL(r){return new jd(r)}function tse(r){return new Yd(r)}function rse(r){return new Cd(r)}function nse(r){return new fm(r)}function ose(r){return new Id(r)}function sse(r){return new tp(r)}function ase(r){return new Td(r)}function ise(r){return new dm(r)}function use(r){return new kd(r)}function pse(r){return new gm(r)}function lse(r){return new Vs(r)}function mse(r){return new hm(r)}function cse(r){return new nf(r)}function dse(r){return new rf(r)}var fse=$L,hse=OL,gse=zL,bse=GL;function yse(r){return new zd(r)}function xse(r){return new Gd(r)}function Tse(r){return new Wd(r)}function Cse(r){return new Md(r)}function Ise(r){return new of(r)}function kse(r){return new sf(r)}function vse(r){return new uf(r)}function Sse(r){return new af(r)}function wse(r){return new pf(r)}var UL={};Xe(UL,{MAPE:()=>Bse,MSE:()=>zse,binaryAccuracy:()=>Ase,binaryCrossentropy:()=>Nse,categoricalAccuracy:()=>_se,categoricalCrossentropy:()=>Mse,cosineProximity:()=>Fse,mape:()=>$se,meanAbsoluteError:()=>Ese,meanAbsolutePercentageError:()=>Lse,meanSquaredError:()=>Ose,mse:()=>Gse,precision:()=>Pse,recall:()=>Rse,sparseCategoricalAccuracy:()=>Dse});function Ase(r,t){return Jh(r,t)}function Nse(r,t){return xx(r,t)}function Dse(r,t){return Tx(r,t)}function _se(r,t){return eg(r,t)}function Mse(r,t){return tg(r,t)}function Pse(r,t){return DN(r,t)}function Rse(r,t){return cL(r,t)}function Fse(r,t){return Qh(r,t)}function Ese(r,t){return rd(r,t)}function Lse(r,t){return Jp(r,t)}function Bse(r,t){return Jp(r,t)}function $se(r,t){return Jp(r,t)}function Ose(r,t){return Su(r,t)}function zse(r,t){return Su(r,t)}function Gse(r,t){return Su(r,t)}var KL={};Xe(KL,{modelFromJSON:()=>AL});var VL={};Xe(VL,{l1:()=>Use,l1l2:()=>Wse,l2:()=>Kse});function Wse(r){return new el(r)}function Use(r){return ML(r)}function Kse(r){return PL(r)}var eT=class extends ep{constructor(){super(...arguments);this.model=null}setModel(e){if(!(e instanceof so))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function Jx(r,t){return r<t}function HL(r,t){return r>t}var tT=class extends eT{constructor(e){super();if(e==null&&(e={}),e.restoreBestWeights)throw new Me("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,["auto","min","max"].indexOf(this.mode)===-1&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.mode==="min"?this.monitorFunc=Jx:this.mode==="max"?this.monitorFunc=HL:this.monitor.indexOf("acc")!==-1?this.monitorFunc=HL:this.monitorFunc=Jx,this.monitorFunc===Jx&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,this.baseline!=null?this.best=this.baseline:this.best=this.monitorFunc===Jx?1/0:-1/0}async onEpochEnd(e,n){await vu(n);let o=this.getMonitorValue(n);o!=null&&(this.monitorFunc(o-this.minDelta,this.best)?(this.best=o,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){e==null&&(e={});let n=e[this.monitor];return n==null&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),n}};function Vse(r){return new tT(r)}var Hse={earlyStopping:Vse};var qse=L();qse.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,r=>{r&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});var jN=(ee=>(ee[ee.DT_INVALID=0]="DT_INVALID",ee[ee.DT_FLOAT=1]="DT_FLOAT",ee[ee.DT_DOUBLE=2]="DT_DOUBLE",ee[ee.DT_INT32=3]="DT_INT32",ee[ee.DT_UINT8=4]="DT_UINT8",ee[ee.DT_INT16=5]="DT_INT16",ee[ee.DT_INT8=6]="DT_INT8",ee[ee.DT_STRING=7]="DT_STRING",ee[ee.DT_COMPLEX64=8]="DT_COMPLEX64",ee[ee.DT_INT64=9]="DT_INT64",ee[ee.DT_BOOL=10]="DT_BOOL",ee[ee.DT_QINT8=11]="DT_QINT8",ee[ee.DT_QUINT8=12]="DT_QUINT8",ee[ee.DT_QINT32=13]="DT_QINT32",ee[ee.DT_BFLOAT16=14]="DT_BFLOAT16",ee[ee.DT_QINT16=15]="DT_QINT16",ee[ee.DT_QUINT16=16]="DT_QUINT16",ee[ee.DT_UINT16=17]="DT_UINT16",ee[ee.DT_COMPLEX128=18]="DT_COMPLEX128",ee[ee.DT_HALF=19]="DT_HALF",ee[ee.DT_RESOURCE=20]="DT_RESOURCE",ee[ee.DT_VARIANT=21]="DT_VARIANT",ee[ee.DT_UINT32=22]="DT_UINT32",ee[ee.DT_UINT64=23]="DT_UINT64",ee[ee.DT_FLOAT_REF=101]="DT_FLOAT_REF",ee[ee.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",ee[ee.DT_INT32_REF=103]="DT_INT32_REF",ee[ee.DT_UINT8_REF=104]="DT_UINT8_REF",ee[ee.DT_INT16_REF=105]="DT_INT16_REF",ee[ee.DT_INT8_REF=106]="DT_INT8_REF",ee[ee.DT_STRING_REF=107]="DT_STRING_REF",ee[ee.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",ee[ee.DT_INT64_REF=109]="DT_INT64_REF",ee[ee.DT_BOOL_REF=110]="DT_BOOL_REF",ee[ee.DT_QINT8_REF=111]="DT_QINT8_REF",ee[ee.DT_QUINT8_REF=112]="DT_QUINT8_REF",ee[ee.DT_QINT32_REF=113]="DT_QINT32_REF",ee[ee.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",ee[ee.DT_QINT16_REF=115]="DT_QINT16_REF",ee[ee.DT_QUINT16_REF=116]="DT_QUINT16_REF",ee[ee.DT_UINT16_REF=117]="DT_UINT16_REF",ee[ee.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",ee[ee.DT_HALF_REF=119]="DT_HALF_REF",ee[ee.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",ee[ee.DT_VARIANT_REF=121]="DT_VARIANT_REF",ee[ee.DT_UINT32_REF=122]="DT_UINT32_REF",ee[ee.DT_UINT64_REF=123]="DT_UINT64_REF",ee))(jN||{}),jse;(t=>{let r;(s=>(s[s.LEGACY=0]="LEGACY",s[s.V1=1]="V1",s[s.V2=2]="V2"))(r=t.CheckpointFormatVersion||={})})(jse||={});var XN={};function Yse(r,t){let e={tfOpName:r,category:"custom",inputs:[],attrs:[],customExecutor:t};XN[r]=e}function rT(r){return XN[r]}function Zse(r){delete XN[r]}function S(r,t,e,n,o){let s=t.inputParams[r];if(s&&s.inputIndexStart!==void 0){let i=s.inputIndexStart,p=s.inputIndexEnd===0?void 0:s.inputIndexEnd===void 0?i+1:s.inputIndexEnd,u=i<0?t.inputNames.length+i:i;if(s.type==="tensor")return yr(t.inputNames[u],e,n,o);if(s.type==="tensors"){let c=t.inputs.slice(i,p);return t.inputNames.slice(i,p).filter((f,h)=>c[h]?.op!=="NoOp").map(f=>yr(f,e,n,o))}let l=yr(t.inputNames[u],e,n,o),m=l.dataSync();return s.type==="number"?m[0]:y.toNestedArray(l.shape,m)}let a=t.attrParams[r];return a&&a.value}function yr(r,t,e,n){let[o,s]=Dn(r,e);if(n!=null){let i=n.getHashTableHandleByName(o);if(i!=null)return i}let a=e.currentContextIds.find(i=>!!t[nT(o,i)]);return a!==void 0?t[nT(o,a)][s]:void 0}function YN(r,t,e){return t[nT(r,e.currentContextId)]}function $i(r,t){let[e,n,o]=Dn(r,t);return[nT(e,t&&t.currentContextId),n,o]}function nT(r,t){return t?`${r}-${t}`:r}function Dn(r,t){if(r==="")return["",0,void 0];let e=t!=null&&t.parseNodeNameCache!=null;if(e){let s=t.parseNodeNameCache.get(r);if(s!=null)return s}let n=r.split(":"),o;if(n.length===1)o=[r,0,void 0];else{let s=n[0],a=n.length===3?n[1]:void 0,i=Number(n[n.length-1]);o=[s,i,a]}return e&&t.parseNodeNameCache.set(r,o),o}function pg(r,t,e){let n=S("pad",r,t,e);if(n==="explicit"){n=S("explicitPaddings",r,t,e);let o=[[0,0],[0,0],[0,0],[0,0]];for(let s=0;s<4;s++)o[s][0]=n[s*2],o[s][1]=n[s*2+1];return o}return n}function Oi(r){return r.kept?r:Tn(r)}var ZN={};Xe(ZN,{json:()=>Qse});var Qse=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var QN={};Xe(QN,{json:()=>Jse});var Jse=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var JN={};Xe(JN,{json:()=>eae});var eae=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}];var eD={};Xe(eD,{json:()=>tae});var tae=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}];var tD={};Xe(tD,{json:()=>rae});var rae=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}];var rD={};Xe(rD,{json:()=>nae});var nae=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var nD={};Xe(nD,{json:()=>oae});var oae=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}];var oD={};Xe(oD,{json:()=>sae});var sae=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}];var sD={};Xe(sD,{json:()=>aae});var aae=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}];var aD={};Xe(aD,{json:()=>iae});var iae=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}];var iD={};Xe(iD,{json:()=>uae});var uae=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}];var uD={};Xe(uD,{json:()=>pae});var pae=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}];var pD={};Xe(pD,{json:()=>lae});var lae=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}];var lD={};Xe(lD,{json:()=>mae});var mae=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}];var mD={};Xe(mD,{json:()=>cae});var cae=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}];var cD={};Xe(cD,{json:()=>dae});var dae=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}];var dD={};Xe(dD,{json:()=>fae});var fae=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}];var fD={};Xe(fD,{json:()=>hae});var hae=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}];var hD={};Xe(hD,{json:()=>gae});var gae=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];var lg=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let t=[ZN,QN,JN,eD,tD,rD,nD,oD,sD,aD,iD,uD,pD,lD,mD,cD,dD,fD,hD],e=[].concat(...t.map(n=>n.json));this.opMappers=e.reduce((n,o)=>(n[o.tfOpName]=o,n),{})}transformGraph(t,e={}){let n=t.node,o=[],s=[],a=[],i=n.reduce((h,g)=>(h[g.name]=this.mapNode(g),g.op.startsWith("Placeholder")?o.push(h[g.name]):g.op==="Const"?s.push(h[g.name]):(g.input==null||g.input.length===0)&&a.push(h[g.name]),h),{}),p=[],u=[],l={},m={};e!=null&&(l=this.mapSignatureEntries(e.inputs),m=this.mapSignatureEntries(e.outputs));let c=Object.keys(i);c.forEach(h=>{let g=i[h];g.inputNames.forEach((b,x)=>{let[T,,C]=$i(b),k=i[T];if(k.outputs!=null){let w=k.outputs.indexOf(C);if(w!==-1){let _=`${T}:${w}`;g.inputNames[x]=_}}g.inputs.push(k),k.children.push(g)})}),Object.keys(m).length===0?c.forEach(h=>{let g=i[h];g.children.length===0&&u.push(g)}):Object.keys(m).forEach(h=>{let[g]=$i(h),b=i[g];b!=null&&(b.signatureKey=m[h],u.push(b))}),Object.keys(l).length>0?Object.keys(l).forEach(h=>{let[g]=$i(h),b=i[g];b&&(b.signatureKey=l[h],p.push(b))}):p=o;let d={};t.library!=null&&t.library.function!=null&&(d=t.library.function.reduce((h,g)=>(h[g.signature.name]=this.mapFunction(g),h),{}));let f={nodes:i,inputs:p,outputs:u,weights:s,placeholders:o,signature:e,functions:d};return a.length>0&&(f.initNodes=a),f}mapSignatureEntries(t){return Object.keys(t||{}).reduce((e,n)=>(e[t[n].name]=n,e),{})}mapNode(t){let e=rT(t.op)||this.opMappers[t.op]||{};t.attr==null&&(t.attr={});let n={name:t.name,op:t.op,category:e.category,inputNames:(t.input||[]).map(o=>o.startsWith("^")?o.slice(1):o),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:t.attr,outputs:e.outputs};return e.inputs!=null&&(n.inputParams=e.inputs.reduce((o,s)=>(o[s.name]={type:s.type,inputIndexStart:s.start,inputIndexEnd:s.end},o),{})),e.attrs!=null&&(n.attrParams=e.attrs.reduce((o,s)=>{let a=s.type,i;switch(s.type){case"string":i=oT(t.attr,s.tfName,s.defaultValue),i===void 0&&s.tfDeprecatedName&&(i=oT(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"string[]":i=mT(t.attr,s.tfName,s.defaultValue),i===void 0&&s.tfDeprecatedName&&(i=mT(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"number":i=aT(t.attr,s.tfName,s.defaultValue||0),i===void 0&&s.tfDeprecatedName&&(i=aT(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"number[]":i=lT(t.attr,s.tfName,s.defaultValue),i===void 0&&s.tfDeprecatedName&&(i=lT(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"bool":i=sT(t.attr,s.tfName,s.defaultValue),i===void 0&&s.tfDeprecatedName&&(i=sT(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"bool[]":i=dT(t.attr,s.tfName,s.defaultValue),i===void 0&&s.tfDeprecatedName&&(i=dT(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"shape":i=pT(t.attr,s.tfName,s.defaultValue),i===void 0&&s.tfDeprecatedName&&(i=pT(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"shape[]":i=cT(t.attr,s.tfName,s.defaultValue),i===void 0&&s.tfDeprecatedName&&(i=cT(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"dtype":i=iT(t.attr,s.tfName,s.defaultValue),i===void 0&&s.tfDeprecatedName&&(i=iT(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"dtype[]":i=uT(t.attr,s.tfName,s.defaultValue),i===void 0&&s.tfDeprecatedName&&(i=uT(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"func":i=qL(t.attr,s.tfName,s.defaultValue),i===void 0&&s.tfDeprecatedName&&(i=qL(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${s.type} for op: ${t.op}`)}return o[s.name]={value:i,type:a},o},{})),n}mapFunction(t){let e=t.nodeDef,n=[],o=[],s={};e!=null&&(s=e.reduce((m,c)=>(m[c.name]=this.mapNode(c),c.op==="Const"&&o.push(m[c.name]),m),{}));let a=[],i=[];t.signature.inputArg.forEach(m=>{let[c]=$i(m.name),d={name:c,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:gD(m.type),type:"dtype"}},children:[]};d.signatureKey=m.name,a.push(d),s[c]=d}),Object.keys(s).forEach(m=>{let c=s[m];c.inputNames.forEach((d,f)=>{let[h,,g]=$i(d),b=s[h];if(b.outputs!=null){let x=b.outputs.indexOf(g);if(x!==-1){let T=`${h}:${x}`;c.inputNames[f]=T}}c.inputs.push(b),b.children.push(c)})});let u=t.ret;t.signature.outputArg.forEach(m=>{let[c,d]=$i(u[m.name]),f=s[c];f!=null&&(f.defaultOutput=d,i.push(f))});let l=this.mapArgsToSignature(t);return{nodes:s,inputs:a,outputs:i,weights:o,placeholders:n,signature:l}}mapArgsToSignature(t){return{methodName:t.signature.name,inputs:t.signature.inputArg.reduce((e,n)=>(e[n.name]=this.mapArgToTensorInfo(n),e),{}),outputs:t.signature.outputArg.reduce((e,n)=>(e[n.name]=this.mapArgToTensorInfo(n,t.ret),e),{})}}mapArgToTensorInfo(t,e){let n=t.name;return e!=null&&(n=e[n]),{name:n,dtype:t.type}}};function bae(r){let t=L().global;if(typeof t.atob<"u")return t.atob(r);if(typeof Buffer<"u")return new Buffer(r,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function jL(r,t){let e=Array.isArray(r)?String.fromCharCode.apply(null,r):bae(r);return t?e:e.toLowerCase()}function oT(r,t,e,n=!1){let o=r[t];return o!=null?jL(o.s,n):e}function sT(r,t,e){let n=r[t];return n?n.b:e}function aT(r,t,e){let n=r[t]||{},o=n.i!=null?n.i:n.f!=null?n.f:e;return typeof o=="number"?o:parseInt(o,10)}function gD(r){switch(typeof r=="string"&&(r=jN[r]),r){case 1:case 19:return"float32";case 3:case 9:case 6:case 4:return"int32";case 10:return"bool";case 2:return"float32";case 7:return"string";default:return null}}function qL(r,t,e){let n=r[t];return n&&n.func?n.func.name:e}function iT(r,t,e){let n=r[t];return n&&n.type?gD(n.type):e}function uT(r,t,e){let n=r[t];return n&&n.list&&n.list.type?n.list.type.map(o=>gD(o)):e}function XL(r){if(!r.unknownRank)return r.dim!=null?r.dim.map(t=>typeof t.size=="number"?t.size:parseInt(t.size,10)):[]}function pT(r,t,e){let n=r[t];return n&&n.shape?XL(n.shape):e}function lT(r,t,e){let n=r[t];return n?((n.list.f&&n.list.f.length?n.list.f:n.list.i)||[]).map(o=>typeof o=="number"?o:parseInt(o,10)):e}function mT(r,t,e,n=!1){let o=r[t];return o&&o.list&&o.list.s?o.list.s.map(s=>jL(s,n)):e}function cT(r,t,e){let n=r[t];return n&&n.list&&n.list.shape?n.list.shape.map(o=>XL(o)):e}function dT(r,t,e){let n=r[t];return n&&n.list&&n.list.b?n.list.b:e}var fT=class{constructor(t,e,n){this.node=t;this.tensorMap=e;this.context=n;this.inputs=[];this.attrs={};this.inputs=t.inputNames.map(o=>this.getInput(o)),t.rawAttrs!=null&&(this.attrs=Object.keys(t.rawAttrs).reduce((o,s)=>(o[s]=this.getAttr(s),o),{}))}getInput(t){return yr(t,this.tensorMap,this.context)}getAttr(t,e){let n=this.node.rawAttrs[t];if(n.tensor!=null)return yr(t,this.tensorMap,this.context);if(n.i!=null||n.f!=null)return aT(this.node.rawAttrs,t,e);if(n.s!=null)return oT(this.node.rawAttrs,t,e);if(n.b!=null)return sT(this.node.rawAttrs,t,e);if(n.shape!=null)return pT(this.node.rawAttrs,t,e);if(n.type!=null)return iT(this.node.rawAttrs,t,e);if(n.list!=null){if(n.list.i!=null||n.list.f!=null)return lT(this.node.rawAttrs,t,e);if(n.list.s!=null)return mT(this.node.rawAttrs,t,e);if(n.list.shape!=null)return cT(this.node.rawAttrs,t,e);if(n.list.b!=null)return dT(this.node.rawAttrs,t,e);if(n.list.type!=null)return uT(this.node.rawAttrs,t,e)}return e}};var ct={};Xe(ct,{OP_SCOPE_SUFFIX:()=>vA,abs:()=>Ut,acos:()=>L1,acosh:()=>B1,add:()=>Q,addN:()=>$1,all:()=>Hb,any:()=>Dh,argMax:()=>$p,argMin:()=>O1,asin:()=>z1,asinh:()=>G1,atan:()=>W1,atan2:()=>U1,atanh:()=>K1,avgPool:()=>bc,avgPool3d:()=>qb,basicLSTMCell:()=>q1,batchNorm:()=>zp,batchNorm2d:()=>jb,batchNorm3d:()=>Xb,batchNorm4d:()=>Yb,batchToSpaceND:()=>yc,bincount:()=>Zb,bitwiseAnd:()=>X1,booleanMaskAsync:()=>w9,broadcastArgs:()=>Y1,broadcastTo:()=>Gp,buffer:()=>Ce,cast:()=>ne,ceil:()=>Z1,clipByValue:()=>Yr,clone:()=>Tn,complex:()=>En,concat:()=>ht,concat1d:()=>Qb,concat2d:()=>Jb,concat3d:()=>ey,concat4d:()=>ty,conv1d:()=>ry,conv2d:()=>Ws,conv2dTranspose:()=>ny,conv3d:()=>oy,conv3dTranspose:()=>ay,cos:()=>Tc,cosh:()=>iy,cosineWindow:()=>$h,cumprod:()=>Ph,cumsum:()=>uy,denseBincount:()=>Rh,depthToSpace:()=>Q1,depthwiseConv2d:()=>Wp,diag:()=>J1,dilation2d:()=>eM,div:()=>de,divNoNan:()=>rM,dot:()=>nM,dropout:()=>ZA,einsum:()=>oM,elu:()=>Up,enclosingPowerOfTwo:()=>QA,ensureShape:()=>sM,equal:()=>an,erf:()=>aM,euclideanNorm:()=>pM,exp:()=>Cr,expandDims:()=>Ir,expm1:()=>lM,eye:()=>Ml,fft:()=>_c,fill:()=>Ca,floor:()=>Kp,floorDiv:()=>Vb,fused:()=>Xp,gather:()=>Vp,gatherND:()=>L9,greater:()=>tr,greaterEqual:()=>to,ifft:()=>$l,imag:()=>Hp,image:()=>In,inTopKAsync:()=>O9,irfft:()=>Ny,isFinite:()=>mM,isInf:()=>cM,isNaN:()=>dM,leakyRelu:()=>Cc,less:()=>Pl,lessEqual:()=>ka,linalg:()=>eN,linspace:()=>fM,localResponseNormalization:()=>hM,log:()=>Qr,log1p:()=>Ic,logSigmoid:()=>gM,logSoftmax:()=>my,logSumExp:()=>cy,logicalAnd:()=>pn,logicalNot:()=>kc,logicalOr:()=>dy,logicalXor:()=>bM,losses:()=>zee,lowerBound:()=>yM,matMul:()=>He,max:()=>Zr,maxPool:()=>vc,maxPool3d:()=>hy,maxPoolWithArgmax:()=>xM,maximum:()=>Us,mean:()=>Gt,meshgrid:()=>TM,min:()=>Dl,minimum:()=>Ai,mirrorPad:()=>CM,mod:()=>IM,moments:()=>Rl,movingAverage:()=>D9,mul:()=>F,multiRNNCell:()=>kM,multinomial:()=>vM,neg:()=>Je,norm:()=>_l,notEqual:()=>qu,oneHot:()=>qp,ones:()=>kr,onesLike:()=>Wr,op:()=>A,outerProduct:()=>SM,pad:()=>ro,pad1d:()=>wM,pad2d:()=>AM,pad3d:()=>NM,pad4d:()=>DM,pool:()=>_M,pow:()=>eo,prelu:()=>wc,print:()=>Kb,prod:()=>MM,raggedGather:()=>PM,raggedRange:()=>RM,raggedTensorToTensor:()=>FM,rand:()=>EM,randomGamma:()=>rP,randomNormal:()=>Ll,randomStandardNormal:()=>nP,randomUniform:()=>no,randomUniformInt:()=>oP,range:()=>xu,real:()=>ju,reciprocal:()=>sP,relu:()=>ln,relu6:()=>Cy,reshape:()=>E,reverse:()=>Pr,reverse1d:()=>aP,reverse2d:()=>iP,reverse3d:()=>uP,reverse4d:()=>pP,rfft:()=>Mc,round:()=>Iy,rsqrt:()=>ky,scalar:()=>he,scatterND:()=>M9,searchSorted:()=>Eh,selu:()=>vy,separableConv2d:()=>Sy,setdiff1dAsync:()=>lP,sigmoid:()=>Ln,sign:()=>mP,signal:()=>Oee,sin:()=>wy,sinh:()=>Ay,slice:()=>We,slice1d:()=>Ac,slice2d:()=>Bh,slice3d:()=>Nc,slice4d:()=>Bl,softmax:()=>Dc,softplus:()=>Hu,spaceToBatchND:()=>Sc,sparse:()=>Gee,sparseToDense:()=>F9,spectral:()=>$ee,split:()=>Rr,sqrt:()=>zt,square:()=>je,squaredDifference:()=>Dy,squeeze:()=>va,stack:()=>hr,step:()=>Tu,stridedSlice:()=>cP,string:()=>Wee,sub:()=>me,sum:()=>ge,tan:()=>dP,tanh:()=>Op,tensor:()=>fr,tensor1d:()=>rr,tensor2d:()=>Ni,tensor3d:()=>_y,tensor4d:()=>fP,tensor5d:()=>hP,tensor6d:()=>gP,tensorScatterUpdate:()=>yP,tile:()=>un,topk:()=>xP,transpose:()=>qe,truncatedNormal:()=>Rc,unique:()=>TP,unsortedSegmentSum:()=>My,unstack:()=>Fr,upperBound:()=>CP,variable:()=>Py,where:()=>Et,whereAsync:()=>Fy,zeros:()=>It,zerosLike:()=>De});var YL=(r,t,e,n=ct)=>{switch(r.op){case"BiasAdd":case"AddV2":case"Add":return[n.add(S("a",r,t,e),S("b",r,t,e))];case"AddN":return[n.addN(S("tensors",r,t,e))];case"FloorMod":case"Mod":return[n.mod(S("a",r,t,e),S("b",r,t,e))];case"Mul":return[n.mul(S("a",r,t,e),S("b",r,t,e))];case"RealDiv":case"Div":return[n.div(S("a",r,t,e),S("b",r,t,e))];case"DivNoNan":return[n.divNoNan(S("a",r,t,e),S("b",r,t,e))];case"FloorDiv":return[n.floorDiv(S("a",r,t,e),S("b",r,t,e))];case"Sub":return[n.sub(S("a",r,t,e),S("b",r,t,e))];case"Minimum":return[n.minimum(S("a",r,t,e),S("b",r,t,e))];case"Maximum":return[n.maximum(S("a",r,t,e),S("b",r,t,e))];case"Pow":return[n.pow(S("a",r,t,e),S("b",r,t,e))];case"SquaredDifference":return[n.squaredDifference(S("a",r,t,e),S("b",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var ZL=(r,t,e,n=ct)=>{switch(r.op){case"Abs":case"ComplexAbs":return[n.abs(S("x",r,t,e))];case"Acos":return[n.acos(S("x",r,t,e))];case"Acosh":return[n.acosh(S("x",r,t,e))];case"Asin":return[n.asin(S("x",r,t,e))];case"Asinh":return[n.asinh(S("x",r,t,e))];case"Atan":return[n.atan(S("x",r,t,e))];case"Atan2":return[n.atan2(S("x",r,t,e),S("y",r,t,e))];case"Atanh":return[n.atanh(S("x",r,t,e))];case"Ceil":return[n.ceil(S("x",r,t,e))];case"Complex":return[n.complex(S("real",r,t,e),S("imag",r,t,e))];case"Cos":return[n.cos(S("x",r,t,e))];case"Cosh":return[n.cosh(S("x",r,t,e))];case"Elu":return[n.elu(S("x",r,t,e))];case"Erf":return[n.erf(S("x",r,t,e))];case"Exp":return[n.exp(S("x",r,t,e))];case"Expm1":return[n.expm1(S("x",r,t,e))];case"Floor":return[n.floor(S("x",r,t,e))];case"Log":return[n.log(S("x",r,t,e))];case"Log1p":return[n.log1p(S("x",r,t,e))];case"Imag":return[n.imag(S("x",r,t,e))];case"Neg":return[n.neg(S("x",r,t,e))];case"Reciprocal":return[n.reciprocal(S("x",r,t,e))];case"Real":return[n.real(S("x",r,t,e))];case"Relu":return[n.relu(S("x",r,t,e))];case"Round":return[n.round(S("x",r,t,e))];case"Selu":return[n.selu(S("x",r,t,e))];case"Sigmoid":return[n.sigmoid(S("x",r,t,e))];case"Sin":return[n.sin(S("x",r,t,e))];case"Sign":return[n.sign(S("x",r,t,e))];case"Sinh":return[n.sinh(S("x",r,t,e))];case"Softplus":return[n.softplus(S("x",r,t,e))];case"Sqrt":return[n.sqrt(S("x",r,t,e))];case"Square":return[n.square(S("x",r,t,e))];case"Tanh":return[n.tanh(S("x",r,t,e))];case"Tan":return[n.tan(S("x",r,t,e))];case"ClipByValue":return[n.clipByValue(S("x",r,t,e),S("clipValueMin",r,t,e),S("clipValueMax",r,t,e))];case"Relu6":return[n.relu6(S("x",r,t,e))];case"Rsqrt":return[n.rsqrt(yr(r.inputNames[0],t,e))];case"LeakyRelu":return[n.leakyRelu(S("x",r,t,e),S("alpha",r,t,e))];case"Prelu":return[n.prelu(S("x",r,t,e),S("alpha",r,t,e))];case"IsNan":return[n.isNaN(yr(r.inputNames[0],t,e))];case"IsInf":return[n.isInf(yr(r.inputNames[0],t,e))];case"IsFinite":return[n.isFinite(yr(r.inputNames[0],t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function ao(r,t,e=""){if(!(typeof r=="number"||typeof t=="number")){y.assert(r.length===t.length,()=>e+` Shapes ${r} and ${t} must match`);for(let n=0;n<r.length;n++){let o=r[n],s=t[n];y.assert(o<0||s<0||o===s,()=>e+` Shapes ${r} and ${t} must match`)}}}function QL(r){return!(typeof r=="number"||r.some(t=>t<0))}function lf(r,t,e){let n=hT(r,e),o=!QL(n);if(o&&t.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${n}`);if(o&&t.forEach(s=>{n=hT(s.shape,n)}),!QL(n))throw new Error(`Non-fully-defined elementShape: ${n}`);return n}function hT(r,t){if(typeof r=="number")return t;if(typeof t=="number")return r;if(r.length!==t.length)throw new Error(`Incompatible ranks during merge: ${r} vs. ${t}`);let e=[];for(let n=0;n<r.length;++n){let o=r[n],s=t[n];if(o>=0&&s>=0&&o!==s)throw new Error(`Incompatible shape during merge: ${r} vs. ${t}`);e[n]=o>=0?o:s}return e}var gT=class{constructor(t,e,n,o,s,a,i){this.name=t;this.dtype=e;this.maxSize=n;this.elementShape=o;this.identicalElementShapes=s;this.dynamicSize=a;this.clearAfterRead=i;this.tensors=[];this.closed_=!1;this.idTensor=he(0),Ot(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(t){this.tensors.forEach(e=>{(t==null||!t.has(e.tensor.id))&&e.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||t>=this.size())throw new Error(`Tried to read from index ${t}, but array size is: ${this.size()}`);let e=this.tensors[t];if(e.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${t} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(e.cleared=!0),e.read=!0,e.tensor}readMany(t){return t.map(e=>this.read(e))}write(t,e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||!this.dynamicSize&&t>=this.maxSize)throw new Error(`Tried to write to index ${t}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[t]||{};if(e.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t},
          because the value dtype is ${e.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=e.shape),ao(this.elementShape,e.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${t}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been written.`);n.tensor=e,Ot(e),n.written=!0,this.tensors[t]=n}writeMany(t,e){if(t.length!==e.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${t.length} is not the same as tensors size: ${e.length}.`);t.forEach((n,o)=>this.write(n,e[o]))}gather(t,e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${e}`);if(t)t=t.slice(0,this.size());else{t=[];for(let o=0;o<this.size();o++)t.push(o)}if(t.length===0)return fr([],[0].concat(this.elementShape));let n=this.readMany(t);return ao(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),hr(n,0)}concat(t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${t}`);if(this.size()===0)return fr([],[0].concat(this.elementShape));let e=[];for(let o=0;o<this.size();o++)e.push(o);let n=this.readMany(e);return ao(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),ht(n,0)}scatter(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let n=Math.max(...t);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(t,Fr(e,0))}split(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);let n=0,o=t.map(p=>(n+=p,n));if(n!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${e.shape}`);if(!this.dynamicSize&&t.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${t.length}), and the TensorArray is not marked as dynamically resizeable`);let s=n===0?0:e.size/n,a=[];z(()=>{e=E(e,[1,n,s]);for(let p=0;p<t.length;++p){let l=[0,p===0?0:o[p-1],0],m=[1,t[p],s];a[p]=E(We(e,l,m),this.elementShape)}return a});let i=[];for(let p=0;p<t.length;p++)i[p]=p;this.writeMany(i,a)}};var sp=class{constructor(t,e,n,o=-1){this.tensors=t;this.elementShape=e;this.elementDtype=n;t?.forEach(s=>{if(n!==s.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${s.dtype}`);ao(e,s.shape,"TensorList shape mismatch: "),Ot(s)}),this.idTensor=he(0),this.maxNumElements=o,Ot(this.idTensor)}get id(){return this.idTensor.id}copy(){return new sp([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(t){this.tensors.forEach(e=>{(t==null||!t.has(e.id))&&e.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(t,e,n=-1){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(n!==-1&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);ao(t,this.elementShape,"TensorList shape mismatch: ");let o=lf(this.elementShape,this.tensors,t);return z(()=>{let s=this.tensors.map(a=>E(a,o));return hr(s,0)})}popBack(t,e){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let n=lf(this.elementShape,this.tensors,t),o=this.tensors.pop();return o.kept=!1,ao(o.shape,t,"TensorList shape mismatch: "),E(o,n)}pushBack(t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(ao(t.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Ot(t),this.tensors.push(t)}resize(t){if(t<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${t}`);if(this.maxNumElements!==-1&&t>this.maxNumElements)throw new Error(`TensorListResize input size ${t} is greater maxNumElement ${this.maxNumElements}.`);let e=new sp([],this.elementShape,this.elementDtype,this.maxNumElements);e.tensors.length=t;for(let n=0;n<Math.min(this.tensors.length,t);++n)e.tensors[n]=this.tensors[n];return e}getItem(t,e,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(t<0||t>this.tensors.length)throw new Error(`Trying to access element ${t} in a list with ${this.tensors.length} elements.`);if(this.tensors[t]==null)throw new Error(`element at index ${t} is null.`);ao(this.tensors[t].shape,e,"TensorList shape mismatch: ");let o=lf(this.elementShape,this.tensors,e);return E(this.tensors[t],o)}setItem(t,e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(t<0||this.maxNumElements!==-1&&t>=this.maxNumElements)throw new Error(`Trying to set element ${t} in a list with max ${this.maxNumElements} elements.`);ao(this.elementShape,e.shape,"TensorList shape mismatch: "),Ot(e),this.tensors[t]!=null&&(this.tensors[t].kept=!1),this.tensors[t]=e}gather(t,e,n){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);ao(this.elementShape,n,"TensorList shape mismatch: "),t=t.slice(0,this.size());let o=lf(this.elementShape,this.tensors,n);return t.length===0?fr([],[0].concat(o)):z(()=>{let s=t.map(a=>E(this.tensors[a],o));return hr(s,0)})}concat(t,e){if(t&&t!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${t}`);ao(this.elementShape,e,"TensorList shape mismatch: ");let n=lf(this.elementShape,this.tensors,e);return this.size()===0?fr([],[0].concat(n)):z(()=>{let o=this.tensors.map(s=>E(s,n));return ht(o,0)})}};function JL(r,t,e){let n=r.dtype;if(r.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${r.shape}`);if(r.dtype!==e)throw new Error(`Invalid data types; op elements ${r.dtype}, but list elements ${e}`);let o=r.shape.slice(1);ao(o,t,"TensorList shape mismatch: ");let s=Fr(r);return new sp(s,t,n)}function eB(r,t,e,n){return new sp([],r,t,n)}function tB(r,t,e,n){if(t.length!==r.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${r.shape[0]}`);let o=Math.max(...t);if(n!=null&&n!==-1&&o>=n)throw new Error(`Max index must be < array size (${o}  vs. ${n})`);let s=new sp([],e,r.dtype,n),a=Fr(r,0);return t.forEach((i,p)=>{s.setItem(i,a[p])}),s}function rB(r,t,e){let n=0,o=t.map(l=>(n+=l,n));if(n!==r.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${r.shape}`);let s=r.shape.slice(1),a=hT(s,e),i=n===0?0:r.size/n,p=z(()=>{let l=[];r=E(r,[1,n,i]);for(let m=0;m<t.length;++m){let d=[0,m===0?0:o[m-1],0],f=[1,t[m],i];l[m]=E(We(r,d,f),a)}return r.dispose(),l}),u=new sp([],e,r.dtype,t.length);for(let l=0;l<p.length;l++)u.setItem(l,p[l]);return u}var nB=async(r,t,e)=>{switch(r.op){case"If":case"StatelessIf":{let n=S("thenBranch",r,t,e),o=S("elseBranch",r,t,e),s=S("cond",r,t,e),a=S("args",r,t,e);return(await s.data())[0]?e.functionMap[n].executeFunctionAsync(a,e.tensorArrayMap,e.tensorListMap):e.functionMap[o].executeFunctionAsync(a,e.tensorArrayMap,e.tensorListMap)}case"While":case"StatelessWhile":{let n=S("body",r,t,e),o=S("cond",r,t,e),s=S("args",r,t,e),a=await e.functionMap[o].executeFunctionAsync(s,e.tensorArrayMap,e.tensorListMap),i=s.map(l=>l.id),p=await a[0].data();a.forEach(l=>{!l.kept&&i.indexOf(l.id)===-1&&l.dispose()});let u=s;for(;p[0];){let l=u;u=await e.functionMap[n].executeFunctionAsync(u,e.tensorArrayMap,e.tensorListMap);let m=u.map(d=>d.id);l.forEach(d=>{!d.kept&&i.indexOf(d.id)===-1&&m.indexOf(d.id)===-1&&d.dispose()});let c=await e.functionMap[o].executeFunctionAsync(u,e.tensorArrayMap,e.tensorListMap);p=await c[0].data(),c.forEach(d=>{!d.kept&&i.indexOf(d.id)===-1&&m.indexOf(d.id)===-1&&d.dispose()})}return u}case"LoopCond":{let n=S("pred",r,t,e);return[Oi(n)]}case"Switch":{let n=S("pred",r,t,e),o=S("data",r,t,e);return o.kept||(o=Oi(o)),(await n.data())[0]?[void 0,o]:[o,void 0]}case"Merge":{let n=r.inputNames.find(o=>yr(o,t,e)!==void 0);if(n){let o=yr(n,t,e);return[Oi(o)]}return}case"Enter":{let n=S("frameName",r,t,e),o=S("tensor",r,t,e);return e.enterFrame(n),[Oi(o)]}case"Exit":{let n=S("tensor",r,t,e);return e.exitFrame(),[Oi(n)]}case"NextIteration":{let n=S("tensor",r,t,e);return e.nextIteration(),[Oi(n)]}case"TensorArrayV3":{let n=S("size",r,t,e),o=S("dtype",r,t,e),s=S("elementShape",r,t,e),a=S("dynamicSize",r,t,e),i=S("clearAfterRead",r,t,e),p=S("identicalElementShapes",r,t,e),u=S("name",r,t,e),l=new gT(u,o,n,s,p,a,i);return e.addTensorArray(l),[l.idTensor,he(1)]}case"TensorArrayWriteV3":{let n=S("tensorArrayId",r,t,e),o=S("index",r,t,e),s=S("tensor",r,t,e),a=e.getTensorArray(n.id);return a.write(o,s),[a.idTensor]}case"TensorArrayReadV3":{let n=S("tensorArrayId",r,t,e),o=S("index",r,t,e);return[e.getTensorArray(n.id).read(o)]}case"TensorArrayGatherV3":{let n=S("tensorArrayId",r,t,e),o=S("indices",r,t,e),s=S("dtype",r,t,e);return[e.getTensorArray(n.id).gather(o,s)]}case"TensorArrayScatterV3":{let n=S("tensorArrayId",r,t,e),o=S("indices",r,t,e),s=S("tensor",r,t,e),a=e.getTensorArray(n.id);return a.scatter(o,s),[a.idTensor]}case"TensorArrayConcatV3":{let n=S("tensorArrayId",r,t,e),o=e.getTensorArray(n.id),s=S("dtype",r,t,e);return[o.concat(s)]}case"TensorArraySplitV3":{let n=S("tensorArrayId",r,t,e),o=S("tensor",r,t,e),s=S("lengths",r,t,e),a=e.getTensorArray(n.id);return a.split(s,o),[a.idTensor]}case"TensorArraySizeV3":{let n=S("tensorArrayId",r,t,e),o=e.getTensorArray(n.id);return[he(o.size(),"int32")]}case"TensorArrayCloseV3":{let n=S("tensorArrayId",r,t,e),o=e.getTensorArray(n.id);return o.clearAndClose(),[o.idTensor]}case"TensorListSetItem":{let n=S("tensorListId",r,t,e),o=S("index",r,t,e),s=S("tensor",r,t,e),a=e.getTensorList(n.id);return a.setItem(o,s),[a.idTensor]}case"TensorListGetItem":{let n=S("tensorListId",r,t,e),o=S("index",r,t,e),s=S("elementShape",r,t,e),a=S("elementDType",r,t,e);return[e.getTensorList(n.id).getItem(o,s,a)]}case"TensorListScatterV2":case"TensorListScatter":{let n=S("indices",r,t,e),o=S("tensor",r,t,e),s=S("elementShape",r,t,e),a=S("numElements",r,t,e),i=tB(o,n,s,a);return e.addTensorList(i),[i.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let n=S("elementShape",r,t,e),o=S("elementDType",r,t,e),s;r.op==="TensorListReserve"?s="numElements":s="maxNumElements";let a=S(s,r,t,e),i=r.op==="TensorListReserve"?-1:a,p=eB(n,o,a,i);return e.addTensorList(p),[p.idTensor]}case"TensorListGather":{let n=S("tensorListId",r,t,e),o=S("indices",r,t,e),s=S("elementShape",r,t,e),a=S("elementDType",r,t,e);return[e.getTensorList(n.id).gather(o,a,s)]}case"TensorListStack":{let n=S("tensorListId",r,t,e),o=S("elementShape",r,t,e),s=S("elementDType",r,t,e),a=S("numElements",r,t,e);return[e.getTensorList(n.id).stack(o,s,a)]}case"TensorListFromTensor":{let n=S("tensor",r,t,e),o=S("elementShape",r,t,e),s=S("elementDType",r,t,e),a=JL(n,o,s);return e.addTensorList(a),[a.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{let n=S("tensorListId",r,t,e),o=e.getTensorList(n.id),s=S("dtype",r,t,e),a=S("elementShape",r,t,e);return[o.concat(s,a)]}case"TensorListPushBack":{let n=S("tensorListId",r,t,e),o=S("tensor",r,t,e),s=e.getTensorList(n.id);return s.pushBack(o),[s.idTensor]}case"TensorListPopBack":{let n=S("tensorListId",r,t,e),o=S("elementShape",r,t,e),s=S("elementDType",r,t,e);return[e.getTensorList(n.id).popBack(o,s)]}case"TensorListSplit":{let n=S("tensor",r,t,e),o=S("elementShape",r,t,e),s=S("lengths",r,t,e),a=rB(n,s,o);return e.addTensorList(a),[a.idTensor]}case"TensorListLength":{let n=S("tensorListId",r,t,e),o=e.getTensorList(n.id);return[he(o.size(),"int32")]}case"TensorListResize":{let n=S("tensorListId",r,t,e),o=S("size",r,t,e),a=e.getTensorList(n.id).resize(o);return e.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};function oB(r,t,e){let[n,o]=S("fusedOps",r,t,e),s=n==="biasadd",a=!s,i=o==="prelu",p=n==="fusedbatchnorm",u=S("numArgs",r,t,e);if(s){if(i&&u!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&s&&u!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(p)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let l=S("strides",r,t,e),m=pg(r,t,e),c=S("dataFormat",r,t,e).toUpperCase(),d=S("dilations",r,t,e),[f,h]=S("args",r,t,e);a&&(h=f,f=void 0);let g=S("leakyreluAlpha",r,t,e);return{stride:l,pad:m,dataFormat:c,dilations:d,biasArg:f,preluArg:h,activationFunc:o,leakyreluAlpha:g}}var sB=(r,t,e,n=ct)=>{switch(r.op){case"Conv1D":{let o=S("stride",r,t,e),s=S("pad",r,t,e),a=S("dataFormat",r,t,e).toUpperCase(),i=S("dilation",r,t,e);return[n.conv1d(S("x",r,t,e),S("filter",r,t,e),o,s,a,i)]}case"Conv2D":{let o=S("strides",r,t,e),s=pg(r,t,e),a=S("dataFormat",r,t,e).toUpperCase(),i=S("dilations",r,t,e);return[n.conv2d(S("x",r,t,e),S("filter",r,t,e),[o[1],o[2]],s,a,[i[1],i[2]])]}case"_FusedConv2D":{let{stride:o,pad:s,dataFormat:a,dilations:i,biasArg:p,preluArg:u,activationFunc:l,leakyreluAlpha:m}=oB(r,t,e);return[n.fused.conv2d({x:S("x",r,t,e),filter:S("filter",r,t,e),strides:[o[1],o[2]],pad:s,dataFormat:a,dilations:[i[1],i[2]],bias:p,activation:l,preluActivationWeights:u,leakyreluAlpha:m})]}case"FusedDepthwiseConv2dNative":{let{stride:o,pad:s,dataFormat:a,dilations:i,biasArg:p,preluArg:u,activationFunc:l,leakyreluAlpha:m}=oB(r,t,e);return[n.fused.depthwiseConv2d({x:S("x",r,t,e),filter:S("filter",r,t,e),strides:[o[1],o[2]],pad:s,dataFormat:a,dilations:[i[1],i[2]],bias:p,activation:l,preluActivationWeights:u,leakyreluAlpha:m})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let o=S("outputShape",r,t,e),s=S("strides",r,t,e),a=pg(r,t,e);return[n.conv2dTranspose(S("x",r,t,e),S("filter",r,t,e),o,[s[1],s[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let o=S("strides",r,t,e),s=pg(r,t,e),a=S("dilations",r,t,e),i=S("dataFormat",r,t,e).toUpperCase();return[n.depthwiseConv2d(S("input",r,t,e),S("filter",r,t,e),[o[1],o[2]],s,i,[a[1],a[2]])]}case"Conv3D":{let o=S("strides",r,t,e),s=S("pad",r,t,e),a=S("dataFormat",r,t,e).toUpperCase(),i=S("dilations",r,t,e);return[n.conv3d(S("x",r,t,e),S("filter",r,t,e),[o[1],o[2],o[3]],s,a,[i[1],i[2],i[3]])]}case"AvgPool":{let o=S("strides",r,t,e),s=S("pad",r,t,e),a=S("kernelSize",r,t,e);return[n.avgPool(S("x",r,t,e),[a[1],a[2]],[o[1],o[2]],s)]}case"MaxPool":{let o=S("strides",r,t,e),s=S("pad",r,t,e),a=S("kernelSize",r,t,e);return[n.maxPool(S("x",r,t,e),[a[1],a[2]],[o[1],o[2]],s)]}case"MaxPoolWithArgmax":{let o=S("strides",r,t,e),s=S("pad",r,t,e),a=S("kernelSize",r,t,e),i=S("includeBatchInIndex",r,t,e),{result:p,indexes:u}=n.maxPoolWithArgmax(S("x",r,t,e),[a[1],a[2]],[o[1],o[2]],s,i);return[p,u]}case"AvgPool3D":{let o=S("strides",r,t,e),s=S("pad",r,t,e),a=S("kernelSize",r,t,e);return[n.avgPool3d(S("x",r,t,e),[a[1],a[2],a[3]],[o[1],o[2],o[3]],s)]}case"MaxPool3D":{let o=S("strides",r,t,e),s=S("pad",r,t,e),a=S("kernelSize",r,t,e);return[n.maxPool3d(S("x",r,t,e),[a[1],a[2],a[3]],[o[1],o[2],o[3]],s)]}case"Dilation2D":{let o=S("strides",r,t,e),s=S("pad",r,t,e),a=S("dilations",r,t,e),i=o[1],p=o[2],u=a[1],l=a[2];return[n.dilation2d(S("x",r,t,e),S("filter",r,t,e),[i,p],s,[u,l],"NHWC")]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var aB=(r,t,e,n=ct)=>{switch(r.op){case"Fill":{let o=S("shape",r,t,e),s=S("dtype",r,t,e),a=S("value",r,t,e);return[n.fill(o,a,s)]}case"LinSpace":{let o=S("start",r,t,e),s=S("stop",r,t,e),a=S("num",r,t,e);return[n.linspace(o,s,a)]}case"Multinomial":{let o=S("logits",r,t,e),s=S("numSamples",r,t,e),a=S("seed",r,t,e);return[n.multinomial(o,s,a)]}case"OneHot":{let o=S("indices",r,t,e),s=S("depth",r,t,e),a=S("onValue",r,t,e),i=S("offValue",r,t,e),p=S("dtype",r,t,e);return[n.oneHot(o,s,a,i,p)]}case"Ones":return[n.ones(S("shape",r,t,e),S("dtype",r,t,e))];case"OnesLike":return[n.onesLike(S("x",r,t,e))];case"RandomStandardNormal":return[n.randomStandardNormal(S("shape",r,t,e),S("dtype",r,t,e),S("seed",r,t,e))];case"RandomUniform":return[n.randomUniform(S("shape",r,t,e),S("minval",r,t,e),S("maxval",r,t,e),S("dtype",r,t,e))];case"RandomUniformInt":return[n.randomUniformInt(S("shape",r,t,e),S("minval",r,t,e),S("maxval",r,t,e),S("seed",r,t,e))];case"Range":{let o=S("start",r,t,e),s=S("stop",r,t,e),a=S("step",r,t,e);return[n.range(o,s,a,S("dtype",r,t,e))]}case"TruncatedNormal":{let o=S("shape",r,t,e),s=S("mean",r,t,e),a=S("stdDev",r,t,e),i=S("seed",r,t,e);return[n.truncatedNormal(o,s,a,S("dtype",r,t,e),i)]}case"Zeros":return[n.zeros(S("shape",r,t,e),S("dtype",r,t,e))];case"ZerosLike":return[n.zerosLike(S("x",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function bD(r,t,e){let n=S("boxes",r,t,e),o=S("scores",r,t,e),s=S("maxOutputSize",r,t,e),a=S("iouThreshold",r,t,e),i=S("scoreThreshold",r,t,e),p=S("softNmsSigma",r,t,e);return{boxes:n,scores:o,maxOutputSize:s,iouThreshold:a,scoreThreshold:i,softNmsSigma:p}}var iB=async(r,t,e,n,o=ct)=>{switch(r.op){case"NonMaxSuppressionV5":{let{boxes:s,scores:a,maxOutputSize:i,iouThreshold:p,scoreThreshold:u,softNmsSigma:l}=bD(r,t,e),m=await o.image.nonMaxSuppressionWithScoreAsync(s,a,i,p,u,l);return[m.selectedIndices,m.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:s,scores:a,maxOutputSize:i,iouThreshold:p,scoreThreshold:u}=bD(r,t,e),l=S("padToMaxOutputSize",r,t,e),m=await o.image.nonMaxSuppressionPaddedAsync(s,a,i,p,u,l);return[m.selectedIndices,m.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:s,scores:a,maxOutputSize:i,iouThreshold:p,scoreThreshold:u}=bD(r,t,e);return[await o.image.nonMaxSuppressionAsync(s,a,i,p,u)]}case"Where":{let s=o.cast(S("condition",r,t,e),"bool"),a=[await o.whereAsync(s)];return s.dispose(),a}case"ListDiff":return o.setdiff1dAsync(S("x",r,t,e),S("y",r,t,e));default:throw TypeError(`Node type ${r.op} is not implemented`)}};var uB=(r,t,e,n=ct)=>{switch(r.op){case"LowerBound":{let o=S("sortedSequence",r,t,e),s=S("values",r,t,e);return[n.lowerBound(o,s)]}case"TopKV2":{let o=S("x",r,t,e),s=S("k",r,t,e),a=S("sorted",r,t,e),i=n.topk(o,s,a);return[i.values,i.indices]}case"UpperBound":{let o=S("sortedSequence",r,t,e),s=S("values",r,t,e);return[n.upperBound(o,s)]}case"Unique":{let o=S("x",r,t,e),s=n.unique(o);return[s.values,s.indices]}case"UniqueV2":{let o=S("x",r,t,e),s=S("axis",r,t,e),a=n.unique(o,s);return[a.values,a.indices]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var pB=(r,t,e,n=ct)=>{switch(r.op){case"Const":return t[r.name];case"PlaceholderWithDefault":let o=S("default",r,t,e);return[yr(r.name,t,e)||o];case"Placeholder":return[yr(r.name,t,e)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let l=S("x",r,t,e);return[Oi(l)]}case"IdentityN":return S("x",r,t,e).map(l=>Oi(l));case"Snapshot":let s=S("x",r,t,e);return[Oi(s)];case"Shape":return[n.tensor1d(S("x",r,t,e).shape,"int32")];case"ShapeN":return S("x",r,t,e).map(l=>n.tensor1d(l.shape));case"Size":return[n.scalar(S("x",r,t,e).size,"int32")];case"Rank":return[n.scalar(S("x",r,t,e).rank,"int32")];case"NoOp":return[n.scalar(1)];case"Print":let a=S("x",r,t,e),i=S("data",r,t,e),p=S("message",r,t,e),u=S("summarize",r,t,e);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(p);for(let l=0;l<i.length;l++)console.log(Array.prototype.slice.call(i[l].dataSync()).slice(0,u));return[a];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var bT=class{constructor(t,e){this.keyDType=t;this.valueDType=e;this.handle=he(0),this.tensorMap=new Map,Ot(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(t=>t.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return he(this.size(),"int32")}async import(t,e){this.checkKeyAndValueTensor(t,e);let n=await t.data();return this.tensorMap.forEach(o=>o.dispose()),this.tensorMap.clear(),z(()=>{let o=Fr(e),s=n.length,a=o.length;y.assert(s===a,()=>`The number of elements doesn't match, keys has ${s} elements, the values has ${a} elements.`);for(let i=0;i<s;i++){let p=n[i],u=o[i];Ot(u),this.tensorMap.set(p,u)}return this.handle})}async find(t,e){this.checkKeyAndValueTensor(t,e);let n=await t.data();return z(()=>{let o=[];for(let s=0;s<n.length;s++){let a=n[s],i=this.findWithDefault(a,e);o.push(i)}return hr(o)})}findWithDefault(t,e){let n=this.tensorMap.get(t);return n??e}checkKeyAndValueTensor(t,e){if(t.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${t.dtype}`);if(e.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${e.dtype}`)}};var lB=async(r,t,e,n)=>{switch(r.op){case"HashTable":case"HashTableV2":{let o=n.getHashTableHandleByName(r.name);if(o!=null)return[o];{let s=S("keyDType",r,t,e),a=S("valueDType",r,t,e),i=new bT(s,a);return n.addHashTable(r.name,i),[i.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{let o=S("tableHandle",r,t,e,n),s=S("keys",r,t,e),a=S("values",r,t,e);return[await n.getHashTableById(o.id).import(s,a)]}case"LookupTableFind":case"LookupTableFindV2":{let o=S("tableHandle",r,t,e,n),s=S("keys",r,t,e),a=S("defaultValue",r,t,e);return[await n.getHashTableById(o.id).find(s,a)]}case"LookupTableSize":case"LookupTableSizeV2":{let o=S("tableHandle",r,t,e,n);return[n.getHashTableById(o.id).tensorSize()]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var mB=(r,t,e,n=ct)=>{switch(r.op){case"ResizeBilinear":{let o=S("images",r,t,e),s=S("size",r,t,e),a=S("alignCorners",r,t,e),i=S("halfPixelCenters",r,t,e);return[n.image.resizeBilinear(o,[s[0],s[1]],a,i)]}case"ResizeNearestNeighbor":{let o=S("images",r,t,e),s=S("size",r,t,e),a=S("alignCorners",r,t,e),i=S("halfPixelCenters",r,t,e);return[n.image.resizeNearestNeighbor(o,[s[0],s[1]],a,i)]}case"CropAndResize":{let o=S("image",r,t,e),s=S("boxes",r,t,e),a=S("boxInd",r,t,e),i=S("cropSize",r,t,e),p=S("method",r,t,e),u=S("extrapolationValue",r,t,e);return[n.image.cropAndResize(o,s,a,i,p,u)]}case"ImageProjectiveTransformV3":{let o=S("images",r,t,e),s=S("transforms",r,t,e),a=S("outputShape",r,t,e),i=S("fillValue",r,t,e),p=S("interpolation",r,t,e),u=S("fillMode",r,t,e);return[n.image.transform(o,s,p.toLowerCase(),u.toLowerCase(),i,a)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var cB=(r,t,e,n=ct)=>{switch(r.op){case"Equal":return[n.equal(S("a",r,t,e),S("b",r,t,e))];case"NotEqual":return[n.notEqual(S("a",r,t,e),S("b",r,t,e))];case"Greater":return[n.greater(S("a",r,t,e),S("b",r,t,e))];case"GreaterEqual":return[n.greaterEqual(S("a",r,t,e),S("b",r,t,e))];case"Less":return[n.less(S("a",r,t,e),S("b",r,t,e))];case"LessEqual":return[n.lessEqual(S("a",r,t,e),S("b",r,t,e))];case"LogicalAnd":return[n.logicalAnd(S("a",r,t,e),S("b",r,t,e))];case"LogicalNot":return[n.logicalNot(S("a",r,t,e))];case"LogicalOr":return[n.logicalOr(S("a",r,t,e),S("b",r,t,e))];case"Select":case"SelectV2":return[n.where(S("condition",r,t,e),S("a",r,t,e),S("b",r,t,e))];case"BitwiseAnd":return[n.bitwiseAnd(S("a",r,t,e),S("b",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var dB=(r,t,e,n=ct)=>{switch(r.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[n.matMul(S("a",r,t,e),S("b",r,t,e),S("transposeA",r,t,e),S("transposeB",r,t,e))];case"Einsum":return[n.einsum(S("equation",r,t,e),...S("tensors",r,t,e))];case"Transpose":return[n.transpose(S("x",r,t,e),S("perm",r,t,e))];case"_FusedMatMul":let[o,s]=S("fusedOps",r,t,e),a=o==="biasadd",i=s==="prelu",p=S("numArgs",r,t,e),u=S("leakyreluAlpha",r,t,e);if(a){if(i&&p!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&p!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[l,m]=S("args",r,t,e);return[n.fused.matMul({a:S("a",r,t,e),b:S("b",r,t,e),transposeA:S("transposeA",r,t,e),transposeB:S("transposeB",r,t,e),bias:l,activation:s,preluActivationWeights:m,leakyreluAlpha:u})];case"MatrixBandPart":return[n.linalg.bandPart(S("a",r,t,e),S("numLower",r,t,e),S("numUpper",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var fB=(r,t,e,n=ct)=>{switch(r.op){case"EuclideanNorm":return[n.euclideanNorm(S("x",r,t,e),S("axis",r,t,e),S("keepDims",r,t,e))];case"FusedBatchNorm":case"FusedBatchNormV2":return[n.batchNorm(S("x",r,t,e),S("mean",r,t,e),S("variance",r,t,e),S("offset",r,t,e),S("scale",r,t,e),S("epsilon",r,t,e))];case"FusedBatchNormV3":return[n.batchNorm(S("x",r,t,e),S("mean",r,t,e),S("variance",r,t,e),S("offset",r,t,e),S("scale",r,t,e),S("epsilon",r,t,e))];case"LRN":return[n.localResponseNormalization(S("x",r,t,e),S("radius",r,t,e),S("bias",r,t,e),S("alpha",r,t,e),S("beta",r,t,e))];case"Softmax":return[n.softmax(S("x",r,t,e))];case"LogSoftmax":return[n.logSoftmax(S("x",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var hB=(r,t,e,n=ct)=>{switch(r.op){case"RaggedGather":{let{outputNestedSplits:o,outputDenseValues:s}=n.raggedGather(S("paramsNestedSplits",r,t,e),S("paramsDenseValues",r,t,e),S("indices",r,t,e),S("outputRaggedRank",r,t,e));return o.concat(s)}case"RaggedRange":{let{rtNestedSplits:o,rtDenseValues:s}=n.raggedRange(S("starts",r,t,e),S("limits",r,t,e),S("splits",r,t,e));return[o,s]}case"RaggedTensorToTensor":return[n.raggedTensorToTensor(S("shape",r,t,e),S("values",r,t,e),S("defaultValue",r,t,e),S("rowPartitionTensors",r,t,e),S("rowPartitionTypes",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var gB=(r,t,e,n=ct)=>{switch(r.op){case"Max":{let i=S("axis",r,t,e),p=S("keepDims",r,t,e);return[n.max(S("x",r,t,e),i,p)]}case"Mean":{let i=S("axis",r,t,e),p=S("keepDims",r,t,e);return[n.mean(S("x",r,t,e),i,p)]}case"Min":{let i=S("axis",r,t,e),p=S("keepDims",r,t,e);return[n.min(S("x",r,t,e),i,p)]}case"Sum":{let i=S("axis",r,t,e),p=S("keepDims",r,t,e);return[n.sum(S("x",r,t,e),i,p)]}case"All":{let i=S("axis",r,t,e),p=S("keepDims",r,t,e);return[n.all(S("x",r,t,e),i,p)]}case"Any":{let i=S("axis",r,t,e),p=S("keepDims",r,t,e);return[n.any(S("x",r,t,e),i,p)]}case"ArgMax":{let i=S("axis",r,t,e);return[n.argMax(S("x",r,t,e),i)]}case"ArgMin":{let i=S("axis",r,t,e);return[n.argMin(S("x",r,t,e),i)]}case"Prod":{let i=S("axis",r,t,e),p=S("keepDims",r,t,e);return[n.prod(S("x",r,t,e),i,p)]}case"Cumprod":{let i=S("axis",r,t,e),p=S("exclusive",r,t,e),u=S("reverse",r,t,e);return[n.cumprod(S("x",r,t,e),i,p,u)]}case"Cumsum":{let i=S("axis",r,t,e),p=S("exclusive",r,t,e),u=S("reverse",r,t,e);return[n.cumsum(S("x",r,t,e),i,p,u)]}case"Bincount":let o=S("x",r,t,e),s=S("weights",r,t,e),a=S("size",r,t,e);return[n.bincount(o,s,a)];case"DenseBincount":{let i=S("x",r,t,e),p=S("weights",r,t,e),u=S("size",r,t,e),l=S("binaryOutput",r,t,e);return[n.denseBincount(i,p,u,l)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var bB=(r,t,e,n=ct)=>{switch(r.op){case"ConcatV2":case"Concat":{let o=S("n",r,t,e),s=S("axis",r,t,e),a=S("tensors",r,t,e);return a=a.slice(0,o),[n.concat(a,s)]}case"Gather":{let o=S("x",r,t,e),s=S("indices",r,t,e);return[n.gather(o,n.cast(s,"int32"),0)]}case"GatherV2":{let o=S("axis",r,t,e),s=S("batchDims",r,t,e),a=S("x",r,t,e),i=S("indices",r,t,e);return[n.gather(a,n.cast(i,"int32"),o,s)]}case"Reverse":{let o=S("dims",r,t,e),s=[];for(let i=0;i<o.length;i++)o[i]&&s.push(i);let a=S("x",r,t,e);return[n.reverse(a,s)]}case"ReverseV2":{let o=S("axis",r,t,e),s=S("x",r,t,e);return[n.reverse(s,o)]}case"Slice":{let o=S("begin",r,t,e),s=S("size",r,t,e);return[n.slice(S("x",r,t,e),o,s)]}case"StridedSlice":{let o=S("begin",r,t,e),s=S("end",r,t,e),a=S("strides",r,t,e),i=S("beginMask",r,t,e),p=S("endMask",r,t,e),u=S("ellipsisMask",r,t,e),l=S("newAxisMask",r,t,e),m=S("shrinkAxisMask",r,t,e),c=S("x",r,t,e);return[n.stridedSlice(c,o,s,a,i,p,u,l,m)]}case"Pack":return z(()=>{let o=S("axis",r,t,e),s=S("tensors",r,t,e),a=s[0].shape,i=n.squeeze(s[0]).shape,p=s.map(u=>{let l=y.arraysEqual(u.shape,a);if(!l&&!y.arraysEqual(n.squeeze(u).shape,i))throw new Error("the input tensors shape does not match");return l?u:n.reshape(u,a)});return[n.stack(p,o)]});case"Unpack":{let o=S("axis",r,t,e),s=S("tensor",r,t,e);return n.unstack(s,o)}case"Tile":{let o=S("reps",r,t,e);return[n.tile(S("x",r,t,e),o)]}case"Split":case"SplitV":{let o=S("axis",r,t,e),s=S("numOrSizeSplits",r,t,e),a=S("x",r,t,e);return n.split(a,s,o)}case"ScatterNd":{let o=S("indices",r,t,e),s=S("values",r,t,e),a=S("shape",r,t,e);return[n.scatterND(o,s,a)]}case"GatherNd":{let o=S("x",r,t,e),s=S("indices",r,t,e);return[n.gatherND(o,s)]}case"SparseToDense":{let o=S("sparseIndices",r,t,e),s=S("outputShape",r,t,e),a=S("sparseValues",r,t,e),i=S("defaultValue",r,t,e);return[n.sparseToDense(o,a,s,a.dtype===i.dtype?i:n.cast(i,a.dtype))]}case"TensorScatterUpdate":{let o=S("indices",r,t,e),s=S("values",r,t,e),a=S("tensor",r,t,e);return[n.tensorScatterUpdate(a,o,s)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var yB=(r,t,e,n=ct)=>{switch(r.op){case"SparseFillEmptyRows":{let{outputIndices:o,outputValues:s,emptyRowIndicator:a,reverseIndexMap:i}=n.sparse.sparseFillEmptyRows(S("indices",r,t,e),S("values",r,t,e),S("denseShape",r,t,e),S("defaultValue",r,t,e));return[o,s,a,i]}case"SparseReshape":{let{outputIndices:o,outputShape:s}=n.sparse.sparseReshape(S("inputIndices",r,t,e),S("inputShape",r,t,e),S("newShape",r,t,e));return[o,s]}case"SparseSegmentMean":return[n.sparse.sparseSegmentMean(S("data",r,t,e),S("indices",r,t,e),S("segmentIds",r,t,e))];case"SparseSegmentSum":return[n.sparse.sparseSegmentSum(S("data",r,t,e),S("indices",r,t,e),S("segmentIds",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var xB=(r,t,e,n=ct)=>{switch(r.op){case"FFT":return[n.fft(S("x",r,t,e))];case"IFFT":return[n.ifft(S("x",r,t,e))];case"RFFT":return[n.rfft(S("x",r,t,e))];case"IRFFT":return[n.irfft(S("x",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var TB=(r,t,e,n=ct)=>{switch(r.op){case"StaticRegexReplace":return[n.string.staticRegexReplace(S("input",r,t,e),S("pattern",r,t,e),S("rewrite",r,t,e),S("replaceGlobal",r,t,e))];case"StringNGrams":{let{nGrams:o,nGramsSplits:s}=n.string.stringNGrams(S("data",r,t,e),S("dataSplits",r,t,e),S("separator",r,t,e),S("nGramWidths",r,t,e),S("leftPad",r,t,e),S("rightPad",r,t,e),S("padWidth",r,t,e),S("preserveShortSequences",r,t,e));return[o,s]}case"StringSplit":{let{indices:o,values:s,shape:a}=n.string.stringSplit(S("input",r,t,e),S("delimiter",r,t,e),S("skipEmpty",r,t,e));return[o,s,a]}case"StringToHashBucketFast":return[n.string.stringToHashBucketFast(S("input",r,t,e),S("numBuckets",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var CB=(r,t,e,n=ct)=>{switch(r.op){case"Cast":return[n.cast(S("x",r,t,e),S("dtype",r,t,e))];case"ExpandDims":{let o=S("axis",r,t,e);return[n.expandDims(S("x",r,t,e),o)]}case"Squeeze":{let o=S("axis",r,t,e);return[n.squeeze(S("x",r,t,e),o)]}case"Reshape":return[n.reshape(S("x",r,t,e),S("shape",r,t,e))];case"EnsureShape":return[n.ensureShape(S("x",r,t,e),S("shape",r,t,e))];case"MirrorPad":return[n.mirrorPad(S("x",r,t,e),S("padding",r,t,e),S("mode",r,t,e))];case"PadV2":case"Pad":return[n.pad(S("x",r,t,e),S("padding",r,t,e),S("constantValue",r,t,e))];case"SpaceToBatchND":{let o=S("blockShape",r,t,e),s=S("paddings",r,t,e);return[n.spaceToBatchND(S("x",r,t,e),o,s)]}case"BatchToSpaceND":{let o=S("blockShape",r,t,e),s=S("crops",r,t,e);return[n.batchToSpaceND(S("x",r,t,e),o,s)]}case"DepthToSpace":{let o=S("blockSize",r,t,e),s=S("dataFormat",r,t,e).toUpperCase();return[n.depthToSpace(S("x",r,t,e),o,s)]}case"BroadcastTo":return[n.broadcastTo(S("x",r,t,e),S("shape",r,t,e))];case"BroadcastArgs":return[n.broadcastArgs(S("s0",r,t,e),S("s1",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function yD(r,t,e,n,o=z){let s=((a,i,p)=>{switch(a.category){case"arithmetic":return o(()=>YL(a,i,p));case"basic_math":return o(()=>ZL(a,i,p));case"control":return nB(a,i,p);case"convolution":return o(()=>sB(a,i,p));case"creation":return o(()=>aB(a,i,p));case"dynamic":return iB(a,i,p);case"evaluation":return o(()=>uB(a,i,p));case"image":return o(()=>mB(a,i,p));case"graph":return o(()=>pB(a,i,p));case"logical":return o(()=>cB(a,i,p));case"matrices":return o(()=>dB(a,i,p));case"normalization":return o(()=>fB(a,i,p));case"ragged":return o(()=>hB(a,i,p));case"reduction":return o(()=>gB(a,i,p));case"slice_join":return o(()=>bB(a,i,p));case"sparse":return o(()=>yB(a,i,p));case"spectral":return o(()=>xB(a,i,p));case"string":return o(()=>TB(a,i,p));case"transformation":return o(()=>CB(a,i,p));case"hash_table":return lB(a,i,p,n);case"custom":let u=rT(a.op);if(u&&u.customExecutor)return u.customExecutor(new fT(a,i,p));throw TypeError(`Custom op ${a.op} is not registered.`);default:throw TypeError(`Unknown op '${a.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(r,t,e);return y.isPromise(s)?s.then(a=>[].concat(a)):[].concat(s)}var mg=class{constructor(t={},e={},n={},o={},s){this.weightMap=t;this.tensorArrayMap=e;this.tensorListMap=n;this.functionMap=o;this.parseNodeNameCache=s;this.rootContext={id:0,frameName:"",iterationId:0};this.contexts=[this.rootContext];this.lastId=0;this.generateCurrentContextIds()}newFrame(t,e){return{id:t,frameName:e,iterationId:0}}set currentContext(t){this.contexts!==t&&(this.contexts=t,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let t=[];for(let e=0;e<this.contexts.length-1;e++){let n=this.contexts.slice(0,this.contexts.length-e);t.push(this.contextIdforContexts(n))}t.push(""),this._currentContextIds=t}contextIdforContexts(t){return t?t.map(e=>e.id===0&&e.iterationId===0?"":`${e.frameName}-${e.iterationId}`).join("/"):""}enterFrame(t){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,t)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let t=Object.assign({},this.contexts[this.contexts.length-1]);t.iterationId+=1,t.id=this.lastId,this.contexts.splice(-1,1,t),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(t){return this.weightMap[t]}addTensorArray(t){this.tensorArrayMap[t.id]=t}getTensorArray(t){return this.tensorArrayMap[t]}addTensorList(t){this.tensorListMap[t.id]=t}getTensorList(t){return this.tensorListMap[t]}dispose(t){for(let e in this.tensorArrayMap)this.tensorArrayMap[e].clearAndClose(t);for(let e in this.tensorListMap)this.tensorListMap[e].clearAndClose(t)}};function xD(r,t,e,n){let o=new Set,s=[],a=null,i=null,p=new Set,u=new Set(Object.keys(r).map(c=>Dn(c)[0]));n=n||[];let l=new Set(n.map(c=>Dn(c.name)[0])),m=[...t];for(;m.length>0;){let c=m.pop();if((nl(c)||Uae(c)||Kae(c))&&a==null&&(a=c,i=a.children.map(d=>d.name).filter(d=>o.has(d))),o.add(c.name),e[c.name]==null&&!u.has(c.name)&&!l.has(c.name)){if(c.inputs.length===0){s.push(c.name);continue}c.inputs.forEach(d=>{p.has(d.name)||(p.add(d.name),m.push(d))})}}return{inputs:r,outputs:t,usedNodes:o,missingInputs:s,dynamicNode:a,syncInputs:i}}function IB(r,t){let{usedNodes:e,inputs:n}=t,o=Object.keys(n).map(g=>Dn(g)[0]).map(g=>r.nodes[g]),s=r.initNodes||[],a=g=>e.has(typeof g=="string"?g:g.name);function i(g){return[...new Map(g.map(b=>[b.name,b])).values()]}let p=i([...o,...r.weights,...s]).filter(a),u=i([...p,...Object.values(r.nodes)]).filter(a),l=new Map(u.map(g=>[g.name,g])),m={};for(let g of u){m[g.name]=m[g.name]||0;for(let b of g.children)a(b)||(m[b.name]=Number.POSITIVE_INFINITY),m[b.name]=(m[b.name]||0)+1}let c=Object.entries(m).filter(([,g])=>g===0).map(([g])=>g),d=[...c];for(;c.length>0;){let g=c.pop(),b=l.get(g);for(let x of b.children.filter(a))--m[x.name]===0&&(d.push(x.name),c.push(x.name))}let f=d.map(g=>l.get(g)),h=$ae(f,p);return Oae(h,p),h}function $ae(r,t){let e=new Map(r.map(a=>[a.name,a])),n=t.map(a=>a.name),o=new Set(n);for(;n.length>0;){let a=n.pop(),i=e.get(a);for(let p of i.children)!e.has(p.name)||o.has(p.name)||(o.add(p.name),n.push(p.name))}return r.filter(a=>o.has(a.name))}var mf=class extends Error{constructor(t){super(`NodesExecutionOrderError: ${t}`)}};function Oae(r,t){let e=new Map(r.map((i,p)=>[i.name,p])),n=new Set(t.map(i=>i.name)),o=i=>n.has(typeof i=="string"?i:i.name),s=new Set(r.map(i=>i.name)),a=i=>s.has(typeof i=="string"?i:i.name);for(let i of r){for(let p of i.children.filter(a)){if(!e.has(p.name))throw new mf(`Child ${p.name} of node ${i.name} is unreachable.`);if(e.get(i.name)>e.get(p.name))throw new mf(`Node ${i.name} is scheduled to run after its child ${p.name}.`)}if(!o(i))for(let p of i.inputs){if(!e.has(p.name))throw new mf(`Input ${p.name} of node ${i.name} is unreachable.`);if(e.get(p.name)>e.get(i.name))throw new mf(`Node ${i.name} is scheduled to run before its input ${p.name}.`)}}}function kB(r){let t=new Map(r.map((i,p)=>[i.name,p])),e=Number.MAX_SAFE_INTEGER,n=r.map((i,p)=>nl(i)?e:p),o=i=>{let p=n[t.get(i.name)];return p??-1},s=r.map((i,p)=>i.children.map(o).reduce((u,l)=>Math.max(u,l),n[p])),a=new Map;for(let i=0;i<r.length;++i){let p=s[i];if(p===e)continue;let u=r[i],l=r[p];a.has(l.name)||a.set(l.name,[]),a.get(l.name).push(u)}return a}var zae=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),Gae=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),Wae=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function nl(r){return zae.has(r.op)}function Uae(r){return Gae.has(r.op)}function Kae(r){return Wae.has(r.op)}var ym=class{constructor(t,e){this.graph=t;this.parent=e;this.compiledMap=new Map;this.parseNodeNameCache=new Map;this._weightMap={};this.SEPARATOR=",";this._functions={};this._functionExecutorMap={};this.keepIntermediateTensors=!1;this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,t.functions!=null&&Object.keys(t.functions).forEach(n=>{this._functionExecutorMap[n]=new ym(t.functions[n],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(t){let e=Object.keys(t).map(n=>t[n].map(o=>o.id));this._weightIds=[].concat(...e),this._weightMap=t}set resourceManager(t){this._resourceManager=t}get inputs(){return this._inputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(t=>t.signatureKey||t.name)}get outputNodes(){return this._outputs.map(t=>{let e=t.signatureKey||t.name;return t.defaultOutput?`${e}:${t.defaultOutput}`:e})}get functions(){return Object.keys(this._functions).reduce((t,e)=>(t[e]=this._functions[e].signature,t),{})}getCompilationKey(t,e){let n=t.map(s=>s.name).sort(),o=e.map(s=>s.name).sort();return n.join(this.SEPARATOR)+"--"+o.join(this.SEPARATOR)}compile(t,e){let n=xD(t,e,this.weightMap,this._initNodes),{missingInputs:o,dynamicNode:s,syncInputs:a}=n;if(s!=null)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(o.length>0){let u=e.map(m=>m.name),l=Object.keys(t);throw new Error(`Cannot compute the outputs [${u}] from the provided inputs [${l}]. Missing the following inputs: [${o}]`)}let i=IB(this.graph,n),p=kB(i);return{orderedNodes:i,nodeLiveUntilMap:p}}cloneAndKeepTensor(t){if(t==null)return null;let e=t.clone();return Ot(e),e}cloneTensorList(t){return t?t.map(n=>this.cloneAndKeepTensor(n)):null}cloneTensorMap(t){return Object.fromEntries(Object.entries(t).map(([e,n])=>[e,this.cloneTensorList(n)]))}execute(t,e){this.disposeIntermediateTensors(),t=this.mapInputs(t);let n=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e);let o=n.map(c=>this.graph.nodes[Dn(c)[0]]),s=e.map(c=>Dn(c)[0]),a=new Set(s),i=s.map(c=>this.graph.nodes[c]);i.length===0&&(i=this._outputs);let p=this.getCompilationKey(o,i),u=this.compiledMap.get(p);u==null&&(u=this.compile(t,i),this.compiledMap.set(p,u));try{this.keepIntermediateTensors=L().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(c){this.keepIntermediateTensors=!1,console.warn(c.message)}let l={},m={};return z(()=>{let c=new mg(this.weightMap,l,m,this.functionExecutorMap,this.parseNodeNameCache),d={...this.weightMap};this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(t).forEach(b=>{let[x,T]=Dn(b,c),C=[];C[T]=t[b],d[x]=C,this.keepIntermediateTensors&&(this.clonedTensorsMap[x]=this.cloneTensorList(C))});let f=this.getFrozenTensorIds(d),{orderedNodes:h,nodeLiveUntilMap:g}=u;for(let b of h){if(d[b.name])continue;let x=yD(b,d,c,this._resourceManager);if(y.isPromise(x))throw new Error(`The execution of the op '${b.op}' returned a promise. Please use model.executeAsync() instead.`);d[b.name]=x,this.keepIntermediateTensors&&(this.clonedTensorsMap[b.name]=this.cloneTensorList(x)),this.checkTensorForDisposalWithNodeLiveUntilInfo(b,d,c,f,a,g.get(b.name))}return this.parent==null&&c.dispose(f),e.map(b=>yr(b,d,c))})}getFrozenTensorIds(t){let e=[].concat.apply([],Object.keys(t).map(n=>t[n]).map(n=>n.map(o=>o.id)));return new Set(e)}checkTensorForDisposal(t,e,n,o,s,a,i){if(!(nl(e)||a.has(t))){for(let p of n[t])p!=null&&(i[p.id]=(i[p.id]||0)+e.children.length);for(let p of e.inputs){if(nl(p))continue;let u=YN(p.name,n,o);if(u!=null)for(let l of u){if(!l||l.kept||s.has(l.id))continue;let m=i[l.id];m===1?(l.dispose(),delete i[l.id]):m!=null&&i[l.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(t,e,n,o,s,a){function i(p){return nl(p)||s.has(p.name)}if(!(nl(t)||a==null))for(let p of a){if(i(p))continue;let u=YN(p.name,e,n);for(let l of u)!l||l.kept||o.has(l.id)||l.dispose()}}async executeAsync(t,e){return this._executeAsync(t,e)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(t=>{for(let e of t)e&&!e.isDisposed&&e.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(t,e,n=!1,o={},s={}){this.disposeIntermediateTensors(),n||(t=this.mapInputs(t),this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e));try{this.keepIntermediateTensors=L().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(c){this.keepIntermediateTensors=!1,console.warn(c.message)}let a=new mg(this.weightMap,o,s,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));let i=await this.executeWithControlFlow(t,a,e,n),p=e.map(c=>yr(c,i,a)),u=p.map(c=>c.id),l=Object.keys(t).map(c=>t[c].id),m=new Set([...u,...l,...this.weightIds]);return Object.values(i).forEach(c=>{c.forEach(d=>{d&&!d.isDisposed&&!m.has(d.id)&&d.dispose()})}),this.parent==null&&a.dispose(m),p}async executeFunctionAsync(t,e,n){let o=t.reduce((s,a,i)=>(s[this.inputs[i].name]=a,s),{});return this._executeAsync(o,this.outputNodes,!0,e,n)}async executeWithControlFlow(t,e,n,o){let s=Object.keys(t),a=s.map(C=>this.graph.nodes[Dn(C)[0]]),i=n.map(C=>Dn(C)[0]),p=new Set(i),u=i.map(C=>this.graph.nodes[C]);u.length===0&&(u=this._outputs);let{usedNodes:l,missingInputs:m,dynamicNode:c,syncInputs:d}=xD(t,u,this.weightMap,this._initNodes),f=[...a,...this.graph.weights,...this._initNodes||[]].map(C=>({node:C,contexts:e.currentContext})),h={...this.weightMap};Object.keys(t).forEach(C=>{let[k,w]=Dn(C),_=[];_[w]=t[C],h[k]=_});let g={},b=this.getFrozenTensorIds(h),x={};for(;f.length>0;){let C=this.processStack(a,f,e,h,x,b,p,g,l);await Promise.all(C)}c==null&&!o&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let T=u.filter(C=>!nl(C)&&!yr(C.name,h,e)).map(C=>C.name);if(T.length>0){let C="";throw c!=null&&(C=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${d}]`),new Error(`Cannot compute the outputs [${T}] from the provided inputs [${s}]. Consider providing the following inputs: [${m}]. ${C}`)}return h}processStack(t,e,n,o,s,a,i,p,u){let l=[];for(;e.length>0;){let m=e.pop();n.currentContext=m.contexts;let c="";if(m.node.op==="Enter"&&S("isConstant",m.node,o,n)&&([c]=$i(m.node.name,n)),o[m.node.name]==null){let d=yD(m.node,o,n,this._resourceManager);c||([c]=$i(m.node.name,n));let f=n.currentContext;y.isPromise(d)?l.push(d.then(h=>(o[c]=h,this.keepIntermediateTensors&&(this.clonedTensorsMap[c]=this.cloneTensorList(h)),n.currentContext=f,this.checkTensorForDisposal(c,m.node,o,n,a,i,p),this.processChildNodes(m.node,e,n,o,s,u),h))):(o[c]=d,this.keepIntermediateTensors&&(this.clonedTensorsMap[c]=this.cloneTensorList(d)),this.checkTensorForDisposal(c,m.node,o,n,a,i,p),this.processChildNodes(m.node,e,n,o,s,u))}else this.processChildNodes(m.node,e,n,o,s,u)}return l}processChildNodes(t,e,n,o,s,a){t.children.forEach(i=>{let[p]=$i(i.name,n);s[p]||!a.has(i.name)||(i.op==="Merge"?i.inputNames.some(u=>!!yr(u,o,n))&&(s[p]=!0,e.push({contexts:n.currentContext,node:i})):i.inputNames.every(u=>!!yr(u,o,n))&&(s[p]=!0,e.push({contexts:n.currentContext,node:i})))})}dispose(){Object.keys(this.weightMap).forEach(t=>this.weightMap[t].forEach(e=>e.dispose()))}checkInputShapeAndType(t){Object.keys(t).forEach(e=>{let n=t[e],[o]=Dn(e),s=this.graph.nodes[o];if(s.attrParams.shape&&s.attrParams.shape.value){let a=s.attrParams.shape.value,i=a.length===n.shape.length&&n.shape.every((p,u)=>a[u]===-1||a[u]===p);y.assert(i,()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${a}], but was [${n.shape}]`)}s.attrParams.dtype&&s.attrParams.dtype.value&&y.assert(n.dtype===s.attrParams.dtype.value,()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(t){let e={};for(let n in t){let o=this._signature?.inputs?.[n];o!=null?e[o.name]=t[n]:e[n]=t[n]}return e}checkInputs(t){let e=Object.keys(t).filter(n=>{let[o]=Dn(n);return this.graph.nodes[o]==null});if(e.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${e}] that are not part of graph`)}mapOutputs(t){return t.map(e=>{let n=this._signature?.outputs?.[e];return n!=null?n.name:e},{})}checkOutputs(t){t.forEach(e=>{let[n]=Dn(e);if(!this.graph.nodes[n])throw new Error(`The output '${e}' is not found in the graph`)})}};var yT=class{constructor(t={},e={}){this.hashTableNameToHandle=t;this.hashTableMap=e}addHashTable(t,e){this.hashTableNameToHandle[t]=e.handle,this.hashTableMap[e.id]=e}getHashTableHandleByName(t){return this.hashTableNameToHandle[t]}getHashTableById(t){return this.hashTableMap[t]}dispose(){for(let t in this.hashTableMap)this.hashTableMap[t].clearAndClose(),delete this.hashTableMap[t];for(let t in this.hashTableNameToHandle)this.hashTableNameToHandle[t].dispose(),delete this.hashTableNameToHandle[t]}};var Vae="?tfjs-format=file",Hae="model.json",cg=class{constructor(t,e={},n=Ur){this.modelUrl=t;this.loadOptions=e;this.version="n/a";this.io=n,e==null&&(this.loadOptions={}),this.resourceManager=new yT}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}findIOHandler(){let t=this.modelUrl;if(t.load!=null)this.handler=t;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(t,this.loadOptions);else{let e=this.io.getLoadHandlers(t,this.loadOptions);if(e.length===0)e.push(this.io.browserHTTPRequest(t,this.loadOptions));else if(e.length>1)throw new Error(`Found more than one (${e.length}) load handlers for URL '${[t]}'`);this.handler=e[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let t=this.handler.load();return y.isPromise(t)?t.then(e=>this.loadSync(e)):this.loadSync(t)}loadSync(t){this.artifacts=t;let e=this.artifacts.modelTopology,n=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){let s=this.artifacts.userDefinedMetadata;s.signature!=null&&(n=s.signature),s.structuredOutputKeys!=null&&(this.structuredOutputKeys=s.structuredOutputKeys)}this.signature=n,this.version=`${e.versions.producer}.${e.versions.minConsumer}`;let o=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new ym(lg.Instance.transformGraph(e,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(o),this.executor.resourceManager=this.resourceManager,t.modelInitializer!=null&&t.modelInitializer.node!=null){let s=lg.Instance.transformGraph(t.modelInitializer);this.initializer=new ym(s),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=t.initializerSignature}return!0}async save(t,e){if(typeof t=="string"){let n=this.io.getSaveHandlers(t);if(n.length===0)throw new Error(`Cannot find any save handlers for URL '${t}'`);if(n.length>1)throw new Error(`Found more than one (${n.length}) save handlers for URL '${t}'`);t=n[0]}if(t.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return t.save(this.artifacts)}addStructuredOutputNames(t){if(this.structuredOutputKeys){let e=t instanceof Ve?[t]:t,n={};return e.forEach((o,s)=>n[this.structuredOutputKeys[s]]=o),n}return t}predict(t,e){let n=this.execute(t,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(t,e){let n=await this.executeAsync(t,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(t){if(!(t instanceof Ve)&&!Array.isArray(t)){let o=this.signature?.inputs;if(o!=null)for(let s in o){let a=o[s];a.resourceId!=null&&(t[s]=this.resourceIdToCapturedInput[a.resourceId])}return t}t=Array.isArray(t)?t:[t];let e=Object.keys(this.resourceIdToCapturedInput).length;if(t.length+e!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-e} non-resource placeholders, while there are ${t.length} input tensors provided.`);let n=0;return this.inputNodes.reduce((o,s)=>{let a=this.signature?.inputs?.[s]?.resourceId;return a!=null?o[s]=this.resourceIdToCapturedInput[a]:o[s]=t[n++],o},{})}normalizeOutputs(t){return t=t||this.outputNodes,Array.isArray(t)?t:[t]}executeInitializerGraph(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(t){if(this.resourceIdToCapturedInput={},this.initializerSignature){let e=this.initializerSignature.outputs,n=Object.keys(e);for(let o=0;o<n.length;o++){let s=n[o],a=e[s];this.resourceIdToCapturedInput[a.resourceId]=t[o]}}}execute(t,e){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),t=this.normalizeInputs(t),e=this.normalizeOutputs(e);let n=this.executor.execute(t,e);return n.length>1?n:n[0]}async executeAsync(t,e){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),t=this.normalizeInputs(t),e=this.normalizeOutputs(e);let n=await this.executor.executeAsync(t,e);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(t){return Object.keys(t).reduce((e,n)=>(e[n]=[t[n]],e),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&Pe(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}};async function qae(r,t={},e=Ur){if(r==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");t==null&&(t={}),t.fromTFHub&&typeof r=="string"&&(r=Xae(r));let n=new cg(r,t,e);return await n.load(),n}function jae(r){if(r==null)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");let t;if(r instanceof Array){let[n,o]=r;if(!n)throw new Error("modelJSON must be the first element of the array");if(!o||!(o instanceof ArrayBuffer))throw new Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in n))throw new Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in n))throw new Error("Model JSON is missing 'weightsManifest'");let s=Ur.getWeightSpecs(n.weightsManifest),a=Ur.getModelArtifactsForJSONSync(n,s,o);t=Ur.fromMemorySync(a)}else if("load"in r)t=r;else if("modelTopology"in r&&"weightSpecs"in r&&"weightData"in r)t=Ur.fromMemorySync(r);else throw new Error("Unknown model format");let e=new cg(t);return e.load(),e}function Xae(r){return r.endsWith("/")||(r=r+"/"),`${r}${Hae}${Vae}`}var Yae="0.0.0";var KB={};Xe(KB,{CSVDataset:()=>ff,Dataset:()=>zi,FileDataSource:()=>xf,TextLineDataset:()=>df,URLDataSource:()=>Tf,array:()=>RB,csv:()=>$B,func:()=>OB,generator:()=>zB,microphone:()=>WB,version_data:()=>UB,webcam:()=>GB,zip:()=>FB});var PB=gl(Lh());var DB=gl(Lh());function vB(r,t){return xT(r,t)}function xT(r,t,e=new Map,n=new Set){if(r==null)return null;if(typeof Blob=="function"&&r instanceof Blob)return r.slice();if(n.has(r))throw new Error("Circular references are not supported.");if(e.has(r))return e.get(r);let o=t(r);if(o.recurse&&o.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(o.recurse)if(ol(r)){let s=Array.isArray(r)?[]:{};n.add(r);for(let a in r){let i=r[a],p=xT(i,t,e,n);s[a]=p}return n.delete(r),r.__proto__&&(s.__proto__=r.__proto__),s}else throw new Error(`Can't recurse into non-iterable type: ${r}`);else return e.set(r,o.value),o.value}function SB(r,t=CD){return wB(r,t)}function wB(r,t,e=new Set){let n=r[0];if(e.has(n))throw new Error("Circular references are not supported.");let o=t(r);if(o.recurse&&o.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(o.recurse)if(ol(n)){let s=Array.isArray(n)?[]:{};e.add(n);for(let a in n){let i=r.map(u=>u[a]),p=wB(i,t,e);s[a]=p}return e.delete(n),s}else throw new Error(`Can't recurse into non-iterable type: ${n}`);else return o.value}function CD(r){return r===null?null:ol(r[0])?{value:null,recurse:!0}:{value:r,recurse:!1}}async function TT(r,t){let e=new Map;xT(r,t,e);for(let o of Array.from(e.keys())){let s=e.get(o);if(y.isPromise(s)){let a=await s;e.set(o,a)}}return xT(r,t,e)}function ol(r){let t=!1;if(L().get("IS_BROWSER"))t=r instanceof TextDecoder;else{let{StringDecoder:e}=TD();t=r instanceof e}return r!=null&&!ArrayBuffer.isView(r)&&(Array.isArray(r)||typeof r=="object"&&!(r instanceof Ve)&&!(r instanceof Promise)&&!t)}function AB(r){return r==null||Zae(r)||Array.isArray(r)||typeof r=="object"&&r instanceof Ve||y.isTypedArray(r)}function Zae(r){return r===null||typeof r!="object"&&typeof r!="function"}function NB(r){return vB(r,Qae)}function Qae(r){return r instanceof Ve?{value:r.clone(),recurse:!1}:ol(r)?{value:null,recurse:!0}:{value:r,recurse:!1}}var cf=class{constructor(t){this.capacity=t;this.begin=0;this.end=0;if(t==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(t<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(t),this.doubledCapacity=2*t}wrap(t){for(;t<0;)t+=this.doubledCapacity;return t%this.doubledCapacity}get(t){if(t<0)throw new RangeError("Can't get item at a negative index.");return this.data[t%this.capacity]}set(t,e){if(t<0)throw new RangeError("Can't set item at a negative index.");this.data[t%this.capacity]=e}length(){let t=this.end-this.begin;return t<0&&(t=this.doubledCapacity+t),t}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,t),this.end=this.wrap(this.end+1)}pushAll(t){for(let e of t)this.push(e)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let t=this.get(this.end);return this.set(this.end,void 0),t}unshift(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,t)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),t}shuffleExcise(t){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.wrap(this.begin+t),n=this.get(e);return this.set(e,this.pop()),n}};var ID=class extends cf{constructor(){super(ID.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){let t=this.capacity*2,e=new Array(t),n=this.length();for(let o=0;o<n;o++)e[o]=this.get(this.wrap(this.begin+o));this.data=e,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}},dg=ID;dg.INITIAL_CAPACITY=32;function ED(r){return new kD(r)}function fg(r){return new vD(r)}function _B(r,t){return new IT(r,t)}function MB(r,t=0){return new RD(r,t)}var ur=class{async toArray(){let t=[],e=await this.next();for(;!e.done;)t.push(e.value),e=await this.next();return t}async toArrayForTest(){let t=this.prefetch(100),e=[],n=await t.next();for(;!n.done;)e.push(n.value),n=await t.next();return e}async resolveFully(){let t=await this.next();for(;!t.done;)t=await this.next()}async resolveWhile(t){let e=await this.next(),n=t(e.value);for(;!e.done&&n;)e=await this.next(),n=t(e.value)}handleErrors(t){return new MD(this,t)}filter(t){return new DD(this,t)}map(t){return new _D(this,t)}mapAsync(t){return new CT(this,t)}serialMapAsync(t){return new CT(this,t).serial()}flatmap(t){return new PD(this,t)}async forEachAsync(t){return this.map(t).resolveFully()}async serialForEach(t){return this.serialMapAsync(t).resolveWhile(e=>e===!0)}rowMajorBatch(t,e=!0){return new ND(this,t,e)}columnMajorBatch(t,e=!0,n=CD){return this.rowMajorBatch(t,e).map(s=>SB(s,n))}concatenate(t,e){return new IT(ED([this,t]),e)}take(t){return t<0||t==null?this:new AD(this,t)}skip(t){return t<0||t==null?this:new wD(this,t)}prefetch(t){return new kT(this,t)}shuffle(t,e){return new FD(this,t,e)}serial(){return new SD(this)}},kD=class extends ur{constructor(e){super();this.items=e;this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:NB(e),done:!1}}},vD=class extends ur{constructor(e){super();this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},SD=class extends ur{constructor(e){super();this.upstream=e;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}},wD=class extends ur{constructor(e,n){super();this.upstream=e;this.maxCount=n;this.count=0;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;Pe(e.value)}return this.upstream.next()}},AD=class extends ur{constructor(e,n){super();this.upstream=e;this.maxCount=n;this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},ND=class extends ur{constructor(e,n,o=!0){super();this.upstream=e;this.batchSize=n;this.enableSmallLastBatch=o;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let n=await this.upstream.next();if(n.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(n.value)}return{value:e,done:!1}}},DD=class extends ur{constructor(e,n){super();this.upstream=e;this.predicate=n;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Pe(e.value)}}},_D=class extends ur{constructor(e,n){super();this.upstream=e;this.transform=n}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let n=Ta.getTensorsInContainer(e.value),o=this.transform(e.value),s=Ta.getTensorsInContainer(o);for(let a of n)Ta.isTensorInList(a,s)||a.dispose();return{value:o,done:!1}}},MD=class extends ur{constructor(e,n){super();this.upstream=e;this.handler=n;this.count=0;this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},CT=class extends ur{constructor(e,n){super();this.upstream=e;this.transform=n}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let n=Ta.getTensorsInContainer(e.value),o=await this.transform(e.value),s=Ta.getTensorsInContainer(o);for(let a of n)Ta.isTensorInList(a,s)||a.dispose();return{value:o,done:!1}}},xm=class extends ur{constructor(){super();this.outputQueue=new dg,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},PD=class extends xm{constructor(e,n){super();this.upstream=e;this.transform=n}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let n=Ta.getTensorsInContainer(e.value),o=this.transform(e.value),s=Ta.getTensorsInContainer(o);this.outputQueue.pushAll(o);for(let a of n)Ta.isTensorInList(a,s)||a.dispose();return!0}},IT=class extends ur{constructor(e,n){super();this.baseErrorHandler=n;this.lastRead=null;this.iterator=null;this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,this.iterator==null){let o=await this.moreIterators.next();if(o.done)return{value:null,done:!0};this.iterator=o.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let n=await this.iterator.next();return n.done?(this.iterator=null,this.readFromChain(e)):n}};var RD=class extends ur{constructor(e,n=0){super();this.iterators=e;this.mismatchMode=n;this.count=0;this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let n=0,o=0;function s(i){return i instanceof ur?{value:i.next().then(u=>(n++,u.done&&o++,u.value)),recurse:!1}:{value:null,recurse:!0}}let a=await TT(this.iterators,s);if(n===o)return{value:null,done:!0};if(o>0)switch(this.mismatchMode){case 0:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case 1:return{value:null,done:!0};case 2:default:}return this.count++,{value:a,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},kT=class extends ur{constructor(e,n){super();this.upstream=e;this.bufferSize=n;this.buffer=new cf(n)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},FD=class extends kT{constructor(e,n,o){super(e,n);this.upstream=e;this.windowSize=n;this.upstreamExhausted=!1;this.random=DB.alea(o||y.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),n=await this.buffer.shuffleExcise(e);if(n.done)this.upstreamExhausted=!0;else return this.refill(),n}return{value:null,done:!0}}};var zi=class{constructor(){this.size=null}batch(t,e=!0){let n=this;y.assert(t>0,()=>`batchSize needs to be positive, but it is
      ${t}`);let o;return this.size===1/0||this.size==null?o=this.size:e?o=Math.ceil(this.size/t):o=Math.floor(this.size/t),On(async()=>(await n.iterator()).columnMajorBatch(t,e,Jae),o)}concatenate(t){let e=this,n;return this.size===1/0||t.size===1/0?n=1/0:this.size!=null&&t.size!=null?n=this.size+t.size:n=null,On(async()=>(await e.iterator()).concatenate(await t.iterator()),n)}filter(t){let e=this,n;return this.size===1/0?n=1/0:n=null,On(async()=>(await e.iterator()).filter(o=>z(()=>t(o))),n)}async forEachAsync(t){return(await this.iterator()).forEachAsync(t)}map(t){let e=this;return On(async()=>(await e.iterator()).map(n=>z(()=>t(n))),this.size)}mapAsync(t){let e=this;return On(async()=>(await e.iterator()).mapAsync(t),this.size)}prefetch(t){if(t==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let e=this;return On(async()=>(await e.iterator()).prefetch(t),this.size)}repeat(t){let e=this,n;return this.size!=null&&t>0?n=this.size*t:t===0?n=0:this.size!=null&&(t===void 0||t<0)?n=1/0:n=null,On(async()=>{let o=fg(async()=>({value:await e.iterator(),done:!1}));return _B(o.take(t))},n)}skip(t){let e=this,n;return this.size!=null&&t>=0&&this.size>=t?n=this.size-t:this.size!=null&&(this.size<t||t===void 0||t<0)?n=0:n=null,On(async()=>(await e.iterator()).skip(t),n)}shuffle(t,e,n=!0){if(t==null||t<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let o=this,s=PB.alea(e||y.now().toString());return On(async()=>{let a=s.int32();return n&&(a+=s.int32()),(await o.iterator()).shuffle(t,a.toString())},this.size)}take(t){let e=this,n;return this.size!=null&&this.size>t?n=t:this.size!=null&&this.size<=t?n=this.size:n=null,On(async()=>(await e.iterator()).take(t),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};zi.MAX_BUFFER_SIZE=1e4;function On(r,t=null){return new class extends zi{constructor(){super(...arguments);this.size=t}async iterator(){return r()}}}function RB(r){return On(async()=>ED(r),r.length)}function FB(r){if(!ol(r))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(r))for(let e=0;e<r.length;e++)t=t==null?r[e].size:Math.min(t,r[e].size);else if(r instanceof Object)for(let e in r)t=t==null?r[e].size:Math.min(t,r[e].size);return On(async()=>{let e=await TT(r,n=>{if(n instanceof zi)return{value:n.iterator(),recurse:!1};if(ol(n))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return MB(e,1)},t)}function Jae(r){if(r===null)return null;let t=r[0];return AB(t)?{value:eie(r),recurse:!1}:{value:null,recurse:!0}}function eie(r){if(r.length===0)throw new Error("Can't make a batch of zero elements.");return r[0]instanceof Ve?hr(r):fr(r)}var df=class extends zi{constructor(e){super();this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(s=>(s.endsWith("\r")&&(s=s.slice(0,-1)),s))}};var vT='"',hg=Symbol("out"),EB=Symbol("field"),ST=Symbol("quote"),LD=Symbol("quoteafterquote"),LB=Symbol("quoteinquote"),ff=class extends zi{constructor(e,n){super();this.input=e;this.hasHeader=!0;this.fullColumnNames=null;this.columnNamesValidated=!1;this.columnConfigs=null;this.configuredColumnsOnly=!1;this.delimiter=",";this.delimWhitespace=!1;this.base=new df(e),n||(n={}),this.hasHeader=n.hasHeader!==!1,this.fullColumnNames=n.columnNames,this.columnConfigs=n.columnConfigs,this.configuredColumnsOnly=n.configuredColumnsOnly,n.delimWhitespace?(y.assert(n.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=n.delimiter?n.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&y.assert(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);let n=this.fullColumnNames.reduce((s,a)=>(s[a]=s[a]+1||1,s),{}),o=Object.keys(n).filter(s=>n[s]>1);if(y.assert(o.length===0,()=>"Duplicate column names found: "+o.toString()),this.columnConfigs){for(let s of Object.keys(this.columnConfigs))if(this.fullColumnNames.indexOf(s)===-1)throw new Error('The key "'+s+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let n=await(await this.base.iterator()).next();if(n.done)throw new Error("No data was found for CSV parsing.");let o=n.value;return this.parseRow(o,!1)}else return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(n=>this.makeDataElement(n))}makeDataElement(e){let n=this.parseRow(e),o={},s={};for(let a=0;a<this.fullColumnNames.length;a++){let i=this.fullColumnNames[a],p=this.columnConfigs?this.columnConfigs[i]:null;if(!(this.configuredColumnsOnly&&!p)){let u=n[a],l=null;if(u==="")if(p&&p.default!==void 0)l=p.default;else{if(p&&(p.required||p.isLabel))throw new Error(`Required column ${i} is empty in this line: ${e}`);l=void 0}else{let m=Number(u);if(isNaN(m))p&&p.dtype==="bool"?l=this.getBoolean(u):l=u;else if(!p||!p.dtype)l=m;else switch(p.dtype){case"float32":l=m;break;case"int32":l=Math.floor(m);break;case"bool":l=this.getBoolean(u);break;default:l=m}}p&&p.isLabel?s[i]=l:o[i]=l}}return Object.keys(s).length===0?o:{xs:o,ys:s}}getBoolean(e){return e==="1"||e.toLowerCase()==="true"?1:0}parseRow(e,n=!0){let o=[],s=0,a=e.length,i=hg;for(let p=0;p<a;p++)switch(i){case hg:switch(e.charAt(p)){case vT:s=p+1,i=ST;break;case this.delimiter:if(s=p+1,this.delimiter===" "&&this.delimWhitespace)break;o.push(""),i=hg;break;default:i=EB,s=p;break}break;case EB:switch(e.charAt(p)){case this.delimiter:o.push(e.substring(s,p)),i=hg,s=p+1;break;default:}break;case ST:switch(e.charAt(p)){case vT:i=LD;break;default:}break;case LD:switch(e.charAt(p)){case this.delimiter:o.push(e.substring(s,p-1)),i=hg,s=p+1;break;case vT:i=ST;break;default:i=LB;break}break;case LB:switch(e.charAt(p)){case vT:i=ST;break;default:}break;default:}if(i===LD?o.push(e.substring(s,a-1)):o.push(e.substring(s)),n&&o.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${o}`);return o}};var hf=class extends ur{constructor(e){super();this.microphoneConfig=e;this.isClosed=!1;this.fftSize=e.fftSize||1024;let n=Math.log2(this.fftSize);if(this.fftSize<0||n<4||n>14||!Number.isInteger(n))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=e.includeSpectrogram!==!1,this.includeWaveform=e.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(!L().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");let n=new hf(e);return await n.start(),n}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(o){throw new Error(`Error thrown while initializing video stream: ${o.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);let n=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,n.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,n,o=await this.getAudioData();if(this.includeSpectrogram){let s=this.flattenQueue(o.freqDataQueue);e=this.getTensorFromAudioDataArray(s,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let s=this.flattenQueue(o.timeDataQueue);n=this.getTensorFromAudioDataArray(s,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:n},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],n=[],o=0;return new Promise(s=>{let a=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&s({freqDataQueue:e,timeDataQueue:n}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),n.push(this.timeData.slice())),++o===this.numFrames&&(clearInterval(a),s({freqDataQueue:e,timeDataQueue:n}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let n=e[0].length,o=new Float32Array(e.length*n);return e.forEach((s,a)=>o.set(s,a*n)),o}getTensorFromAudioDataArray(e,n){let o=new Float32Array(y.sizeFromShape(n));return o.set(e,o.length-e.length),fr(o,n)}};var gf=class extends ur{constructor(e,n){super();this.webcamVideoElement=e;this.webcamConfig=n;this.isClosed=!0;this.resize=!1;if(this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=rr([0],"int32"),this.webcamConfig.centerCrop){let o=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,s=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,a=(1-o)/2,i=(1-s)/2,p=a+o,u=s+i;this.cropBox=Ni([i,a,u,p],[1,4])}else this.cropBox=Ni([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,n={}){if(!L().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!n.resizeWidth||!n.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=n.resizeWidth,e.height=n.resizeHeight}let o=new gf(e,n);return await o.start(),o}async start(){this.webcamConfig.facingMode&&y.assert(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=Hy.fromPixels(this.webcamVideoElement)}catch(n){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(n)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(n){throw new Error(`Error thrown cropping the video: ${n.message}`)}finally{e.dispose()}else return{value:e,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(e){return z(()=>{let n=Ir(ne(e,"float32"),0),o;o=In.cropAndResize(n,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let s=o.shape;return E(o,s.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(n=>n.stop());try{this.webcamVideoElement.srcObject=null}catch(n){console.log(n),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}};var bf=class{};var gg=class extends ur{split(t){return new BD(this,t)}},BD=class extends gg{constructor(e,n){super();this.upstream=e;this.impl=new $D(e,n)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},$D=class extends xm{constructor(e,n){super();this.upstream=e;this.separator=n;this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);let n=e.value.split(this.separator);n[0]=this.carryover+n[0];for(let o of n.slice(0,-1))this.outputQueue.push(o);return this.carryover=n[n.length-1],!0}};var wT=class extends ur{decodeUTF8(){return new OD(this)}},OD=class extends gg{constructor(e){super();this.upstream=e;this.impl=new zD(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},zD=class extends xm{constructor(e){super();this.upstream=e;if(L().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:n}=TD();this.decoder=new n("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e=await this.upstream.next(),n;if(e.done)return!1;n=e.value;let o;return L().get("IS_BROWSER")?o=this.decoder.decode(n,{stream:!0}):o=this.decoder.write(Buffer.from(n.buffer)),this.outputQueue.push(o),!0}};var yf=class extends wT{constructor(e,n={}){super();this.file=e;this.options=n;y.assert(e instanceof Uint8Array||(L().get("IS_BROWSER")?e instanceof File||e instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=n.offset||0,this.chunkSize=n.chunkSize||1024*1024}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((n,o)=>{let s=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)n(new Uint8Array(this.file.slice(this.offset,s)));else{let a=new FileReader;a.onload=p=>{let u=a.result;if(u instanceof ArrayBuffer&&(u=new Uint8Array(u)),!(u instanceof Uint8Array))return o(new TypeError("FileReader returned unknown type."));n(u)},a.onabort=p=>o(new Error("Aborted")),a.onerror=p=>o(new Error(p.type));let i=this.file.slice(this.offset,s);a.readAsArrayBuffer(i)}this.offset=s}),done:!1}}};async function BB(r,t={},e){let n,o;typeof r=="string"?n=r:(n=r.url,o=tie(r));let s=await(e||y.fetch)(n,o);if(s.ok){let a=new Uint8Array(await s.arrayBuffer());return new yf(a,t)}else throw new Error(s.statusText)}var tie=r=>({method:r.method,headers:r.headers,body:r.body,mode:r.mode,credentials:r.credentials,cache:r.cache,redirect:r.redirect,referrer:r.referrer,integrity:r.integrity});function AT(r){return typeof r=="string"&&r.slice(0,7)==="file://"}var xf=class extends bf{constructor(e,n={}){super();this.input=e;this.options=n}async iterator(){if(AT(this.input)&&L().get("IS_NODE")){let e=NT();this.input=e.readFileSync(this.input.slice(7))}return new yf(this.input,this.options)}};var Tf=class extends bf{constructor(e,n={}){super();this.url=e;this.fileOptions=n}async iterator(){return AT(this.url)?new xf(this.url,this.fileOptions).iterator():BB(this.url,this.fileOptions)}};function $B(r,t={}){return new ff(new Tf(r),t)}function OB(r){let t=fg(r);return On(async()=>t)}function zB(r){return On(async()=>{let t=await r();return fg(()=>t.next())})}async function GB(r,t){return gf.create(r,t)}async function WB(r){return hf.create(r)}var UB="0.0.0";function oe(r,t){Array.isArray(r)||(r=[r]),r.forEach(e=>{e!=null&&y.assert(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}var rie=vr.whereImpl,GD=class extends Io{constructor(){super();this.blockSize=48;this.firstUse=!0;this.data=new Wa(this,Xr())}nextDataId(){return GD.nextDataId++}write(e,n,o){this.firstUse&&(this.firstUse=!1,L().get("IS_NODE")&&I.warn(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));let s={id:this.nextDataId()};return this.data.set(s,{values:e,dtype:o,refCount:1}),s}makeTensorInfo(e,n,o){let s;if(n==="string"&&o!=null&&o.length>0&&y.isString(o[0])){let a=o.map(i=>y.encodeString(i));s=this.write(a,e,n)}else s=this.write(o,e,n);return{dataId:s,shape:e,dtype:n}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){let n=this.data.get(e);n.refCount++}decRef(e){if(this.data.has(e)){let n=this.data.get(e);n.refCount--}}move(e,n,o,s,a){this.data.set(e,{values:n,dtype:s,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:n,complexTensorInfos:o}=this.data.get(e);if(n==="complex64"){let s=this.readSync(o.real.dataId),a=this.readSync(o.imag.dataId);return I.mergeRealAndImagArrays(s,a)}return y.convertBackendValuesAndArrayBuffer(this.data.get(e).values,n)}bufferSync(e){let n=this.readSync(e.dataId);if(e.dtype==="string")try{let o=n.map(s=>y.decodeString(s));return Ce(e.shape,e.dtype,o)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Ce(e.shape,e.dtype,n)}makeOutput(e,n,o){return Xr().makeTensorFromTensorInfo(this.makeTensorInfo(n,o,e),this)}disposeData(e,n=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!n&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:o}=this.data.get(e);o!=null&&(this.disposeData(o.real.dataId,!0),this.disposeData(o.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let n=y.now();return e(),{kernelMs:y.now()-n}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){oe([e],"where");let n=this.readSync(e.dataId);return rie(e.shape,n)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}},Cf=GD;Cf.nextDataId=0;var Nf={};Xe(Nf,{addImpl:()=>KD,bincountImpl:()=>vf,bincountReduceImpl:()=>DT,bitwiseAndImpl:()=>VD,castImpl:()=>UD,ceilImpl:()=>HD,concatImpl:()=>Tm,equalImpl:()=>qD,expImpl:()=>XD,expm1Impl:()=>ZD,floorDivImpl:()=>JD,floorImpl:()=>QD,gatherNdImpl:()=>_T,gatherV2Impl:()=>MT,greaterEqualImpl:()=>t0,greaterImpl:()=>e0,lessEqualImpl:()=>n0,lessImpl:()=>r0,linSpaceImpl:()=>PT,logImpl:()=>o0,maxImpl:()=>RT,maximumImpl:()=>s0,minimumImpl:()=>a0,multiplyImpl:()=>bg,negImpl:()=>i0,notEqualImpl:()=>u0,prodImpl:()=>p0,raggedGatherImpl:()=>FT,raggedRangeImpl:()=>ET,raggedTensorToTensorImpl:()=>LT,rangeImpl:()=>Im,rsqrtImpl:()=>l0,scatterImpl:()=>Gi,sigmoidImpl:()=>C$,simpleAbsImpl:()=>WD,sliceImpl:()=>km,sparseFillEmptyRowsImpl:()=>BT,sparseReshapeImpl:()=>$T,sparseSegmentReductionImpl:()=>Af,sqrtImpl:()=>v$,squaredDifferenceImpl:()=>c0,staticRegexReplaceImpl:()=>d0,stridedSliceImpl:()=>OT,stringNGramsImpl:()=>vm,stringSplitImpl:()=>Sm,stringToHashBucketFastImpl:()=>wm,subImpl:()=>h0,tileImpl:()=>zT,topKImpl:()=>GT,transposeImpl:()=>Sf,uniqueImpl:()=>Am});function WD(r){let t=new Float32Array(r.length);for(let e=0;e<r.length;++e)t[e]=Math.abs(r[e]);return t}var nie=r=>{let{x:t}=r.inputs,e=r.backend;oe(t,"abs");let n=new Float32Array(y.sizeFromShape(t.shape)),o=e.data.get(t.dataId).values;return n=WD(o),e.makeOutput(n,t.shape,t.dtype)},VB={kernelName:Xs,backendName:"cpu",kernelFunc:nie};function nt(r){return(t,e,n,o,s)=>{let a=I.assertAndGetBroadcastShape(t,e),i=a.length,p=y.computeStrides(a),u=y.sizeFromShape(a),l=y.getTypedArrayFromDType(s,u),m=t.length,c=e.length,d=y.computeStrides(t),f=y.computeStrides(e),h=I.getBroadcastDims(t,a),g=I.getBroadcastDims(e,a);if(h.length+g.length===0)for(let b=0;b<l.length;++b)l[b]=r(n[b%n.length],o[b%o.length]);else for(let b=0;b<l.length;++b){let x=y.indexToLoc(b,i,p),T=x.slice(-m);h.forEach(_=>T[_]=0);let C=y.locToIndex(T,m,d),k=x.slice(-c);g.forEach(_=>k[_]=0);let w=y.locToIndex(k,c,f);l[b]=r(n[C],o[w])}return[l,a]}}function Nr(r){let{inputs:t,backend:e}=r,{real:n,imag:o}=t,s=e.data.get(n.dataId).values,a=e.data.get(o.dataId).values,i=e.makeTensorInfo(n.shape,"complex64"),p=e.data.get(i.dataId);return p.complexTensorInfos={real:e.makeTensorInfo(n.shape,"float32",s),imag:e.makeTensorInfo(o.shape,"float32",a)},i}var HB={kernelName:Tp,backendName:"cpu",kernelFunc:Nr};function If(r,t,e="float32"){if(e==="complex64"){let o=If(r,t,"float32"),s=If(r,t,"float32");return Nr({inputs:{real:o,imag:s},backend:r})}let n=y.makeZerosTypedArray(y.sizeFromShape(t),e);return r.makeTensorInfo(t,e,n)}function nn(r){let{inputs:t,backend:e}=r,{x:n}=t;return e.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var qB={kernelName:Yn,backendName:"cpu",kernelFunc:nn};function Fa(r){let{inputs:t,backend:e}=r,{input:n}=t,o=e.data.get(n.dataId).complexTensorInfos.real,s=e.data.get(o.dataId).values;return e.makeTensorInfo(o.shape,o.dtype,s)}var jB={kernelName:Np,backendName:"cpu",kernelFunc:Fa};function UD(r,t,e,n){if(n==="int32"){let o=Int32Array.from(r);return[t,"int32",o]}if(n==="bool"){let o=y.toTypedArray([0],e),[s,a]=nt((i,p)=>i!==p?1:0)(t,[],r,o,"bool");return[a,"bool",s]}throw new Error(`Error in Cast: failed to cast ${e} to ${n}`)}function Ea(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{dtype:s}=n;if(s==="complex64"){if(o.dtype==="complex64")return nn({inputs:{x:o},backend:e});let l=If(e,o.shape,o.dtype),m=Ea({inputs:{x:o},backend:e,attrs:{dtype:"float32"}}),c=Nr({inputs:{real:m,imag:l},backend:e});return e.disposeIntermediateTensorInfo(l),e.disposeIntermediateTensorInfo(m),c}if(o.dtype==="complex64"){let l=Fa({inputs:{input:o},backend:e}),m=Ea({inputs:{x:l},backend:e,attrs:{dtype:s}});return e.disposeIntermediateTensorInfo(l),m}if(!y.hasEncodingLoss(o.dtype,s)){let l=nn({inputs:{x:o},backend:e});return{dataId:l.dataId,shape:l.shape,dtype:s}}let a=e.data.get(o.dataId).values,[i,p,u]=UD(a,o.shape,o.dtype,s);return e.makeTensorInfo(i,p,u)}var XB={kernelName:jn,backendName:"cpu",kernelFunc:Ea};function pt(r,t,e,n){return e==null?({inputs:o,backend:s})=>{let{a,b:i}=o,p=s;oe([a,i],r);let u=p.data.get(a.dataId).values,l=p.data.get(i.dataId).values,m=a.dtype==="string"?I.fromUint8ToStringArray(u):u,c=a.dtype==="string"?I.fromUint8ToStringArray(l):l,d=n||a.dtype,[f,h]=t(a.shape,i.shape,m,c,d);return p.makeTensorInfo(h,d,f)}:({inputs:o,backend:s})=>{let{a,b:i}=o,p=s;if(a.dtype==="complex64"||i.dtype==="complex64"){let u=Ea({inputs:{x:a},backend:p,attrs:{dtype:"complex64"}}),l=p.data.get(u.dataId),m=l.complexTensorInfos.real,c=l.complexTensorInfos.imag,d=p.data.get(m.dataId).values,f=p.data.get(c.dataId).values,h=Ea({inputs:{x:i},backend:p,attrs:{dtype:"complex64"}}),g=p.data.get(h.dataId),b=g.complexTensorInfos.real,x=g.complexTensorInfos.imag,T=p.data.get(b.dataId).values,C=p.data.get(x.dataId).values,[k,w,_]=e(a.shape,i.shape,d,f,T,C),P=p.makeTensorInfo(_,"float32",k),M=p.makeTensorInfo(_,"float32",w),R=Nr({inputs:{real:P,imag:M},backend:p});return p.disposeIntermediateTensorInfo(u),p.disposeIntermediateTensorInfo(h),p.disposeIntermediateTensorInfo(P),p.disposeIntermediateTensorInfo(M),R}else{let u=p.data.get(a.dataId).values,l=p.data.get(i.dataId).values,m=n||a.dtype,[c,d]=t(a.shape,i.shape,u,l,m);return p.makeTensorInfo(d,m,c)}}}function kf(r){return(t,e,n,o,s,a)=>{let i=I.assertAndGetBroadcastShape(t,e),p=y.sizeFromShape(i),u=i.length,l=y.computeStrides(i),m=y.getTypedArrayFromDType("float32",p),c=y.getTypedArrayFromDType("float32",p),d=I.getBroadcastDims(t,i),f=I.getBroadcastDims(e,i),h=I.mergeRealAndImagArrays(n,o),g=I.mergeRealAndImagArrays(s,a),b=t.length,x=y.computeStrides(t),T=e.length,C=y.computeStrides(e);if(d.length+f.length===0)for(let k=0;k<m.length;k++){let w=k%h.length,_=k%g.length,P=r(h[w*2],h[w*2+1],g[_*2],g[_*2+1]);m[k]=P.real,c[k]=P.imag}else for(let k=0;k<m.length;k++){let w=y.indexToLoc(k,u,l),_=w.slice(-b);d.forEach(G=>_[G]=0);let P=y.locToIndex(_,b,x),M=w.slice(-T);f.forEach(G=>M[G]=0);let R=y.locToIndex(M,T,C),$=r(h[P*2],h[P*2+1],g[R*2],g[R*2+1]);m[k]=$.real,c[k]=$.imag}return[m,c,i]}}var KD=nt((r,t)=>r+t),oie=kf((r,t,e,n)=>({real:r+e,imag:t+n})),wu=pt(Mn,KD,oie),YB={kernelName:Mn,backendName:"cpu",kernelFunc:wu};function vf(r,t,e,n,o){let s=y.sizeFromShape(n),a=y.makeZerosTypedArray(o,e);for(let i=0;i<r.length;i++){let p=r[i];if(p<0)throw new Error("Input x must be non-negative!");p>=o||(s>0?a[p]+=t[i]:a[p]+=1)}return a}function DT(r,t,e,n=!1){let o=r.shape[0],s=r.shape[1],a=Ce([o,e],t.dtype);for(let i=0;i<o;i++)for(let p=0;p<s;p++){let u=r.get(i,p);if(u<0)throw new Error("Input x must be non-negative!");u>=e||(n?a.set(1,i,u):t.size>0?a.set(a.get(i,u)+t.get(i,p),i,u):a.set(a.get(i,u)+1,i,u))}return a}var VD=nt((r,t)=>r&t),sie=pt($u,VD),ZB={kernelName:$u,backendName:"cpu",kernelFunc:sie};function Br(r){return(t,e,n)=>{let o=y.getArrayFromDType(e,t.length);for(let s=0;s<t.length;++s)o[s]=r(t[s],n);return o}}function Ee(r,t,e){let n=Br(t);return zn(r,n,e)}function zn(r,t,e){return({inputs:n,attrs:o,backend:s})=>{let{x:a}=n;oe(a,r);let i=s,p=i.data.get(a.dataId).values,u;if(a.dtype==="string"){if(!Array.isArray(p))throw new Error("String tensor's value was not an instance of Array");u=I.fromUint8ToStringArray(p)}else u=p;let l=e||a.dtype,m=t(u,l,o);return i.makeTensorInfo(a.shape,l,m)}}var HD=Br(r=>Math.ceil(r)),aie=zn(Fo,HD),QB={kernelName:Fo,backendName:"cpu",kernelFunc:aie};function Tm(r,t,e,n){let o=y.getArrayFromDType(e,y.sizeFromShape(t));if(n&&e!=="string"){let s=0;r.forEach(a=>{let i=y.sizeFromShape(a.shape);o.set(a.vals,s),s+=i})}else{let s=0;r.forEach(a=>{let i=e==="string"?I.fromUint8ToStringArray(a.vals):a.vals,p=0;for(let u=0;u<a.shape[0];++u){let l=u*t[1]+s;for(let m=0;m<a.shape[1];++m)o[l+m]=i[p++]}s+=a.shape[1]})}return o}var qD=nt((r,t)=>r===t?1:0),jD=pt(Ja,qD,null,"bool"),JB={kernelName:Ja,backendName:"cpu",kernelFunc:jD};var XD=Br(r=>Math.exp(r)),YD=zn(Ho,XD,"float32"),e$={kernelName:Ho,backendName:"cpu",kernelFunc:YD};var ZD=Br(r=>Math.expm1(r)),iie=zn(qo,ZD),t$={kernelName:qo,backendName:"cpu",kernelFunc:iie};var QD=Br(r=>Math.floor(r)),uie=zn(jo,QD),r$={kernelName:jo,backendName:"cpu",kernelFunc:uie};var JD=nt((r,t)=>Math.floor(r/t)),pie=pt(Xo,JD,null,"int32"),n$={kernelName:Xo,backendName:"cpu",kernelFunc:pie};function _T(r,t,e,n,o,s,a,i,p){let u=Ce([n,s],e);for(let l=0;l<n;l++){let m=[],c=0;for(let d=0;d<o;d++){let f=r[l*o+d];c+=f*a[d],m.push(f)}if(c<0||c>=p/s)throw new Error(`Invalid indices: ${m} does not index into ${i}`);for(let d=0;d<s;d++)u.values[l*s+d]=t.get(...t.indexToLoc(c*s+d))}return u}function MT(r,t,e){let n=Ce(e,r.dtype);for(let o=0;o<n.size;++o){let a=n.indexToLoc(o).slice(),i=a[0],p=a[2],u=t.locToIndex([i,p]);a[2]=t.values[u];let l=r.locToIndex(a);0<=l&&l<r.values.length&&(n.values[o]=r.values[l])}return n}var e0=nt((r,t)=>r>t?1:0),lie=pt(ri,e0,null,"bool"),o$={kernelName:ri,backendName:"cpu",kernelFunc:lie};var t0=nt((r,t)=>r>=t?1:0),mie=pt(Zo,t0,null,"bool"),s$={kernelName:Zo,backendName:"cpu",kernelFunc:mie};var r0=nt((r,t)=>r<t?1:0),cie=pt(ni,r0,null,"bool"),a$={kernelName:ni,backendName:"cpu",kernelFunc:cie};var n0=nt((r,t)=>r<=t?1:0),die=pt(oi,n0,null,"bool"),i$={kernelName:oi,backendName:"cpu",kernelFunc:die};function PT(r,t,e){let n=(t-r)/(e-1),o=y.makeZerosTypedArray(e,"float32");o[0]=r;for(let s=1;s<o.length;s++)o[s]=o[s-1]+n;return o}var o0=Br(r=>Math.log(r)),fie=zn(rs,o0),u$={kernelName:rs,backendName:"cpu",kernelFunc:fie};function RT(r,t,e,n){let o=y.getTypedArrayFromDType(n,y.sizeFromShape(e));for(let s=0;s<o.length;++s){let a=s*t,i=r[a];for(let p=0;p<t;++p){let u=r[a+p];(Number.isNaN(u)||u>i)&&(i=u)}o[s]=i}return o}var s0=nt((r,t)=>Math.max(r,t)),hie=pt(as,s0),p$={kernelName:as,backendName:"cpu",kernelFunc:hie};var a0=nt((r,t)=>Math.min(r,t)),gie=pt(ls,a0),l$={kernelName:ls,backendName:"cpu",kernelFunc:gie};var bg=nt((r,t)=>r*t),bie=kf((r,t,e,n)=>({real:r*e-t*n,imag:r*n+t*e})),Cm=pt(ds,bg,bie),m$={kernelName:ds,backendName:"cpu",kernelFunc:Cm};function i0(r,t,e){let n=y.createScalarValue(-1,e);return bg([],t,n,r,e)}function yie(r){let{inputs:t,backend:e}=r,{x:n}=t;oe(n,"neg");let o=e.data.get(n.dataId).values,[s,a]=i0(o,n.shape,n.dtype);return e.makeTensorInfo(a,n.dtype,s)}var c$={kernelName:oa,backendName:"cpu",kernelFunc:yie};var u0=nt((r,t)=>r!==t?1:0),xie=pt(mi,u0,null,"bool"),d$={kernelName:mi,backendName:"cpu",kernelFunc:xie};function Sf(r,t,e,n,o){let s=t.length,a=y.sizeFromShape(t),i=y.computeStrides(t),p=y.computeStrides(o),u=y.getTypedArrayFromDType(e,y.sizeFromShape(o));for(let l=0;l<a;++l){let m=y.indexToLoc(l,s,i),c=new Array(m.length);for(let f=0;f<c.length;f++)c[f]=m[n[f]];let d=y.locToIndex(c,s,p);u[d]=r[l]}return u}function Yt(r){let{inputs:t,attrs:e,backend:n}=r,{x:o}=t,{perm:s}=e;oe(o,"transpose");let a=o.shape.length,i=new Array(a);for(let m=0;m<i.length;m++)i[m]=o.shape[s[m]];let p=n.data.get(o.dataId).values,u=Sf(p,o.shape,o.dtype,s,i);return{dataId:n.write(u,i,o.dtype),shape:i,dtype:o.dtype}}var f$={kernelName:Rn,backendName:"cpu",kernelFunc:Yt};function p0(r,t,e,n){let[o,s]=I.computeOutAndReduceShapes(r,n),a=At(t,"int32"),i=y.makeZerosTypedArray(y.sizeFromShape(o),a),p=y.sizeFromShape(s);for(let u=0;u<i.length;++u){let l=u*p,m=1;for(let c=0;c<p;++c)m*=e[l+c];i[u]=m}return{outVals:i,outShape:o,outDtype:a}}function Tie(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:a}=n;oe(o,"prod");let i=o.shape.length,p=y.parseAxisParam(s,o.shape),u=I.getAxesPermutation(p,i),l=p,m=o,c=[];u!=null&&(m=Yt({inputs:{x:o},backend:e,attrs:{perm:u}}),c.push(m),l=I.getInnerMostAxes(l.length,i));let d=e.data.get(m.dataId).values,{outVals:f,outShape:h,outDtype:g}=p0(m.shape,m.dtype,d,l),b=h;return a&&(b=I.expandShapeToKeepDim(h,p)),c.forEach(x=>e.disposeIntermediateTensorInfo(x)),e.makeTensorInfo(b,g,f)}var h$={kernelName:ys,backendName:"cpu",kernelFunc:Tie};function Cie(r,t,e){r.forEach((n,o)=>{if(n<0||n>=e){let s=y.indexToLoc(o,t.length,y.computeStrides(t)).join(",");throw new Error(`indices[${s}] = ${n} is not in [0, ${e})`)}})}function Iie(r,t){for(let e=0;e<r.length;++e){let n=r[e],o=e===r.length-1?t:r[e+1].length;if(n.length===0)throw new Error("Ragged splits may not be empty");if(n[0]<0)throw new Error("Ragged splits must be non-negative");if(n[n.length-1]>o)throw new Error("Ragged splits must not point past values");for(let s=1;s<n.length;++s)if(n[s-1]>n[s])throw new Error("Ragged splits must be sorted in ascending order")}}function kie(r,t,e,n){let o=[],s=0,a=t.length-1+e.length,i=new Array(a).fill(null).map(()=>[0]);Iie(e,n);let p=1;for(let u=0;u<t.length-1;++u){p*=t[u];let l=t[u+1];for(let m=1;m<p+1;++m)i[u].push(m*l)}for(let u=0;u<r.length;++u){let l=r[u],m=r[u]+1;for(let c=0;c<e.length;++c){let d=e[c],f=c+t.length-1;if(f>=0){let h=i[f],g=h[h.length-1]-d[l];for(let b=l;b<m;++b)i[f].push(d[b+1]+g)}l=d[l],m=d[m]}m!==l&&(o.push([l,m]),s+=m-l)}return{outSplits:i,valueSlices:o,numValues:s}}function vie(r){let t=[];for(let e=0;e<r.length;++e){let n=r[e].length,o=y.getArrayFromDType("int32",n);t.push(o),r[e].forEach((s,a)=>o[a]=s)}return t}function g$(r,t){let e=r.slice(0,t);for(;e.length<t;)e.push(1);for(let n=t;n<r.length;n++)e[t-1]*=r[n];return e}function Sie(r,t,e,n,o,s){let a=g$(t,2)[1],i=g$(s,2)[1],p=0;for(let u of e)for(let l=u[0];l<u[1];++l){for(let m=0;m<n;++m)o[p*i+m]=r[l*a+m];++p}}function wie(r,t,e,n,o){let s=t.slice();s[0]=o;let a=y.getArrayFromDType(e,y.sizeFromShape(s)),i=r.length,p=i===0?0:i/t[0];return Sie(r,t,n,p,a,s),[a,s]}function FT(r,t,e,n,o,s,a,i){if(r.length===0)throw new Error("paramsNestedSplits must be non empty");if(t[0].length===0)throw new Error("Split tensors must not be scalars");let p=t[0][0]-1;if(Cie(s,a,p),n.length===0)throw new Error("params.rank must be nonzero");let u=n[0],{outSplits:l,valueSlices:m,numValues:c}=kie(s,a,r,u),d=vie(l),f=wie(e,n,o,m,c);return[d,f[0],f[1]]}var b$=2147483647;function ET(r,t,e,n,o,s,a){if(t.length>1)throw new Error("starts must be a scalar or vector");if(o.length>1)throw new Error("limits must be a scalar or vector");if(a.length>1)throw new Error("deltas must be a scalar or vector");let i=t.length===0,p=o.length===0,u=a.length===0,l=[];i||l.push(t[0]),p||l.push(o[0]),u||l.push(a[0]);for(let g=1;g<l.length;++g)if(l[g]!==l[g-1])throw new Error("starts, limits, and deltas must have the same shape");let m=l.length===0?1:l[0],c=y.getArrayFromDType("int32",m+1);c[0]=0;for(let g=0;g<m;++g){let b=i?r[0]:r[g],x=p?n[0]:n[g],T=u?s[0]:s[g];if(T===0)throw new Error("Requires delta != 0");let C;if(T>0&&x<b||T<0&&x>b)C=0;else if(C=Math.ceil(Math.abs((x-b)/T)),C>b$)throw new Error(`Requires ((limit - start) / delta) <= ${b$}`);c[g+1]=c[g]+C}let d=c[m],f=y.getArrayFromDType(e,d),h=0;for(let g=0;g<m;++g){let b=c[g+1]-c[g],x=i?r[0]:r[g],T=u?s[0]:s[g];for(let C=0;C<b;++C)f[h++]=x,x+=T}return[c,f]}var La=I.RowPartitionType,wf=class{constructor(t,e,n,o,s,a,i,p,u,l){this.shape=t;this.shapeShape=e;this.values=n;this.valuesShape=o;this.valuesDType=s;this.defaultValue=a;this.defaultValueShape=i;this.rowPartitionValues=p;this.rowPartitionValuesShapes=u;this.rowPartitionTypes=I.getRowPartitionTypesHelper(l),this.raggedRank=I.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(t){return this.rowPartitionTypes[0]===La.FIRST_DIM_SIZE?this.rowPartitionTypes[t+1]:this.rowPartitionTypes[t]}getRowPartitionTensor(t){return this.rowPartitionTypes[0]===La.FIRST_DIM_SIZE?this.rowPartitionValues[t+1]:this.rowPartitionValues[t]}getMaxWidth(t){let e=this.getRowPartitionTensor(t-1);switch(this.getRowPartitionTypeByDimension(t-1)){case La.VALUE_ROWIDS:return wf.getMaxWidthValueRowID(e);case La.ROW_SPLITS:return wf.getMaxWidthRowSplit(e);default:throw new Error(`Cannot handle partition type ${La[this.getRowPartitionTypeByDimension(t-1)]}`)}}static getMaxWidthRowSplit(t){let e=t.length;if(e===0||e===1)return 0;let n=0;for(let o=0;o<e-1;++o){let s=t[o+1]-t[o];s>n&&(n=s)}return n}static getMaxWidthValueRowID(t){let e=t.length;if(e===0)return 0;let n=0,o=t[0],s=0;for(let a=1;a<e;++a){let i=t[a];i!==o&&(o=i,s=Math.max(a-n,s),n=a)}return Math.max(e-n,s)}tensorShapeFromTensor(t,e,n=!0){if(e.length===0){if(t[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return x$(t,n)}calculateOutputSize(t){let e=this.valuesShape,n=this.defaultValueShape;I.validateDefaultValueShape(n,e);let o=this.tensorShapeFromTensor(this.shape,this.shapeShape),a=I.combineRaggedTensorToTensorShapes(this.raggedRank,o,e);a[0]<0&&(a[0]=t);for(let i=1;i<=this.raggedRank;++i)a[i]<0&&(a[i]=this.getMaxWidth(i));return a}calculateFirstParentOutputIndex(t,e,n){let o=Math.min(t,n),s=[],a=0;for(let i=0;i<o;++i,a+=e)s.push(a);for(let i=o;i<t;++i)s.push(-1);return y.assert(s.length===t,()=>"Final length of result must be equal to firstDimension."),s}calculateOutputIndexRowSplit(t,e,n,o){let s=t.length,a=[];for(let i=0;i<s-1;++i){let p=t[i+1]-t[i],u=Math.min(o,p),l=e[i];l===-1&&(u=0);for(let m=0;m<u;++m)a.push(l),l+=n;for(let m=0;m<p-u;++m)a.push(-1)}if(s>0&&a.length!==t[s-1])throw new Error("Invalid row split size.");return a}calculateOutputIndexValueRowID(t,e,n,o){let s=t.length,a=[];if(s===0)return[];let i=0,p=t[0];if(p>=e.length)throw new Error(`Got currentValueRowId=${p}, which is not less than ${e.length}`);let u=e[p];a.push(u);for(let l=1;l<s;++l){let m=t[l];if(m===p)u>=0&&(++i,i<o?u+=n:u=-1);else{if(i=0,p=m,m>=e.length)throw new Error(`Got nextValueRowId=${m} which is not less than ${e.length}`);u=e[m]}a.push(u)}if(a.length!==t.length)throw new Error("Invalid row ids.");return a}calculateOutputIndex(t,e,n,o){let s=this.getRowPartitionTensor(t),a=this.getRowPartitionTypeByDimension(t);switch(a){case La.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(s,e,n,o);case La.ROW_SPLITS:if(s.length-1>e.length)throw new Error(`Row partition size is greater than output size: ${s.length-1} > ${e.length}`);return this.calculateOutputIndexRowSplit(s,e,n,o);default:throw new Error(`Unsupported partition type: ${La[a]}`)}}getFirstDimensionSize(){let t=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");let e=this.rowPartitionTypes[0];switch(e){case La.FIRST_DIM_SIZE:return t[0];case La.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case La.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${La[e]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");let e=this.getFirstDimensionSize(),n=this.calculateOutputSize(e),o=new Array(this.raggedRank+1);o[o.length-1]=1;for(let p=o.length-2;p>=0;--p)o[p]=o[p+1]*n[p+1];let s=x$(n,!1),a=y.getArrayFromDType(this.valuesDType,y.sizeFromShape(s));if(o[0]*n[0]>0){let p=this.calculateFirstParentOutputIndex(e,o[0],n[0]);for(let u=1;u<=this.raggedRank;++u)p=this.calculateOutputIndex(u-1,p,o[u],n[u]);this.setOutput(this.raggedRank,p,a,s)}return[s,a]}setOutput(t,e,n,o){if(n.length===0)return;let s=this.values,a=n,i=o.slice();i=i.slice(t+1);let p=y.sizeFromShape(i),u=e.length,l=this.defaultValue;if(l.length!==p&&l.length!==1){let f=this.defaultValueShape;z(()=>{let h=E(l,f);l=Gp(h,i).dataSync()})}let m=0,c=0,d=0;for(let f=0;f<=u;++f){let h=f<u?e[f]:-1;if(h===d){++d;continue}if(c<d){let g=s.subarray(m*p),b=a.subarray(c*p),x=(d-c)*p;y$(b,g,x)}if(f>=u){let g=n.length;h=Math.floor(g/p)}if(h>d)if(this.defaultValue.length===1)a.subarray(d*p,h*p).fill(this.defaultValue[0]),d=h;else for(;h>d;){let g=a.slice(d*p);y$(g,l,p),++d}h<0?(m=f+1,c=d):(m=f,c=d,d=c+1)}}};function y$(r,t,e){for(let n=0;n<e;n++)r[n]=t[n]}function x$(r,t){let e=[];for(let n of r){if(n<0){if(!t)throw new Error(`Dimension ${n} must be >= 0`);if(n<-1)throw new Error(`Dimension ${n} must be >= -1`);n=-1}e.push(n)}return e}function LT(r,t,e,n,o,s,a,i,p,u){return new wf(r,t,e,n,o,s,a,i,p,u).compute()}function Im(r,t,e,n){let o=r===t,s=r<t&&e<0,a=t<r&&e>1;if(o||s||a)return y.makeZerosTypedArray(0,n);let i=Math.abs(Math.ceil((t-r)/e)),p=y.makeZerosTypedArray(i,n);t<r&&e===1&&(e=-1),p[0]=r;for(let u=1;u<p.length;u++)p[u]=p[u-1]+e;return p}var l0=Br(r=>1/Math.sqrt(r)),Aie=zn(ws,l0),T$={kernelName:ws,backendName:"cpu",kernelFunc:Aie};function Gi(r,t,e,n,o,s,a,i,p,u){let l=[n/o,o],m=r.values,c=t.values;if(n===0)return Ce(e,t.dtype);let d=p instanceof ft?p:Ce(l,t.dtype);typeof p=="string"||typeof p=="number"?d.values.fill(p):typeof p=="boolean"&&d.values.fill(+p);for(let f=0;f<s;f++){let h=[],g=0;for(let b=0;b<a;b++){let x=m[f*a+b];h.push(x),g+=x*i[b]}if(g<0||g>=n/o)throw new Error(`Invalid indices: ${h} does not index into ${e}`);for(let b=0;b<o;b++)u?d.values[g*o+b]+=c[f*o+b]:d.values[g*o+b]=t.rank===0?c[0]:c[f*o+b]}return d}var C$=Br(r=>1/(1+Math.exp(-r))),m0=Ee(Ms,r=>1/(1+Math.exp(-r))),I$={kernelName:Ms,backendName:"cpu",kernelFunc:m0};function km(r,t,e,n,o){let s=kt.isSliceContinous(n,t,e),a=y.sizeFromShape(e),i=y.computeStrides(n);if(s){let m=kt.computeFlatOffset(t,i);return o==="string"?r.slice(m,m+a):r.subarray(m,m+a)}let p=o==="string"?I.fromUint8ToStringArray(r):r,u=Ce(n,o,p),l=Ce(e,o);for(let m=0;m<l.size;++m){let c=l.indexToLoc(m),d=c.map((f,h)=>f+t[h]);l.set(u.get(...d),...c)}return o==="string"?I.fromStringArrayToUint8(l.values):l.values}function Ba(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{begin:s,size:a}=n;oe(o,"slice");let[i,p]=kt.parseSliceParams(o,s,a);kt.assertParamsValid(o,i,p);let u=e.data.get(o.dataId).values,l=km(u,i,p,o.shape,o.dtype);return e.makeTensorInfo(p,o.dtype,l)}var k$={kernelName:pa,backendName:"cpu",kernelFunc:Ba};function BT(r,t,e,n,o,s,a){let i=t[0],p=s[0],u=new Array(p),l=new Array(i),m=t[1];if(p===0){if(i!==0)throw new Error(I.getSparseFillEmptyRowsIndicesDenseShapeMismatch(i));let g=y.getArrayFromDType(e,0),b=y.getArrayFromDType(o,0);return[g,[0,m],b,u,l]}let c=!0,d=0,f=new Array(p).fill(0);for(let g=0;g<i;++g){let b=r[g*m];if(b<0)throw new Error(I.getSparseFillEmptyRowsNegativeIndexErrorMessage(g,b));if(b>=p)throw new Error(I.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(g,b,p));++f[b],c=c&&b>=d,d=b}let h=!0;for(let g=0;g<p;++g){let b=f[g]===0;u[g]=b,h=h&&!b,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(h&&c){let g=r,b=n;for(let x=0;x<i;++x)l[x]=x;return[g,[i,m],b,u,l]}else{let g=f[p-1],b=y.getArrayFromDType(e,g*m),x=y.getArrayFromDType(o,g),T=new Array(p).fill(0);for(let C=0;C<i;++C){let k=r[C*m],w=T[k],_=(k===0?0:f[k-1])+w;T[k]++;for(let P=0;P<m;++P)b[_*m+P]=r[C*m+P];x[_]=n[C],l[C]=_}for(let C=0;C<p;++C)if(T[C]===0){let w=C===0?0:f[C-1];b[w*m+0]=C;for(let _=1;_<m;++_)b[w*m+_]=0;x[w]=a}return[b,[g,m],x,u,l]}}function $T(r,t,e,n,o){let s=y.sizeFromShape(n),a=t[0],i=o.length,p=[],u=1,l=-1;for(let g=0;g<i;++g){let b=o[g];if(b===-1){if(l!==-1)throw new Error(I.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(l,g));l=g,p.push(1)}else{if(b<0)throw new Error(I.getSparseReshapeNegativeOutputDimErrorMessage(g,b));u*=b,p.push(b)}}if(l!==-1){if(u<=0)throw new Error(I.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let g=Math.trunc(s/u);if(u*g!==s)throw new Error(I.getSparseReshapeInputOutputMultipleErrorMessage(n,p));p[l]=g}if(y.sizeFromShape(p)!==s)throw new Error(I.getSparseReshapeInputOutputMismatchErrorMessage(n,p));let c=n.length,d=[];if(c>0){d[c-1]=1;for(let g=c-2;g>=0;--g)d[g]=d[g+1]*n[g+1]}let f=[];if(i>0){f[i-1]=1;for(let g=i-2;g>=0;--g)f[g]=f[g+1]*p[g+1]}let h=y.getArrayFromDType(e,a*i);for(let g=0;g<a;++g){let b=0;for(let x=0;x<c;++x)b+=r[g*c+x]*d[x];for(let x=0;x<i;++x)h[g*i+x]=Math.trunc(b/f[x]),b%=f[x]}return[h,[a,i],p]}function Af(r,t,e,n,o,s=!1,a=0){let i=n.length,p=[t[0],r.length/t[0]],u=p[1],m=i>0?o[i-1]+1:0;if(m<0)throw new Error(I.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let c=t.slice();c[0]=m;let d=c.reduce((T,C)=>T*C,1),f=y.getArrayFromDType(e,d);if(i===0)return m>0&&f.fill(a),[f,c];if(m<=0)throw new Error(I.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let h=0,g=1,b=0,x=o[h];for(;;){let T=0;if(g<i){if(T=o[g],x===T){++g;continue}if(x>=T)throw new Error(I.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(x<0||x>=m)throw new Error(I.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(x,m));x>b&&f.fill(a,b*u,x*u);for(let C=h;C<g;++C){let k=n[C];if(k<0||k>=p[0])throw new Error(I.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(C,n[C],p[0]));for(let w=0;w<u;w++)f[x*u+w]+=r[k*u+w]}if(s)for(let C=0;C<u;C++)f[x*u+C]/=g-h;if(h=g,++g,b=x+1,x=T,g>i)break}return b<m&&f.fill(a,b*u,m*u),[f,c]}var v$=Br(r=>Math.sqrt(r)),Nie=Ee(Rs,r=>Math.sqrt(r)),S$={kernelName:Rs,backendName:"cpu",kernelFunc:Nie};var c0=nt((r,t)=>{let e=r-t;return e*e}),Die=pt(Ls,c0),w$={kernelName:Ls,backendName:"cpu",kernelFunc:Die};var d0=Br((r,t)=>{let{pattern:e,replaceGlobal:n,rewrite:o}=t;return r.replace(new RegExp(e,n?"g":""),o)}),_ie=zn(Tl,d0),A$={kernelName:Tl,backendName:"cpu",kernelFunc:_ie};function OT(r,t,e,n){let o=Ce(r,t.dtype);for(let s=0;s<o.size;s++){let a=o.indexToLoc(s),i=new Array(a.length);for(let p=0;p<i.length;p++)i[p]=a[p]*e[p]+n[p];o.set(t.get(...i),...a)}return o}var f0=class{constructor(t,e,n,o,s,a){this.separator=y.encodeString(t),this.nGramWidths=e,this.leftPad=y.encodeString(n),this.rightPad=y.encodeString(o),this.padWidth=s,this.preserveShort=a}getPadWidth(t){return Math.min(this.padWidth<0?t-1:this.padWidth,t-1)}getNumNGrams(t,e){let n=this.getPadWidth(e);return Math.max(0,t+2*n-e+1)}createNGrams(t,e,n,o,s,a){for(let i=0;i<s;++i){let p=this.getPadWidth(a),u=Math.max(0,p-i),l=Math.max(0,p-(s-(i+1))),m=a-(u+l),c=e+(u>0?0:i-p),d=0;d+=u*this.leftPad.length;for(let x=0;x<m;++x)d+=t[c+x].length;d+=l*this.rightPad.length;let f=u+l+m-1;d+=f*this.separator.length,n[o+i]=new Uint8Array(d);let h=n[o+i],g=0,b=x=>x.forEach(T=>h[g++]=T);for(let x=0;x<u;++x)b(this.leftPad),b(this.separator);for(let x=0;x<m-1;++x)b(t[c+x]),b(this.separator);if(m>0){b(t[c+m-1]);for(let x=0;x<l;++x)b(this.separator),b(this.rightPad)}else{for(let x=0;x<l-1;++x)b(this.rightPad),b(this.separator);b(this.rightPad)}}}compute(t,e){let n=t.length,o=e.length;if(o>0){let p=e[0];if(p!==0)throw new Error(`First split value must be 0, got ${p}`);for(let u=1;u<o;++u){let l=e[u]>=p;if(l=l&&e[u]<=n,!l)throw new Error(`Invalid split value ${e[u]}, must be in [${p}, ${n}]`);p=e[u]}if(p!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${p}`)}let s=o-1,a=y.getArrayFromDType("int32",o);if(n===0||o===0){let p=new Array(n);for(let u=0;u<=s;++u)a[u]=0;return[p,a]}a[0]=0;for(let p=1;p<=s;++p){let u=e[p]-e[p-1],l=0;this.nGramWidths.forEach(m=>{l+=this.getNumNGrams(u,m)}),this.preserveShort&&u>0&&l===0&&(l=1),a[p]=a[p-1]+l}let i=new Array(a[s]);for(let p=0;p<s;++p){let u=e[p],l=a[p];if(this.nGramWidths.forEach(m=>{let c=e[p+1]-e[p],d=this.getNumNGrams(c,m);this.createNGrams(t,u,i,l,d,m),l+=d}),this.preserveShort&&l===a[p]){let m=e[p+1]-e[p];if(m===0)continue;let c=m+2*this.padWidth,d=1;this.createNGrams(t,u,i,l,d,c)}}return[i,a]}};function vm(r,t,e,n,o,s,a,i){return new f0(e,n,o,s,a,i).compute(r,t)}function Mie(r,t,e,n){if(!r.length)return;if(t.length===0){for(let s=0;s<r.length;++s)n.push(r.subarray(s,s+1));return}if(t.length===1){let s=t[0],a=r.indexOf(s);for(;a!==-1;){let i=r.subarray(0,a);(!e||i.length!==0)&&n.push(i),r=r.subarray(a+1),a=r.indexOf(s)}(!e||r.length!==0)&&n.push(r);return}let o=0;for(let s=0;s<r.length+1;s++)if(s===r.length||t.indexOf(r[s])!==-1){let a=r.subarray(o,s);(!e||a.length!==0)&&n.push(a),o=s+1}}function Sm(r,t,e){let n=r.length,o=[],s=0,a=0,i=new Array(n);for(let c=0;c<n;++c){let d=o.length;Mie(r[c],t,e,o);let f=o.length-d;i[c]=f,s+=f,a=Math.max(a,f)}let p=y.getArrayFromDType("int32",s*2),u=new Array(s),l=[n,a],m=0;for(let c=0;c<n;++c)for(let d=0;d<i[c];++d)p[m*2]=c,p[m*2+1]=d,u[m]=o[m],++m;return[p,u,l]}function wm(r,t){let e=y.getArrayFromDType("int32",r.length);for(let n=0;n<r.length;++n)e[n]=y.fingerPrint64(r[n]).modulo(t).getLowBitsUnsigned();return e}var h0=nt((r,t)=>r-t),Pie=kf((r,t,e,n)=>({real:r-e,imag:t-n})),yg=pt(Bs,h0,Pie),N$={kernelName:Bs,backendName:"cpu",kernelFunc:yg};function zT(r,t){let e=new Array(r.rank);for(let o=0;o<e.length;o++)e[o]=r.shape[o]*t[o];let n=Ce(e,r.dtype);for(let o=0;o<n.values.length;++o){let s=n.indexToLoc(o),a=new Array(r.rank);for(let p=0;p<a.length;p++)a[p]=s[p]%r.shape[p];let i=r.locToIndex(a);n.values[o]=r.values[i]}return n}var xg=(r,t)=>{let e=t.value-r.value;return e===0?r.index-t.index:e};function D$(r,t,e=0,n=r.length-1){for(;n>e;){if(n-e>600){let i=n-e+1,p=t-e+1,u=Math.log(i),l=.5*Math.exp(2*u/3),m=.5*Math.sqrt(u*l*(i-l)/i)*Math.sign(p-i/2),c=Math.max(e,Math.floor(t-p*l/i+m)),d=Math.min(n,Math.floor(t+(i-p)*l/i+m));D$(r,t,c,d)}let o=r[t],s=e,a=n;for(y.swap(r,e,t),xg(r[n],o)>0&&y.swap(r,e,n);s<a;){for(y.swap(r,s,a),s++,a--;xg(r[s],o)<0;)s=s+1;for(;xg(r[a],o)>0;)a=a-1}xg(r[e],o)===0?y.swap(r,e,a):(a=a+1,y.swap(r,a,n)),a<=t&&(e=a+1),t<=a&&(n=a-1)}}function GT(r,t,e,n,o){let s=t[t.length-1],[a,i]=[r.length/s,s],p=y.getTypedArrayFromDType(e,a*n),u=y.getTypedArrayFromDType("int32",a*n);for(let m=0;m<a;m++){let c=m*i,d=r.subarray(c,c+i),f=new Array(d.length);d.forEach((x,T)=>f[T]={value:x,index:T}),n<f.length&&(D$(f,n),f=f.slice(0,n)),o&&f.sort(xg);let h=m*n,g=p.subarray(h,h+n),b=u.subarray(h,h+n);for(let x=0;x<n;x++)g[x]=f[x].value,b[x]=f[x].index}let l=t.slice();return l[l.length-1]=n,[Ce(l,e,p),Ce(l,"int32",u)]}function Am(r,t,e,n){let o=y.parseAxisParam(t,e)[0],s=[1,e[0],1];for(let f=0;f<o;f++)s[0]*=e[f];s[1]=e[o];for(let f=o+1;f<e.length;f++)s[2]*=e[f];let a=new Map,i=new Int32Array(e[o]),p=new ft(s,n,r),u=[],l=s[0]===1&&s[2]===1;for(let f=0;f<e[o];f++){let h;if(l)h=r[f].toString();else{let b=[];for(let x=0;x<s[0];x++)for(let T=0;T<s[2];T++)b.push(p.get(x,f,T));h=b.join(",")}let g=a.get(h);if(g!=null)i[f]=g;else{let b=a.size;a.set(h,b),i[f]=b,u.push(f)}}let m=s.slice();m[1]=a.size;let c=new ft(m,n);u.forEach((f,h)=>{for(let g=0;g<s[0];g++)for(let b=0;b<s[2];b++)c.set(p.get(g,f,b),g,h,b)});let d=e.slice();return d[o]=m[1],{outputValues:c.values,outputShape:d,indices:i}}var Rie="0.0.0";Bp("cpu",()=>new Cf,1);var g0=Ee(Ko,r=>r>=0?r:Math.exp(r)-1),_$={kernelName:Ko,backendName:"cpu",kernelFunc:g0};function b0(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{alpha:s}=n;oe([o],"leakyRelu");let a=y.sizeFromShape(o.shape),i=e.data.get(o.dataId).values,p=y.getTypedArrayFromDType("float32",a);for(let u=0;u<i.length;u++)p[u]=i[u]<0?s*i[u]:i[u];return e.makeTensorInfo(o.shape,"float32",p)}var M$={kernelName:ts,backendName:"cpu",kernelFunc:b0};var Fie=nt((r,t)=>r<0?t*r:r);function y0(r){let{inputs:t,backend:e}=r,{x:n,alpha:o}=t;oe([n,o],"prelu");let s=e.data.get(n.dataId).values,a=e.data.get(o.dataId).values,[i,p]=Fie(n.shape,o.shape,s,a,"float32");return e.makeTensorInfo(p,"float32",i)}var P$={kernelName:bs,backendName:"cpu",kernelFunc:y0};var x0=Ee(Ts,r=>Math.max(0,r)),R$={kernelName:Ts,backendName:"cpu",kernelFunc:x0};var T0=Ee(ks,r=>Math.min(Math.max(0,r),6)),F$={kernelName:ks,backendName:"cpu",kernelFunc:T0};function Nm(r,t,e,n,o){if(e==="linear")return nn({inputs:{x:t},backend:r});if(e==="relu")return x0({inputs:{x:t},backend:r});if(e==="elu")return g0({inputs:{x:t},backend:r});if(e==="relu6")return T0({inputs:{x:t},backend:r});if(e==="prelu")return y0({inputs:{x:t,alpha:n},backend:r});if(e==="leakyrelu")return b0({inputs:{x:t},backend:r,attrs:{alpha:o}});if(e==="sigmoid")return m0({inputs:{x:t},backend:r});throw new Error(`Activation ${e} has not been implemented for the CPU backend.`)}function ot(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{shape:s}=n,a=y.sizeFromShape(o.shape),i=y.inferFromImplicitShape(s,a),p=y.sizeFromShape(i);y.assert(a===p,()=>`The new shape (${i}) has ${p} elements and the old shape (${o.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`),e.incRef(o.dataId);let u=e.data.get(o.dataId);if(u.complexTensorInfos!=null){let l=u.complexTensorInfos.real,m=u.complexTensorInfos.imag;l.shape=i,m.shape=i}return{dataId:o.dataId,shape:i,dtype:o.dtype}}var E$={kernelName:ia,backendName:"cpu",kernelFunc:ot};function C0(r){let{inputs:t,backend:e,attrs:n}=r,{a:o,b:s}=t,{transposeA:a,transposeB:i}=n;oe([o,s],"matMul");let p=o.shape.length,u=s.shape.length,l=a?o.shape[p-2]:o.shape[p-1],m=i?s.shape[u-1]:s.shape[u-2],c=a?o.shape[p-1]:o.shape[p-2],d=i?s.shape[u-2]:s.shape[u-1],f=o.shape.slice(0,-2),h=s.shape.slice(0,-2),g=y.sizeFromShape(f),b=y.sizeFromShape(h),T=Mr.assertAndGetBroadcastShape(o.shape.slice(0,-2),s.shape.slice(0,-2)).concat([c,d]);y.assert(l===m,()=>`Error in matMul: inner shapes (${l}) and (${m}) of Tensors with shapes ${o.shape} and ${s.shape} and transposeA=${a} and transposeB=${i} must match.`);let C=a?[g,l,c]:[g,c,l],k=i?[b,d,m]:[b,m,d],w=ot({inputs:{x:o},backend:e,attrs:{shape:C}}),_=ot({inputs:{x:s},backend:e,attrs:{shape:k}}),P=a?w.shape[1]:w.shape[2],M=a?w.shape[2]:w.shape[1],R=i?_.shape[1]:_.shape[2],$=Math.max(g,b),G=e.data.get(w.dataId).values,W=e.data.get(_.dataId).values,U=y.computeStrides(w.shape),V=y.computeStrides(_.shape),[K,q,j]=a?[U[0],1,U[1]]:[U[0],U[1],1],[te,se,ie]=i?[1,V[1],V[0]]:[V[1],1,V[0]],pe=M*R,ae=Ce([$,M,R],w.dtype),le=ae.values,fe=e.blockSize;for(let Te=0;Te<$;Te++){let Ae=Te%g,$e=Te%b;for(let Le=0;Le<M;Le+=fe){let Ze=Math.min(Le+fe,M);for(let ee=0;ee<R;ee+=fe){let bt=Math.min(ee+fe,R);for(let St=0;St<P;St+=fe){let it=Math.min(St+fe,P);for(let wt=Le;wt<Ze;wt++)for(let Tt=ee;Tt<bt;Tt++){let Bt=0;for(let $t=St;$t<it;$t++){let Vn=G[Ae*K+wt*q+$t*j],gr=W[$t*te+Tt*se+$e*ie];Bt+=Vn*gr}le[Te*pe+(wt*R+Tt)]+=Bt}}}}}return e.disposeIntermediateTensorInfo(w),e.disposeIntermediateTensorInfo(_),e.makeTensorInfo(T,ae.dtype,ae.values)}var L$={kernelName:Ro,backendName:"cpu",kernelFunc:C0};function Eie(r){let{inputs:t,backend:e,attrs:n}=r,{a:o,b:s,bias:a,preluActivationWeights:i}=t,{transposeA:p,transposeB:u,activation:l,leakyreluAlpha:m}=n,c,d,f,h=[];c=C0({inputs:{a:o,b:s},attrs:{transposeA:p,transposeB:u},backend:e}),a&&(d=wu({inputs:{a:c,b:a},backend:e}),h.push(c),c=d),l&&(f=Nm(e,c,l,i,m),h.push(c),c=f);for(let b of h)e.disposeIntermediateTensorInfo(b);return c}var B$={kernelName:fa,backendName:"cpu",kernelFunc:Eie};var Lie=Ee(vo,r=>Math.acos(r)),$$={kernelName:vo,backendName:"cpu",kernelFunc:Lie};var Bie=Ee(So,r=>Math.acosh(r)),O$={kernelName:So,backendName:"cpu",kernelFunc:Bie};function $ie(r){let{inputs:t,backend:e}=r,n=t;oe(t,"addN");let o=n.map(i=>e.data.get(i.dataId).values),s=Ce(n[0].shape,n[0].dtype),a=s.values;for(let i=0;i<n.length;i++){let p=o[i];for(let u=0;u<a.length;u++)a[u]+=p[u]}return e.makeTensorInfo(s.shape,s.dtype,s.values)}var z$={kernelName:wo,backendName:"cpu",kernelFunc:$ie};function Oie(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:a}=n;oe(o,"all");let i=y.parseAxisParam(s,o.shape),p=i,u=I.getAxesPermutation(p,o.shape.length),l=o;u!=null&&(l=Yt({inputs:{x:o},backend:e,attrs:{perm:u}}),p=I.getInnerMostAxes(p.length,o.shape.length)),I.assertAxesAreInnerMostDims("all",p,l.shape.length);let[m,c]=I.computeOutAndReduceShapes(l.shape,p),d=y.sizeFromShape(c),f=y.makeZerosTypedArray(y.sizeFromShape(m),l.dtype),h=e.data.get(l.dataId).values;for(let b=0;b<f.length;++b){let x=b*d,T=h[x];for(let C=0;C<d;++C){let k=h[x+C];T=T&&k}f[b]=T}u!=null&&e.disposeIntermediateTensorInfo(l);let g=e.makeTensorInfo(m,l.dtype,f);if(a){let b=I.expandShapeToKeepDim(m,i),x=ot({inputs:{x:g},backend:e,attrs:{shape:b}});return e.disposeIntermediateTensorInfo(g),x}return g}var G$={kernelName:Ka,backendName:"cpu",kernelFunc:Oie};function zie(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:a}=n;oe(o,"any");let i=y.parseAxisParam(s,o.shape),p=i,u=I.getAxesPermutation(p,o.shape.length),l=o;u!=null&&(l=Yt({inputs:{x:o},backend:e,attrs:{perm:u}}),p=I.getInnerMostAxes(p.length,o.shape.length)),I.assertAxesAreInnerMostDims("any",p,l.shape.length);let[m,c]=I.computeOutAndReduceShapes(l.shape,p),d=y.sizeFromShape(c),f=y.makeZerosTypedArray(y.sizeFromShape(m),l.dtype),h=e.data.get(l.dataId).values;for(let b=0;b<f.length;++b){let x=b*d,T=h[x];for(let C=0;C<d;++C){let k=h[x+C];T=T||k}f[b]=T}u!=null&&e.disposeIntermediateTensorInfo(l);let g=e.makeTensorInfo(m,l.dtype,f);if(a){let b=I.expandShapeToKeepDim(m,i),x=ot({inputs:{x:g},backend:e,attrs:{shape:b}});return e.disposeIntermediateTensorInfo(g),x}return g}var W$={kernelName:Va,backendName:"cpu",kernelFunc:zie};function Gie(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s}=n;oe(o,"argMax");let a=y.parseAxisParam(s,o.shape),i=I.getAxesPermutation(a,o.shape.length),p=o,u=[];i!=null&&(p=Yt({inputs:{x:o},backend:e,attrs:{perm:i}}),u.push(p),a=I.getInnerMostAxes(a.length,p.shape.length)),a=[a[0]],I.assertAxesAreInnerMostDims("argMax",a,p.shape.length);let[l,m]=I.computeOutAndReduceShapes(p.shape,a),c=y.sizeFromShape(l),d=y.makeZerosTypedArray(c,"int32"),f=y.sizeFromShape(m),h=e.data.get(p.dataId).values;for(let g=0;g<d.length;++g){let b=g*f,x=h[b],T=0;for(let C=0;C<f;++C){let k=h[b+C];k>x&&(x=k,T=C)}d[g]=T}return u.forEach(g=>e.disposeIntermediateTensorInfo(g)),e.makeTensorInfo(l,"int32",d)}var U$={kernelName:Ys,backendName:"cpu",kernelFunc:Gie};function Wie(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s}=n;oe(o,"argMin");let a=y.parseAxisParam(s,o.shape),i=I.getAxesPermutation(a,o.shape.length),p=o,u=[];i!=null&&(p=Yt({inputs:{x:o},backend:e,attrs:{perm:i}}),u.push(p),a=I.getInnerMostAxes(a.length,p.shape.length)),a=[a[0]],I.assertAxesAreInnerMostDims("argMin",a,p.shape.length);let[l,m]=I.computeOutAndReduceShapes(p.shape,a),c=y.sizeFromShape(l),d=y.makeZerosTypedArray(c,"int32"),f=y.sizeFromShape(m),h=e.data.get(p.dataId).values;for(let g=0;g<d.length;++g){let b=g*f,x=h[b],T=0;for(let C=0;C<f;++C){let k=h[b+C];k<x&&(x=k,T=C)}d[g]=T}return u.forEach(g=>e.disposeIntermediateTensorInfo(g)),e.makeTensorInfo(l,"int32",d)}var K$={kernelName:Zs,backendName:"cpu",kernelFunc:Wie};var Uie=Ee(Ao,r=>Math.asin(r)),V$={kernelName:Ao,backendName:"cpu",kernelFunc:Uie};var Kie=Ee(No,r=>Math.asinh(r)),H$={kernelName:No,backendName:"cpu",kernelFunc:Kie};var Vie=Ee(Do,r=>Math.atan(r)),q$={kernelName:Do,backendName:"cpu",kernelFunc:Vie};var Hie=nt((r,t)=>Math.atan2(r,t)),qie=pt(Mo,Hie),j$={kernelName:Mo,backendName:"cpu",kernelFunc:qie};var jie=Ee(_o,r=>Math.atanh(r)),X$={kernelName:_o,backendName:"cpu",kernelFunc:jie};function Df(r,t,e,n,o,s){let a=o.strideHeight,i=o.strideWidth,p=o.dilationHeight,u=o.dilationWidth,l=o.effectiveFilterHeight,m=o.effectiveFilterWidth,c=o.padInfo.top,d=o.padInfo.left,f=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,h=Ce(o.outShape,e),g=h.values,b=o.outShape[1]*o.outShape[2]*o.outShape[3],x=o.outShape[2]*o.outShape[3],T=o.outShape[3];for(let C=0;C<o.batchSize;++C){let k=C*b,w=C*n[0];for(let _=0;_<o.inChannels;++_)for(let P=0;P<o.outHeight;++P){let M=P*a-c,R=Math.max(0,M),$=Math.min(o.inHeight,l+M),G=k+P*x;for(let W=0;W<o.outWidth;++W){let U=W*i-d,V=Math.max(0,U),K=Math.min(o.inWidth,m+U),q=f,j=0,te=0;for(let ie=R;ie<$;ie+=p){let pe=w+ie*n[1];for(let ae=V;ae<K;ae+=u){let le=pe+ae*n[2],fe=r[le+_];s==="max"&&fe>q?q=fe:s==="avg"&&(j+=fe,te++)}if(isNaN(q))break}let se=G+W*T+_;g[se]=s==="avg"?j/te:q}}}return h}function WT(r,t,e,n,o=!1,s=!1){let a=Ce(n.outShape,"int32"),i=n.strideHeight,p=n.strideWidth,u=n.dilationHeight,l=n.dilationWidth,m=n.effectiveFilterHeight,c=n.effectiveFilterWidth,d=n.padInfo.top,f=n.padInfo.left,h=Ce(t,e,r);for(let g=0;g<n.batchSize;++g)for(let b=0;b<n.inChannels;++b)for(let x=0;x<n.outHeight;++x){let T=x*i-d,C=T;for(;C<0;)C+=u;let k=Math.min(n.inHeight,m+T);for(let w=0;w<n.outWidth;++w){let _=w*p-f,P=_;for(;P<0;)P+=l;let M=Math.min(n.inWidth,c+_),R=Number.NEGATIVE_INFINITY,$=-1;for(let G=C;G<k;G+=u){let W=G-T;for(let U=P;U<M;U+=l){let V=U-_,K=h.get(g,G,U,b);K>R&&(R=K,o?$=s?((g*n.inHeight+G)*n.inWidth+U)*n.inChannels+b:(G*n.inWidth+U)*n.inChannels+b:$=W*c+V)}}a.set($,g,x,w,b)}}return a}function UT(r,t,e,n,o,s){let a=o.strideDepth,i=o.strideHeight,p=o.strideWidth,u=o.dilationDepth,l=o.dilationHeight,m=o.dilationWidth,c=o.effectiveFilterDepth,d=o.effectiveFilterHeight,f=o.effectiveFilterWidth,h=o.padInfo.front,g=o.padInfo.top,b=o.padInfo.left,x=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,T=Ce(o.outShape,e),C=T.values,k=o.outShape[1]*o.outShape[2]*o.outShape[3]*o.outShape[4],w=o.outShape[2]*o.outShape[3]*o.outShape[4],_=o.outShape[3]*o.outShape[4],P=o.outShape[4];for(let M=0;M<o.batchSize;++M){let R=M*k,$=M*n[0];for(let G=0;G<o.inChannels;++G)for(let W=0;W<o.outDepth;++W){let U=W*a-h,V=U;for(;V<0;)V+=u;let K=Math.min(o.inDepth,c+U),q=R+W*w;for(let j=0;j<o.outHeight;++j){let te=j*i-g,se=te;for(;se<0;)se+=l;let ie=Math.min(o.inHeight,d+te),pe=q+j*_;for(let ae=0;ae<o.outWidth;++ae){let le=ae*p-b,fe=le;for(;fe<0;)fe+=m;let Te=Math.min(o.inWidth,f+le),Ae=pe+ae*P,$e=x,Le=0,Ze=0;for(let bt=V;bt<K;bt+=u){let St=$+bt*n[1];for(let it=se;it<ie;it+=l){let wt=St+it*n[2];for(let Tt=fe;Tt<Te;Tt+=m){let Bt=wt+Tt*n[3],$t=r[Bt+G];if(s==="max"&&$t>$e?$e=$t:s==="avg"&&(Le+=$t,Ze++),isNaN($e))break}if(isNaN($e))break}if(isNaN($e))break}let ee=Ae+G;C[ee]=s==="avg"?Le/Math.max(Ze,1):$e}}}}return T}function Y$(r,t){let e=Ce(t.outShape,"int32"),n=t.strideDepth,o=t.strideHeight,s=t.strideWidth,a=t.dilationDepth,i=t.dilationHeight,p=t.dilationWidth,u=t.effectiveFilterDepth,l=t.effectiveFilterHeight,m=t.effectiveFilterWidth,c=t.padInfo.front,d=t.padInfo.top,f=t.padInfo.left;for(let h=0;h<t.batchSize;++h)for(let g=0;g<t.inChannels;++g)for(let b=0;b<t.outDepth;++b){let x=b*n-c,T=x;for(;T<0;)T+=a;let C=Math.min(t.inDepth,u+x);for(let k=0;k<t.outHeight;++k){let w=k*o-d,_=w;for(;_<0;)_+=i;let P=Math.min(t.inHeight,l+w);for(let M=0;M<t.outWidth;++M){let R=M*s-f,$=R;for(;$<0;)$+=p;let G=Math.min(t.inWidth,m+R),W=Number.NEGATIVE_INFINITY,U=-1;for(let V=T;V<C;V+=a){let K=V-x;for(let q=_;q<P;q+=i){let j=q-w;for(let te=$;te<G;te+=p){let se=te-R,ie=r.get(h,V,q,te,g);ie>=W&&(W=ie,U=K*l*m+j*l+se)}}}e.set(U,h,b,k,M,g)}}}return e}function Xie(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t;oe(o,"avgPool");let{filterSize:s,strides:a,pad:i,dimRoundingMode:p}=n,u=1;y.assert(I.eitherStridesOrDilationsAreOne(a,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);let l=I.computePool2DInfo(o.shape,s,a,u,i,p),m;if(l.filterWidth===1&&l.filterHeight===1&&y.arraysEqual(l.inShape,l.outShape))m=nn({inputs:{x:o},backend:e});else{let c=e.data.get(o.dataId).values,d=y.computeStrides(o.shape),f=Df(c,o.shape,o.dtype,d,l,"avg");m=e.makeTensorInfo(l.outShape,o.dtype,f.values)}return m}var Z$={kernelName:Po,backendName:"cpu",kernelFunc:Xie};function Yie(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{filterSize:s,strides:a,pad:i,dimRoundingMode:p,dataFormat:u}=n;oe(o,"avgPool3d");let l=I.computePool3DInfo(o.shape,s,a,1,i,p,u),m=e.data.get(o.dataId).values,c=UT(m,o.shape,o.dtype,y.computeStrides(o.shape),l,"avg");return e.makeTensorInfo(c.shape,"float32",c.values)}var Q$={kernelName:Qs,backendName:"cpu",kernelFunc:Yie};function Zie(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,input:s}=t,{filterSize:a,strides:i,pad:p,dimRoundingMode:u}=n;oe([o,s],"avgPool3DGrad");let l=I.computePool3DInfo(s.shape,a,i,1,p,u),m=l.strideDepth,c=l.strideHeight,d=l.strideWidth,f=l.filterDepth,h=l.filterHeight,g=l.filterWidth,b=l.dilationDepth,x=l.dilationHeight,T=l.dilationWidth,C=l.effectiveFilterDepth,k=l.effectiveFilterHeight,w=l.effectiveFilterWidth,_=C-1-l.padInfo.front,P=w-1-l.padInfo.left,M=k-1-l.padInfo.top,R=Ce(s.shape,"float32"),$=1/(f*h*g),G=e.bufferSync(o);for(let W=0;W<l.batchSize;++W)for(let U=0;U<l.inChannels;++U)for(let V=0;V<l.inDepth;++V)for(let K=0;K<l.inHeight;++K)for(let q=0;q<l.inWidth;++q){let j=V-_,te=K-M,se=q-P,ie=0;for(let pe=0;pe<C;pe+=b){let ae=(j+pe)/m;if(!(ae<0||ae>=l.outDepth||Math.floor(ae)!==ae))for(let le=0;le<k;le+=x){let fe=(te+le)/c;if(!(fe<0||fe>=l.outHeight||Math.floor(fe)!==fe))for(let Te=0;Te<w;Te+=T){let Ae=(se+Te)/d;if(Ae<0||Ae>=l.outWidth||Math.floor(Ae)!==Ae)continue;let $e=G.get(W,ae,fe,Ae,U);ie+=$e}}}R.set(ie*$,W,V,K,q,U)}return e.makeTensorInfo(R.shape,R.dtype,R.values)}var J$={kernelName:Zi,backendName:"cpu",kernelFunc:Zie};function Qie(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,input:s}=t,a=s;oe([o,s],"avgPoolGrad");let{filterSize:i,strides:p,pad:u}=n,l=I.computePool2DInfo(a.shape,i,p,1,u),m=l.strideHeight,c=l.strideWidth,d=l.filterHeight,f=l.filterWidth,h=l.dilationHeight,g=l.dilationWidth,b=l.effectiveFilterHeight,x=l.effectiveFilterWidth,T=x-1-l.padInfo.left,C=b-1-l.padInfo.top,k=Ce(a.shape,"float32"),w=1/(d*f),_=e.data.get(o.dataId).values,P=Ce(o.shape,"float32",_);for(let M=0;M<l.batchSize;++M)for(let R=0;R<l.inChannels;++R)for(let $=0;$<l.inHeight;++$)for(let G=0;G<l.inWidth;++G){let W=$-C,U=G-T,V=0;for(let K=0;K<b;K+=h){let q=(W+K)/m;if(!(q<0||q>=l.outHeight||Math.floor(q)!==q))for(let j=0;j<x;j+=g){let te=(U+j)/c;if(te<0||te>=l.outWidth||Math.floor(te)!==te)continue;let se=P.get(M,q,te,R);V+=se}}k.set(V*w,M,$,G,R)}return e.makeTensorInfo(k.shape,k.dtype,k.values)}var e3={kernelName:Yi,backendName:"cpu",kernelFunc:Qie};function Jie(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,scale:s,offset:a,mean:i,variance:p}=t;y.assert(i.shape.length===p.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),y.assert(a==null||i.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),y.assert(s==null||i.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),oe([o,i,p,s,a],"batchNorm");let{varianceEpsilon:u}=n;u==null&&(u=.001);let l=e.data.get(o.dataId).values,m=e.data.get(i.dataId).values,c=e.data.get(p.dataId).values,d=s?e.data.get(s.dataId).values:new Float32Array([1]),f=a?e.data.get(a.dataId).values:new Float32Array([0]),h=new Float32Array(l.length),g=f.length,b=d.length,x=c.length,T=m.length,C=0,k=0,w=0,_=0;for(let P=0;P<l.length;++P)h[P]=f[C++]+(l[P]-m[k++])*d[w++]/Math.sqrt(c[_++]+u),C>=g&&(C=0),k>=T&&(k=0),w>=b&&(w=0),_>=x&&(_=0);return e.makeTensorInfo(o.shape,o.dtype,h)}var t3={kernelName:Yo,backendName:"cpu",kernelFunc:Jie};function eue(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{blockShape:s,crops:a}=n;oe([o],"batchToSpaceND");let i=s.reduce((b,x)=>b*x),p=I.getReshaped(o.shape,s,i),u=I.getPermuted(p.length,s.length),l=I.getReshapedPermuted(o.shape,s,i),m=I.getSliceBeginCoords(a,s.length),c=I.getSliceSize(l,a,s.length),d=ot({inputs:{x:o},backend:e,attrs:{shape:p}}),f=Yt({inputs:{x:d},backend:e,attrs:{perm:u}}),h=ot({inputs:{x:f},backend:e,attrs:{shape:l}}),g=Ba({inputs:{x:h},backend:e,attrs:{begin:m,size:c}});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(h),g}var r3={kernelName:Js,backendName:"cpu",kernelFunc:eue};function tue(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,weights:s}=t,{size:a}=n,i=e.data.get(o.dataId).values,p=e.data.get(s.dataId).values,u=vf(i,p,s.dtype,s.shape,a);return e.makeTensorInfo([a],s.dtype,u)}var n3={kernelName:Ha,backendName:"cpu",kernelFunc:tue};function rue(r){let{inputs:t,backend:e}=r,{s0:n,s1:o}=t,s=e.data.get(n.dataId).values,a=e.data.get(o.dataId).values,i=I.assertAndGetBroadcastShape(Array.from(s),Array.from(a));return e.makeTensorInfo([i.length],"int32",Int32Array.from(i))}var o3={kernelName:Qi,backendName:"cpu",kernelFunc:rue};var nue=Ee(Xn,(r,t)=>{let e=t;return r>e.clipValueMax?e.clipValueMax:r<e.clipValueMin?e.clipValueMin:r}),s3={kernelName:Xn,backendName:"cpu",kernelFunc:nue};var oue=r=>{let{x:t}=r.inputs,e=r.backend,n=new Float32Array(y.sizeFromShape(t.shape)),o=e.data.get(t.dataId),s=o.complexTensorInfos.real,a=o.complexTensorInfos.imag,i=e.data.get(s.dataId).values,p=e.data.get(a.dataId).values;for(let u=0;u<i.length;u++){let l=i[u],m=p[u];n[u]=Math.hypot(l,m)}return e.makeOutput(n,t.shape,"float32")},a3={kernelName:Ji,backendName:"cpu",kernelFunc:oue};function Au(r){let{inputs:t,backend:e}=r,{input:n}=t,o=e.data.get(n.dataId).complexTensorInfos.imag,s=e.data.get(o.dataId).values;return e.makeTensorInfo(o.shape,o.dtype,s)}var i3={kernelName:Ap,backendName:"cpu",kernelFunc:Au};function sl(r){let{inputs:t,backend:e,attrs:n}=r,{axis:o}=n,s=y.parseAxisParam(o,t[0].shape)[0],a=t.map(h=>h.shape);I.assertParamsConsistent(a,s);let i=I.computeOutShape(t.map(h=>h.shape),s);if(y.sizeFromShape(i)===0)return e.makeTensorInfo(i,t[0].dtype,[]);let p=t.filter(h=>y.sizeFromShape(h.shape)>0);if(p.length===1)return nn({inputs:{x:p[0]},backend:e});if(p[0].dtype==="complex64"){let h=p.map(C=>Fa({inputs:{input:C},backend:e})),g=p.map(C=>Au({inputs:{input:C},backend:e})),b=sl({inputs:h,backend:e,attrs:{axis:s}}),x=sl({inputs:g,backend:e,attrs:{axis:s}}),T=Nr({inputs:{real:b,imag:x},backend:e});return h.forEach(C=>e.disposeIntermediateTensorInfo(C)),g.forEach(C=>e.disposeIntermediateTensorInfo(C)),e.disposeIntermediateTensorInfo(b),e.disposeIntermediateTensorInfo(x),T}let u=p.map(h=>{let b=[-1,y.sizeFromShape(h.shape.slice(s))];return ot({inputs:{x:h},backend:e,attrs:{shape:b}})}),l=u.map(h=>({vals:e.data.get(h.dataId).values,shape:h.shape}));i=I.computeOutShape(u.map(h=>h.shape),1);let m=u[0].shape[0]===1,c=Tm(l,i,t[0].dtype,m),d=I.computeOutShape(p.map(h=>h.shape),s),f=e.makeTensorInfo(d,t[0].dtype,c);return u.forEach(h=>e.disposeIntermediateTensorInfo(h)),f}var u3={kernelName:ea,backendName:"cpu",kernelFunc:sl};function I0(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s}=t,{strides:a,pad:i,dataFormat:p,dilations:u,dimRoundingMode:l}=n;oe([o,s],"conv2d");let m=I.convertConv2DDataFormat(p),c=I.computeConv2DInfo(o.shape,s.shape,a,u,i,l,!1,m),d=c.filterHeight,f=c.filterWidth,h=c.dilationHeight,g=c.dilationWidth,b=c.padInfo.left,x=c.padInfo.top,T=c.dataFormat==="channelsLast",C=new ft(c.outShape,o.dtype),k=y.computeStrides(o.shape),w=y.computeStrides(s.shape),_=k[0],P=T?k[1]:k[2],M=T?k[2]:1,R=T?1:k[1],$=C.strides[0],G=T?C.strides[1]:C.strides[2],W=T?C.strides[2]:1,U=T?1:C.strides[1],V=e.data.get(o.dataId).values,K=e.data.get(s.dataId).values,q=C.values;for(let j=0;j<c.batchSize;++j){let te=j*_,se=j*$;for(let ie=0;ie<c.outHeight;++ie){let pe=se+ie*G,ae=ie*c.strideHeight-x;for(let le=0;le<d;++le){let fe=ae+le*h;if(fe<0||fe>=c.inHeight)continue;let Te=le*w[0],Ae=te+fe*P;for(let $e=0;$e<c.outWidth;++$e){let Le=pe+$e*W,Ze=$e*c.strideWidth-b;for(let ee=0;ee<f;++ee){let bt=Ze+ee*g;if(bt<0||bt>=c.inWidth)continue;let St=Te+ee*w[1],it=Ae+bt*M,wt=St;for(let Tt=0;Tt<c.inChannels;++Tt){let Bt=V[it+Tt*R];for(let $t=0;$t<c.outChannels;++$t)q[Le+$t*U]+=Bt*K[wt+$t];wt+=c.outChannels}}}}}}return e.makeTensorInfo(C.shape,C.dtype,q)}var p3={kernelName:Eo,backendName:"cpu",kernelFunc:I0};function sue(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,dy:s}=t,{strides:a,pad:i,dataFormat:p,dimRoundingMode:u,filterShape:l}=n;oe([o,s],"conv2dBackpropFilter");let m=I.convertConv2DDataFormat(p),c=I.computeConv2DInfo(o.shape,l,a,1,i,u,!1,m),{strideHeight:d,strideWidth:f,filterHeight:h,filterWidth:g}=c,b=c.dataFormat==="channelsLast",x=new ft(c.filterShape,"float32"),T=c.padInfo.left,C=c.padInfo.top,k=e.data.get(o.dataId).values,w=e.data.get(s.dataId).values,_=new ft(o.shape,o.dtype,k),P=new ft(s.shape,s.dtype,w);for(let M=0;M<h;++M){let R=Math.max(0,Math.ceil((C-M)/d)),$=Math.min(c.outHeight,(c.inHeight+C-M)/d);for(let G=0;G<g;++G){let W=Math.max(0,Math.ceil((T-G)/f)),U=Math.min(c.outWidth,(c.inWidth+T-G)/f);for(let V=0;V<c.inChannels;++V)for(let K=0;K<c.outChannels;++K){let q=0;for(let j=0;j<c.batchSize;++j)for(let te=R;te<$;++te){let se=M+te*d-C;for(let ie=W;ie<U;++ie){let pe=G+ie*f-T;b?q+=_.get(j,se,pe,V)*P.get(j,te,ie,K):q+=_.get(j,V,se,pe)*P.get(j,K,te,ie)}}x.set(q,M,G,V,K)}}}return e.makeTensorInfo(x.shape,x.dtype,x.values)}var l3={kernelName:Cp,backendName:"cpu",kernelFunc:sue};function aue(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,filter:s}=t,{inputShape:a,strides:i,pad:p,dataFormat:u,dimRoundingMode:l}=n;oe([o,s],"conv2dBackpropInput");let m=y.computeStrides(s.shape),c=y.computeStrides(o.shape),d=I.convertConv2DDataFormat(u),f=I.computeConv2DInfo(a,s.shape,i,1,p,l,!1,d),h=new ft(f.inShape,"float32"),g=h.values,b=e.data.get(o.dataId).values,x=e.data.get(s.dataId).values,[T,C,k]=m,{batchSize:w,filterHeight:_,filterWidth:P,inChannels:M,inHeight:R,inWidth:$,outChannels:G,outHeight:W,outWidth:U,strideHeight:V,strideWidth:K}=f;d=f.dataFormat;let q=_-1-f.padInfo.top,j=P-1-f.padInfo.left,te=d==="channelsLast",se=h.strides[0],ie=te?h.strides[1]:h.strides[2],pe=te?h.strides[2]:1,ae=te?1:h.strides[1],le=c[0],fe=te?c[1]:c[2],Te=te?c[2]:1,Ae=te?1:c[1];for(let $e=0;$e<w;++$e)for(let Le=0;Le<M;++Le)for(let Ze=0;Ze<R;++Ze){let ee=Ze-q,bt=Math.max(0,Math.ceil(ee/V)),St=Math.min(W,(_+ee)/V);for(let it=0;it<$;++it){let wt=it-j,Tt=Math.max(0,Math.ceil(wt/K)),Bt=Math.min(U,(P+wt)/K),$t=0;for(let gr=bt;gr<St;++gr){let bo=gr*V-ee;for(let Vr=Tt;Vr<Bt;++Vr){let or=Vr*K-wt,Hr=le*$e+fe*gr+Te*Vr,qr=T*(_-1-bo)+C*(P-1-or)+k*Le;for(let yo=0;yo<G;++yo){let xo=b[Hr+Ae*yo],sn=x[qr+yo];$t+=xo*sn}}}let Vn=se*$e+ie*Ze+pe*it+ae*Le;g[Vn]=$t}}return e.makeTensorInfo(h.shape,h.dtype,h.values)}var m3={kernelName:Lo,backendName:"cpu",kernelFunc:aue};function iue(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s}=t,{strides:a,pad:i,dilations:p}=n;oe([o,s],"conv3d");let u=I.computeConv3DInfo(o.shape,s.shape,a,p,i),{filterDepth:l,filterHeight:m,filterWidth:c,dilationDepth:d,dilationHeight:f,dilationWidth:h,padInfo:g}=u,b=g.front,x=g.left,T=g.top,C=new ft(u.outShape,o.dtype),k=e.data.get(o.dataId).values,w=e.data.get(s.dataId).values,_=C.values,P=y.computeStrides(o.shape),M=y.computeStrides(s.shape);for(let R=0;R<u.batchSize;++R){let $=R*P[0],G=R*C.strides[0];for(let W=0;W<u.outDepth;++W){let U=G+W*C.strides[1],V=W*u.strideDepth-b;for(let K=0;K<l;++K){let q=V+K*d;if(q<0||q>=u.inDepth)continue;let j=K*M[0],te=$+q*P[1];for(let se=0;se<u.outHeight;++se){let ie=U+se*C.strides[2],pe=se*u.strideHeight-T;for(let ae=0;ae<m;++ae){let le=pe+ae*f;if(le<0||le>=u.inHeight)continue;let fe=j+ae*M[1],Te=te+le*P[2];for(let Ae=0;Ae<u.outWidth;++Ae){let $e=ie+Ae*u.outChannels,Le=Ae*u.strideWidth-x;for(let Ze=0;Ze<c;++Ze){let ee=Le+Ze*h;if(ee<0||ee>=u.inWidth)continue;let bt=fe+Ze*M[2],St=Te+ee*u.inChannels,it=bt;for(let wt=0;wt<u.inChannels;++wt){let Tt=k[St+wt];for(let Bt=0;Bt<u.outChannels;++Bt)_[$e+Bt]+=Tt*w[it+Bt];it+=u.outChannels}}}}}}}}return e.makeTensorInfo(C.shape,C.dtype,C.values)}var c3={kernelName:Bo,backendName:"cpu",kernelFunc:iue};function uue(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,dy:s}=t,{strides:a,pad:i,filterShape:p}=n;oe([o,s],"conv3dBackpropFilterV2");let u=y.computeStrides(o.shape),l=y.computeStrides(s.shape),m=I.computeConv3DInfo(o.shape,p,a,1,i),c=m.strideDepth,d=m.strideHeight,f=m.strideWidth,h=m.filterDepth,g=m.filterHeight,b=m.filterWidth,x=new ft(m.filterShape,"float32"),T=x.values,[C,k,w,_]=x.strides,P=e.data.get(s.dataId).values,[M,R,$,G]=l,W=e.data.get(o.dataId).values,[U,V,K,q]=u,j=m.padInfo.front,te=m.padInfo.left,se=m.padInfo.top;for(let ie=0;ie<h;++ie){let pe=Math.max(0,Math.ceil((j-ie)/c)),ae=Math.min(m.outDepth,(m.inDepth+j-ie)/c),le=ie*C;for(let fe=0;fe<g;++fe){let Te=Math.max(0,Math.ceil((se-fe)/d)),Ae=Math.min(m.outHeight,(m.inHeight+se-fe)/d),$e=fe*k+le;for(let Le=0;Le<b;++Le){let Ze=Math.max(0,Math.ceil((te-Le)/f)),ee=Math.min(m.outWidth,(m.inWidth+te-Le)/f),bt=Le*w+$e;for(let St=0;St<m.inChannels;++St){let it=St*_+bt;for(let wt=0;wt<m.outChannels;++wt){let Tt=0;for(let Bt=0;Bt<m.batchSize;++Bt){let $t=Bt*U,Vn=Bt*M;for(let gr=pe;gr<ae;++gr){let Vr=(ie+gr*c-j)*V+$t,or=gr*R+Vn;for(let Hr=Te;Hr<Ae;++Hr){let yo=(fe+Hr*d-se)*K+Vr,xo=Hr*$+or;for(let sn=Ze;sn<ee;++sn){let Ga=(Le+sn*f-te)*q+yo,qi=sn*G+xo;Tt+=W[Ga+St]*P[qi+wt]}}}}T[it+wt]=Tt}}}}}return e.makeTensorInfo(x.shape,x.dtype,x.values)}var d3={kernelName:qa,backendName:"cpu",kernelFunc:uue};function pue(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,filter:s}=t,{pad:a,strides:i,inputShape:p}=n;oe([o],"conv3dBackpropInputV2");let u=y.computeStrides(o.shape),l=y.computeStrides(s.shape),m=I.computeConv3DInfo(p,s.shape,i,1,a),c=new ft(m.inShape,"float32"),d=c.values,[f,h,g,b]=c.strides,x=e.data.get(o.dataId).values,[T,C,k,w]=u,_=e.data.get(s.dataId).values,[P,M,R,$]=l,{batchSize:G,filterDepth:W,filterHeight:U,filterWidth:V,inChannels:K,inDepth:q,inHeight:j,inWidth:te,outChannels:se,outDepth:ie,outHeight:pe,outWidth:ae,strideDepth:le,strideHeight:fe,strideWidth:Te}=m,Ae=W-1-m.padInfo.front,$e=U-1-m.padInfo.top,Le=V-1-m.padInfo.left;for(let Ze=0;Ze<G;++Ze)for(let ee=0;ee<K;++ee)for(let bt=0;bt<q;++bt){let St=bt-Ae,it=Math.max(0,Math.ceil(St/le)),wt=Math.min(ie,(W+St)/le);for(let Tt=0;Tt<j;++Tt){let Bt=Tt-$e,$t=Math.max(0,Math.ceil(Bt/fe)),Vn=Math.min(pe,(U+Bt)/fe);for(let gr=0;gr<te;++gr){let bo=gr-Le,Vr=Math.max(0,Math.ceil(bo/Te)),or=Math.min(ae,(V+bo)/Te),Hr=0;for(let qr=it;qr<wt;++qr){let yo=qr*le-St;for(let xo=$t;xo<Vn;++xo){let sn=xo*fe-Bt;for(let Pu=Vr;Pu<or;++Pu){let Ga=Pu*Te-bo,qi=T*Ze+C*qr+k*xo+w*Pu,$r=P*(W-1-yo)+M*(U-1-sn)+R*(V-1-Ga)+$*ee;for(let Ru=0;Ru<se;++Ru){let uh=x[qi+Ru],ph=_[$r+Ru];Hr+=uh*ph}}}}d[f*Ze+h*bt+g*Tt+b*gr+ee]=Hr}}}return e.makeTensorInfo(c.shape,c.dtype,c.values)}var f3={kernelName:ja,backendName:"cpu",kernelFunc:pue};var lue=Ee($o,r=>Math.cos(r)),h3={kernelName:$o,backendName:"cpu",kernelFunc:lue};var mue=Ee(Oo,r=>Math.cosh(r)),g3={kernelName:Oo,backendName:"cpu",kernelFunc:mue};function cue(r){let{inputs:t,backend:e,attrs:n}=r,{image:o,boxes:s,boxInd:a}=t,{cropSize:i,method:p,extrapolationValue:u}=n,[l,m,c,d]=o.shape,f=s.shape[0],[h,g]=i,b=Ce([f,h,g,d],"float32"),x=e.data.get(s.dataId).values,T=e.data.get(a.dataId).values,C=e.data.get(o.dataId).values,k=y.computeStrides(o.shape),w=y.computeStrides(b.shape);for(let _=0;_<f;_++){let P=_*4,M=x[P],R=x[P+1],$=x[P+2],G=x[P+3],W=T[_];if(W>=l)continue;let U=h>1?($-M)*(m-1)/(h-1):0,V=g>1?(G-R)*(c-1)/(g-1):0;for(let K=0;K<h;K++){let q=h>1?M*(m-1)+K*U:.5*(M+$)*(m-1);if(q<0||q>m-1){for(let j=0;j<g;j++)for(let te=0;te<d;te++){let se=te+j*w[2]+K*w[1]+_*w[0];b.values[se]=u}continue}if(p==="bilinear"){let j=Math.floor(q),te=Math.ceil(q),se=q-j;for(let ie=0;ie<g;ie++){let pe=g>1?R*(c-1)+ie*V:.5*(R+G)*(c-1);if(pe<0||pe>c-1){for(let Te=0;Te<d;Te++){let Ae=Te+ie*w[2]+K*w[1]+_*w[0];b.values[Ae]=u}continue}let ae=Math.floor(pe),le=Math.ceil(pe),fe=pe-ae;for(let Te=0;Te<d;Te++){let Ae=Te+ae*k[2]+j*k[1]+W*k[0],$e=C[Ae];Ae=Te+le*k[2]+j*k[1]+W*k[0];let Le=C[Ae];Ae=Te+ae*k[2]+te*k[1]+W*k[0];let Ze=C[Ae];Ae=Te+le*k[2]+te*k[1]+W*k[0];let ee=C[Ae],bt=$e+(Le-$e)*fe,St=Ze+(ee-Ze)*fe;Ae=Te+ie*w[2]+K*w[1]+_*w[0],b.values[Ae]=bt+(St-bt)*se}}}else for(let j=0;j<g;++j){let te=g>1?R*(c-1)+j*V:.5*(R+G)*(c-1);if(te<0||te>c-1){for(let pe=0;pe<d;pe++){let ae=pe+j*w[2]+K*w[1]+_*w[0];b.values[ae]=u}continue}let se=Math.round(te),ie=Math.round(q);for(let pe=0;pe<d;pe++){let ae=pe+se*k[2]+ie*k[1]+W*k[0],le=pe+j*w[2]+K*w[1]+_*w[0];b.values[le]=C[ae]}}}}return e.makeTensorInfo(b.shape,b.dtype,b.values)}var b3={kernelName:Ya,backendName:"cpu",kernelFunc:cue};function due(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,exclusive:a,reverse:i}=n;oe(o,"cumprod");let p=I.getAxesPermutation([s],o.shape.length),u=o;p!=null&&(u=Yt({inputs:{x:o},backend:e,attrs:{perm:p}}));let l=I.getInnerMostAxes(1,o.shape.length)[0];if(l!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${l}`);let m=At(u.dtype,"int32"),c=y.makeOnesTypedArray(y.sizeFromShape(u.shape),m),d=e.data.get(u.dataId).values,f=u.shape[u.shape.length-1],h=i?(b,x)=>b+f-x-1:(b,x)=>b+x;for(let b=0;b<d.length;b+=f)for(let x=0;x<f;x++){let T=h(b,x);if(x===0)c[T]=a?1:d[T];else{let C=h(b,x-1);c[T]=a?d[C]*c[C]:d[T]*c[C]}}let g=e.makeTensorInfo(u.shape,m,c);if(p!=null){let b=I.getUndoAxesPermutation(p),x=Yt({inputs:{x:g},backend:e,attrs:{perm:b}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(u),x}return g}var y3={kernelName:Xa,backendName:"cpu",kernelFunc:due};function fue(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,exclusive:a,reverse:i}=n;oe(o,"cumsum");let p=I.getAxesPermutation([s],o.shape.length),u=o;p!=null&&(u=Yt({inputs:{x:o},backend:e,attrs:{perm:p}}));let l=I.getInnerMostAxes(1,o.shape.length)[0];if(l!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${l}`);let m=At(u.dtype,"int32"),c=y.makeZerosTypedArray(y.sizeFromShape(u.shape),m),d=e.data.get(u.dataId).values,f=u.shape[u.shape.length-1],h=i?(b,x)=>b+f-x-1:(b,x)=>b+x;for(let b=0;b<d.length;b+=f)for(let x=0;x<f;x++){let T=h(b,x);if(x===0)c[T]=a?0:d[T];else{let C=h(b,x-1);c[T]=a?d[C]+c[C]:d[T]+c[C]}}let g=e.makeTensorInfo(u.shape,m,c);if(p!=null){let b=I.getUndoAxesPermutation(p),x=Yt({inputs:{x:g},backend:e,attrs:{perm:b}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(u),x}return g}var x3={kernelName:zo,backendName:"cpu",kernelFunc:fue};function hue(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,weights:s}=t,{size:a,binaryOutput:i}=n;if(o.shape.length===1){let p=e.data.get(o.dataId).values,u=e.data.get(s.dataId).values,l=vf(p,u,s.dtype,s.shape,a);return e.makeTensorInfo([a],s.dtype,l)}else if(o.shape.length===2){let p=e.bufferSync(o),u=e.bufferSync(s),l=DT(p,u,a,i);return e.makeTensorInfo(l.shape,s.dtype,l.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}var T3={kernelName:eu,backendName:"cpu",kernelFunc:hue};function gue(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{blockSize:s,dataFormat:a}=n;y.assert(a==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${a}`);let i=o.shape[0],p=o.shape[1],u=o.shape[2],l=o.shape[3],m=p*s,c=u*s,d=l/(s*s),f=e.data.get(o.dataId).values,h=new Float32Array(i*m*c*d),g=0;for(let b=0;b<i;++b)for(let x=0;x<m;++x){let T=Math.floor(x/s),C=x%s;for(let k=0;k<c;++k){let w=Math.floor(k/s),_=k%s,P=(C*s+_)*d;for(let M=0;M<d;++M){let $=M+P+l*(w+u*(T+p*b));h[g++]=f[$]}}}return e.makeTensorInfo([i,m,c,d],o.dtype,h)}var C3={kernelName:Za,backendName:"cpu",kernelFunc:gue};function k0(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s}=t,{strides:a,pad:i,dilations:p,dimRoundingMode:u}=n;oe([o,s],"depthwiseConv2DNative");let l=y.computeStrides(o.shape),m=y.computeStrides(s.shape),c=p;c==null&&(c=[1,1]),y.assert(I.eitherStridesOrDilationsAreOne(a,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);let d=I.computeConv2DInfo(o.shape,s.shape,a,c,i,u,!0),{filterHeight:f,filterWidth:h,dilationHeight:g,dilationWidth:b,padInfo:x}=d,T=x.left,C=x.top,k=d.outChannels/d.inChannels,w=new ft(d.outShape,o.dtype),_=e.data.get(o.dataId).values,P=e.data.get(s.dataId).values,M=w.values;for(let R=0;R<d.batchSize;++R){let $=R*l[0],G=R*w.strides[0];for(let W=0;W<d.outHeight;++W){let U=G+W*w.strides[1],V=W*d.strideHeight-C;for(let K=0;K<f;++K){let q=V+K*g;if(q<0||q>=d.inHeight)continue;let j=K*m[0],te=$+q*l[1];for(let se=0;se<d.outWidth;++se){let ie=U+se*w.strides[2],pe=se*d.strideWidth-T;for(let ae=0;ae<h;++ae){let le=pe+ae*b;if(le<0||le>=d.inWidth)continue;let fe=j+ae*m[1],Te=te+le*d.inChannels,Ae=ie,$e=fe;for(let Le=0;Le<d.inChannels;++Le){let Ze=_[Te+Le];for(let ee=0;ee<k;++ee)M[Ae+ee]+=Ze*P[$e+ee];Ae+=k,$e+=k}}}}}}return e.makeTensorInfo(w.shape,w.dtype,w.values)}var I3={kernelName:Go,backendName:"cpu",kernelFunc:k0};function bue(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,dy:s}=t,{strides:a,dilations:i,pad:p,dimRoundingMode:u,filterShape:l}=n;oe([o,s],"depthwiseConv2dNativeBackpropFilter");let m=I.computeConv2DInfo(o.shape,l,a,i,p,u,!0),{strideHeight:c,strideWidth:d,filterHeight:f,filterWidth:h}=m,g=new ft(m.filterShape,"float32"),b=m.padInfo.left,x=m.padInfo.top,T=m.outChannels/m.inChannels,C=e.data.get(o.dataId).values,k=new ft(o.shape,o.dtype,C),w=e.data.get(s.dataId).values,_=new ft(s.shape,s.dtype,w);for(let P=0;P<f;++P){let M=Math.max(0,Math.ceil((x-P)/c)),R=Math.min(m.outHeight,(m.inHeight+x-P)/c);for(let $=0;$<h;++$){let G=Math.max(0,Math.ceil((b-$)/d)),W=Math.min(m.outWidth,(m.inWidth+b-$)/d);for(let U=0;U<m.outChannels;++U){let V=Math.trunc(U/T),K=U%T,q=0;for(let j=0;j<m.batchSize;++j)for(let te=M;te<R;++te){let se=P+te*c-x;for(let ie=G;ie<W;++ie){let pe=$+ie*d-b;q+=k.get(j,se,pe,V)*_.get(j,te,ie,U)}}g.set(q,P,$,V,K)}}}return e.makeTensorInfo(g.shape,g.dtype,g.values)}var k3={kernelName:Ip,backendName:"cpu",kernelFunc:bue};function yue(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,filter:s}=t,{strides:a,dilations:i,pad:p,dimRoundingMode:u,inputShape:l}=n;oe([o,s],"depthwiseConv2DNativeBackpropInput");let m=y.computeStrides(o.shape),c=y.computeStrides(s.shape),d=I.computeConv2DInfo(l,s.shape,a,i,p,u,!0),f=new ft(d.inShape,"float32"),h=f.values,[g,b,x]=f.strides,T=e.data.get(o.dataId).values,[C,k,w]=m,_=e.data.get(s.dataId).values,[P,M,R]=c,{batchSize:$,filterHeight:G,filterWidth:W,inChannels:U,inHeight:V,inWidth:K,outChannels:q,outHeight:j,outWidth:te,strideHeight:se,strideWidth:ie}=d,pe=G-1-d.padInfo.top,ae=W-1-d.padInfo.left,le=q/U;for(let fe=0;fe<$;++fe)for(let Te=0;Te<U;++Te)for(let Ae=0;Ae<V;++Ae){let $e=Ae-pe,Le=Math.max(0,Math.ceil($e/se)),Ze=Math.min(j,(G+$e)/se);for(let ee=0;ee<K;++ee){let bt=ee-ae,St=Math.max(0,Math.ceil(bt/ie)),it=Math.min(te,(W+bt)/ie),wt=0;for(let Tt=Le;Tt<Ze;++Tt){let Bt=Tt*se-$e;for(let $t=St;$t<it;++$t){let Vn=$t*ie-bt,gr=C*fe+k*Tt+w*$t,bo=P*(G-1-Bt)+M*(W-1-Vn)+R*Te;for(let Vr=0;Vr<le;++Vr){let or=Te*le+Vr,Hr=T[gr+or],qr=_[bo+Vr];wt+=Hr*qr}}}h[g*fe+b*Ae+x*ee+Te]=wt}}return e.makeTensorInfo(f.shape,f.dtype,f.values)}var v3={kernelName:kp,backendName:"cpu",kernelFunc:yue};function xue(r){let{inputs:t,backend:e}=r,{x:n}=t,o=y.sizeFromShape(n.shape),s=e.data.get(n.dataId).values,a=Ce([o,o],n.dtype),i=a.values;for(let u=0;u<s.length;u++)i[u*o+u]=s[u];let p=[...n.shape,...n.shape];return e.makeTensorInfo(p,a.dtype,a.values)}var S3={kernelName:tu,backendName:"cpu",kernelFunc:xue};var w3={kernelName:Wo,backendName:"cpu",kernelFunc:({inputs:r,backend:t,attrs:e})=>{let{x:n,filter:o}=r,{strides:s,pad:a,dilations:i}=e,p=t,u=p.data.get(n.dataId).values,l=n.shape.length,m=p.data.get(o.dataId).values,c=o.shape.length,{batchSize:d,inHeight:f,inWidth:h,inChannels:g,outHeight:b,outWidth:x,padInfo:T,strideHeight:C,strideWidth:k,filterHeight:w,filterWidth:_,dilationHeight:P,dilationWidth:M,outShape:R}=I.computeDilation2DInfo(n.shape,o.shape,s,a,"NHWC",i),$=y.sizeFromShape(R),G=R.length,W=y.getArrayFromDType(n.dtype,$);for(let V=0;V<d;++V)for(let K=0;K<b;++K){let q=K*C-T.top;for(let j=0;j<x;++j){let te=j*k-T.left;for(let se=0;se<g;++se){let ie=Number.MIN_SAFE_INTEGER;for(let ae=0;ae<w;++ae){let le=q+ae*P;if(le>=0&&le<f)for(let fe=0;fe<_;++fe){let Te=te+fe*M;if(Te>=0&&Te<h){let Ae=y.locToIndex([V,le,Te,se],l,y.computeStrides(n.shape)),$e=y.locToIndex([ae,fe,se],c,y.computeStrides(o.shape)),Le=u[Ae]+m[$e];Le>ie&&(ie=Le)}}}let pe=y.locToIndex([V,K,j,se],G,y.computeStrides(R));W[pe]=ie}}}return{dataId:p.write(y.toTypedArray(W,n.dtype),R,n.dtype),shape:R,dtype:n.dtype}}};var A3={kernelName:nu,backendName:"cpu",kernelFunc:({inputs:r,backend:t,attrs:e})=>{let{x:n,filter:o,dy:s}=r,{strides:a,pad:i,dilations:p}=e,u=t,l=y.toNestedArray(n.shape,u.data.get(n.dataId).values),m=y.toNestedArray(o.shape,u.data.get(o.dataId).values),{batchSize:c,inHeight:d,inWidth:f,inChannels:h,outHeight:g,outWidth:b,padInfo:x,strideHeight:T,strideWidth:C,filterHeight:k,filterWidth:w,dilationHeight:_,dilationWidth:P,outShape:M}=I.computeDilation2DInfo(n.shape,o.shape,a,i,"NHWC",p);y.assert(s.rank===M.length,()=>`Error in ${nu}, dy must have the same rank as output ${M.length}, but got ${s.rank}`);let R=y.toNestedArray(M,u.data.get(s.dataId).values),$=y.makeZerosNestedTypedArray(o.shape,o.dtype);for(let W=0;W<c;++W)for(let U=0;U<g;++U){let V=U*T-x.top;for(let K=0;K<b;++K){let q=K*C-x.left;for(let j=0;j<h;++j){let te=Number.MIN_SAFE_INTEGER,se=0,ie=0;for(let pe=0;pe<k;++pe){let ae=V+pe*_;if(ae>=0&&ae<d)for(let le=0;le<w;++le){let fe=q+le*P;if(fe>=0&&fe<f){let Te=l[W][ae][fe][j]+m[pe][le][j];Te>te&&(te=Te,se=pe,ie=le)}}}$[se][ie][j]+=R[W][U][K][j]}}}return{dataId:u.write(y.toTypedArray($,n.dtype),o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}};var N3={kernelName:ru,backendName:"cpu",kernelFunc:({inputs:r,backend:t,attrs:e})=>{let{x:n,filter:o,dy:s}=r,{strides:a,pad:i,dilations:p}=e,u=t,l=y.toNestedArray(n.shape,u.data.get(n.dataId).values),m=y.toNestedArray(o.shape,u.data.get(o.dataId).values),{batchSize:c,inHeight:d,inWidth:f,inChannels:h,outHeight:g,outWidth:b,padInfo:x,strideHeight:T,strideWidth:C,filterHeight:k,filterWidth:w,dilationHeight:_,dilationWidth:P,outShape:M}=I.computeDilation2DInfo(n.shape,o.shape,a,i,"NHWC",p);y.assert(s.rank===M.length,()=>`Error in ${ru}, dy must have the same rank as output ${M.length}, but got ${s.rank}`);let R=y.toNestedArray(M,u.data.get(s.dataId).values),$=y.makeZerosNestedTypedArray(n.shape,n.dtype);for(let W=0;W<c;++W)for(let U=0;U<g;++U){let V=U*T-x.top;for(let K=0;K<b;++K){let q=K*C-x.left;for(let j=0;j<h;++j){let te=Number.MIN_SAFE_INTEGER,se=V<0?0:V,ie=q<0?0:q;for(let pe=0;pe<k;++pe){let ae=V+pe*_;if(ae>=0&&ae<d)for(let le=0;le<w;++le){let fe=q+le*P;if(fe>=0&&fe<f){let Te=l[W][ae][fe][j]+m[pe][le][j];Te>te&&(te=Te,se=ae,ie=fe)}}}$[W][se][ie][j]+=R[W][U][K][j]}}}return{dataId:u.write(y.toTypedArray($,n.dtype),n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};function Tue(r){let{inputs:t,backend:e,attrs:n}=r,{image:o}=t,{canvas:s,options:a}=n,{contextOptions:i,imageOptions:p}=a||{},u=p?.alpha||1,l=i?.contextType||"2d";if(l!=="2d")throw new Error(`Context type ${i.contextType} is not supported by the CPU backend.`);let m=s.getContext(l,i?.contextAttributes||{});if(m==null)throw new Error(`Could not get the context with ${l} type.`);let[c,d]=o.shape.slice(0,2),f=o.shape.length===2?1:o.shape[2],h=e.data.get(o.dataId).values,g=o.dtype==="float32"?255:1,b=new Uint8ClampedArray(d*c*4);for(let T=0;T<c*d;++T){let C=[0,0,0,255*u];for(let w=0;w<f;w++){let _=h[T*f+w];if(o.dtype==="float32"){if(_<0||_>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${_}.`)}else if(o.dtype==="int32"&&(_<0||_>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${_}.`);f===1?(C[0]=_*g,C[1]=_*g,C[2]=_*g):C[w]=_*g}let k=T*4;b[k+0]=Math.round(C[0]),b[k+1]=Math.round(C[1]),b[k+2]=Math.round(C[2]),b[k+3]=Math.round(C[3])}s.width=d,s.height=c;let x=new ImageData(b,d,c);return m.putImageData(x,0,0),o}var D3={kernelName:xh,backendName:"cpu",kernelFunc:Tue};function ap(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:a}=n;oe(o,"sum");let i;o.dtype==="bool"?i=Ea({inputs:{x:o},backend:e,attrs:{dtype:"int32"}}):i=nn({inputs:{x:o},backend:e});let p=i.shape.length,u=y.parseAxisParam(s,i.shape),l=I.getAxesPermutation(u,p),m=u,c=i;l!=null&&(c=Yt({inputs:{x:i},backend:e,attrs:{perm:l}}),m=I.getInnerMostAxes(m.length,p)),I.assertAxesAreInnerMostDims("sum",m,c.shape.length);let[d,f]=I.computeOutAndReduceShapes(c.shape,m),h=I.upcastType(c.dtype,"int32"),g=If(e,d,h),b=y.sizeFromShape(f),x=e.data.get(g.dataId).values,T=e.data.get(c.dataId).values;for(let C=0;C<x.length;++C){let k=C*b,w=0;for(let _=0;_<b;++_)w+=T[k+_];x[C]=w}if(a){let C=I.expandShapeToKeepDim(g.shape,u),k=g;g=ot({inputs:{x:g},backend:e,attrs:{shape:C}}),e.disposeIntermediateTensorInfo(k)}return e.disposeIntermediateTensorInfo(i),l!=null&&e.disposeIntermediateTensorInfo(c),g}var _3={kernelName:Fs,backendName:"cpu",kernelFunc:ap};function Cue(r){let{inputs:t,backend:e,attrs:n}=r,{equation:o}=n,s=t,{allDims:a,summedDims:i,idDims:p}=I.decodeEinsumEquation(o,s.length);I.checkEinsumDimSizes(a.length,p,s);let{path:u,steps:l}=I.getEinsumComputePath(i,p),m=l.length,c=null,d=a.length,f=[];for(let h=0;h<m;++h){for(let g of l[h]){let{permutationIndices:b,expandDims:x}=I.getEinsumPermutation(d,p[g]),T;I.isIdentityPermutation(b)?T=s[g]:(T=Yt({inputs:{x:s[g]},backend:e,attrs:{perm:b}}),f.push(T));let C=T.shape.slice();for(let k=0;k<x.length;++k)C.splice(x[k],0,1);y.arraysEqual(T.shape,C)||(T=ot({inputs:{x:T},backend:e,attrs:{shape:C}}),f.push(T)),c===null?c=T:(c=Cm({inputs:{a:T,b:c},backend:e}),f.push(c))}h<m-1&&(u[h]>=0&&(c=ap({inputs:{x:c},backend:e,attrs:{axis:u[h]-(a.length-d),keepDims:!1}}),f.push(c)),d--)}for(let h of f)h!==c&&e.disposeIntermediateTensorInfo(h);return c}var M3={kernelName:vp,backendName:"cpu",kernelFunc:Cue};function Iue(r){let{inputs:t,backend:e}=r,{dy:n,y:o}=t;oe([n,o],"eluGrad");let s=new Float32Array(y.sizeFromShape(o.shape)),a=e.data.get(o.dataId).values,i=e.data.get(n.dataId).values;for(let p=0;p<a.length;++p){let u=a[p];u>=0?s[p]=i[p]:s[p]=i[p]*(u+1)}return e.makeTensorInfo(o.shape,"float32",s)}var P3={kernelName:Qa,backendName:"cpu",kernelFunc:Iue};var kue=I.ERF_P,vue=I.ERF_A1,Sue=I.ERF_A2,wue=I.ERF_A3,Aue=I.ERF_A4,Nue=I.ERF_A5,Due=Ee(Vo,r=>{let t=Math.sign(r),e=Math.abs(r),n=1/(1+kue*e);return t*(1-((((Nue*n+Aue)*n+wue)*n+Sue)*n+vue)*n*Math.exp(-e*e))}),R3={kernelName:Vo,backendName:"cpu",kernelFunc:Due};function _f(r){let{inputs:t,backend:e,attrs:n}=r,{input:o}=t,{dim:s}=n,a=o.shape.length,i=o.shape.slice(),p=s;return s<0&&(y.assert(-(a+1)<=s,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),p=a+s+1),i.splice(p,0,1),ot({inputs:{x:o},backend:e,attrs:{shape:i}})}var F3={kernelName:ta,backendName:"cpu",kernelFunc:_f};var _ue=nt((r,t)=>r/t),Tg=pt(Uo,_ue),Cg={kernelName:Uo,backendName:"cpu",kernelFunc:Tg};function KT(r,t,e){let n=r.shape,o=n[0],s=n[1],a=e.data.get(r.dataId),i=a.complexTensorInfos.real,p=a.complexTensorInfos.imag,u=[o,s],l=y.sizeFromShape(u),m=y.getTypedArrayFromDType("float32",l),c=y.getTypedArrayFromDType("float32",l);for(let g=0;g<o;g++){let b=Ba({inputs:{x:i},backend:e,attrs:{begin:[g,0],size:[1,s]}}),x=Ba({inputs:{x:p},backend:e,attrs:{begin:[g,0],size:[1,s]}}),T=Nr({inputs:{real:b,imag:x},backend:e}),{real:C,imag:k}=Mue(T,t,e),w=I.mergeRealAndImagArrays(C,k);for(let _=0;_<s;_++){let P=I.getComplexWithIndex(w,_);m[g*s+_]=P.real,c[g*s+_]=P.imag}e.disposeIntermediateTensorInfo(b),e.disposeIntermediateTensorInfo(x),e.disposeIntermediateTensorInfo(T)}let d=e.makeTensorInfo(u,"float32",m),f=e.makeTensorInfo(u,"float32",c),h=Nr({inputs:{real:d,imag:f},backend:e});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),h}function Mue(r,t,e){let n=y.sizeFromShape(r.shape),o=e.data.get(r.dataId),s=e.data.get(o.complexTensorInfos.real.dataId).values,a=e.data.get(o.complexTensorInfos.imag.dataId).values;if(Pue(n)){let i=v0(s,a,n,t,e),p=[r.shape[0],r.shape[1]];if(t){let u=e.makeTensorInfo(p,"float32",i.real),l=e.makeTensorInfo(p,"float32",i.imag),m=e.makeTensorInfo([],"float32",y.createScalarValue(n,"float32")),c=nn({inputs:{x:m},backend:e}),d=Cg.kernelFunc({inputs:{a:u,b:m},backend:e}),f=Cg.kernelFunc({inputs:{a:l,b:c},backend:e}),h=e.data.get(d.dataId).values,g=e.data.get(f.dataId).values;return e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(l),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),{real:h,imag:g}}return i}else{let i=I.mergeRealAndImagArrays(s,a),p=Rue(i,n,t);return I.splitRealAndImagArrays(p)}}function Pue(r){return(r&r-1)===0}function v0(r,t,e,n,o){if(e===1)return{real:r,imag:t};let s=I.mergeRealAndImagArrays(r,t),a=e/2,i=I.complexWithEvenIndex(s),p=i.real,u=i.imag,l=[p.length],m=o.makeTensorInfo(l,"float32",p),c=o.makeTensorInfo(l,"float32",u),d=Nr({inputs:{real:m,imag:c},backend:o}),f=I.complexWithOddIndex(s),h=f.real,g=f.imag,b=[h.length],x=o.makeTensorInfo(b,"float32",h),T=o.makeTensorInfo(b,"float32",g),C=Nr({inputs:{real:x,imag:T},backend:o}),k=v0(p,u,a,n,o),w=k.real,_=k.imag,P=[w.length],M=o.makeTensorInfo(P,"float32",w),R=o.makeTensorInfo(P,"float32",_),$=Nr({inputs:{real:M,imag:R},backend:o}),G=v0(h,g,a,n,o),W=G.real,U=G.imag,V=[W.length],K=o.makeTensorInfo(V,"float32",W),q=o.makeTensorInfo(V,"float32",U),j=Nr({inputs:{real:K,imag:q},backend:o}),te=I.exponents(e,n),se=[te.real.length],ie=o.makeTensorInfo(se,"float32",te.real),pe=o.makeTensorInfo(se,"float32",te.imag),ae=Nr({inputs:{real:ie,imag:pe},backend:o}),le=Cm({inputs:{a:ae,b:j},backend:o}),fe=wu({inputs:{a:$,b:le},backend:o}),Te=yg({inputs:{a:$,b:le},backend:o}),Ae=Fa({inputs:{input:fe},backend:o}),$e=Fa({inputs:{input:Te},backend:o}),Le=Au({inputs:{input:fe},backend:o}),Ze=Au({inputs:{input:Te},backend:o}),ee=sl({inputs:[Ae,$e],backend:o,attrs:{axis:0}}),bt=sl({inputs:[Le,Ze],backend:o,attrs:{axis:0}}),St=o.data.get(ee.dataId).values,it=o.data.get(bt.dataId).values;return o.disposeIntermediateTensorInfo(m),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(d),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(T),o.disposeIntermediateTensorInfo(C),o.disposeIntermediateTensorInfo(M),o.disposeIntermediateTensorInfo(R),o.disposeIntermediateTensorInfo($),o.disposeIntermediateTensorInfo(K),o.disposeIntermediateTensorInfo(q),o.disposeIntermediateTensorInfo(j),o.disposeIntermediateTensorInfo(ie),o.disposeIntermediateTensorInfo(pe),o.disposeIntermediateTensorInfo(ae),o.disposeIntermediateTensorInfo(le),o.disposeIntermediateTensorInfo(fe),o.disposeIntermediateTensorInfo(Te),o.disposeIntermediateTensorInfo(Ae),o.disposeIntermediateTensorInfo(Le),o.disposeIntermediateTensorInfo($e),o.disposeIntermediateTensorInfo(Ze),o.disposeIntermediateTensorInfo(ee),o.disposeIntermediateTensorInfo(bt),{real:St,imag:it}}function Rue(r,t,e){let n=new Float32Array(t*2);for(let o=0;o<t;o++){let s=0,a=0;for(let i=0;i<t;i++){let p=I.exponent(o*i,t,e),u=I.getComplexWithIndex(r,i);s+=u.real*p.real-u.imag*p.imag,a+=u.real*p.imag+u.imag*p.real}e&&(s/=t,a/=t),I.assignToTypedArray(n,s,a,o)}return n}function Fue(r){let{inputs:t,backend:e}=r,{input:n}=t,o=y.sizeFromShape(n.shape),s=n.shape[n.shape.length-1],a=o/s,i=ot({inputs:{x:n},backend:e,attrs:{shape:[a,s]}}),p=KT(i,!1,e),u=ot({inputs:{x:p},backend:e,attrs:{shape:n.shape}});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(p),u}var E3={kernelName:Sp,backendName:"cpu",kernelFunc:Fue};function Ig(r){let{backend:t,attrs:e}=r,{shape:n,value:o,dtype:s}=e,a=s||y.inferDtype(o),i=y.getArrayFromDType(a,y.sizeFromShape(n));return Eue(i,o,a),t.makeTensorInfo(n,a,i)}var L3={kernelName:ou,backendName:"cpu",kernelFunc:Ig};function Eue(r,t,e){r.fill(t)}var B3={kernelName:ei,backendName:"cpu",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{image:n}=r,o=e,s=y.getTypedArrayFromDType(n.dtype,y.sizeFromShape(n.shape)),[a,i,p,u]=n.shape,l=o.data.get(n.dataId).values;for(let c=0;c<a;c++){let d=c*p*i*u;for(let f=0;f<i;f++){let h=f*(p*u);for(let g=0;g<p;g++){let b=g*u;for(let x=0;x<u;x++){let T=Math.round(p-g-1),C=d+h+b+x,k=l[C];if(T>=0&&T<p){let w=T*u,_=d+h+w+x;k=l[_]}s[C]=k}}}}return{dataId:o.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};function Lue(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=t,{strides:p,pad:u,dataFormat:l,dilations:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=n,h=I0({inputs:{x:o,filter:s},backend:e,attrs:{strides:p,pad:u,dataFormat:l,dilations:m,dimRoundingMode:c}});if(a){let g=h;if(l==="NCHW"&&a.shape.length===1&&a.shape[0]!==1){let b=ot({inputs:{x:a},backend:e,attrs:{shape:[a.shape[0],1,1]}});h=wu({inputs:{a:h,b},backend:e}),e.disposeIntermediateTensorInfo(b)}else h=wu({inputs:{a:h,b:a},backend:e});e.disposeIntermediateTensorInfo(g)}if(d){let g=h;if(l==="NCHW"&&d==="prelu"&&i.shape.length===1&&i.shape[0]!==1){let b=ot({inputs:{x:i},backend:e,attrs:{shape:[i.shape[0],1,1]}});h=Nm(e,h,d,b,f),e.disposeIntermediateTensorInfo(b)}else h=Nm(e,h,d,i,f);e.disposeIntermediateTensorInfo(g)}return h}var $3={kernelName:ha,backendName:"cpu",kernelFunc:Lue};function Bue(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=t,{strides:p,pad:u,dataFormat:l,dilations:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=n,h=k0({inputs:{x:o,filter:s},backend:e,attrs:{strides:p,pad:u,dataFormat:l,dilations:m,dimRoundingMode:c}});if(a){let g=h;h=wu({inputs:{a:h,b:a},backend:e}),e.disposeIntermediateTensorInfo(g)}if(d){let g=h;h=Nm(e,h,d,i,f),e.disposeIntermediateTensorInfo(g)}return h}var O3={kernelName:ga,backendName:"cpu",kernelFunc:Bue};function $ue(r){let{inputs:t,backend:e}=r,{params:n,indices:o}=t,s=y.sizeFromShape(n.shape),a=o.shape,i=a[a.length-1],[p,u,l,m]=I.prepareAndValidate(n,o);if(u===0)return e.makeTensorInfo(p,n.dtype,[]);let c=e.data.get(o.dataId).values,d=e.bufferSync(n),f=_T(c,d,n.dtype,u,i,l,m,n.shape,s);return e.makeTensorInfo(p,n.dtype,f.values)}var z3={kernelName:ti,backendName:"cpu",kernelFunc:$ue};function Oue(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,indices:s}=t,{axis:a,batchDims:i}=n;oe([o,s],"gatherV2");let p=y.parseAxisParam(a,o.shape)[0],u=e.data.get(s.dataId).values,l=o.shape[p];for(let C=0;C<u.length;++C){let k=u[C];y.assert(k<=l-1&&k>=0,()=>`GatherV2: the index value ${k} is not in [0, ${l-1}]`)}let m=i;i==null&&(m=0);let c=y.sizeFromShape(s.shape),d=I.segment_util.collectGatherOpShapeInfo(o,s,p,m),f=ot({inputs:{x:o},backend:e,attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]}}),h=ot({inputs:{x:s},backend:e,attrs:{shape:[d.batchSize,c/d.batchSize]}}),g=[d.batchSize,d.outerSize,c/d.batchSize,d.sliceSize],b=e.bufferSync(h),x=e.bufferSync(f),T=MT(x,b,g);return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(h),e.makeTensorInfo(d.outputShape,T.dtype,T.values)}var G3={kernelName:ra,backendName:"cpu",kernelFunc:Oue};function zue(r){let{inputs:t,backend:e}=r,{input:n}=t,o=y.sizeFromShape(n.shape),s=n.shape[n.shape.length-1],a=o/s,i=ot({inputs:{x:n},backend:e,attrs:{shape:[a,s]}}),p=KT(i,!0,e),u=ot({inputs:{x:p},backend:e,attrs:{shape:n.shape}});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(p),u}var W3={kernelName:wp,backendName:"cpu",kernelFunc:zue};var Gue=Ee(Qo,r=>Number.isFinite(r)?1:0,"bool"),U3={kernelName:Qo,backendName:"cpu",kernelFunc:Gue};var Wue=Ee(Jo,r=>Math.abs(r)===1/0?1:0,"bool"),K3={kernelName:Jo,backendName:"cpu",kernelFunc:Wue};var Uue=Ee(es,r=>Number.isNaN(r)?1:0,"bool"),V3={kernelName:es,backendName:"cpu",kernelFunc:Uue};function Kue(r){let{backend:t,attrs:e}=r,{start:n,stop:o,num:s}=e,a=PT(n,o,s);return t.makeTensorInfo([a.length],"float32",a)}var H3={kernelName:si,backendName:"cpu",kernelFunc:Kue};var Vue=Ee(ns,r=>Math.log1p(r)),q3={kernelName:ns,backendName:"cpu",kernelFunc:Vue};var Hue=nt((r,t)=>r&&t),que=pt(ai,Hue,null,"bool"),j3={kernelName:ai,backendName:"cpu",kernelFunc:que};var jue=Ee(ii,r=>r?0:1,"bool"),X3={kernelName:ii,backendName:"cpu",kernelFunc:jue};var Xue=nt((r,t)=>r||t),Yue=pt(ui,Xue,null,"bool"),Y3={kernelName:ui,backendName:"cpu",kernelFunc:Yue};function Zue(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{depthRadius:s,bias:a,alpha:i,beta:p}=n;oe(o,"LRN");let u=o.shape[3],l=u-1,m=e.data.get(o.dataId).values,c=y.sizeFromShape(o.shape),d=new Float32Array(c);function f(h){let g=h%u,b=h-g+Math.max(0,g-s),x=h-g+Math.min(g+s,l),T=0;for(;b<=x;b++){let C=m[b];T+=C*C}return T}for(let h=0;h<c;h++){let g=f(h),b=m[h]*Math.pow(a+i*g,-p);d[h]=b}return e.makeTensorInfo(o.shape,o.dtype,d)}var Z3={kernelName:os,backendName:"cpu",kernelFunc:Zue};function Que(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,y:s,dy:a}=t,{depthRadius:i,bias:p,alpha:u,beta:l}=n;oe(a,"LRNGrad");let m=y.sizeFromShape(a.shape),c=a.shape[3],d=e.data.get(a.dataId).values,f=e.data.get(o.dataId).values,h=e.data.get(s.dataId).values,g=new Float32Array(m),b=m;for(let x=0;x<b;x++){let T=x%c,C=x-T+Math.max(0,T-i),k=x-T+Math.min(c,T+i+1),w=0;for(let _=C;_<k;_++)w+=Math.pow(f[_],2);w=u*w+p;for(let _=C;_<k;_++){let P=-2*u*l*f[_]*h[x]/w;x===_&&(P+=Math.pow(w,-l)),P*=d[x],g[_]+=P}}return e.makeTensorInfo(a.shape,o.dtype,g)}var Q3={kernelName:pi,backendName:"cpu",kernelFunc:Que};function S0(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{reductionIndices:s,keepDims:a}=n,i=e,p=o.shape,u=p.length,l=y.parseAxisParam(s,p),m=l,c=I.getAxesPermutation(m,u),d=i.data.get(o.dataId).values;if(c!=null){let C=new Array(u);for(let k=0;k<C.length;k++)C[k]=p[c[k]];d=Sf(d,p,o.dtype,c,C),m=I.getInnerMostAxes(m.length,u),p=C}oe(o,"max"),I.assertAxesAreInnerMostDims("max",m,u);let[f,h]=I.computeOutAndReduceShapes(p,m),g=y.sizeFromShape(h),b=RT(d,g,f,o.dtype),x=i.write(b,f,o.dtype),T=f;return a&&(T=I.expandShapeToKeepDim(f,l)),{dataId:x,shape:T,dtype:o.dtype}}var J3={kernelName:ss,backendName:"cpu",kernelFunc:S0};function Jue(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t;oe(o,"maxPool");let{filterSize:s,strides:a,pad:i,dimRoundingMode:p}=n,u=1;y.assert(I.eitherStridesOrDilationsAreOne(a,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);let l=I.computePool2DInfo(o.shape,s,a,u,i,p),m;if(l.filterWidth===1&&l.filterHeight===1&&y.arraysEqual(l.inShape,l.outShape))m=nn({inputs:{x:o},backend:e});else{let c=e.data.get(o.dataId).values,d=y.computeStrides(o.shape),f=Df(c,o.shape,o.dtype,d,l,"max");m=e.makeTensorInfo(l.outShape,o.dtype,f.values)}return m}var eO={kernelName:is,backendName:"cpu",kernelFunc:Jue};function epe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{filterSize:s,strides:a,pad:i,dimRoundingMode:p,dataFormat:u}=n;oe(o,"maxPool3d");let l=I.computePool3DInfo(o.shape,s,a,1,i,p,u),m=e.data.get(o.dataId).values,c=UT(m,o.shape,o.dtype,y.computeStrides(o.shape),l,"max");return e.makeTensorInfo(c.shape,"float32",c.values)}var tO={kernelName:na,backendName:"cpu",kernelFunc:epe};function tpe(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,input:s}=t,{filterSize:a,strides:i,pad:p,dimRoundingMode:u}=n;oe([o,s],"maxPool3DGrad");let l=I.computePool3DInfo(s.shape,a,i,1,p,u),m=e.bufferSync(s),c=Y$(m,l),d=l.strideDepth,f=l.strideHeight,h=l.strideWidth,g=l.dilationDepth,b=l.dilationHeight,x=l.dilationWidth,T=l.effectiveFilterDepth,C=l.effectiveFilterHeight,k=l.effectiveFilterWidth,w=T-1-l.padInfo.front,_=k-1-l.padInfo.left,P=C-1-l.padInfo.top,M=Ce(s.shape,"float32"),R=e.bufferSync(o);for(let $=0;$<l.batchSize;++$)for(let G=0;G<l.inChannels;++G)for(let W=0;W<l.inDepth;++W)for(let U=0;U<l.inHeight;++U)for(let V=0;V<l.inWidth;++V){let K=W-w,q=U-P,j=V-_,te=0;for(let se=0;se<T;se+=g){let ie=(K+se)/d;if(!(ie<0||ie>=l.outDepth||Math.floor(ie)!==ie))for(let pe=0;pe<C;pe+=b){let ae=(q+pe)/f;if(!(ae<0||ae>=l.outHeight||Math.floor(ae)!==ae))for(let le=0;le<k;le+=x){let fe=(j+le)/h;if(fe<0||fe>=l.outWidth||Math.floor(fe)!==fe)continue;let Te=T*C*k-1-c.get($,ie,ae,fe,G),Ae=se*C*k+pe*k+le,$e=Te===Ae?1:0;if($e===0)continue;let Le=R.get($,ie,ae,fe,G);te+=Le*$e}}}M.set(te,$,W,U,V,G)}return e.makeTensorInfo(M.shape,M.dtype,M.values)}var rO={kernelName:au,backendName:"cpu",kernelFunc:tpe};function rpe(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,input:s,output:a}=t,i=s;oe([s,a],"maxPoolGrad");let{filterSize:p,strides:u,pad:l,dimRoundingMode:m}=n,c=I.computePool2DInfo(i.shape,p,u,1,l,m),d=e.data.get(i.dataId).values,f=Ce(c.outShape,i.dtype,WT(d,i.shape,i.dtype,c).values),h=c.strideHeight,g=c.strideWidth,b=c.dilationHeight,x=c.dilationWidth,T=c.effectiveFilterHeight,C=c.effectiveFilterWidth,k=C-1-c.padInfo.left,w=T-1-c.padInfo.top,_=Ce(i.shape,"float32"),P=e.data.get(o.dataId).values,M=Ce(o.shape,"float32",P);for(let R=0;R<c.batchSize;++R)for(let $=0;$<c.inChannels;++$)for(let G=0;G<c.inHeight;++G)for(let W=0;W<c.inWidth;++W){let U=G-w,V=W-k,K=0;for(let q=0;q<T;q+=b){let j=(U+q)/h;if(!(j<0||j>=c.outHeight||Math.floor(j)!==j))for(let te=0;te<C;te+=x){let se=(V+te)/g;if(se<0||se>=c.outWidth||Math.floor(se)!==se)continue;let ie=T*C-1-f.get(R,j,se,$),pe=q*C+te,ae=ie===pe?1:0;if(ae===0)continue;let le=M.get(R,j,se,$);K+=le*ae}}_.set(K,R,G,W,$)}return e.makeTensorInfo(_.shape,_.dtype,_.values)}var nO={kernelName:su,backendName:"cpu",kernelFunc:rpe};function oO(r,t,e,n,o){let s=y.computeStrides(t),a=Df(r,t,e,s,o,"max"),i=WT(r,t,e,o,!0,n);return[a.values,i.values]}var sO={kernelName:iu,backendName:"cpu",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{x:n}=r,{filterSize:o,strides:s,pad:a,includeBatchInIndex:i}=t,p=e;oe(n,"MaxPoolWithArgmax");let u=p.data.get(n.dataId).values,l=I.computePool2DInfo(n.shape,o,s,[1,1],a),[m,c]=oO(u,n.shape,n.dtype,i,l),d=p.write(m,l.outShape,n.dtype),f=p.write(c,l.outShape,n.dtype);return[{dataId:d,shape:l.outShape,dtype:n.dtype},{dataId:f,shape:l.outShape,dtype:"int32"}]}};function npe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:a}=n,i=y.parseAxisParam(s,o.shape),u=I.computeOutAndReduceShapes(o.shape,i)[1],l=y.sizeFromShape(u),m=[],c=e.makeTensorInfo([],"float32",new Float32Array([l]));m.push(c);let d=Ea({inputs:{x:o},backend:e,attrs:{dtype:"float32"}});m.push(d);let f=Tg({inputs:{a:d,b:c},backend:e});m.push(f);let h=ap({inputs:{x:f},backend:e,attrs:{axis:s,keepDims:a}});return m.forEach(g=>e.disposeIntermediateTensorInfo(g)),h}var aO={kernelName:us,backendName:"cpu",kernelFunc:npe};function ope(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:a}=n;oe(o,"min");let i=y.parseAxisParam(s,o.shape),p=i,u=I.getAxesPermutation(p,o.shape.length),l=o;u!=null&&(l=Yt({inputs:{x:o},backend:e,attrs:{perm:u}}),p=I.getInnerMostAxes(p.length,o.shape.length)),I.assertAxesAreInnerMostDims("min",p,l.shape.length);let[m,c]=I.computeOutAndReduceShapes(l.shape,p),d=y.sizeFromShape(c),f=y.makeZerosTypedArray(y.sizeFromShape(m),l.dtype),h=e.data.get(l.dataId).values;for(let b=0;b<f.length;++b){let x=b*d,T=h[x];for(let C=0;C<d;++C){let k=h[x+C];(Number.isNaN(k)||k<T)&&(T=k)}f[b]=T}u!=null&&e.disposeIntermediateTensorInfo(l);let g=e.makeTensorInfo(m,l.dtype,f);if(a){let b=I.expandShapeToKeepDim(m,i),x=ot({inputs:{x:g},backend:e,attrs:{shape:b}});return e.disposeIntermediateTensorInfo(g),x}return g}var iO={kernelName:ps,backendName:"cpu",kernelFunc:ope};function spe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{paddings:s,mode:a}=n;oe(o,"mirrorPad");let i=s.map((T,C)=>T[0]+o.shape[C]+T[1]),p=s.map(T=>T[0]),u=s.map((T,C)=>T[0]+o.shape[C]),l=a==="reflect"?0:1,m=e.data.get(o.dataId).values,c=o.shape.length,d=y.computeStrides(o.shape),f=y.sizeFromShape(i),h=i.length,g=y.computeStrides(i),b=y.getTypedArrayFromDType(o.dtype,f);for(let T=0;T<f;T++){let C=y.indexToLoc(T,h,g);for(let w=0;w<h;w++)C[w]<p[w]?C[w]=p[w]*2-C[w]-l:C[w]>=u[w]&&(C[w]=(u[w]-1)*2-C[w]+l);C=C.map((w,_)=>w-p[_]);let k=y.locToIndex(C,c,d);b[T]=m[k]}return{dataId:e.write(b,i,o.dtype),shape:i,dtype:o.dtype}}var uO={kernelName:ms,backendName:"cpu",kernelFunc:spe};var ape=nt((r,t)=>{let e=r%t;return r<0&&t<0||r>=0&&t>=0?e:(e+t)%t}),ipe=pt(cs,ape),pO={kernelName:cs,backendName:"cpu",kernelFunc:ipe};var mO=gl(Lh());function w0(r){let{inputs:t,backend:e,attrs:n}=r,{logits:o}=t,{dim:s}=n,a=o.shape.length,i=s;if(i===-1&&(i=a-1),i!==a-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a} and dim was ${i}`);let p=y.parseAxisParam([i],o.shape),u=S0({inputs:{x:o},backend:e,attrs:{reductionIndices:p,keepDims:!1}}),l=I.expandShapeToKeepDim(u.shape,p),m=ot({inputs:{x:u},backend:e,attrs:{shape:l}}),c=yg({inputs:{a:o,b:m},backend:e}),d=YD({inputs:{x:c},backend:e}),f=ap({inputs:{x:d},backend:e,attrs:{axis:p,keepDims:!1}}),h=ot({inputs:{x:f},backend:e,attrs:{shape:l}}),g=Tg({inputs:{a:d,b:h},backend:e});return e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(h),g}var lO={kernelName:Es,backendName:"cpu",kernelFunc:w0};function upe(r){let{inputs:t,backend:e,attrs:n}=r,{logits:o}=t,{numSamples:s,seed:a,normalized:i}=n;oe(o,"multinomial");let p=i?o:w0({inputs:{logits:o},backend:e,attrs:{dim:-1}}),u=p.shape[0],l=p.shape[1],m=e.data.get(p.dataId).values,c=[u,s],d=y.makeZerosTypedArray(y.sizeFromShape(c),"int32");for(let f=0;f<u;++f){let h=f*l,g=new Float32Array(l-1);g[0]=m[h];for(let T=1;T<g.length;++T)g[T]=g[T-1]+m[h+T];let b=mO.alea(a.toString()),x=f*s;for(let T=0;T<s;++T){let C=b();d[x+T]=g.length;for(let k=0;k<g.length;k++)if(C<g[k]){d[x+T]=k;break}}}return i||e.disposeIntermediateTensorInfo(p),e.makeTensorInfo(c,"int32",d)}var cO={kernelName:li,backendName:"cpu",kernelFunc:upe};var ppe=vr.nonMaxSuppressionV3Impl;function lpe(r){let{inputs:t,backend:e,attrs:n}=r,{boxes:o,scores:s}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:p}=n;oe(o,"NonMaxSuppression");let u=e.data.get(o.dataId).values,l=e.data.get(s.dataId).values,{selectedIndices:m}=ppe(u,l,a,i,p);return e.makeTensorInfo([m.length],"int32",new Int32Array(m))}var dO={kernelName:ci,backendName:"cpu",kernelFunc:lpe};var mpe=vr.nonMaxSuppressionV4Impl;function cpe(r){let{inputs:t,backend:e,attrs:n}=r,{boxes:o,scores:s}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:p,padToMaxOutputSize:u}=n;oe(o,"NonMaxSuppressionPadded");let l=e.data.get(o.dataId).values,m=e.data.get(s.dataId).values,{selectedIndices:c,validOutputs:d}=mpe(l,m,a,i,p,u);return[e.makeTensorInfo([c.length],"int32",new Int32Array(c)),e.makeTensorInfo([],"int32",new Int32Array([d]))]}var fO={kernelName:Ou,backendName:"cpu",kernelFunc:cpe};var dpe=vr.nonMaxSuppressionV5Impl;function fpe(r){let{inputs:t,backend:e,attrs:n}=r,{boxes:o,scores:s}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:p,softNmsSigma:u}=n;oe(o,"NonMaxSuppressionWithScore");let l=e.data.get(o.dataId).values,m=e.data.get(s.dataId).values,c=a,d=i,f=p,h=u,{selectedIndices:g,selectedScores:b}=dpe(l,m,c,d,f,h);return[e.makeTensorInfo([g.length],"int32",new Int32Array(g)),e.makeTensorInfo([b.length],"float32",new Float32Array(b))]}var hO={kernelName:di,backendName:"cpu",kernelFunc:fpe};function hpe(r){let{inputs:t,backend:e,attrs:n}=r,{indices:o}=t,{dtype:s,depth:a,onValue:i,offValue:p}=n;oe(o,"oneHot");let u=y.sizeFromShape(o.shape),l=new Float32Array(u*a);l.fill(p);let m=e.data.get(o.dataId).values;for(let c=0;c<u;++c)m[c]>=0&&m[c]<a&&(l[c*a+m[c]]=i);return e.makeTensorInfo([...o.shape,a],s,l)}var gO={kernelName:fs,backendName:"cpu",kernelFunc:hpe};function kg(r){let{inputs:t,backend:e}=r,{x:n}=t;if(n.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(n.dtype==="complex64"){let o=Fa({inputs:{input:n},backend:e}),s=kg({inputs:{x:o},backend:e}),a=Au({inputs:{input:n},backend:e}),i=kg({inputs:{x:a},backend:e}),p=Nr({inputs:{real:s,imag:i},backend:e});return e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(s),e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(i),p}else return Ig({backend:e,attrs:{shape:n.shape,value:0,dtype:n.dtype}})}var bO={kernelName:da,backendName:"cpu",kernelFunc:kg};function yO(r){let{inputs:t,backend:e}=r,{x:n}=t;if(n.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(n.dtype==="complex64"){let o=Fa({inputs:{input:n},backend:e}),s=yO({inputs:{x:o},backend:e}),a=Au({inputs:{input:n},backend:e}),i=kg({inputs:{x:a},backend:e}),p=Nr({inputs:{real:s,imag:i},backend:e});return e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(s),e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(i),p}else return Ig({backend:e,attrs:{shape:n.shape,value:1,dtype:n.dtype}})}var xO={kernelName:sa,backendName:"cpu",kernelFunc:yO};function A0(r){let{inputs:t,backend:e,attrs:n}=r,{axis:o}=n;if(t.length===1)return _f({inputs:{input:t[0]},backend:e,attrs:{dim:o}});let s=t[0].shape,a=t[0].dtype;t.forEach(l=>{y.assertShapesMatch(s,l.shape,"All tensors passed to stack must have matching shapes"),y.assert(a===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],p=t.map(l=>{let m=_f({inputs:{input:l},backend:e,attrs:{dim:o}});return i.push(m),m}),u=sl({inputs:p,backend:e,attrs:{axis:o}});return i.forEach(l=>e.disposeIntermediateTensorInfo(l)),u}var TO={kernelName:aa,backendName:"cpu",kernelFunc:A0};function gpe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{paddings:s,constantValue:a}=n;oe(o,"pad");let i=s.map((x,T)=>x[0]+o.shape[T]+x[1]),p=s.map(x=>x[0]),u=e.data.get(o.dataId).values,l=y.sizeFromShape(o.shape),m=o.shape.length,c=y.computeStrides(o.shape),d=y.sizeFromShape(i),f=i.length,h=y.computeStrides(i),g=y.getTypedArrayFromDType(o.dtype,d);a!==0&&g.fill(a);for(let x=0;x<l;x++){let C=y.indexToLoc(x,m,c).map((w,_)=>w+p[_]),k=y.locToIndex(C,f,h);g[k]=u[x]}return{dataId:e.write(g,i,o.dtype),shape:i,dtype:o.dtype}}var VT={kernelName:hs,backendName:"cpu",kernelFunc:gpe};var bpe=nt((r,t)=>Math.pow(r,t)),ype=pt(gs,bpe),CO={kernelName:gs,backendName:"cpu",kernelFunc:ype};function xpe(r){let{inputs:t,backend:e,attrs:n}=r,{paramsNestedSplits:o,paramsDenseValues:s,indices:a}=t,{outputRaggedRank:i}=n,p=o.map(b=>e.data.get(b.dataId).values),u=o.map(b=>b.shape),l=e.data.get(s.dataId).values,m=e.data.get(a.dataId).values,[c,d,f]=FT(p,u,l,s.shape,s.dtype,m,a.shape,i),h=c.map(b=>e.makeTensorInfo([b.length],"int32",b)),g=e.makeTensorInfo(f,s.dtype,d);return h.concat([g])}var IO={kernelName:nc,backendName:"cpu",kernelFunc:xpe};function Tpe(r){let{inputs:t,backend:e}=r,{starts:n,limits:o,deltas:s}=t,a=e.data.get(n.dataId).values,i=e.data.get(o.dataId).values,p=e.data.get(s.dataId).values,[u,l]=ET(a,n.shape,n.dtype,i,o.shape,p,s.shape),m=e.makeTensorInfo([u.length],"int32",u),c=e.makeTensorInfo([l.length],n.dtype,l);return[m,c]}var kO={kernelName:oc,backendName:"cpu",kernelFunc:Tpe};function Cpe(r){let{inputs:t,backend:e,attrs:n}=r,{shape:o,values:s,defaultValue:a,rowPartitionTensors:i}=t,{rowPartitionTypes:p}=n,u=e.data.get(o.dataId).values,l=e.data.get(s.dataId).values,m=e.data.get(a.dataId).values,c=i.map(g=>e.data.get(g.dataId).values),d=i.map(g=>g.shape),[f,h]=LT(u,o.shape,l,s.shape,s.dtype,m,a.shape,c,d,p);return e.makeTensorInfo(f,s.dtype,h)}var vO={kernelName:sc,backendName:"cpu",kernelFunc:Cpe};function Ipe(r){let{backend:t,attrs:e}=r,{start:n,stop:o,dtype:s,step:a}=e,i=Im(n,o,a,s);return t.makeTensorInfo([i.length],s,i)}var SO={kernelName:uu,backendName:"cpu",kernelFunc:Ipe};var kpe=Ee(xs,r=>1/r),wO={kernelName:xs,backendName:"cpu",kernelFunc:kpe};function vpe(r){let{inputs:t,backend:e,attrs:n}=r,{images:o}=t,{alignCorners:s,halfPixelCenters:a,size:i}=n;oe(o,"resizeBilinear");let p=y.computeStrides(o.shape),[u,l]=i,[m,c,d,f]=o.shape,h=e.data.get(o.dataId).values,g=new Float32Array(y.sizeFromShape([m,u,l,f])),b=[s&&u>1?c-1:c,s&&l>1?d-1:d],x=[s&&u>1?u-1:u,s&&l>1?l-1:l],T=0,C=b[0]/x[0],k=b[1]/x[1];for(let w=0;w<m;w++)for(let _=0;_<u;_++){let P;a?P=C*(_+.5)-.5:P=C*_;let M=Math.max(0,Math.floor(P)),R=P-M,$=Math.min(c-1,Math.ceil(P)),G=w*p[0]+M*p[1],W=w*p[0]+$*p[1];for(let U=0;U<l;U++){let V;a?V=k*(U+.5)-.5:V=k*U;let K=Math.max(0,Math.floor(V)),q=V-K,j=Math.min(d-1,Math.ceil(V)),te=G+K*p[2],se=W+K*p[2],ie=G+j*p[2],pe=W+j*p[2];for(let ae=0;ae<f;ae++){let le=h[te+ae],fe=h[se+ae],Te=h[ie+ae],Ae=h[pe+ae],$e=le+(Te-le)*q,Le=fe+(Ae-fe)*q,Ze=$e+(Le-$e)*R;g[T++]=Ze}}}return e.makeTensorInfo([m,u,l,f],"float32",g)}var AO={kernelName:Is,backendName:"cpu",kernelFunc:vpe};function Spe(r){let{inputs:t,backend:e,attrs:n}=r,{images:o,dy:s}=t,{alignCorners:a}=n;oe([s,o],"resizeBilinearGrad");let i=y.computeStrides(o.shape),[p,u,l,m]=o.shape,[,c,d]=s.shape,f=new Float32Array(p*u*l*m),h=[a&&c>1?u-1:u,a&&d>1?l-1:l],g=[a&&c>1?c-1:c,a&&d>1?d-1:d],b=h[0]/g[0],x=h[1]/g[1],T=e.data.get(s.dataId).values,C=0;for(let k=0;k<p;k++){let w=k*i[0];for(let _=0;_<c;_++){let P=_*b,M=Math.floor(P),R=Math.min(Math.ceil(P),u-1),$=w+M*i[1],G=w+R*i[1],W=P-M,U=1-W;for(let V=0;V<d;V++){let K=V*x,q=Math.floor(K),j=Math.min(Math.ceil(K),l-1),te=K-q,se=1-te,ie=$+q*i[2],pe=$+j*i[2],ae=G+q*i[2],le=G+j*i[2],fe=U*se,Te=U*te,Ae=W*se,$e=W*te;for(let Le=0;Le<m;Le++){let Ze=T[C++];f[ie+Le]+=Ze*fe,f[pe+Le]+=Ze*Te,f[ae+Le]+=Ze*Ae,f[le+Le]+=Ze*$e}}}}return e.makeTensorInfo([p,l,u,m],"float32",f)}var NO={kernelName:hi,backendName:"cpu",kernelFunc:Spe};function wpe(r){let{inputs:t,backend:e,attrs:n}=r,{images:o}=t,{alignCorners:s,halfPixelCenters:a,size:i}=n;oe(o,"resizeNearestNeighbor");let p=y.computeStrides(o.shape),[u,l]=i,[m,c,d,f]=o.shape,h=e.data.get(o.dataId).values,g=new Float32Array(m*u*l*f),b=[s&&u>1?c-1:c,s&&l>1?d-1:d],x=[s&&u>1?u-1:u,s&&l>1?l-1:l],T=b[0]/x[0],C=b[1]/x[1],k=0;for(let w=0;w<m;w++){let _=w*p[0];for(let P=0;P<u;P++){let M=a?T*(P+.5):T*P,R=Math.min(c-1,s?Math.round(M):Math.floor(M));a&&(R=Math.max(0,R));let $=_+R*p[1];for(let G=0;G<l;G++){let W=a?C*(G+.5):C*G,U=Math.min(d-1,s?Math.round(W):Math.floor(W));a&&(U=Math.max(0,U));let V=$+U*p[2];for(let K=0;K<f;K++){let q=h[V+K];g[k++]=q}}}}return e.makeTensorInfo([m,u,l,f],o.dtype,g)}var DO={kernelName:Cs,backendName:"cpu",kernelFunc:wpe};function Ape(r){let{inputs:t,backend:e,attrs:n}=r,{images:o,dy:s}=t,{alignCorners:a}=n;oe([s,o],"resizeNearestNeighborGrad");let i=y.computeStrides(o.shape),p=y.computeStrides(s.shape),[u,l,m,c]=o.shape,[,d,f]=s.shape,h=new Float32Array(u*l*m*c),g=e.data.get(s.dataId).values,b=[a&&d>1?l-1:l,a&&f>1?m-1:m],x=[a&&d>1?d-1:d,a&&f>1?f-1:f],T=b[0]/x[0],C=b[1]/x[1],k=1/T,w=1/C,_=Math.ceil(k)*2+2,P=Math.ceil(w)*2+2;for(let M=0;M<u;M++){let R=M*i[0];for(let $=0;$<l;$++){let G=R+$*i[1],W=Math.floor($*k),U=Math.floor(W-_/2);for(let V=0;V<m;V++){let K=G+V*i[2],q=Math.floor(V*w),j=Math.floor(q-P/2);for(let te=0;te<c;te++){let se=0;for(let ie=0;ie<_;ie++){let pe=ie+U;if(pe<0||pe>=d)continue;let ae=R+pe*p[1],le=pe*T,fe=Math.min(l-1,a?Math.round(le):Math.floor(le));if($===fe)for(let Te=0;Te<P;Te++){let Ae=Te+j;if(Ae<0||Ae>=f)continue;let $e=ae+Ae*p[2],Le=Ae*C,Ze=Math.min(m-1,a?Math.round(Le):Math.floor(Le));V===Ze&&(se+=g[$e+te])}}h[K+te]=se}}}}return e.makeTensorInfo(o.shape,o.dtype,h)}var _O={kernelName:fi,backendName:"cpu",kernelFunc:Ape};function Npe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{dims:s}=n;oe(o,"reverse");let a=o.shape.length,i=y.parseAxisParam(s,o.shape);if(a===0)return nn({inputs:{x:o},backend:e});let p=new ft(o.shape,o.dtype),u=e.bufferSync(o);for(let l=0;l<p.size;l++){let m=p.indexToLoc(l),c=m.slice();i.forEach(d=>c[d]=o.shape[d]-1-c[d]),p.set(u.get(...c),...m)}return e.makeTensorInfo(p.shape,p.dtype,p.values)}var MO={kernelName:vs,backendName:"cpu",kernelFunc:Npe};var PO={kernelName:ki,backendName:"cpu",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{image:n}=r,{radians:o,fillValue:s,center:a}=t,i=e,p=y.getTypedArrayFromDType(n.dtype,y.sizeFromShape(n.shape)),[u,l,m,c]=n.shape,[d,f]=I.getImageCenter(a,l,m),h=255,g=Math.sin(o),b=Math.cos(o),x=i.data.get(n.dataId).values;for(let C=0;C<u;C++){let k=C*m*l*c;for(let w=0;w<l;w++){let _=w*(m*c);for(let P=0;P<m;P++){let M=P*c;for(let R=0;R<c;R++){let $=[u,w,P,R],G=$[2],W=$[1],U=(G-d)*b-(W-f)*g,V=(G-d)*g+(W-f)*b;U=Math.round(U+d),V=Math.round(V+f);let K=s;if(typeof s!="number"&&(R===3?K=h:K=s[R]),U>=0&&U<m&&V>=0&&V<l){let j=V*(m*c),te=U*c,se=k+j+te+R;K=x[se]}let q=k+_+M+R;p[q]=K}}}}return{dataId:i.write(p,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};var Dpe=Ee(Ss,r=>{let t=Math.floor(r);return r-t<.5?Math.floor(r):r-t>.5?Math.ceil(r):t%2===0?t:t+1}),RO={kernelName:Ss,backendName:"cpu",kernelFunc:Dpe};function _pe(r){let{inputs:t,backend:e,attrs:n}=r,{indices:o,updates:s}=t,{shape:a}=n,{sliceRank:i,numUpdates:p,sliceSize:u,strides:l,outputSize:m}=I.calculateShapes(s,o,a),c=!0,d=e.bufferSync(o),f=e.bufferSync(s),h=Gi(d,f,a,m,u,p,i,l,0,c);return e.makeTensorInfo(a,h.dtype,h.values)}var FO={kernelName:gi,backendName:"cpu",kernelFunc:_pe};function Mpe(r,t){let e=0,n=r.length,o=0;for(;e<n;)o=Math.floor((e+n)/2),r[o]<t?e=o+1:n=o;return n}function Ppe(r,t){let e=0,n=r.length,o=0;for(;e<n;)o=Math.floor((e+n)/2),r[o]<=t?e=o+1:n=o;return n}function EO(r,t,e,n,o,s){let a=y.getArrayFromDType("int32",e*o);for(let i=0;i<e;++i){let p=r.slice(i*n,(i+1)*n),u=i*o;for(let l=0;l<o;++l)a[u+l]=s==="left"?Mpe(p,t[l+u]):Ppe(p,t[l+u])}return a}function Rpe(r){let{inputs:t,backend:e,attrs:n}=r,{sortedSequence:o,values:s}=t,{side:a}=n,i=e.data.get(o.dataId).values,p=e.data.get(s.dataId).values,u=EO(i,p,o.shape[0],o.shape[1],s.shape[1],a);return e.makeTensorInfo(s.shape,"int32",u)}var LO={kernelName:yi,backendName:"cpu",kernelFunc:Rpe};function Fpe(r){let{inputs:t,backend:e}=r,{condition:n,t:o,e:s}=t;oe([n,o,s],"select");let a=n.shape.length,i=e.data.get(n.dataId).values,p=e.data.get(o.dataId).values,u=e.data.get(s.dataId).values,l=At(o.dtype,s.dtype),m=y.makeZerosTypedArray(y.sizeFromShape(o.shape),l),c=0,d=a===0||a>1||o.shape.length===1?1:y.sizeFromShape(o.shape.slice(1));for(let f=0;f<i.length;f++)for(let h=0;h<d;h++)i[f]===1?m[c++]=p[f]:m[c++]=u[f];return e.makeTensorInfo(o.shape,l,m)}var BO={kernelName:ua,backendName:"cpu",kernelFunc:Fpe};var Epe=I.SELU_SCALEALPHA,Lpe=I.SELU_SCALE,Bpe=Ee(As,r=>r>=0?Lpe*r:Epe*(Math.exp(r)-1)),$O={kernelName:As,backendName:"cpu",kernelFunc:Bpe};var $pe=Ee(_s,r=>r<0?-1:r>0?1:0),OO={kernelName:_s,backendName:"cpu",kernelFunc:$pe};var Ope=Ee(Ns,r=>Math.sin(r)),zO={kernelName:Ns,backendName:"cpu",kernelFunc:Ope};var zpe=Ee(Ds,r=>Math.sinh(r)),GO={kernelName:Ds,backendName:"cpu",kernelFunc:zpe};var Gpe=11920928955078125e-23,WO=Math.log(Gpe)+2,Wpe=Ee(Ps,r=>{let t=r>-WO,e=r<WO,n=Math.exp(r),o;return e?o=n:t?o=r:o=Math.log(1+n),o}),UO={kernelName:Ps,backendName:"cpu",kernelFunc:Wpe};function Upe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{blockShape:s,paddings:a}=n;oe([o],"spaceToBatchND");let i=y.sizeFromShape(s),p=[[0,0]];p.push(...a);for(let w=1+s.length;w<o.shape.length;++w)p.push([0,0]);let u=VT.kernelFunc({inputs:{x:o},backend:e,attrs:{paddings:p,constantValue:0}}),l=I.getReshaped(u.shape,s,i,!1),m=I.getPermuted(l.length,s.length,!1),c=I.getReshapedPermuted(u.shape,s,i,!1),h=ot({inputs:{x:u},backend:e,attrs:{shape:l}}),x=Yt({inputs:{x:h},backend:e,attrs:{perm:m}}),k=ot({inputs:{x},backend:e,attrs:{shape:c}});return e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(x),k}var KO={kernelName:la,backendName:"cpu",kernelFunc:Upe};function Kpe(r){let{inputs:t,backend:e}=r,{indices:n,values:o,denseShape:s,defaultValue:a}=t;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${s.shape}`);if(n.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${n.shape}`);if(o.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${o.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);let i=e.data.get(n.dataId).values,p=e.data.get(o.dataId).values,u=e.data.get(s.dataId).values,l=e.data.get(a.dataId).values[0],[m,c,d,f,h]=BT(i,n.shape,n.dtype,p,o.dtype,u,l);return[e.makeTensorInfo(c,n.dtype,m),e.makeTensorInfo([c[0]],o.dtype,d),e.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),e.makeTensorInfo([h.length],n.dtype,new Int32Array(h))]}var VO={kernelName:Dp,backendName:"cpu",kernelFunc:Kpe};function Vpe(r){let{inputs:t,backend:e}=r,{inputIndices:n,inputShape:o,newShape:s}=t;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${n.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${o.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let a=Array.from(e.data.get(o.dataId).values),i=e.data.get(n.dataId).values,p=Array.from(e.data.get(s.dataId).values),[u,l,m]=$T(i,n.shape,n.dtype,a,p);return[e.makeTensorInfo(l,n.dtype,u),e.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}var HO={kernelName:zu,backendName:"cpu",kernelFunc:Vpe};function Hpe(r){let{inputs:t,backend:e}=r,{data:n,indices:o,segmentIds:s}=t;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${s.shape}`);if(o.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let a=e.data.get(n.dataId).values,i=e.data.get(o.dataId).values,p=e.data.get(s.dataId).values,[u,l]=Af(a,n.shape,n.dtype,i,p,!0);return e.makeTensorInfo(l,n.dtype,u)}var qO={kernelName:pu,backendName:"cpu",kernelFunc:Hpe};function qpe(r){let{inputs:t,backend:e}=r,{data:n,indices:o,segmentIds:s}=t;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${s.shape}`);if(o.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let a=e.data.get(n.dataId).values,i=e.data.get(o.dataId).values,p=e.data.get(s.dataId).values,[u,l]=Af(a,n.shape,n.dtype,i,p);return e.makeTensorInfo(l,n.dtype,u)}var jO={kernelName:lu,backendName:"cpu",kernelFunc:qpe};function jpe(r){let{inputs:t,backend:e,attrs:n}=r,{sparseIndices:o,sparseValues:s,defaultValue:a}=t,{outputShape:i}=n,{sliceRank:p,numUpdates:u,sliceSize:l,strides:m,outputSize:c}=I.calculateShapes(s,o,i),d=!1,f=e.bufferSync(o),h;switch(s.dtype){case"bool":{let g=e.bufferSync(s),b=!!e.data.get(a.dataId).values[0];h=Gi(f,g,i,c,l,u,p,m,b,d);break}case"float32":{let g=e.bufferSync(s),b=e.data.get(a.dataId).values[0];h=Gi(f,g,i,c,l,u,p,m,b,d);break}case"int32":{let g=e.bufferSync(s),b=e.data.get(a.dataId).values[0];h=Gi(f,g,i,c,l,u,p,m,b,d);break}case"string":{let g=e.bufferSync(s),b=y.decodeString(e.data.get(a.dataId).values[0]);h=Gi(f,g,i,c,l,u,p,m,b,d);break}default:throw new Error(`Unsupported type ${s.dtype}`)}return e.makeTensorInfo(i,h.dtype,h.values)}var XO={kernelName:xi,backendName:"cpu",kernelFunc:jpe};function Xpe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{numOrSizeSplits:s,axis:a}=n,i=y.parseAxisParam(a,o.shape)[0],p=I.prepareSplitSize(o,s,i),u=new Array(o.shape.length).fill(0),l=o.shape.slice();return p.map(m=>{let c=[...l];c[i]=m;let d=Ba({inputs:{x:o},backend:e,attrs:{begin:u,size:c}});return u[i]+=m,d})}var YO={kernelName:ma,backendName:"cpu",kernelFunc:Xpe};var ZO={kernelName:mu,backendName:"cpu",kernelFunc:({inputs:r,backend:t})=>{let{x:e}=r,n=t;oe(e,"square");let o=n.data.get(e.dataId).values,s=new Float32Array(o.length);for(let i=0;i<o.length;++i){let p=o[i];s[i]=p*p}return{dataId:n.write(s,e.shape,e.dtype),shape:e.shape,dtype:e.dtype}}};var Ype=Ee(Zn,(r,t)=>{let e=t;return isNaN(r)?NaN:r>0?1:e.alpha}),QO={kernelName:Zn,backendName:"cpu",kernelFunc:Ype};function Zpe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{begin:s,end:a,strides:i,beginMask:p,endMask:u,ellipsisMask:l,newAxisMask:m,shrinkAxisMask:c}=n;oe(o,"stridedSlice");let{finalShapeSparse:d,finalShape:f,isIdentity:h,sliceDim0:g,isSimpleSlice:b,begin:x,end:T,strides:C}=kt.sliceInfo(o.shape,s,a,i,p,u,l,m,c),k;if(h)k=ot({inputs:{x:o},backend:e,attrs:{shape:f}});else if(g||b){y.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let w=kt.computeOutShape(x,T,C),_=Ba({inputs:{x:o},backend:e,attrs:{begin:x,size:w}});k=ot({inputs:{x:_},backend:e,attrs:{shape:f}}),e.disposeIntermediateTensorInfo(_)}else{let w=e.bufferSync(o),_=OT(d,w,C,x);k=e.makeTensorInfo(f,_.dtype,_.values)}return k}var JO={kernelName:Ti,backendName:"cpu",kernelFunc:Zpe};function Qpe(r){let{inputs:t,backend:e,attrs:n}=r,{separator:o,nGramWidths:s,leftPad:a,rightPad:i,padWidth:p,preserveShortSequences:u}=n,{data:l,dataSplits:m}=t,c=e.data.get(l.dataId).values,d=e.data.get(m.dataId).values,[f,h]=vm(c,d,o,s,a,i,p,u);return[e.makeTensorInfo([f.length],"string",f),e.makeTensorInfo(m.shape,"int32",h)]}var ez={kernelName:cu,backendName:"cpu",kernelFunc:Qpe};function Jpe(r){let{inputs:t,backend:e,attrs:n}=r,{skipEmpty:o}=n,{input:s,delimiter:a}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);let i=e.data.get(s.dataId).values,p=e.data.get(a.dataId).values[0],[u,l,m]=Sm(i,p,o),c=l.length;return[e.makeTensorInfo([c,2],"int32",u),e.makeTensorInfo([c],"string",l),e.makeTensorInfo([2],"int32",new Int32Array(m))]}var tz={kernelName:_p,backendName:"cpu",kernelFunc:Jpe};function ele(r){let{inputs:t,backend:e,attrs:n}=r,{numBuckets:o}=n,{input:s}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(o<=0)throw new Error("Number of buckets must be at least 1");let a=e.data.get(s.dataId).values,i=wm(a,o);return e.makeTensorInfo(s.shape,"int32",i)}var rz={kernelName:Mp,backendName:"cpu",kernelFunc:ele};var tle=Ee($s,r=>Math.tan(r)),nz={kernelName:$s,backendName:"cpu",kernelFunc:tle};var rle=Ee(Os,r=>Math.tanh(r)),oz={kernelName:Os,backendName:"cpu",kernelFunc:rle};function nle(r){let{inputs:t,backend:e}=r,{tensor:n,indices:o,updates:s}=t,{sliceRank:a,numUpdates:i,sliceSize:p,strides:u,outputSize:l}=I.calculateShapes(s,o,n.shape),m=!1,c=e.bufferSync(o),d=e.bufferSync(s),f=e.bufferSync(n),h=Gi(c,d,n.shape,l,p,i,a,u,f,m);return e.makeTensorInfo(n.shape,h.dtype,h.values)}var sz={kernelName:bi,backendName:"cpu",kernelFunc:nle};function ole(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{reps:s}=n;oe(o,"tile");let a=zT(e.bufferSync(o),s);return e.makeTensorInfo(a.shape,a.dtype,a.values)}var az={kernelName:Pn,backendName:"cpu",kernelFunc:ole};function sle(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{k:s,sorted:a}=n;oe(o,"topk");let i=e.data.get(o.dataId).values,[p,u]=GT(i,o.shape,o.dtype,s,a);return[e.makeTensorInfo(p.shape,p.dtype,p.values),e.makeTensorInfo(u.shape,u.dtype,u.values)]}var iz={kernelName:Ci,backendName:"cpu",kernelFunc:sle};function ale(r){let{inputs:t,attrs:e,backend:n}=r,{image:o,transforms:s}=t,{interpolation:a,fillMode:i,fillValue:p,outputShape:u}=e,[l,m,c,d]=o.shape,[f,h]=u??[m,c],g=[l,f,h,d],b=y.computeStrides(o.shape),x=b[0],T=b[1],C=b[2],k=y.computeStrides(g),w=k[0],_=k[1],P=k[2],M=y.getTypedArrayFromDType(o.dtype,y.sizeFromShape(g));M.fill(p);let R=n.data.get(o.dataId).values,$=n.data.get(s.dataId).values;for(let W=0;W<l;++W){let U=s.shape[0]===1?$:$.subarray(W*8,W*8+8);for(let V=0;V<f;++V)for(let K=0;K<h;++K)for(let q=0;q<d;++q){let j,te=U[6]*K+U[7]*V+1;if(te===0)continue;let se=(U[0]*K+U[1]*V+U[2])/te,ie=(U[3]*K+U[4]*V+U[5])/te,pe=uz(se,c,i),ae=uz(ie,m,i);switch(a){case"nearest":j=mle(R,m,c,x,T,C,W,ae,pe,q,p);break;case"bilinear":j=cle(R,m,c,x,T,C,W,ae,pe,q,p);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${a}`)}let le=W*w+V*_+K*P+q;M[le]=j}return n.makeTensorInfo(g,o.dtype,M)}return{dataId:n.write(M,g,o.dtype),shape:o.shape,dtype:o.dtype}}var pz={kernelName:Ii,backendName:"cpu",kernelFunc:ale};function uz(r,t,e){switch(e){case"reflect":return ile(r,t);case"wrap":return ule(r,t);case"nearest":return lle(r,t);case"constant":default:return ple(r,t)}}function ile(r,t){let e=r;if(e<0)if(t<=1)e=0;else{let n=2*t;e<n&&(e=n*Math.trunc(-e/n)+e),e=e<-t?e+n:-e-1}else if(e>t-1)if(t<=1)e=0;else{let n=2*t;e-=n*Math.trunc(e/n),e>=t&&(e=n-e-1)}return y.clamp(0,e,t-1)}function ule(r,t){let e=r;if(e<0)if(t<=1)e=0;else{let n=t-1;e+=t*(Math.trunc(-e/n)+1)}else if(e>t-1)if(t<=1)e=0;else{let n=t-1;e-=t*Math.trunc(e/n)}return y.clamp(0,e,t-1)}function ple(r,t){return r}function lle(r,t){return y.clamp(0,r,t-1)}function vg(r,t,e,n,o,s,a,i,p,u,l){let m=a*n+i*o+p*s+u;return 0<=i&&i<t&&0<=p&&p<e?r[m]:l}function mle(r,t,e,n,o,s,a,i,p,u,l){let m=Math.round(i),c=Math.round(p);return vg(r,t,e,n,o,s,a,m,c,u,l)}function cle(r,t,e,n,o,s,a,i,p,u,l){let m=Math.floor(i),c=Math.floor(p),d=m+1,f=c+1,h=(f-p)*vg(r,t,e,n,o,s,a,m,c,u,l)+(p-c)*vg(r,t,e,n,o,s,a,m,f,u,l),g=(f-p)*vg(r,t,e,n,o,s,a,d,c,u,l)+(p-c)*vg(r,t,e,n,o,s,a,d,f,u,l);return(d-i)*h+(i-m)*g}function dle(r){let{inputs:t,attrs:e,backend:n}=r,{axis:o}=e,{x:s}=t;oe(s,"unique");let a=n.data.get(s.dataId).values,{outputValues:i,outputShape:p,indices:u}=Am(a,o,s.shape,s.dtype);return[n.makeTensorInfo(p,s.dtype,i),n.makeTensorInfo([u.length],"int32",u)]}var lz={kernelName:Pp,backendName:"cpu",kernelFunc:dle};function fle(r){let{inputs:t,backend:e,attrs:n}=r,{value:o}=t,{axis:s}=n;s<0&&(s+=o.shape.length);let a=o.shape.length,i=o.shape[s],p=new Array(a-1),u=0;for(let d=0;d<a;d++)d!==s&&(p[u++]=o.shape[d]);let l=new Array(a).fill(0),m=o.shape.slice();m[s]=1;let c=new Array(i);for(let d=0;d<c.length;d++){l[s]=d;let f=Ba({inputs:{x:o},backend:e,attrs:{begin:l,size:m}});c[d]=ot({inputs:{x:f},backend:e,attrs:{shape:p}}),e.disposeIntermediateTensorInfo(f)}return c}var mz={kernelName:ca,backendName:"cpu",kernelFunc:fle};function hle(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,segmentIds:s}=t,{numSegments:a}=n;oe(o,"unsortedSegmentSum");let i=o.shape.length,p=s.shape.length,u=[],l=[],m=i-p,c=s;for(let f=0;f<m;++f){let h=_f({inputs:{input:c},backend:e,attrs:{dim:f+1}});c=h,l.push(h)}for(let f=0;f<a;++f){let h=y.createScalarValue(f,"int32"),g=e.makeTensorInfo([],"int32",h),b=jD({inputs:{a:g,b:c},backend:e}),x=Ea({inputs:{x:b},backend:e,attrs:{dtype:"float32"}}),T=Cm({inputs:{a:x,b:o},backend:e}),C=ap({inputs:{x:T},backend:e,attrs:{axis:0,keepDims:!1}});u.push(C),l.push(g),l.push(b),l.push(x),l.push(T),l.push(C)}let d=A0({inputs:u,backend:e,attrs:{axis:0}});return l.forEach(f=>e.disposeIntermediateTensorInfo(f)),d}var cz={kernelName:du,backendName:"cpu",kernelFunc:hle};var gle=[B$,VB,$$,O$,YB,z$,G$,W$,U$,K$,V$,H$,q$,j$,X$,Z$,Q$,J$,e3,L$,t3,r3,n3,ZB,o3,XB,QB,s3,HB,a3,u3,p3,l3,m3,c3,d3,f3,h3,g3,b3,y3,x3,T3,C3,I3,k3,v3,S3,w3,A3,N3,D3,M3,_$,P3,JB,R3,e$,F3,t$,E3,L3,B3,r$,n$,$3,O3,z3,G3,o$,s$,qB,W3,i3,U3,K3,V3,M$,a$,i$,H3,u$,q3,j3,X3,Y3,Z3,Q3,J3,p$,eO,tO,rO,nO,sO,aO,iO,l$,uO,pO,cO,m$,c$,dO,fO,hO,d$,gO,xO,TO,VT,CO,P$,h$,IO,kO,vO,SO,jB,Cg,wO,R$,F$,E$,AO,NO,DO,_O,MO,PO,RO,T$,FO,LO,BO,$O,I$,OO,zO,GO,k$,lO,UO,KO,VO,HO,qO,jO,XO,YO,S$,ZO,w$,A$,QO,JO,ez,tz,rz,N$,_3,nz,oz,sz,az,iz,pz,f$,lz,mz,cz,bO];for(let r of gle)Gu(r);var Ff={};Xe(Ff,{assertNotComplex:()=>Wi,bindCanvasToFramebuffer:()=>Sle,bindColorTextureToFramebuffer:()=>Ng,bindTextureToProgramUniformSampler:()=>U0,bindTextureUnit:()=>gz,bindVertexBufferToProgramAttribute:()=>ZT,callAndCheck:()=>xe,canBeRepresented:()=>M0,createFragmentShader:()=>R0,createFramebuffer:()=>z0,createProgram:()=>F0,createStaticIndexBuffer:()=>B0,createStaticVertexBuffer:()=>L0,createTexture:()=>$0,createVertexShader:()=>P0,getBatchDim:()=>up,getExtensionOrThrow:()=>Mf,getFramebufferErrorMessage:()=>bz,getMaxTexturesInShader:()=>H0,getNumChannels:()=>kle,getProgramUniformLocation:()=>W0,getProgramUniformLocationOrThrow:()=>G0,getRowsCols:()=>pp,getShapeAs3D:()=>Rf,getTextureShapeFromLogicalShape:()=>K0,getWebGLDisjointQueryTimerVersion:()=>q0,getWebGLErrorMessage:()=>hz,getWebGLMaxTextureSize:()=>V0,hasExtension:()=>uo,isCapableOfRenderingToFloatTexture:()=>j0,isDownloadFloatTextureEnabled:()=>X0,isReshapeFree:()=>al,isWebGLFenceEnabled:()=>Y0,isWebGLVersionEnabled:()=>JT,linkProgram:()=>E0,logShaderSourceAndInfoLog:()=>YT,resetMaxTextureSize:()=>wle,resetMaxTexturesInShader:()=>Ale,unbindColorTextureFromFramebuffer:()=>QT,unbindTextureUnit:()=>vle,validateFramebuffer:()=>Pf,validateProgram:()=>Ag,validateTextureSize:()=>O0});var Dm={},HT={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function N0(r,t){Dm[r]=t}function io(r,t){if(!(r in Dm)||t!=null){let n=yle(r,t);if(n!==null)Dm[r]=n;else return console.log("Could not get context for WebGL version",r),null}let e=Dm[r];return e==null||e.isContextLost()?(delete Dm[r],io(r)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),Dm[r])}function ble(r){if(!L().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&r===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function yle(r,t){if(r!==1&&r!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let e=t??ble(r);return e.addEventListener("webglcontextlost",n=>{n.preventDefault(),delete Dm[r]},!1),L().getBool("SOFTWARE_WEBGL_ENABLED")&&(HT.failIfMajorPerformanceCaveat=!1),r===1?e.getContext("webgl",HT)||e.getContext("experimental-webgl",HT):e.getContext("webgl2",HT)}function _m(r,t){return[t,r]}function dz(r,t){return r*t}function Sg(r){let t=y.sizeFromShape(r),e=Math.ceil(t/4);return y.sizeToSquarishShape(e)}function Nu(r,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(r/2))]}function fz(r,t){let[e,n]=Nu(r,t);return e*n*4}function wg(r,t){let e=r,n,o,s,a,i,p,u,l,m,c;return L().getNumber("WEBGL_VERSION")===2?(n=e.R32F,o=e.R16F,s=e.RGBA16F,a=e.RGBA32F,i=e.RED,u=4,l=1,m=e.HALF_FLOAT,c=e.FLOAT,p=e.RGBA8):(n=r.RGBA,o=r.RGBA,s=r.RGBA,a=e.RGBA,i=r.RGBA,u=4,l=4,m=t!=null?t.HALF_FLOAT_OES:null,c=r.FLOAT,p=r.RGBA),{internalFormatFloat:n,internalFormatHalfFloat:o,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:a,textureFormatFloat:i,downloadTextureFormat:p,downloadUnpackNumChannels:u,defaultNumChannels:l,textureTypeHalfFloat:m,textureTypeFloat:c}}function xe(r,t){let e=t();return L().getBool("DEBUG")&&xle(r),e}function xle(r){let t=r.getError();if(t!==r.NO_ERROR)throw new Error("WebGL Error: "+hz(r,t))}var Tle=596e-10,Cle=65504;function M0(r){return!!(L().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||r===0||Tle<Math.abs(r)&&Math.abs(r)<Cle)}function hz(r,t){switch(t){case r.NO_ERROR:return"NO_ERROR";case r.INVALID_ENUM:return"INVALID_ENUM";case r.INVALID_VALUE:return"INVALID_VALUE";case r.INVALID_OPERATION:return"INVALID_OPERATION";case r.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case r.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case r.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function Mf(r,t){return ip(r,()=>r.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function P0(r,t){let e=ip(r,()=>r.createShader(r.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(xe(r,()=>r.shaderSource(e,t)),xe(r,()=>r.compileShader(e)),r.getShaderParameter(e,r.COMPILE_STATUS)===!1)throw console.log(r.getShaderInfoLog(e)),new Error("Failed to compile vertex shader.");return e}function R0(r,t){let e=ip(r,()=>r.createShader(r.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(xe(r,()=>r.shaderSource(e,t)),xe(r,()=>r.compileShader(e)),L().get("ENGINE_COMPILE_ONLY"))return e;if(r.getShaderParameter(e,r.COMPILE_STATUS)===!1)throw YT(t,r.getShaderInfoLog(e)),new Error("Failed to compile fragment shader.");return e}var Ile=/ERROR: [0-9]+:([0-9]+):/g;function YT(r,t){let e=Ile.exec(t);if(e==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(r);return}let n=+e[1],o=r.split(`
`),s=o.length.toString().length+2,a=o.map((m,c)=>y.rightPad((c+1).toString(),s)+m),i=0;for(let m=0;m<a.length;m++)i=Math.max(a[m].length,i);let p=a.slice(0,n-1),u=a.slice(n-1,n),l=a.slice(n);console.log(p.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${y.rightPad(u[0],i)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(l.join(`
`))}function F0(r){return ip(r,()=>r.createProgram(),"Unable to create WebGLProgram.")}function E0(r,t){if(xe(r,()=>r.linkProgram(t)),!L().get("ENGINE_COMPILE_ONLY")&&r.getProgramParameter(t,r.LINK_STATUS)===!1)throw console.log(r.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function Ag(r,t){if(xe(r,()=>r.validateProgram(t)),r.getProgramParameter(t,r.VALIDATE_STATUS)===!1)throw console.log(r.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function L0(r,t){let e=ip(r,()=>r.createBuffer(),"Unable to create WebGLBuffer");return xe(r,()=>r.bindBuffer(r.ARRAY_BUFFER,e)),xe(r,()=>r.bufferData(r.ARRAY_BUFFER,t,r.STATIC_DRAW)),e}function B0(r,t){let e=ip(r,()=>r.createBuffer(),"Unable to create WebGLBuffer");return xe(r,()=>r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,e)),xe(r,()=>r.bufferData(r.ELEMENT_ARRAY_BUFFER,t,r.STATIC_DRAW)),e}function kle(){return L().getNumber("WEBGL_VERSION")===2?1:4}function $0(r){return ip(r,()=>r.createTexture(),"Unable to create WebGLTexture.")}function O0(r,t){let e=L().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(r<=0||t<=0){let n=`[${r}x${t}]`;throw new Error("Requested texture size "+n+" is invalid.")}if(r>e||t>e){let n=`[${r}x${t}]`,o=`[${e}x${e}]`;throw new Error("Requested texture size "+n+" greater than WebGL maximum on this browser / GPU "+o+".")}}function z0(r){return ip(r,()=>r.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function ZT(r,t,e,n,o,s,a){let i=r.getAttribLocation(t,e);return i===-1?!1:(xe(r,()=>r.bindBuffer(r.ARRAY_BUFFER,n)),xe(r,()=>r.vertexAttribPointer(i,o,r.FLOAT,!1,s,a)),xe(r,()=>r.enableVertexAttribArray(i)),!0)}function gz(r,t,e){yz(r,e),xe(r,()=>r.activeTexture(r.TEXTURE0+e)),xe(r,()=>r.bindTexture(r.TEXTURE_2D,t))}function vle(r,t){yz(r,t),xe(r,()=>r.activeTexture(r.TEXTURE0+t)),xe(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function G0(r,t,e){return ip(r,()=>r.getUniformLocation(t,e),'uniform "'+e+'" not present in program.')}function W0(r,t,e){return r.getUniformLocation(t,e)}function U0(r,t,e,n){xe(r,()=>gz(r,t,n)),xe(r,()=>r.uniform1i(e,n))}function Sle(r){xe(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,null)),xe(r,()=>r.viewport(0,0,r.canvas.width,r.canvas.height)),xe(r,()=>r.scissor(0,0,r.canvas.width,r.canvas.height))}function Ng(r,t,e){xe(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,e)),xe(r,()=>r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,t,0))}function QT(r,t){xe(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,t)),xe(r,()=>r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,null,0))}function Pf(r){let t=r.checkFramebufferStatus(r.FRAMEBUFFER);if(t!==r.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+bz(r,t))}function bz(r,t){switch(t){case r.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case r.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case r.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case r.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function ip(r,t,e){let n=xe(r,()=>t());if(n==null)throw new Error(e);return n}function yz(r,t){let e=r.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,n=t+r.TEXTURE0;if(n<r.TEXTURE0||n>e){let o=`[gl.TEXTURE0, gl.TEXTURE${e}]`;throw new Error(`textureUnit must be in ${o}.`)}}function up(r,t=2){return y.sizeFromShape(r.slice(0,r.length-t))}function pp(r){if(r.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[r.length>1?r[r.length-2]:1,r[r.length-1]]}function Rf(r){let t=[1,1,1];return r.length===0||r.length===1&&r[0]===1||(t=[up(r),...pp(r)]),t}function K0(r,t=!1){let e=L().getNumber("WEBGL_MAX_TEXTURE_SIZE"),n=L().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");n===1/0&&L().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(n=e/2),t&&(e=e*2,n=n*2,r=r.map((i,p)=>p>=r.length-2?y.nearestLargerEven(r[p]):r[p]),r.length===1&&(r=[2,r[0]])),r.length!==2&&(r=y.squeezeShape(r).newShape);let o=y.sizeFromShape(r),s=null;r.length<=1&&o<=e?s=[1,o]:r.length===2&&r[0]<=e&&r[1]<=e?s=r:r.length===3&&r[0]*r[1]<=e&&r[2]<=e?s=[r[0]*r[1],r[2]]:r.length===3&&r[0]<=e&&r[1]*r[2]<=e?s=[r[0],r[1]*r[2]]:r.length===4&&r[0]*r[1]*r[2]<=e&&r[3]<=e?s=[r[0]*r[1]*r[2],r[3]]:r.length===4&&r[0]<=e&&r[1]*r[2]*r[3]<=e&&(s=[r[0],r[1]*r[2]*r[3]]);let a=s!=null&&Math.max(...s)>n&&Math.min(...s)<=(t?2:1)&&Math.min(...s)>0;if(s==null||a)if(t){let i=up(r),p=2,u=2;r.length&&([p,u]=pp(r)),o=i*(p/2)*(u/2),s=y.sizeToSquarishShape(o).map(l=>l*2)}else s=y.sizeToSquarishShape(o);return s}function qT(r){return r%2===0}function al(r,t){if(r=r.slice(-2),t=t.slice(-2),y.arraysEqual(r,t)||!r.length||!t.length||r[0]===0||r[1]===0||t[0]===0||t[1]===0)return!0;if(r.length!==t.length){let e=r[r.length-1],n=t[t.length-1];if(e===n||qT(e)&&qT(n)&&(r[0]===1||t[0]===1))return!0}return r[1]===t[1]&&qT(r[0])&&qT(t[0])}var jT,XT;function V0(r){if(jT==null){let t=io(r);jT=t.getParameter(t.MAX_TEXTURE_SIZE)}return jT}function wle(){jT=null}function Ale(){XT=null}function H0(r){if(XT==null){let t=io(r);XT=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,XT)}function q0(r){if(r===0)return 0;let t,e=io(r);return uo(e,"EXT_disjoint_timer_query_webgl2")&&r===2?t=2:uo(e,"EXT_disjoint_timer_query")?t=1:t=0,t}function uo(r,t){return r.getExtension(t)!=null}function JT(r){try{if(io(r)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function j0(r){if(r===0)return!1;let t=io(r);if(r===1){if(!uo(t,"OES_texture_float"))return!1}else if(!uo(t,"EXT_color_buffer_float"))return!1;return _0(t)}function X0(r){if(r===0)return!1;let t=io(r);if(r===1){if(!uo(t,"OES_texture_float")||!uo(t,"WEBGL_color_buffer_float"))return!1}else{if(uo(t,"EXT_color_buffer_float"))return _0(t);let n="EXT_color_buffer_half_float";if(uo(t,n)){let o=t.getExtension(n);return Nle(t,o)}return!1}return _0(t)}function _0(r){let t=wg(r),e=r.createTexture();r.bindTexture(r.TEXTURE_2D,e);let n=1,o=1;r.texImage2D(r.TEXTURE_2D,0,t.internalFormatFloat,n,o,0,t.textureFormatFloat,t.textureTypeFloat,null);let s=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,s),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,e,0);let a=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(e),r.deleteFramebuffer(s),a}function Nle(r,t){let e=wg(r,t),n=r.createTexture();r.bindTexture(r.TEXTURE_2D,n);let o=1,s=1;r.texImage2D(r.TEXTURE_2D,0,e.internalFormatHalfFloat,o,s,0,e.textureFormatFloat,e.textureTypeHalfFloat,null);let a=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,a),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,n,0);let i=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(n),r.deleteFramebuffer(a),i}function Y0(r){return r!==2?!1:io(r).fenceSync!=null}function Wi(r,t){Array.isArray(r)||(r=[r]),r.forEach(e=>{e!=null&&y.assert(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}var Fe=L();Fe.registerFlag("HAS_WEBGL",()=>Fe.getNumber("WEBGL_VERSION")>0);Fe.registerFlag("WEBGL_VERSION",()=>JT(2)?2:JT(1)?1:0);Fe.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);Fe.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>Fe.get("WEBGL_VERSION")===2);Fe.registerFlag("WEBGL_CPU_FORWARD",()=>!0);Fe.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);Fe.registerFlag("WEBGL_PACK",()=>Fe.getBool("HAS_WEBGL"));Fe.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Fe.getBool("WEBGL_PACK"));Fe.registerFlag("WEBGL_PACK_CLIP",()=>Fe.getBool("WEBGL_PACK"));Fe.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>Fe.getBool("WEBGL_PACK"));Fe.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Fe.getBool("WEBGL_PACK"));Fe.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Fe.getBool("WEBGL_PACK"));Fe.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Fe.getBool("WEBGL_PACK"));Fe.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Fe.getBool("WEBGL_PACK"));Fe.registerFlag("WEBGL_PACK_REDUCE",()=>Fe.getBool("WEBGL_PACK"));Fe.registerFlag("WEBGL_LAZILY_UNPACK",()=>Fe.getBool("WEBGL_PACK"));Fe.registerFlag("WEBGL_CONV_IM2COL",()=>Fe.getBool("WEBGL_PACK"));Fe.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>V0(Fe.getNumber("WEBGL_VERSION")));Fe.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>H0(Fe.getNumber("WEBGL_VERSION")));Fe.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let r=Fe.getNumber("WEBGL_VERSION");return r===0?0:q0(r)});Fe.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Fe.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Ep.isMobile());Fe.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>j0(Fe.getNumber("WEBGL_VERSION")));Fe.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>Fe.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:Fe.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));Fe.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>X0(Fe.getNumber("WEBGL_VERSION")));Fe.registerFlag("WEBGL_FENCE_API_ENABLED",()=>Y0(Fe.getNumber("WEBGL_VERSION")));Fe.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Fe.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);Fe.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,r=>{if(r<0&&r!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${r}.`)});Fe.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>Ep.isMobile()?1:-1,r=>{if(r<0&&r!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${r}.`)});Fe.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);Fe.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);Fe.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);Fe.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);Fe.registerFlag("WEBGL_EXP_CONV",()=>!1);Fe.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>Fe.getBool("IS_TEST"));Fe.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);Fe.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);Fe.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);Fe.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);function Zt(){let r,t,e,n,o,s,a,i,p,u;return L().getNumber("WEBGL_VERSION")===2?(r="#version 300 es",t="in",e="out",n="in",o="texture",s="outputColor",a="out vec4 outputColor;",i=L().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",p="",u=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(r="",t="attribute",e="varying",n="varying",o="texture2D",s="gl_FragColor",a="",i=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,p=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,u=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:r,attribute:t,varyingVs:e,varyingFs:n,texture2D:o,output:s,defineOutput:a,defineSpecialNaN:i,defineSpecialInf:p,defineRound:u}}function Ui(r,t,e="index"){let n=y.computeStrides(t);return n.map((o,s)=>{let a=`int ${r[s]} = ${e} / ${o}`,i=s===n.length-1?`int ${r[s+1]} = ${e} - ${r[s]} * ${o}`:`index -= ${r[s]} * ${o}`;return`${a}; ${i};`}).join("")}function Mm(r,t,e="index"){let n=y.computeStrides(t);return n.map((o,s)=>{let a=`int ${r[s]} = ${e} / outShapeStrides[${s}]`,i=s===n.length-1?`int ${r[s+1]} = ${e} - ${r[s]} * outShapeStrides[${s}]`:`index -= ${r[s]} * outShapeStrides[${s}]`;return`${a}; ${i};`}).join("")}function Dle(r,t){let e=r.length,n=r.map(s=>`${t}[${s}]`),o=new Array(e-1);o[e-2]=n[e-1];for(let s=e-3;s>=0;--s)o[s]=`(${o[s+1]} * ${n[s+1]})`;return o}function xz(r,t,e="index"){let n=r.map((s,a)=>a),o=Dle(n,t);return o.map((s,a)=>{let i=`int ${r[a]} = ${e} / ${o[a]}`,p=a===o.length-1?`int ${r[a+1]} = ${e} - ${r[a]} * ${o[a]}`:`index -= ${r[a]} * ${o[a]}`;return`${i}; ${p};`}).join("")}function Ef(r){let t=y.computeStrides(r).map(e=>e.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function Lf(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}var eC=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;var{getBroadcastDims:Tz}=I;function Cz(r,t,e){let n=[];if(r.forEach(d=>{let f=y.sizeFromShape(d.shapeInfo.logicalShape);if(d.shapeInfo.isUniform?n.push(`uniform float ${d.name}${f>1?`[${f}]`:""};`):(n.push(`uniform sampler2D ${d.name};`),n.push(`uniform int offset${d.name};`)),e.enableShapeUniforms){let{uniformShape:h}=tC(e.packedInputs,d.shapeInfo.logicalShape,d.shapeInfo.texShape);switch(h.length){case 1:n.push(`uniform int ${d.name}Shape;`);break;case 2:n.push(`uniform ivec2 ${d.name}Shape;`);break;case 3:n.push(`uniform ivec3 ${d.name}Shape;`);break;case 4:n.push(`uniform ivec4 ${d.name}Shape;`);break;default:break}n.push(`uniform ivec2 ${d.name}TexShape;`)}}),e.enableShapeUniforms){switch(t.logicalShape.length){case 1:n.push("uniform int outShape;");break;case 2:n.push("uniform ivec2 outShape;"),n.push("uniform int outShapeStrides;");break;case 3:n.push("uniform ivec3 outShape;"),n.push("uniform ivec2 outShapeStrides;");break;case 4:n.push("uniform ivec4 outShape;"),n.push("uniform ivec3 outShapeStrides;");break;default:break}n.push("uniform ivec2 outTexShape;")}e.customUniforms&&e.customUniforms.forEach(d=>{n.push(`uniform ${d.type} ${d.name}${d.arrayIndex?`[${d.arrayIndex}]`:""};`)});let o=n.join(`
`),s=r.map(d=>_le(d,t,e.packedInputs,e.enableShapeUniforms)).join(`
`),a=t.texShape,i=Zt(),p=Rle(i),u,l,m=Lle(i);return t.isPacked?(u=Mle(t.logicalShape,a,e.enableShapeUniforms),l=Ele(i)):(u=Ple(t.logicalShape,a,e.enableShapeUniforms),l=Fle(i)),e.packedInputs&&(m+=zle),[m,p,l,o,u,s,e.userCode].join(`
`)}function $f(r,t=!1){let e=r.shapeInfo.logicalShape;switch(e.length){case 0:return Qle(r,t);case 1:return eme(r,t);case 2:return rme(r,t);case 3:return ome(r,t);case 4:return ame(r,t);case 5:return ime(r);case 6:return ume(r);default:throw new Error(`${e.length}-D input sampling is not yet supported`)}}function Iz(r,t){switch(r.shapeInfo.logicalShape.length){case 0:return Zle(r);case 1:return Jle(r,t);case 2:return tme(r,t);case 3:return nme(r,t);default:return sme(r,t)}}function _le(r,t,e=!1,n){let o="";e?o+=Iz(r,n):o+=$f(r,n);let s=r.shapeInfo.logicalShape,a=t.logicalShape;return s.length<=a.length&&(e?o+=pme(r,t):o+=lme(r,t)),o}function Mle(r,t,e){switch(r.length){case 0:return kz();case 1:return Gle(r,t,e);case 2:return Xle(r,t,e);case 3:return Ule(r,t,e);default:return Vle(r,t,e)}}function Ple(r,t,e){switch(r.length){case 0:return kz();case 1:return Wle(r,t,e);case 2:return Yle(r,t,e);case 3:return Kle(r,t,e);case 4:return Hle(r,t,e);case 5:return qle(r,t);case 6:return jle(r,t);default:throw new Error(`${r.length}-D output sampling is not yet supported`)}}function Rle(r){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${r.texture2D}(textureSampler, uv).r;
    }
  `}function Fle(r){return`
    void setOutput(float val) {
      ${r.output} = vec4(val, 0, 0, 0);
    }
  `}function Ele(r){return`
    void setOutput(vec4 val) {
      ${r.output} = val;
    }
  `}function Lle(r){return`${r.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${r.varyingFs} vec2 resultUV;
    ${r.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${r.defineSpecialNaN}
    ${r.defineSpecialInf}
    ${r.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${Ble}
    ${$le}
    ${Ole}
  `}var Ble=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,$le=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,Ole=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,zle=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function kz(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function Gle(r,t,e){let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return n[0]===1?e?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${n[1]}.0);
      }
    `:n[1]===1?e?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${n[0]}.0);
      }
    `:e?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);
    }
  `}function Wle(r,t,e){return t[0]===1?e?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?e?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:e?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function Ule(r,t,e){if(e)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],o=Math.ceil(r[2]/2),s=o*Math.ceil(r[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec3(b, r, c);
    }
  `}function Kle(r,t,e){if(e)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Mm(["r","c","d"],r)}
    return ivec3(r, c, d);
  }
`;let n=Ui(["r","c","d"],r);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${n}
      return ivec3(r, c, d);
    }
  `}function Vle(r,t,e){if(e)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],o=Math.ceil(r[r.length-1]/2),s=o*Math.ceil(r[r.length-2]/2),a=s,i="",p="b, r, c";for(let u=2;u<r.length-1;u++)a*=r[r.length-u-1],i=`
      int b${u} = index / ${a};
      index -= b${u} * ${a};
    `+i,p=`b${u}, `+p;return`
    ivec${r.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      ${i}

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec${r.length}(${p});
    }
  `}function Hle(r,t,e){if(e)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Mm(["r","c","d","d2"],r)}
      return ivec4(r, c, d, d2);
    }
  `;let n=Ui(["r","c","d","d2"],r);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${n}
      return ivec4(r, c, d, d2);
    }
  `}function qle(r,t){let e=Ui(["r","c","d","d2","d3"],r);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function jle(r,t){let e=Ui(["r","c","d","d2","d3","d4"],r);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function Xle(r,t,e){let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(y.arraysEqual(r,t))return e?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));
      }
    `;let o=Math.ceil(r[1]/2);return e?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));

      int index = resTexRC.x * ${n[1]} + resTexRC.y;
      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec2(r, c);
    }
  `}function Yle(r,t,e){return y.arraysEqual(r,t)?e?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:r[1]===1?e?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:r[0]===1?e?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:e?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${r[1]};
      int c = index - r * ${r[1]};
      return ivec2(r, c);
    }
  `}function Pm(r){return`offset${r}`}function Zle(r){let t=r.name,e="get"+t.charAt(0).toUpperCase()+t.slice(1),n=Zt();return`
    vec4 ${e}() {
      return ${n.texture2D}(${t}, halfCR);
    }
  `}function Qle(r,t){let e=r.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(r.shapeInfo.isUniform)return`float ${n}() {return ${e};}`;let[o,s]=r.shapeInfo.texShape;if(o===1&&s===1)return`
      float ${n}() {
        return sampleTexture(${e}, halfCR);
      }
    `;let a=Pm(e);if(t)return`
    float ${n}() {
      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], ${a});
      return sampleTexture(${e}, uv);
    }
  `;let[i,p]=r.shapeInfo.texShape;return`
    float ${n}() {
      vec2 uv = uvFromFlat(${i}, ${p}, ${a});
      return sampleTexture(${e}, uv);
    }
  `}function Jle(r,t){let e=r.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),o=r.shapeInfo.texShape,s=Zt();if(t)return`
    vec4 ${n}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${s.texture2D}(${e}, uv);
    }
  `;let a=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];return`
    vec4 ${n}(int index) {
      vec2 uv = packedUVfrom1D(
        ${a[0]}, ${a[1]}, index);
      return ${s.texture2D}(${e}, uv);
    }
  `}function eme(r,t){let e=r.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(r.shapeInfo.isUniform)return`
      float ${n}(int index) {
        ${Of(r)}
      }
    `;let o=r.shapeInfo.texShape,s=o[0],a=o[1];if(a===1&&s===1)return`
      float ${n}(int index) {
        return sampleTexture(${e}, halfCR);
      }
    `;let i=Pm(e);return a===1?t?`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / float(${e}TexShape[0]));
        return sampleTexture(${e}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${s}.0);
        return sampleTexture(${e}, uv);
      }
    `:s===1?t?`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / float(${e}TexShape[1]), 0.5);
        return sampleTexture(${e}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${a}.0, 0.5);
        return sampleTexture(${e}, uv);
      }
    `:t?`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], index + ${i});
      return sampleTexture(${e}, uv);
    }
  `:`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${s}, ${a}, index + ${i});
      return sampleTexture(${e}, uv);
    }
  `}function tme(r,t){let e=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=r.shapeInfo.texShape,a=s[0],i=s[1],p=Zt();if(s!=null&&y.arraysEqual(e,s))return t?`
      vec4 ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);

        return ${p.texture2D}(${n}, uv);
      }
    `:`
      vec4 ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${a}.0);

        return ${p.texture2D}(${n}, uv);
      }
    `;if(t)return`
    vec4 ${o}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${n}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${p.texture2D}(${n}, uv);
    }
  `;let u=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],l=Math.ceil(e[1]/2);return`
    vec4 ${o}(int row, int col) {
      vec2 uv = packedUVfrom2D(${l}, ${u[0]}, ${u[1]}, row, col);
      return ${p.texture2D}(${n}, uv);
    }
  `}function rme(r,t){let e=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=r.shapeInfo.texShape;if(s!=null&&y.arraysEqual(e,s)){if(t)return`
      float ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `;let c=s[0],d=s[1];return`
    float ${o}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${d}.0, ${c}.0);
      return sampleTexture(${n}, uv);
    }
  `}let{newShape:a,keptDims:i}=y.squeezeShape(e),p=a;if(p.length<e.length){let c=zf(r,p),d=["row","col"];return`
      ${$f(c,t)}
      float ${o}(int row, int col) {
        return ${o}(${Gf(d,i)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));
        ${Of(r)}
      }
    `;let u=s[0],l=s[1],m=Pm(n);return l===1?t?`
      float ${o}(int row, int col) {
        float index = dot(vec3(row, col, ${m}), vec3(${n}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${o}(int row, int col) {
      float index = dot(vec3(row, col, ${m}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);
      return sampleTexture(${n}, uv);
    }
  `:u===1?t?`
      float ${o}(int row, int col) {
        float index = dot(vec3(row, col, ${m}), vec3(${n}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${o}(int row, int col) {
      float index = dot(vec3(row, col, ${m}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${l}.0, 0.5);
      return sampleTexture(${n}, uv);
    }
  `:t?`
      float ${o}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${n}Shape[1] + col + ${m};
        vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index);
        return sampleTexture(${n}, uv);
      }
    `:`
  float ${o}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${e[1]} + col + ${m};
    vec2 uv = uvFromFlat(${u}, ${l}, index);
    return sampleTexture(${n}, uv);
  }
`}function nme(r,t){let e=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=r.shapeInfo.texShape,a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(e[0]===1){let c=e.slice(1),d=[1,2],f=zf(r,c),h=["b","row","col"];return`
        ${Iz(f,t)}
        vec4 ${o}(int b, int row, int col) {
          return ${o}(${Gf(h,d)});
        }
      `}let i=Zt();if(t)return`
    vec4 ${o}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${n}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${i.texture2D}(${n}, uv);
    }
  `;let p=a[0],u=a[1],l=Math.ceil(e[2]/2),m=l*Math.ceil(e[1]/2);return`
    vec4 ${o}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${p}, ${u}, ${m}, ${l}, b, row, col);
      return ${i.texture2D}(${n}, uv);
    }
  `}function ome(r,t){let e=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[1]*e[2],a=e[2],{newShape:i,keptDims:p}=y.squeezeShape(e),u=i;if(u.length<e.length){let h=zf(r,u),g=["row","col","depth"];return`
        ${$f(h,t)}
        float ${o}(int row, int col, int depth) {
          return ${o}(${Gf(g,p)});
        }
      `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${s}, ${a}, 1)));
        ${Of(r)}
      }
    `;let l=r.shapeInfo.texShape,m=l[0],c=l[1],d=r.shapeInfo.flatOffset;if(c===s&&d==null)return t?`
      float ${o}(int row, int col, int depth) {
        int stride1 = ${n}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
        float ${o}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${a}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${c}.0, ${m}.0);
          return sampleTexture(${n}, uv);
        }
      `;if(c===a&&d==null)return t?`
      float ${o}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${n}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${o}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}.0, ${m}.0);
      return sampleTexture(${n}, uv);
    }
  `;let f=Pm(n);return t?`
    float ${o}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${n}Shape[1] * ${n}Shape[2];
      int stride1 = ${n}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${f};
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index);
      return sampleTexture(${n}, uv);
    }
    `:`
      float ${o}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s} + col * ${a} + depth + ${f};
        vec2 uv = uvFromFlat(${m}, ${c}, index);
        return sampleTexture(${n}, uv);
      }
  `}function sme(r,t){let e=r.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),o=Zt();if(t)return`
    vec4 ${n}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${e}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${e}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${e}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${o.texture2D}(${e}, uv);
    }
  `;let s=r.shapeInfo.logicalShape,a=s.length,i=r.shapeInfo.texShape,p=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],u=p[0],l=p[1],m=Math.ceil(s[a-1]/2),c=m*Math.ceil(s[a-2]/2),d="int b, int row, int col",f=`b * ${c} + (row / 2) * ${m} + (col / 2)`;for(let h=2;h<a-1;h++)d=`int b${h}, `+d,c*=s[a-h-1],f=`b${h} * ${c} + `+f;return`
    vec4 ${n}(${d}) {
      int index = ${f};
      int texR = index / ${l};
      int texC = index - texR * ${l};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${u});
      return ${o.texture2D}(${e}, uv);
    }
  `}function ame(r,t){let e=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[3],a=e[2]*s,i=e[1]*a,{newShape:p,keptDims:u}=y.squeezeShape(e);if(p.length<e.length){let x=zf(r,p),T=["row","col","depth","depth2"];return`
      ${$f(x,t)}
      float ${o}(int row, int col, int depth, int depth2) {
        return ${o}(${Gf(T,u)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${i}, ${a}, ${s}, 1)));
        ${Of(r)}
      }
    `;let l=r.shapeInfo.flatOffset,m=r.shapeInfo.texShape,c=m[0],d=m[1],f=`int stride2 = ${n}Shape[3];`,h=`int stride1 = ${n}Shape[2] * stride2;`,g=`int stride0 = ${n}Shape[1] * stride1;`;if(d===i&&l==null)return t?`
      float ${o}(int row, int col, int depth, int depth2) {
        ${f}
        ${h}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${a}, ${s}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${d}.0, ${c}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(d===s&&l==null)return t?`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n}Shape[1] * ${n}Shape[2], ${n}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${e[1]*e[2]}, ${e[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${d}.0, ${c}.0);
        return sampleTexture(${n}, uv);
      }
    `;let b=Pm(n);return t?`
    float ${o}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${h}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${b});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${o}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${a} +
          depth * ${s} + depth2;
      vec2 uv = uvFromFlat(${c}, ${d}, index + ${b});
      return sampleTexture(${n}, uv);
    }
  `}function ime(r){let t=r.shapeInfo.logicalShape,e=r.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),o=t[4],s=t[3]*o,a=t[2]*s,i=t[1]*a,{newShape:p,keptDims:u}=y.squeezeShape(t);if(p.length<t.length){let h=zf(r,p),g=["row","col","depth","depth2","depth3"];return`
      ${$f(h)}
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        return ${n}(${Gf(g,u)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${i}, ${a}, ${s}, ${o})) +
          depth3;
        ${Of(r)}
      }
    `;let l=r.shapeInfo.flatOffset,m=r.shapeInfo.texShape,c=m[0],d=m[1];if(d===i&&l==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${a}, ${s}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${d}.0, ${c}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(d===o&&l==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${d}.0, ${c}.0);
        return sampleTexture(${e}, uv);
      }
    `;let f=Pm(e);return`
    float ${n}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${a} + depth * ${s} +
          depth2 * ${o} + depth3 + ${f};
      vec2 uv = uvFromFlat(${c}, ${d}, index);
      return sampleTexture(${e}, uv);
    }
  `}function ume(r){let t=r.shapeInfo.logicalShape,e=r.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),{newShape:o,keptDims:s}=y.squeezeShape(t);if(o.length<t.length){let g=zf(r,o),b=["row","col","depth","depth2","depth3","depth4"];return`
      ${$f(g)}
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${n}(${Gf(b,s)});
      }
    `}let a=t[5],i=t[4]*a,p=t[3]*i,u=t[2]*p,l=t[1]*u;if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${l}, ${u}, ${p}, ${i})) +
          dot(
            vec2(depth3, depth4),
            vec2(${a}, 1)));
        ${Of(r)}
      }
    `;let m=r.shapeInfo.flatOffset,c=r.shapeInfo.texShape,d=c[0],f=c[1];if(f===l&&m==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${u}, ${p}, ${i}, ${a})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${d}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(f===a&&m==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${d}.0);
        return sampleTexture(${e}, uv);
      }
    `;let h=Pm(e);return`
    float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${l} + col * ${u} + depth * ${p} +
          depth2 * ${i} + depth3 * ${a} + depth4 + ${h};
      vec2 uv = uvFromFlat(${d}, ${f}, index);
      return sampleTexture(${e}, uv);
    }
  `}function Of(r){let t=r.name,e=y.sizeFromShape(r.shapeInfo.logicalShape);return e<2?`return ${t};`:`
    for (int i = 0; i < ${e}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function pme(r,t){let e=r.name,n=e.charAt(0).toUpperCase()+e.slice(1),o="get"+n+"AtOutCoords",s=r.shapeInfo.logicalShape.length,a=t.logicalShape.length,i=Tz(r.shapeInfo.logicalShape,t.logicalShape),p=Ue(a),u=a-s,l,m=["x","y","z","w","u","v"];s===0?l="":a<2&&i.length>=1?l="coords = 0;":l=i.map(x=>`coords.${m[x+u]} = 0;`).join(`
`);let c="";a<2&&s>0?c="coords":c=r.shapeInfo.logicalShape.map((x,T)=>`coords.${m[T+u]}`).join(", ");let d="return outputValue;",h=y.sizeFromShape(r.shapeInfo.logicalShape)===1,b=y.sizeFromShape(t.logicalShape)===1;if(s===1&&!h&&!b)d=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(h&&!b)a===1?d=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:d=`
        return vec4(outputValue.x);
      `;else if(i.length){let x=s-2,T=s-1;i.indexOf(x)>-1&&i.indexOf(T)>-1?d="return vec4(outputValue.x);":i.indexOf(x)>-1?d="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(T)>-1&&(d="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${o}() {
      ${p} coords = getOutputCoords();
      ${l}
      vec4 outputValue = get${n}(${c});
      ${d}
    }
  `}function lme(r,t){let e=r.name,n=e.charAt(0).toUpperCase()+e.slice(1),o="get"+n+"AtOutCoords",s=t.texShape,a=r.shapeInfo.texShape,i=r.shapeInfo.logicalShape.length,p=t.logicalShape.length;if(!r.shapeInfo.isUniform&&i===p&&r.shapeInfo.flatOffset==null&&y.arraysEqual(a,s))return`
      float ${o}() {
        return sampleTexture(${e}, resultUV);
      }
    `;let u=Ue(p),l=Tz(r.shapeInfo.logicalShape,t.logicalShape),m=p-i,c,d=["x","y","z","w","u","v"];i===0?c="":p<2&&l.length>=1?c="coords = 0;":c=l.map(h=>`coords.${d[h+m]} = 0;`).join(`
`);let f="";return p<2&&i>0?f="coords":f=r.shapeInfo.logicalShape.map((h,g)=>`coords.${d[g+m]}`).join(", "),`
    float ${o}() {
      ${u} coords = getOutputCoords();
      ${c}
      return get${n}(${f});
    }
  `}function Ue(r){if(r<=1)return"int";if(r===2)return"ivec2";if(r===3)return"ivec3";if(r===4)return"ivec4";if(r===5)return"ivec5";if(r===6)return"ivec6";throw Error(`GPU for rank ${r} is not yet supported`)}function tC(r,t,e){let{newShape:n,keptDims:o}=y.squeezeShape(t),s=t.length,a=r&&s===3&&t[0]===1,i=a?t.slice(1):n,p=!r&&s>1&&!y.arraysEqual(t,e)&&n.length<s||a;return{useSqueezeShape:p,uniformShape:p?i:t,keptDims:o}}function zf(r,t){let e=JSON.parse(JSON.stringify(r));return e.shapeInfo.logicalShape=t,e}function Gf(r,t){return t.map(e=>r[e]).join(", ")}function Sz(r,t,e,n){let o=e.map((l,m)=>{let c={logicalShape:l.shape,texShape:l.isUniform?null:l.texData.texShape,isUniform:l.isUniform,isPacked:l.isUniform?!1:l.texData.isPacked,flatOffset:null};return l.texData!=null&&l.texData.slice!=null&&l.texData.slice.flatOffset>0&&(c.flatOffset=l.texData.slice.flatOffset),{name:t.variableNames[m],shapeInfo:c}}),s=o.map(l=>l.shapeInfo),a={logicalShape:n.shape,texShape:n.texData.texShape,isUniform:!1,isPacked:n.texData.isPacked,flatOffset:null},i=Cz(o,a,t),p=R0(r.gl,i),u=r.createProgram(p);return L().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:p,source:i,webGLProgram:u,inShapeInfos:s,outShapeInfo:a,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(r.buildVao(u),{program:t,fragmentShader:p,source:i,webGLProgram:u,inShapeInfos:s,outShapeInfo:a,...Z0(r,t,u)})}function Z0(r,t,e){let n=[],o=[],s,a,i,p=null,u=null;u=r.getUniformLocation(e,"NAN",!1),L().getNumber("WEBGL_VERSION")===1&&(p=r.getUniformLocation(e,"INFINITY",!1));let l=!1;for(let m of t.variableNames){let c={name:m,uniform:r.getUniformLocation(e,m,l),offset:r.getUniformLocation(e,`offset${m}`,l)};t.enableShapeUniforms&&(c.shape=r.getUniformLocation(e,`${m}Shape`,l),c.texShape=r.getUniformLocation(e,`${m}TexShape`,l)),n.push(c)}if(t.enableShapeUniforms&&(s=r.getUniformLocation(e,"outShape",l),i=r.getUniformLocation(e,"outShapeStrides",l),a=r.getUniformLocation(e,"outTexShape",l)),t.customUniforms)for(let m of t.customUniforms)o.push(r.getUniformLocation(e,m.name,l));return{variablesLocations:n,customUniformLocations:o,infLoc:p,nanLoc:u,outShapeLocation:s,outShapeStridesLocation:i,outTexShapeLocation:a}}function vz(r,t){if(r.length!==t.length)throw Error(`Binary was compiled with ${r.length} inputs, but was executed with ${t.length} inputs`);r.forEach((e,n)=>{let o=e.logicalShape,s=t[n],a=s.shape;if(!y.arraysEqual(o,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${o} and ${a} must match`);if(e.isUniform&&s.isUniform)return;let i=e.texShape,p=s.isUniform?null:s.texData.texShape;if(!y.arraysEqual(i,p))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${p} must match`)})}function wz(r,t,e,n,o){t.program.enableShapeUniforms||(vz(t.inShapeInfos,e),vz([t.outShapeInfo],[n]));let s=n.texData.texture,a=n.texData.texShape;n.texData.isPacked?r.setOutputPackedMatrixTexture(s.texture,a[0],a[1]):r.setOutputMatrixTexture(s.texture,a[0],a[1]),r.setProgram(t.webGLProgram),r.bindVertexArray(t.webGLProgram.vao),L().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&r.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&r.gl.uniform1f(t.nanLoc,NaN);for(let p=0;p<e.length;++p){let u=e[p],{uniform:l,offset:m,shape:c,texShape:d}=t.variablesLocations[p];if(c){let{uniformShape:f}=tC(t.program.packedInputs,u.shape,u.texData.texShape);switch(f.length){case 1:r.gl.uniform1iv(c,new Int32Array(f));break;case 2:r.gl.uniform2iv(c,new Int32Array(f));break;case 3:r.gl.uniform3iv(c,new Int32Array(f));break;case 4:r.gl.uniform4iv(c,new Int32Array(f));break;default:break}}if(d&&r.gl.uniform2i(d,u.texData.texShape[0],u.texData.texShape[1]),l!=null){if(u.isUniform){if(y.sizeFromShape(u.shape)<2)r.gl.uniform1f(l,u.uniformValues[0]);else{let f=u.uniformValues;f instanceof Float32Array||(f=new Float32Array(f)),r.gl.uniform1fv(l,f)}continue}u.texData.slice!=null&&m!=null&&r.gl.uniform1i(m,u.texData.slice.flatOffset),r.setInputMatrixTexture(u.texData.texture.texture,l,p)}}let i=t.outShapeLocation;if(i)switch(n.shape.length){case 1:r.gl.uniform1iv(i,new Int32Array(n.shape));break;case 2:r.gl.uniform2iv(i,new Int32Array(n.shape));break;case 3:r.gl.uniform3iv(i,new Int32Array(n.shape));break;case 4:r.gl.uniform4iv(i,new Int32Array(n.shape));break;default:break}if(t.outShapeStridesLocation){let p=y.computeStrides(n.shape);switch(n.shape.length){case 2:r.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(p));break;case 3:r.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(p));break;case 4:r.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(p));break;default:break}}if(t.outTexShapeLocation&&r.gl.uniform2i(t.outTexShapeLocation,n.texData.texShape[0],n.texData.texShape[1]),t.program.customUniforms&&o)for(let p=0;p<t.program.customUniforms.length;++p){let u=t.program.customUniforms[p],l=t.customUniformLocations[p],m=o[p];if(u.type==="float")r.gl.uniform1fv(l,m);else if(u.type==="vec2")r.gl.uniform2fv(l,m);else if(u.type==="vec3")r.gl.uniform3fv(l,m);else if(u.type==="vec4")r.gl.uniform4fv(l,m);else if(u.type==="int")r.gl.uniform1iv(l,m);else if(u.type==="ivec2")r.gl.uniform2iv(l,m);else if(u.type==="ivec3")r.gl.uniform3iv(l,m);else if(u.type==="ivec4")r.gl.uniform4iv(l,m);else throw Error(`uniform type ${u.type} is not supported yet.`)}r.executeProgram()}function Az(r,t,e){let n="";t.concat(e).forEach(a=>{let i=a.texData!=null&&a.texData.slice!=null&&a.texData.slice.flatOffset>0;if(r.enableShapeUniforms&&!a.isUniform){let p=a.texData.texShape,{useSqueezeShape:u,uniformShape:l,keptDims:m}=tC(r.packedInputs,a.shape,p),c="",d="",f="";if(l.length===1&&r.packedInputs){let k=[Math.ceil(p[0]/2),Math.ceil(p[1]/2)];c=`${k[0]>1}_${k[1]>1}`}else if(l.length===2&&!r.packedInputs)d=`${l[0]>1}_${l[1]>1}`;else if(l.length>2&&!r.packedInputs){let k=y.computeStrides(l);f=`${k[0]===p[1]}_${k[k.length-1]===p[1]}`}let h=a.shape.length,g=l.length===2&&y.arraysEqual(a.shape,p),b=y.sizeFromShape(a.shape)===1,x=I.getBroadcastDims(a.shape,e.shape),T=!r.packedInputs&&h===e.shape.length&&y.arraysEqual(p,e.texData.texShape),C=r.packedInputs||l.length>2?"":`${p[0]>1}_${p[1]>1}`;n+=`${h}_${T}_${u?m:""}_${l.length}_${b}_${x}_${g}_${c}_${d}_${f}_${C}_${i}`}else{let p=a.isUniform?"uniform":a.texData.texShape;n+=`${a.shape}_${p}_${i}`}});let o=r.userCode,s=r.constructor.name;return s+="_"+n+"_"+o+`${L().getNumber("WEBGL_VERSION")}`,s}function Ct(r){return L().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&r<=4}var rC=class{constructor(t){this.variableNames=["A"];this.packedInputs=!1;this.packedOutput=!0;this.outPackingScheme=0;this.customUniforms=[{name:"texShape",type:"ivec2"}];let e=Zt();this.outputShape=t,this.enableShapeUniforms=Ct(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Mm(["r","c","d"],t):Ui(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${e.output} = result;
      }
    `}};var nC=class{constructor(t){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.outPackingScheme=0;this.customUniforms=[{name:"texShape",type:"ivec2"}];let e=Zt();this.outputShape=t,this.enableShapeUniforms=Ct(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Mm(["r","c","d"],t):Ui(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${e.output} = result;
      }
    `}};var oC=class{constructor(t){this.variableNames=["A"];this.outTexUsage=3;let e=Zt();this.outputShape=t,this.userCode=`
      ${eC}

      void main() {
        float x = getAAtOutCoords();
        ${e.output} = encode_float(x);
      }
    `}};var aC=class{constructor(t){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!1;this.outTexUsage=3;let e=Zt();this.outputShape=t,this.userCode=`
      ${eC}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${e.output} = encode_float(x);
      }
    `}};var dme={R:0,G:1,B:2,A:3},Dg=class{constructor(t,e=!1,n="RGBA"){this.variableNames=["A"];this.customUniforms=[{name:"texShape",type:"ivec2"}];let o=Zt();this.outputShape=t,this.enableShapeUniforms=Ct(this.outputShape.length);let s="result";e&&(s="floor(result * 255. + 0.5)");let a="";for(let i=0;i<n.length;i++){let p=n[i];a+=`
          if(offset == ${i}) {
            result = values[${dme[p]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?Lf():Ef(t)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${n.length});

        flatIndex = idiv(flatIndex, ${n.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${o.texture2D}(A, uv);
          ${a}
        }
        ${o.output} = vec4(${s}, 0., 0., 0.);
      }
    `}};var iC=class{constructor(t,e=!1){this.variableNames=["A"];this.packedInputs=!1;this.packedOutput=!0;this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=Zt();this.outputShape=t,this.enableShapeUniforms=Ct(this.outputShape.length);let o="",s="result";e&&(s="floor(result * 255. + 0.5)");for(let a=0;a<=1;a++)for(let i=0;i<=1;i++){let p=a*2+i;o+=`
          localCoords = coords;
          if(localCoords[2] + ${i} < ${this.enableShapeUniforms?"outShape[2]":`${t[2]}`}) {
          localCoords[2] += ${i};
          if (localCoords[1] + ${a} < ${this.enableShapeUniforms?"outShape[1]":`${t[1]}`}) {
            localCoords[1] += ${a};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${n.texture2D}(A, uv);

            if (offset == 0) {
              result[${p}] = values[0];
            } else if (offset == 1) {
              result[${p}] = values[1];
            } else if (offset == 2) {
              result[${p}] = values[2];
            } else {
              result[${p}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?Lf():Ef(t)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${o}

          ${n.output} = ${s};
        }
    `}};var f2={};Xe(f2,{bindVertexProgramAttributeStreams:()=>a2,createBufferFromOutputTexture:()=>p2,createFloat16MatrixTexture:()=>r2,createFloat16PackedMatrixTexture:()=>s2,createFloat32MatrixTexture:()=>t2,createIndexBuffer:()=>e2,createPackedMatrixTexture:()=>o2,createUnsignedBytesMatrixTexture:()=>n2,createVertexBuffer:()=>J0,createVertexShader:()=>Q0,downloadByteEncodedFloatMatrixFromOutputTexture:()=>m2,downloadFloat32MatrixFromBuffer:()=>l2,downloadMatrixFromPackedOutputTexture:()=>d2,downloadPackedMatrixFromBuffer:()=>c2,getInternalFormatForFloat16MatrixTexture:()=>pC,getInternalFormatForFloat16PackedMatrixTexture:()=>cC,getInternalFormatForFloat32MatrixTexture:()=>uC,getInternalFormatForPackedMatrixTexture:()=>mC,getInternalFormatForUnsignedBytesMatrixTexture:()=>lC,uploadDenseMatrixToTexture:()=>i2,uploadPixelDataToTexture:()=>u2});function Q0(r){let t=Zt(),e=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return P0(r,e)}function J0(r){let t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return L0(r,t)}function e2(r){let t=new Uint16Array([0,1,2,2,1,3]);return B0(r,t)}function _g(r,t,e,n,o,s){O0(t,e);let a=$0(r),i=r.TEXTURE_2D;return xe(r,()=>r.bindTexture(i,a)),xe(r,()=>r.texParameteri(i,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE)),xe(r,()=>r.texParameteri(i,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE)),xe(r,()=>r.texParameteri(i,r.TEXTURE_MIN_FILTER,r.NEAREST)),xe(r,()=>r.texParameteri(i,r.TEXTURE_MAG_FILTER,r.NEAREST)),L().getNumber("WEBGL_VERSION")===1?xe(r,()=>r.texImage2D(i,0,n,t,e,0,o,s,null)):xe(r,()=>r.texStorage2D(i,1,n,t,e)),xe(r,()=>r.bindTexture(r.TEXTURE_2D,null)),{texture:a,texShape:[e,t]}}function uC(r){return r.internalFormatFloat}function t2(r,t,e,n){let[o,s]=_m(t,e);return _g(r,o,s,uC(n),n.textureFormatFloat,r.FLOAT)}function pC(r){return r.internalFormatHalfFloat}function r2(r,t,e,n){let[o,s]=_m(t,e);return _g(r,o,s,pC(n),n.textureFormatFloat,n.textureTypeHalfFloat)}function lC(r){return r.downloadTextureFormat}function n2(r,t,e,n){let[o,s]=_m(t,e);return _g(r,o,s,lC(n),r.RGBA,r.UNSIGNED_BYTE)}function mC(r){return r.internalFormatPackedFloat}function o2(r,t,e,n){let[o,s]=Nu(t,e);return _g(r,o,s,mC(n),r.RGBA,r.FLOAT)}function cC(r){return r.internalFormatPackedHalfFloat}function s2(r,t,e,n){let[o,s]=Nu(t,e);return _g(r,o,s,cC(n),r.RGBA,n.textureTypeHalfFloat)}function a2(r,t,e){return xe(r,()=>r.bindBuffer(r.ARRAY_BUFFER,e)),ZT(r,t,"clipSpacePos",e,3,20,0)&&ZT(r,t,"uv",e,2,20,12)}function i2(r,t,e,n,o,s){xe(r,()=>r.bindTexture(r.TEXTURE_2D,t));let a,i,p;o instanceof Uint8Array?(a=new Uint8Array(e*n*4),i=r.UNSIGNED_BYTE,p=r.RGBA):(a=new Float32Array(e*n*4),i=r.FLOAT,p=s.internalFormatPackedFloat),a.set(o),L().getNumber("WEBGL_VERSION")===2?xe(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,e,n,r.RGBA,i,a)):xe(r,()=>r.texImage2D(r.TEXTURE_2D,0,p,e,n,0,r.RGBA,i,a)),xe(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function u2(r,t,e){xe(r,()=>r.bindTexture(r.TEXTURE_2D,t)),e.data instanceof Uint8Array?L().getNumber("WEBGL_VERSION")===2?xe(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,e.width,e.height,r.RGBA,r.UNSIGNED_BYTE,e.data)):xe(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,e.width,e.height,0,r.RGBA,r.UNSIGNED_BYTE,e.data)):L().getNumber("WEBGL_VERSION")===2?xe(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,r.RGBA,r.UNSIGNED_BYTE,e)):xe(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,r.RGBA,r.UNSIGNED_BYTE,e)),xe(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function p2(r,t,e,n){let o=r.createBuffer();xe(r,()=>r.bindBuffer(r.PIXEL_PACK_BUFFER,o));let i=4*4*t*e;return xe(r,()=>r.bufferData(r.PIXEL_PACK_BUFFER,i,r.STREAM_READ)),xe(r,()=>r.readPixels(0,0,e,t,r.RGBA,r.FLOAT,0)),xe(r,()=>r.bindBuffer(r.PIXEL_PACK_BUFFER,null)),o}function l2(r,t,e){let n=r,o=new Float32Array(e);return n.bindBuffer(n.PIXEL_PACK_BUFFER,t),n.getBufferSubData(n.PIXEL_PACK_BUFFER,0,o),n.bindBuffer(n.PIXEL_PACK_BUFFER,null),o}function m2(r,t,e,n){let[o,s]=_m(t,e),a=4,i=new Uint8Array(dz(t*e,a));return xe(r,()=>r.readPixels(0,0,o,s,n.downloadTextureFormat,r.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}function c2(r,t,e,n,o,s,a,i){let p=r,u=new Float32Array(fz(s,a));return p.bindBuffer(p.PIXEL_PACK_BUFFER,t),p.getBufferSubData(p.PIXEL_PACK_BUFFER,0,u),p.bindBuffer(p.PIXEL_PACK_BUFFER,null),u}function d2(r,t,e){let n=new Float32Array(t*e*4);return xe(r,()=>r.readPixels(0,0,e,t,r.RGBA,r.FLOAT,n)),n}var Rm=class{constructor(t){this.outputTexture=null;this.program=null;this.disposed=!1;this.itemsToPoll=[];let e=L().getNumber("WEBGL_VERSION");if(t!=null?(this.gl=t,N0(e,t)):this.gl=io(e),t=this.gl,L().getNumber("WEBGL_VERSION")===2){let s=t;this.createVertexArray=()=>xe(s,()=>s.createVertexArray()),this.bindVertexArray=a=>xe(s,()=>s.bindVertexArray(a)),this.deleteVertexArray=a=>xe(s,()=>s.deleteVertexArray(a)),this.getVertexArray=()=>xe(s,()=>s.getParameter(s.VERTEX_ARRAY_BINDING))}else if(t!=null){let s=t.getExtension("OES_vertex_array_object");if(s==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>xe(t,()=>s.createVertexArrayOES()),this.bindVertexArray=a=>xe(t,()=>s.bindVertexArrayOES(a)),this.deleteVertexArray=a=>xe(t,()=>s.deleteVertexArrayOES(a)),this.getVertexArray=()=>xe(t,()=>t.getParameter(s.VERTEX_ARRAY_BINDING_OES))}let n="WEBGL_color_buffer_float",o="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),L().getNumber("WEBGL_VERSION")===1){let s="OES_texture_float",a="OES_texture_half_float";if(this.textureFloatExtension=Mf(this.gl,s),uo(this.gl,a))this.textureHalfFloatExtension=Mf(this.gl,a);else if(L().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),uo(this.gl,o))this.colorBufferHalfFloatExtension=Mf(this.gl,o);else if(L().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",uo(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else if(uo(this.gl,o))this.colorBufferHalfFloatExtension=this.gl.getExtension(o);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=J0(this.gl),this.indexBuffer=e2(this.gl),this.framebuffer=z0(this.gl),this.textureConfig=wg(this.gl,this.textureHalfFloatExtension)}get debug(){return L().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let t=this.gl;xe(t,()=>t.finish()),xe(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,null)),xe(t,()=>t.deleteFramebuffer(this.framebuffer)),xe(t,()=>t.bindBuffer(t.ARRAY_BUFFER,null)),xe(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)),xe(t,()=>t.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),t2(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),r2(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),n2(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),u2(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,n,o){this.throwIfDisposed(),i2(this.gl,t,e,n,o,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),s2(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),o2(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(QT(this.gl,this.framebuffer),this.outputTexture=null),xe(this.gl,()=>this.gl.deleteTexture(t))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,n){return this.downloadMatrixDriver(t,()=>m2(this.gl,e,n,this.textureConfig))}downloadPackedMatrixFromBuffer(t,e,n,o,s,a){return c2(this.gl,t,e,n,o,s,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return l2(this.gl,t,e)}createBufferFromTexture(t,e,n){this.bindTextureToFrameBuffer(t);let o=p2(this.gl,e,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),o}createAndWaitForFence(){let t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,n;if(L().getBool("WEBGL_FENCE_API_ENABLED")){let o=t,s=o.fenceSync(o.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),n=()=>{let a=o.clientWaitSync(s,0,0);return a===o.ALREADY_SIGNALED||a===o.CONDITION_SATISFIED},e=s}else L().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(e,L().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:e,isFencePassed:n}}downloadMatrixFromPackedTexture(t,e,n){return this.downloadMatrixDriver(t,()=>d2(this.gl,e,n))}createProgram(t){this.throwIfDisposed();let e=this.gl;this.vertexShader==null&&(this.vertexShader=Q0(e));let n=F0(e);xe(e,()=>e.attachShader(n,this.vertexShader)),xe(e,()=>e.attachShader(n,t)),E0(e,n);let o=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&Ag(e,o),o}buildVao(t){this.setProgram(t),this.bindVertexArray(t.vao);let e=this.gl;xe(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),a2(e,t,this.vertexBuffer)}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),t!=null&&(xe(this.gl,()=>this.gl.deleteProgram(t)),this.deleteVertexArray(t.vao))}setProgram(t){this.throwIfDisposed(),this.program=t,this.program!=null&&this.debug&&Ag(this.gl,this.program),xe(this.gl,()=>this.gl.useProgram(t))}getUniformLocation(t,e,n=!0){return this.throwIfDisposed(),n?G0(this.gl,t,e):W0(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),xe(this.gl,()=>this.gl.getAttribLocation(t,e))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,n){this.throwIfDisposed(),this.throwIfNoProgram(),U0(this.gl,t,e,n)}setOutputMatrixTexture(t,e,n){this.setOutputMatrixTextureDriver(t,n,e)}setOutputPackedMatrixTexture(t,e,n){this.throwIfDisposed();let[o,s]=Nu(e,n);this.setOutputMatrixTextureDriver(t,o,s)}setOutputMatrixWriteRegion(t,e,n,o){this.setOutputMatrixWriteRegionDriver(n,t,o,e)}setOutputPackedMatrixWriteRegion(t,e,n,o){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&Ag(this.gl,this.program),Pf(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let t=this.gl;if(this.debug){let e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}xe(t,()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),xe(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Mf(this.gl,L().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(L().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let n=this.gl,o=this.getQueryTimerExtensionWebGL2(),s=n.createQuery();return n.beginQuery(o.TIME_ELAPSED_EXT,s),s}let t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(L().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let e=this.gl,n=this.getQueryTimerExtensionWebGL2();e.endQuery(n.TIME_ELAPSED_EXT);return}let t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await y.repeatedTry(()=>this.disposed||this.isQueryAvailable(t,L().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(t,L().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(e===0)return null;if(e===2){let n=this.gl;return n.getQueryParameter(t,n.QUERY_RESULT)/1e6}else{let n=this.getQueryTimerExtensionWebGL1();return n.getQueryObjectEXT(t,n.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(e===0)return!0;if(e===2){let n=this.gl,o=this.getQueryTimerExtensionWebGL2(),s=n.getQueryParameter(t,n.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(o.GPU_DISJOINT_EXT)),s&&!this.disjoint}else{let n=this.getQueryTimerExtensionWebGL1(),o=n.getQueryObjectEXT(t,n.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),o&&!this.disjoint}}pollFence(t){return new Promise(e=>{this.addItemToPoll(()=>t.isFencePassed(),()=>e())})}pollItems(){let t=fme(this.itemsToPoll.map(e=>e.isDoneFn));for(let e=0;e<=t;++e){let{resolveFn:n}=this.itemsToPoll[e];n()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){if(this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in L().platform&&(n=L().platform.setTimeoutCustom.bind(L().platform)),y.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,n)}bindTextureToFrameBuffer(t){this.throwIfDisposed(),Ng(this.gl,t,this.framebuffer),this.debug&&Pf(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(Ng(this.gl,this.outputTexture,this.framebuffer),this.debug&&Pf(this.gl)):QT(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);let n=e();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(t,e,n){this.throwIfDisposed();let o=this.gl;Ng(o,t,this.framebuffer),this.debug&&Pf(o),this.outputTexture=t,xe(o,()=>o.viewport(0,0,e,n)),xe(o,()=>o.scissor(0,0,e,n))}setOutputMatrixWriteRegionDriver(t,e,n,o){this.throwIfDisposed(),xe(this.gl,()=>this.gl.scissor(t,e,n,o))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function fme(r){let t=0;for(;t<r.length&&r[t]();++t);return t-1}var{addImpl:Dz,bincountImpl:dC,bincountReduceImpl:_z,bitwiseAndImpl:Mz,castImpl:Pz,ceilImpl:Rz,concatImpl:Fz,equalImpl:Ez,expImpl:Lz,expm1Impl:Bz,floorImpl:$z,gatherNdImpl:Oz,gatherV2Impl:zz,greaterImpl:Gz,greaterEqualImpl:Wz,lessImpl:Uz,lessEqualImpl:Kz,linSpaceImpl:Vz,logImpl:Hz,maxImpl:qz,maximumImpl:jz,minimumImpl:Xz,multiplyImpl:Yz,negImpl:Zz,notEqualImpl:Qz,prodImpl:Jz,raggedGatherImpl:eG,raggedRangeImpl:tG,raggedTensorToTensorImpl:rG,rangeImpl:nG,rsqrtImpl:oG,scatterImpl:sG,sigmoidImpl:aG,simpleAbsImpl:fC,sliceImpl:iG,sparseFillEmptyRowsImpl:uG,sparseReshapeImpl:pG,sparseSegmentReductionImpl:hC,sqrtImpl:lG,staticRegexReplaceImpl:mG,stridedSliceImpl:cG,stringNGramsImpl:dG,stringSplitImpl:fG,stringToHashBucketFastImpl:hG,subImpl:gG,tileImpl:bG,topKImpl:yG,transposeImpl:Fm,uniqueImpl:xG}=Nf;function h2(r,t){return["x","y","z","w","u","v"].slice(0,t).map(e=>`${r}.${e}`)}function pr(r,t){return t===1?[r]:h2(r,t)}function TG(r,t){if(r===1)return"rc";let e="";for(let n=0;n<r;n++)e+=t[n],n<r-1&&(e+=",");return e}var gC=class{constructor(t){this.variableNames=["A"];this.packedInputs=!1;this.packedOutput=!0;if(this.outputShape=t,this.rank=t.length,this.enableShapeUniforms=Ct(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let e=pr("rc",this.rank),n=Ue(this.rank),o=this.getOutOfBoundsCondition(e),s=this.getSetup(e),a=this.getOutput(e);this.userCode=`
        void main() {
          ${n} rc = getOutputCoords();

          if(${o}) {
            setOutput(vec4(0));
          } else {
            ${s}

            setOutput(vec4(${a}));
          }
        }
      `}}getSourceCoordsArr(t){let e=[];for(let n=0;n<=1;n++)for(let o=0;o<=1;o++){let s=`${n===0?"r":"rp1"}, ${o===0?"c":"cp1"}`;for(let a=2;a<this.rank;a++)s=`${t[t.length-1-a]},`+s;e.push(s)}return e}getOutOfBoundsCondition(t){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let e="";for(let n=this.rank-2;n<this.rank;n++)e+=`${t[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(e+="||");return e}getSetup(t){if(this.rank===1)return"";let e=t.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],o=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${e[0]};
      int c = ${e[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${n};
      bool rEdge = rp1 >= ${o};
    `}getOutput(t){let e=this.getSourceCoordsArr(t);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${e[0]}),
            cEdge ? 0. : getA(${e[1]}),
            rEdge ? 0. : getA(${e[2]}),
            rEdge || cEdge ? 0. : getA(${e[3]})`}};var Wf=class{constructor(t,e){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"inputShape",type:"ivec3"}];this.outputShape=t,this.enableShapeUniforms=Ct(this.outputShape.length);let n="";for(let o=0;o<4;o++){let s="thisRC = rc;";o%2===1&&(s+="thisRC.z += 1;"),o>1&&(s+="thisRC.y += 1;"),n+=`
        ${s}
        ${o>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${o}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${o>0?"}":""}
      `}this.userCode=`
      ${hme(e,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?Lf():Ef(t)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":t[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":t[2]};

        ${n}

        setOutput(result);
      }
    `}};function hme(r,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?xz(["r","c","d"],"inputShape"):Ui(["r","c","d"],r)}
      return ivec3(r, c, d);
    }
  `}var bC=class{constructor(t){this.gpgpu=t;this.numUsedTextures=0;this.numFreeTextures=0;this._numBytesAllocated=0;this._numBytesFree=0;this.freeTextures={};this.usedTextures={};this.logEnabled=!1}acquireTexture(t,e,n){let o=IG(e,n),s=kG(t,o,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);let a=CG(t,o,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();let p=this.freeTextures[s].pop();return this.usedTextures[s].push(p),p}let i;return o===3?i=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):o===4?i=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):o===1?i=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):o===0?i=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):o===2&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[s].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(t,e,n,o){if(this.freeTextures==null)return;let s=IG(n,o),a=kG(e,s,o);a in this.freeTextures||(this.freeTextures[a]=[]);let i=CG(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,o),p=L().get("WEBGL_DELETE_TEXTURE_THRESHOLD");p!==-1&&this._numBytesAllocated>p?(this.gpgpu.deleteMatrixTexture(t.texture),this._numBytesAllocated-=i):(this.freeTextures[a].push(t),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;let u=this.usedTextures[a],l=u&&u.indexOf(t);if(l==null||l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u[l]=u[u.length-1],u.pop(),this.log()}log(){if(!this.logEnabled)return;let t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);let e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let t in this.freeTextures)this.freeTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});for(let t in this.usedTextures)this.usedTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function gme(r,t){let e=r;if(t===e.R32F)return 4;if(t===e.R16F)return 2;if(t===e.RGBA32F)return 16;if(t===r.RGBA)return 16;if(t===e.RGBA16F)return 8;if(t===e.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function CG(r,t,e,n,o){let s=bme(t,n),a;if(o){let[p,u]=Nu(r[0],r[1]);a=p*u}else{let[p,u]=_m(r[0],r[1]);a=p*u}let i=gme(e,s);return a*i}function bme(r,t){switch(r){case 3:return mC(t);case 4:return cC(t);case 1:return uC(t);case 0:return pC(t);case 2:return lC(t);default:throw new Error(`Unknown physical texture type ${r}`)}}function yme(r){return L().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?r?3:1:r?4:0}function IG(r,t){if(r===1)return 3;if(r===0||r==null)return yme(t);if(r===3||r===2)return 2;throw new Error(`Unknown logical texture type ${r}`)}function kG(r,t,e){return`${r[0]}_${r[1]}_${t}_${e}`}var Kr=class{constructor(t,e){this.variableNames=["A"];this.outputShape=t,this.enableShapeUniforms=Ct(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${e}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},Sr="if (isnan(x)) return x;",vG="return x;",g2="return abs(x);";var SG="return (x >= 0.0) ? x : (exp(x) - 1.0);",wG=Sr+`
  return (x < 0.0) ? 0.0 : x;
`,AG=Sr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Du="return x;",NG="return 1.0 / (1.0 + exp(-1.0 * x));";var _G="return x;",MG=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,PG=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,RG=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,FG="return 1.0 / (1.0 + exp(-1.0 * x));",Gn=class{constructor(t,e){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=t,this.enableShapeUniforms=Ct(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${e}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}};var yC=class{constructor(t){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!1;this.outputShape=t,this.enableShapeUniforms=Ct(this.outputShape.length);let e=t.length,n=pr("rc",e),o=Ue(e),s=TG(e,n),a=n.slice(-2),i=e<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`
      void main() {
        ${o} rc = getOutputCoords();
        vec4 packedInput = getA(${s});

        setOutput(getChannel(packedInput, ${i}));
      }
    `}};var Tme=vr.whereImpl,Cme=1e-7,Ime=1e-4,xC={};function kme(r){return r in xC||(xC[r]={}),xC[r]}var vme=L().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),Sme=600;function wme(){return L().global.screen==null?1024:L().global.screen.height*L().global.screen.width*window.devicePixelRatio*Sme/1024/1024}var b2=class extends Io{constructor(e){super();this.pendingRead=new WeakMap;this.pendingDisposal=new WeakSet;this.dataRefCount=new WeakMap;this.numBytesInGPU=0;this.uploadWaitMs=0;this.downloadWaitMs=0;this.lastGlFlushTime=0;this.warnedAboutMemory=!1;this.pendingDeletes=0;this.disposed=!1;if(!L().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let n;if(e!=null){if(e instanceof Rm)n=e;else{let o=io(L().getNumber("WEBGL_VERSION"),e);n=new Rm(o)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let o=io(L().getNumber("WEBGL_VERSION"));n=new Rm(o),this.binaryCache=kme(L().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=n,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new bC(this.gpgpu),this.numMBBeforeWarning=wme(),this.texData=new Wa(this,Xr())}nextDataId(){return b2.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,n,o,s,a,i){let p=this.makeTensorInfo(n,o),u=this.texData.get(p.dataId);u.isPacked=!1,u.texture={texture:e,texShape:[s,a]},u.texShape=[s,a];let l=Rf(n),m=new Dg(l,!1,i),c=this.runWebGLProgram(m,[p],o,[[s,a]]);return c.shape=n,u.texture=null,this.disposeIntermediateTensorInfo(p),c.dataId}write(e,n,o){if((L().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||L().getBool("DEBUG"))&&this.checkNumericalProblems(e),o==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let s={id:this.nextDataId()};return this.texData.set(s,{shape:n,dtype:o,values:e,usage:1,refCount:1}),s}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){let n=this.texData.get(e);n.refCount++}decRef(e){if(this.texData.has(e)){let n=this.texData.get(e);n.refCount--}}move(e,n,o,s,a){if(L().getBool("DEBUG")&&this.checkNumericalProblems(n),s==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:o,dtype:s,values:n,usage:1,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let n=this.texData.get(e),{values:o,dtype:s,complexTensorInfos:a,slice:i,shape:p,isPacked:u}=n;if(i!=null){let d;u?d=new Gn(p,Du):d=new Kr(p,Du);let f=this.runWebGLProgram(d,[{dataId:e,shape:p,dtype:s}],s),h=this.readSync(f.dataId);return this.disposeIntermediateTensorInfo(f),h}if(o!=null)return this.convertAndCacheOnCPU(e);if(s==="string")return o;let l=this.activeTimers!=null,m;l&&(m=y.now());let c;if(s==="complex64"){let d=this.readSync(a.real.dataId),f=this.readSync(a.imag.dataId);c=I.mergeRealAndImagArrays(d,f)}else c=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=y.now()-m),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){let h=this.pendingRead.get(e);return new Promise(g=>h.push(g))}let n=this.texData.get(e),{values:o,shape:s,slice:a,dtype:i,complexTensorInfos:p,isPacked:u}=n;if(a!=null){let h;u?h=new Gn(s,Du):h=new Kr(s,Du);let g=this.runWebGLProgram(h,[{dataId:e,shape:s,dtype:i}],i),b=this.read(g.dataId);return this.disposeIntermediateTensorInfo(g),b}if(o!=null)return this.convertAndCacheOnCPU(e);if(L().getBool("DEBUG")&&!L().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&L().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l=null,m;if(i!=="complex64"&&L().get("WEBGL_BUFFER_SUPPORTED")){m=this.decode(e);let h=this.texData.get(m.dataId);l=this.gpgpu.createBufferFromTexture(h.texture.texture,...Sg(s))}this.pendingRead.set(e,[]),i!=="complex64"&&await this.gpgpu.createAndWaitForFence();let c;if(i==="complex64"){let h=await Promise.all([this.read(p.real.dataId),this.read(p.imag.dataId)]),g=h[0],b=h[1];c=I.mergeRealAndImagArrays(g,b)}else if(l==null)c=this.getValuesFromTexture(e);else{let h=y.sizeFromShape(s);c=this.gpgpu.downloadFloat32MatrixFromBuffer(l,h)}if(m!=null&&this.disposeIntermediateTensorInfo(m),l!=null){let h=this.gpgpu.gl;xe(h,()=>h.deleteBuffer(l))}let d=this.convertAndCacheOnCPU(e,c),f=this.pendingRead.get(e);return this.pendingRead.delete(e),f.forEach(h=>h(d)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Xr().removeDataId(e,this),this.pendingDeletes--),d}readToGPU(e,n={}){let o=this.texData.get(e),{values:s,shape:a,slice:i,dtype:p,isPacked:u,texture:l}=o;if(p==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(i!=null){let f;u?f=new Gn(a,Du):f=new Kr(a,Du);let h=this.runWebGLProgram(f,[{dataId:e,shape:a,dtype:p}],p),g=this.readToGPU(h,n);return this.disposeIntermediateTensorInfo(h),g}if(l==null)throw s!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let m=this.decode(e,n.customTexShape),c=Xr().makeTensorFromTensorInfo(m),d=this.texData.get(m.dataId);return{tensorRef:c,...d.texture}}bufferSync(e){let n=this.readSync(e.dataId);if(e.dtype==="string")try{let o=n.map(s=>y.decodeString(s));return Ce(e.shape,e.dtype,o)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Ce(e.shape,e.dtype,n)}checkNumericalProblems(e){if(e!=null)for(let n=0;n<e.length;n++){let o=e[n];if(!M0(o))throw L().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${o} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${o} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:n,dtype:o,isPacked:s}=this.texData.get(e),a=y.sizeFromShape(n);if(L().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let d=this.decode(e),f=this.texData.get(d.dataId),h=this.gpgpu.downloadMatrixFromPackedTexture(f.texture.texture,...Sg(n)).subarray(0,a);return this.disposeIntermediateTensorInfo(d),h}let i=L().getBool("WEBGL_PACK")&&s===!0,p=i?Rf(n):n,u=i?new aC(p):new oC(p),l=this.runWebGLProgram(u,[{shape:p,dtype:o,dataId:e}],"float32"),m=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(m.texture.texture,m.texShape[0],m.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(l),c}timerAvailable(){return L().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){let n=this.activeTimers,o=[],s=!1;this.programTimersStack==null?(this.programTimersStack=o,s=!0):this.activeTimers.push(o),this.activeTimers=o,e();let a=y.flatten(this.activeTimers.map(u=>u.query)).filter(u=>u!=null),i=y.flatten(this.activeTimers.map(u=>u.name)).filter(u=>u!=null);this.activeTimers=n,s&&(this.programTimersStack=null);let p={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(L().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let u=await Promise.all(a);p.kernelMs=y.sum(u),p.getExtraProfileInfo=()=>u.map((l,m)=>({name:i[m],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", ")}else p.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,p})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return L().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:y.now(),endMs:null}}endTimer(e){return L().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=y.now(),e)}async getQueryTime(e){if(L().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let n=e;return n.endMs-n.startMs}disposeData(e,n=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(n?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!n&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:o}=this.texData.get(e);return o!=null&&(this.disposeData(o.real.dataId,n),this.disposeData(o.imag.dataId,n)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:n,dtype:o,texShape:s,usage:a,isPacked:i,slice:p}=this.texData.get(e),u=p&&p.origDataId||e,l=this.dataRefCount.get(u);l>1?this.dataRefCount.set(u,l-1):(this.dataRefCount.delete(u),n!=null&&(this.numBytesInGPU-=this.computeBytes(s,o),this.textureManager.releaseTexture(n,s,a,i)));let m=this.texData.get(e);m.texture=null,m.texShape=null,m.isPacked=!1,m.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,n=vme){return L().getBool("WEBGL_CPU_FORWARD")&&e.every(o=>this.texData.get(o.dataId).texture==null&&y.sizeFromShape(o.shape)<n)}getGPGPUContext(){return this.gpgpu}where(e){I.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let n=e.dataSync();return Tme(e.shape,n)}packedUnaryOp(e,n,o){let s=new Gn(e.shape,n),a=this.compileAndRun(s,[e],o);return Xr().makeTensorFromTensorInfo(a)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){let s=fC(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,s)}if(L().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,g2,e.dtype);let n=new Kr(e.shape,g2),o=this.compileAndRun(n,[e]);return Xr().makeTensorFromTensorInfo(o)}makeTensorInfo(e,n,o){let s;if(n==="string"&&o!=null&&o.length>0&&y.isString(o[0])){let a=o.map(i=>y.encodeString(i));s=this.write(a,e,n)}else s=this.write(o,e,n);return this.texData.get(s).usage=null,{dataId:s,shape:e,dtype:n}}makeOutput(e,n,o){return Xr().makeTensorFromTensorInfo(this.makeTensorInfo(e,n,o),this)}unpackTensor(e){let n=new yC(e.shape);return this.runWebGLProgram(n,[e],e.dtype)}packTensor(e){let n=new gC(e.shape),o=!0;return this.runWebGLProgram(n,[e],e.dtype,null,o)}packedReshape(e,n){let o=[up(e.shape),...pp(e.shape)],s={dtype:e.dtype,shape:o,dataId:e.dataId},a=[up(n),...pp(n)],i=new Wf(a,o),p=!0,u=[o],l=this.runWebGLProgram(i,[s],e.dtype,u,p);return{dataId:l.dataId,shape:n,dtype:l.dtype}}decode(e,n){let o=this.texData.get(e),{isPacked:s,shape:a,dtype:i}=o;if(n!=null){let d=y.sizeFromShape(a),f=n[0]*n[1]*4;y.assert(d<=f,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}let p=Rf(a),u;s?u=new nC(p):u=new rC(p);let l=!0,m=[n??Sg(p)],c=this.runWebGLProgram(u,[{shape:p,dtype:i,dataId:e}],i,m,l,n);return{dtype:i,shape:a,dataId:c.dataId}}runWebGLProgram(e,n,o,s,a=!1,i){let p=this.makeTensorInfo(e.outputShape,o),u=this.texData.get(p.dataId);if(e.packedOutput&&(u.isPacked=!0),e.outPackingScheme===0){let x=i??Sg(e.outputShape);u.texShape=x.map(T=>T*2)}if(e.outTexUsage!=null&&(u.usage=e.outTexUsage),y.sizeFromShape(p.shape)===0)return u.values=y.getTypedArrayFromDType(p.dtype,0),p;let l=[],m=n.map(x=>{if(x.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let T=this.texData.get(x.dataId);if(T.texture==null){if(!e.packedInputs&&y.sizeFromShape(x.shape)<=L().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:x.shape,texData:null,isUniform:!0,uniformValues:T.values};e.packedInputs&&(T.isPacked=!0,T.shape=x.shape)}if(this.uploadToGPU(x.dataId),!!T.isPacked!=!!e.packedInputs)x=T.isPacked?this.unpackTensor(x):this.packTensor(x),l.push(x),T=this.texData.get(x.dataId);else if(T.isPacked&&!al(T.shape,x.shape)){let C=x,k=x.shape;x.shape=T.shape,x=this.packedReshape(x,k),l.push(x),T=this.texData.get(x.dataId),C.shape=k}return{shape:x.shape,texData:T,isUniform:!1}});this.uploadToGPU(p.dataId);let c={shape:p.shape,texData:u,isUniform:!1},d=Az(e,m,c),f=this.getAndSaveBinary(d,()=>Sz(this.gpgpu,e,m,c)),h=this.activeTimers!=null,g;h&&(g=this.startTimer()),L().get("ENGINE_COMPILE_ONLY")||wz(this.gpgpu,f,m,c,s),l.forEach(x=>this.disposeIntermediateTensorInfo(x)),h&&(g=this.endTimer(g),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(g)}));let b=L().get("WEBGL_FLUSH_THRESHOLD");if(b>0){let x=y.now();x-this.lastGlFlushTime>b&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=x)}if(!L().getBool("WEBGL_LAZILY_UNPACK")&&u.isPacked&&a===!1){let x=this.unpackTensor(p);return this.disposeIntermediateTensorInfo(p),x}return p}compileAndRun(e,n,o,s,a=!1){return o=o||n[0].dtype,this.runWebGLProgram(e,n,o,s,a)}getAndSaveBinary(e,n){return e in this.binaryCache||(this.binaryCache[e]=n()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(L().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(n=>{this.gpgpu.deleteProgram(this.binaryCache[n].webGLProgram),delete this.binaryCache[n]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=z(()=>{if(!L().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=L().getBool("DEBUG");L().set("DEBUG",!1);let n=this.abs(he(1e-8)).dataSync()[0];if(L().set("DEBUG",e),n>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?Cme:Ime}uploadToGPU(e){let n=this.texData.get(e),{shape:o,dtype:s,values:a,texture:i,usage:p,isPacked:u}=n;if(i!=null)return;let l=this.activeTimers!=null,m;l&&(m=y.now());let c=n.texShape;if(c==null&&(c=K0(o,u),n.texShape=c),a!=null){let d=Rf(o),f,h=c[1],g=c[0],b=a instanceof Uint8Array||a instanceof Uint8ClampedArray;(u||!b)&&([h,g]=Nu(c[0],c[1])),u?f=new iC(d,b):f=new Dg(d,b);let x=b?[g,h]:c,T=this.makeTensorInfo(x,s),C=this.texData.get(T.dataId);b?C.usage=2:C.usage=1,C.texShape=x,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(T.dataId),h,g,a);let k=[[g,h]],w=!0,_=this.runWebGLProgram(f,[T],s,k,w),P=this.texData.get(_.dataId);n.texShape=P.texShape,n.isPacked=P.isPacked,n.usage=P.usage,L().get("ENGINE_COMPILE_ONLY")?this.disposeData(_.dataId):(n.texture=P.texture,n.values=null,this.texData.delete(_.dataId)),this.disposeIntermediateTensorInfo(T),l&&(this.uploadWaitMs+=y.now()-m)}else{let d=this.acquireTexture(c,p,s,u);n.texture=d}}convertAndCacheOnCPU(e,n){let o=this.texData.get(e),{dtype:s}=o;return n!=null&&(o.values=Ame(n,s)),o.values}acquireTexture(e,n,o,s){if(this.numBytesInGPU+=this.computeBytes(e,o),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let a=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${a} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,n,s)}computeBytes(e,n){return e[0]*e[1]*y.bytesPerElement(n)}checkCompileCompletion(){for(let[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){let e=[];if(this.gpgpu.parallelCompilationExtension){for(let[,n]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(n));return Promise.all(e)}else{for(let[,n]of Object.entries(this.binaryCache)){let o=new Promise(s=>{try{this.checkCompletion_(n),s(!0)}catch(a){throw a}});e.push(o)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await Uh(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(YT(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(let e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);let{variablesLocations:n,customUniformLocations:o,infLoc:s,nanLoc:a,outShapeLocation:i,outShapeStridesLocation:p,outTexShapeLocation:u}=Z0(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=n,e.customUniformLocations=o,e.infLoc=s,e.nanLoc=a,e.outShapeLocation=i,e.outShapeStridesLocation=p,e.outTexShapeLocation=u}}createTensorFromGPUData(e,n,o){e.channels=e.channels||"RGBA";let{texture:s,height:a,width:i,channels:p}=e,u=Xr().backend;if(!u.gpgpu.gl.isTexture(s))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");let l=u.writeTexture(s,n,o,a,i,p);return Xr().makeTensorFromDataId(l,n,o,u)}},Uf=b2;Uf.nextDataId=0;function Ame(r,t){if(t==="float32"||t==="complex64")return r;if(t==="int32"||t==="bool"){let e=t==="int32"?new Int32Array(r.length):new Uint8Array(r.length);for(let n=0;n<e.length;++n)e[n]=Math.round(r[n]);return e}else throw new Error(`Unknown dtype ${t}`)}var Nme="0.0.0";function EG(){L().set("WEBGL_FORCE_F16_TEXTURES",!0)}Ep.isBrowser()&&Bp("webgl",()=>new Uf,2);var ior={forceHalfFloat:EG};var Kf=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;var Wn=class{constructor(t,e,n){this.variableNames=["A","B"];this.outputShape=I.assertAndGetBroadcastShape(e,n),this.enableShapeUniforms=Ct(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${t}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}};var lo=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;var po=class{constructor(t,e,n,o=!1){this.variableNames=["A","B"];this.supportsBroadcasting=!0;this.packedInputs=!0;this.packedOutput=!0;this.outputShape=I.assertAndGetBroadcastShape(e,n);let s=this.outputShape.length;this.enableShapeUniforms=Ct(s);let a="";if(o)if(s===0||y.sizeFromShape(this.outputShape)===1)a=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(a=`
          ${Ue(s)} coords = getOutputCoords();
        `,s===1)this.enableShapeUniforms?a+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:a+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let p=pr("coords",s);this.enableShapeUniforms?a+=`
            bool nextRowOutOfBounds =
              (${p[s-2]} + 1) >= outShape[${s} - 2];
            bool nextColOutOfBounds =
              (${p[s-1]} + 1) >= outShape[${s} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:a+=`
            bool nextRowOutOfBounds =
              (${p[s-2]} + 1) >= ${this.outputShape[s-2]};
            bool nextColOutOfBounds =
              (${p[s-1]} + 1) >= ${this.outputShape[s-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${t}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${a}

        setOutput(result);
      }
    `}};function lr(r){let{inputs:t,backend:e}=r,{x:n}=t;return e.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var LG={kernelName:Yn,backendName:"webgl",kernelFunc:lr};function Un(r){let{inputs:t,backend:e}=r,{real:n,imag:o}=t,s=e.makeTensorInfo(n.shape,"complex64"),a=e.texData.get(s.dataId),i=lr({inputs:{x:n},backend:e}),p=lr({inputs:{x:o},backend:e});return a.complexTensorInfos={real:i,imag:p},s}var BG={kernelName:Tp,backendName:"webgl",kernelFunc:Un};var y2="return (a < 0.) ? b * a : a;",x2=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Dme(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{alpha:s}=n,a=e.makeTensorInfo([],"float32",y.createScalarValue(s,"float32")),i=L().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new po(x2,o.shape,a.shape):new Wn(y2,o.shape,a.shape),p=e.runWebGLProgram(i,[o,a],"float32");return e.disposeIntermediateTensorInfo(a),p}var $G={kernelName:ts,backendName:"webgl",kernelFunc:Dme};var T2="return (a < 0.) ? b * a : a;",C2=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function _me(r){let{inputs:t,backend:e}=r,{x:n,alpha:o}=t,s=L().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new po(C2,n.shape,o.shape):new Wn(T2,n.shape,o.shape);return e.runWebGLProgram(s,[n,o],"float32")}var OG={kernelName:bs,backendName:"webgl",kernelFunc:_me};var $a="if (isnan(x)) return x;";function Se({opSnippet:r,packedOpSnippet:t,cpuKernelImpl:e,dtype:n}){return({inputs:o,backend:s})=>{let{x:a}=o,i=s,p=n||a.dtype;if(i.shouldExecuteOnCPU([a])&&e!=null){let m=i.texData.get(a.dataId),c=e(m.values,p);return i.makeTensorInfo(a.shape,p,c)}let u=L().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null,l;return u?l=new Gn(a.shape,t):l=new Kr(a.shape,r),i.runWebGLProgram(l,[a],p)}}function gt({opSnippet:r,packedOpSnippet:t,checkOutOfBounds:e=!1,supportsComplex:n=!1,cpuKernelImpl:o,dtype:s}){return({inputs:a,backend:i})=>{let{a:p,b:u}=a,l=i;if(n&&p.dtype==="complex64"){let f=l.texData.get(p.dataId),h=l.texData.get(u.dataId),[g,b]=[[f.complexTensorInfos.real,h.complexTensorInfos.real],[f.complexTensorInfos.imag,h.complexTensorInfos.imag]].map(T=>{let[C,k]=T,w={dataId:C.dataId,dtype:C.dtype,shape:p.shape},_={dataId:k.dataId,dtype:k.dtype,shape:u.shape},P=new Wn(r,p.shape,u.shape);return l.runWebGLProgram(P,[w,_],At(C.dtype,k.dtype))}),x=Un({inputs:{real:g,imag:b},backend:l});return l.disposeIntermediateTensorInfo(g),l.disposeIntermediateTensorInfo(b),x}let m=s||At(p.dtype,u.dtype);if((p.dtype==="string"||u.dtype==="string"||l.shouldExecuteOnCPU([p,u]))&&o!=null){let f=l.texData.get(p.dataId).values,h=l.texData.get(u.dataId).values,g=p.dtype==="string"?I.fromUint8ToStringArray(f):f,b=p.dtype==="string"?I.fromUint8ToStringArray(h):h,[x,T]=o(p.shape,u.shape,g,b,m),C=l.makeTensorInfo(T,m),k=l.texData.get(C.dataId);return k.values=x,C}let c=L().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null,d;return c?d=new po(t,p.shape,u.shape,e):d=new Wn(r,p.shape,u.shape),l.runWebGLProgram(d,[p,u],m)}}function lp(r,t=!1){if(r==="linear")return t?_G:vG;if(r==="relu")return t?PG:wG;if(r==="elu")return t?MG:SG;if(r==="relu6")return t?RG:AG;if(r==="prelu")return t?C2:T2;if(r==="leakyrelu")return t?x2:y2;if(r==="sigmoid")return t?FG:NG;throw new Error(`Activation ${r} has not been implemented for the WebGL backend.`)}var Vf=class{constructor(t,e,n,o=!1,s=!1,a=!1,i=null,p=!1,u=!1){this.variableNames=["matrixA","matrixB"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=n,this.enableShapeUniforms=Ct(this.outputShape.length);let l=o?t[1]:t[2],m=Math.ceil(l/2),c=o?"i * 2, rc.y":"rc.y, i * 2",d=s?"rc.z, i * 2":"i * 2, rc.z",f=o?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],h=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],g="",b="";i&&(p?g=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:u?g=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:g=`vec4 activation(vec4 x) {
          ${i}
        }`,b="result = activation(result);");let x=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),p&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let T="rc.x",C="rc.x";t[0]<e[0]?T=`imod(rc.x, ${t[0]})`:e[0]<t[0]&&(C=`imod(rc.x, ${e[0]})`),this.userCode=`
      ${g}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${m}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${T};
        int batchB = ${C};
        for (int i = 0; i < ${m}; i++) {
          vec4 a = getMatrixA(batchA, ${c});
          vec4 b = getMatrixB(batchB, ${d});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${f[0]} * ${h[0]});
          result += (${f[1]} * ${h[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${x}

        ${b}

        setOutput(result);
      }
    `}};var I2={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},Mg=class{constructor(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"];this.outputShape=I.assertAndGetBroadcastShape(e,n),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${t}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}};var zG="return a * b;";function Pg(r){let{inputs:t,backend:e}=r,{a:n,b:o}=t,s=I.upcastType(n.dtype,o.dtype);if(n.dtype==="complex64"){let i=e.texData.get(n.dataId),p=e.texData.get(o.dataId),u=new Mg(I2.REAL,n.shape,o.shape),l=new Mg(I2.IMAG,n.shape,o.shape),m=[{dataId:i.complexTensorInfos.real.dataId,dtype:i.complexTensorInfos.real.dtype,shape:n.shape},{dataId:i.complexTensorInfos.imag.dataId,dtype:i.complexTensorInfos.imag.dtype,shape:n.shape},{dataId:p.complexTensorInfos.real.dataId,dtype:p.complexTensorInfos.real.dtype,shape:o.shape},{dataId:p.complexTensorInfos.imag.dataId,dtype:p.complexTensorInfos.imag.dtype,shape:o.shape}],c=e.runWebGLProgram(u,m,"float32"),d=e.runWebGLProgram(l,m,"float32"),f=Un({inputs:{real:c,imag:d},backend:e});return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(d),f}if(e.shouldExecuteOnCPU([n,o])){let i=e.texData.get(n.dataId),p=e.texData.get(o.dataId),[u,l]=Yz(n.shape,o.shape,i.values,p.values,s),m=e.makeTensorInfo(l,s),c=e.texData.get(m.dataId);return c.values=u,m}let a;return L().getBool("WEBGL_PACK_BINARY_OPERATIONS")?a=new po(zG,n.shape,o.shape):a=new Wn(zG,n.shape,o.shape),e.runWebGLProgram(a,[n,o],s)}var GG={kernelName:ds,backendName:"webgl",kernelFunc:Pg};function WG(r,t,e){let n=[up(r.shape),...pp(r.shape)],o={dtype:r.dtype,shape:n,dataId:r.dataId},s=[up(t),...pp(t)],a=new Wf(s,n),i=!0,p=[n],u=e.runWebGLProgram(a,[o],r.dtype,p,i);return{dataId:u.dataId,shape:t,dtype:u.dtype}}function ue(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{shape:s}=n,a=e,i=y.sizeFromShape(o.shape),p=y.inferFromImplicitShape(s,i),u=y.sizeFromShape(p);y.assert(i===u,()=>`The new shape (${p}) has ${u} elements and the old shape (${o.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`);let l=a.texData.get(o.dataId);return l.isPacked&&!al(o.shape,p)&&!(l.texture!==null&&al(l.shape,p))?WG(o,p,a):(a.incRef(o.dataId),{dataId:o.dataId,shape:p,dtype:o.dtype})}var UG={kernelName:ia,backendName:"webgl",kernelFunc:ue};var Rg=class{constructor(t,e){this.variableNames=["x"];let{windowSize:n,batchSize:o,inSize:s,outSize:a}=t;this.outputShape=[o,a];let i=Math.floor(n/4)*4,p=n%4,u="sumValue += dot(values, ones);";if(e!=null){let m=1/e;u=`sumValue += dot(values * ${y.isInt(m)?m.toPrecision(2):m}, ones);`}let l="";s%n>0&&(l=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${l}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        float sumValue = 0.0;

        for (int i = 0; i < ${i}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${u}
        }

        int inIdx = inOffset + ${i};
        if (${p===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${u}
        } else if (${p===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${u}
        } else if (${p===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${u}
        }
        setOutput(sumValue);
      }
    `}};var TC=class{constructor(t,e){this.variableNames=["x"];let{windowSize:n,batchSize:o,inSize:s,outSize:a}=t;this.outputShape=[o,a];let i="0.0",p="";e==="prod"?i="1.0":e==="min"?(i="1.0 / 1e-20",p="min"):e==="max"&&(i="-1.0 / 1e-20",p="max");let u=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="sum"?u="sumValue":e==="prod"?u="prodValue":e==="all"?u="allValue":e==="any"&&(u="anyValue");let l=Math.floor(n/4)*4,m=n%4,c=`
      if (${e==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${e==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${p}(values, minMaxValue);
        if (${e==="min"} || ${e==="max"}) {
          minMaxValue = ${p}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,d="vec4";e==="all"?(i="1.0",c=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,d="bvec4"):e==="any"&&(i="0.0",c=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,d="bvec4");let f="";s%n>0&&(f=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${i};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        vec4 minMaxValue = vec4(${i});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${l}; i += 4) {
          int inIdx = inOffset + i;
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${c}
        }

        int inIdx = inOffset + ${l};
        if (${m===1}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${c}
        } else if (${m===2}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${c}
        } else if (${m===3}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${c}
        }
        setOutput(${u});
      }
    `}};function Pme(r){let t=[];for(;t.length===0||t[t.length-1].outSize!==1;){let e=t.length?t[t.length-1].outSize:r[1],n=I.computeOptimalWindowSize(e);t.push({inSize:e,windowSize:n,outSize:Math.ceil(e/n)})}return t}function mo(r,t,e,n){let o=Pme(r.shape),s=r;for(let a=0;a<o.length;a++){let{inSize:i,windowSize:p,outSize:u}=o[a],l,m;e==="mean"?l=a===0?new Rg({windowSize:p,inSize:i,batchSize:r.shape[0],outSize:u},i):new Rg({windowSize:p,inSize:i,batchSize:r.shape[0],outSize:u}):l=new TC({windowSize:p,inSize:i,batchSize:r.shape[0],outSize:u},e),m=s,s=n.runWebGLProgram(l,[s],t),m.dataId!==r.dataId&&n.disposeIntermediateTensorInfo(m)}return s}var CC=class{constructor(t,e){this.variableNames=["A"];let n=new Array(t.length);for(let a=0;a<n.length;a++)n[a]=t[e[a]];this.outputShape=n,this.rank=n.length;let o=Ue(this.rank),s=Rme(e);this.userCode=`
    void main() {
      ${o} resRC = getOutputCoords();
      setOutput(getA(${s}));
    }
    `}};function Rme(r){let t=r.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],n=new Array(t);for(let o=0;o<r.length;o++)n[r[o]]=e[o];return n.join()}var IC=class{constructor(t,e){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;let n=new Array(t.length);for(let l=0;l<n.length;l++)n[l]=t[e[l]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let o=Ue(this.rank),s=h2("rc",this.rank),a=new Array(this.rank);for(let l=0;l<e.length;l++)a[e[l]]=s[l];let i=`vec2(${a.slice(-2).join()})`,p=`++${s[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`
    void main() {
      ${o} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${u};
      if(${p}) {
        result[1] = ${u};
      }
      --${s[this.rank-1]};
      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {
        result[2] = ${u};
        if(${p}) {
          result[3] = ${u};
        }
      }
      setOutput(result);
    }
    `}};function il(r,t,e){let n=L().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new IC(r.shape,t):new CC(r.shape,t);return e.runWebGLProgram(n,[r],r.dtype)}function KG(r,t,e,n){let o=t,s=r.shape.length,a=y.parseAxisParam(o,r.shape),i=a,p=I.getAxesPermutation(i,s),u=p!=null,l=r;u&&(l=il(r,p,n),i=I.getInnerMostAxes(i.length,s)),I.assertAxesAreInnerMostDims("sum",i,s);let[m,c]=I.computeOutAndReduceShapes(l.shape,i),d=m;e&&(d=I.expandShapeToKeepDim(m,a));let f=y.sizeFromShape(c),g=y.sizeFromShape(r.shape)/f,b=ue({inputs:{x:l},attrs:{shape:[g,f]},backend:n}),x=Uu(r.dtype),T=mo(b,x,"sum",n),C=ue({inputs:{x:T},attrs:{shape:d},backend:n});return n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(T),u&&n.disposeIntermediateTensorInfo(l),C}function Em(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:a}=n;return KG(o,s,a,e)}var VG={kernelName:Fs,backendName:"webgl",kernelFunc:Em};function Vt(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{perm:s}=n,a=e,i=o.shape.length,p=new Array(i);for(let l=0;l<p.length;l++)p[l]=o.shape[s[l]];let u;if(a.shouldExecuteOnCPU([o])){let m=a.texData.get(o.dataId).values,c=Fm(m,o.shape,o.dtype,s,p);u=a.makeTensorInfo(p,o.dtype);let d=a.texData.get(u.dataId);d.values=c}else u=il(o,s,a);return u}var HG={kernelName:Rn,backendName:"webgl",kernelFunc:Vt};var k2=1e3;function Lm({a:r,b:t,transposeA:e,transposeB:n,backend:o,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:p=null}){let u=r.shape.length,l=t.shape.length,m=e?r.shape[u-2]:r.shape[u-1],c=n?t.shape[l-1]:t.shape[l-2],d=e?r.shape[u-1]:r.shape[u-2],f=n?t.shape[l-2]:t.shape[l-1],h=r.shape.slice(0,-2),g=t.shape.slice(0,-2),b=y.sizeFromShape(h),x=y.sizeFromShape(g),C=Mr.assertAndGetBroadcastShape(r.shape.slice(0,-2),t.shape.slice(0,-2)).concat([d,f]);y.assert(m===c,()=>`Error in matMul: inner shapes (${m}) and (${c}) of Tensors with shapes ${r.shape} and ${t.shape} and transposeA=${e} and transposeB=${n} must match.`);let k=e?[b,m,d]:[b,d,m],w=n?[x,f,c]:[x,c,f],_=ue({inputs:{x:r},backend:o,attrs:{shape:k}}),P=ue({inputs:{x:t},backend:o,attrs:{shape:w}}),M=[_,P],R=Math.max(b,x),$=e?_.shape[1]:_.shape[2],G=s!=null,W=a!=null,U=p==="leakyrelu",V=p!=null?lp(p,!0):null,K=G||W||U||V!=null,q;if((d===1||f===1)&&$>k2&&K===!1){let te=_,se=P;e&&(te=Vt({inputs:{x:_},backend:o,attrs:{perm:[0,2,1]}}),M.push(te)),n&&(se=Vt({inputs:{x:P},backend:o,attrs:{perm:[0,2,1]}}),M.push(se));let ie=f!==1,pe=f===1,ae=te;ie&&(ae=ue({inputs:{x:te},backend:o,attrs:{shape:[R,$,1]}}),M.push(ae));let le=f===1?2:1,fe=se;pe&&(fe=ue({inputs:{x:se},backend:o,attrs:{shape:[R,1,$]}}),M.push(fe));let Te=Pg({inputs:{a:ae,b:fe},backend:o});q=Em({inputs:{x:Te},backend:o,attrs:{axis:le,keepDims:!0}}),M.push(Te)}else{let te=At(r.dtype,t.dtype),se=new Vf(k,w,[R,d,f],e,n,G,V,W,U),ie=[_,P];if(s!=null&&ie.push(s),W&&ie.push(a),U){let pe=o.makeTensorInfo([],"float32",y.createScalarValue(i,"float32"));ie.push(pe),M.push(pe)}q=o.runWebGLProgram(se,ie,te)}let j=ue({inputs:{x:q},backend:o,attrs:{shape:C}});M.push(q);for(let te of M)o.disposeIntermediateTensorInfo(te);return j}function Fme(r){let{inputs:t,backend:e,attrs:n}=r,{a:o,b:s,bias:a,preluActivationWeights:i}=t,{transposeA:p,transposeB:u,activation:l,leakyreluAlpha:m}=n;return Lm({a:o,b:s,transposeA:p,transposeB:u,backend:e,bias:a,preluActivationWeights:i,leakyreluAlpha:m,activation:l})}var qG={kernelName:fa,backendName:"webgl",kernelFunc:Fme};var jG="return abs(x);";function Eme(r){let{inputs:t,backend:e}=r,{x:n}=t;if(e.shouldExecuteOnCPU([n])&&n.dtype!=="complex64"){let s=e.texData.get(n.dataId),a=fC(s.values);return e.makeTensorInfo(n.shape,n.dtype,a)}let o;return L().getBool("WEBGL_PACK_UNARY_OPERATIONS")?o=new Gn(n.shape,jG):o=new Kr(n.shape,jG),e.runWebGLProgram(o,[n],n.dtype)}var XG={kernelName:Xs,backendName:"webgl",kernelFunc:Eme};var Lme=Sr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,Bme=Se({opSnippet:Lme}),YG={kernelName:vo,backendName:"webgl",kernelFunc:Bme};var $me=Sr+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,Ome=Se({opSnippet:$me}),ZG={kernelName:So,backendName:"webgl",kernelFunc:Ome};var QG="return a + b;",zme=gt({opSnippet:QG,packedOpSnippet:QG,supportsComplex:!0,cpuKernelImpl:Dz}),JG={kernelName:Mn,backendName:"webgl",kernelFunc:zme};var kC=class{constructor(t,e){this.outputShape=[];this.outputShape=t,this.variableNames=e.map((s,a)=>`T${a}`);let n=[];this.variableNames.forEach(s=>{n.push(`float v${s} = get${s}AtOutCoords();`)});let o=this.variableNames.map(s=>`v${s}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        float result = ${o};
        setOutput(result);
      }
    `}};var vC=class{constructor(t,e){this.outputShape=[];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=t,this.variableNames=e.map((s,a)=>`T${a}`);let n=[];this.variableNames.forEach(s=>{n.push(`vec4 v${s} = get${s}AtOutCoords();`)});let o=this.variableNames.map(s=>`v${s}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        vec4 result = ${o};
        setOutput(result);
      }
    `}};function SC(r){let{inputs:t,backend:e}=r,n=t;if(n.length===1)return lr({inputs:{x:n[0]},backend:e});if(n.length>L().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let p=Math.floor(n.length/2),u=SC({inputs:n.slice(0,p),backend:e}),l=SC({inputs:n.slice(p),backend:e});return SC({inputs:[u,l],backend:e})}let o=n.map(p=>p.dtype).reduce((p,u)=>At(p,u)),s=n.map(p=>p.shape),i=L().getBool("WEBGL_PACK")?new vC(n[0].shape,s):new kC(n[0].shape,s);return e.runWebGLProgram(i,n,o)}var eW={kernelName:wo,backendName:"webgl",kernelFunc:SC};function Gme(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:a}=n,i=o.shape.length,p=y.parseAxisParam(s,o.shape),u=p,l=I.getAxesPermutation(u,i),m=o;l!=null&&(m=Vt({inputs:{x:o},backend:e,attrs:{perm:l}}),u=I.getInnerMostAxes(u.length,i)),I.assertAxesAreInnerMostDims("all",u,i);let[c,d]=I.computeOutAndReduceShapes(m.shape,u),f=y.sizeFromShape(d),h=ue({inputs:{x:m},backend:e,attrs:{shape:[-1,f]}}),g=mo(h,h.dtype,"all",e),b;if(a){let x=I.expandShapeToKeepDim(c,p);b=ue({inputs:{x:g},backend:e,attrs:{shape:x}})}else b=ue({inputs:{x:g},backend:e,attrs:{shape:c}});return e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(g),l!=null&&e.disposeIntermediateTensorInfo(m),b}var tW={kernelName:Ka,backendName:"webgl",kernelFunc:Gme};function Wme(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:a}=n,i=o.shape.length,p=y.parseAxisParam(s,o.shape),u=p,l=I.getAxesPermutation(u,i),m=o;l!=null&&(m=Vt({inputs:{x:o},backend:e,attrs:{perm:l}}),u=I.getInnerMostAxes(u.length,i)),I.assertAxesAreInnerMostDims("any",u,i);let[c,d]=I.computeOutAndReduceShapes(m.shape,u),f=y.sizeFromShape(d),h=ue({inputs:{x:m},backend:e,attrs:{shape:[-1,f]}}),g=mo(h,h.dtype,"any",e),b;if(a){let x=I.expandShapeToKeepDim(c,p);b=ue({inputs:{x:g},backend:e,attrs:{shape:x}})}else b=ue({inputs:{x:g},backend:e,attrs:{shape:c}});return e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(g),l!=null&&e.disposeIntermediateTensorInfo(m),b}var rW={kernelName:Va,backendName:"webgl",kernelFunc:Wme};var wC=class{constructor(t,e,n){this.variableNames=["A"];let{windowSize:o,batchSize:s,outSize:a}=t;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a];let i=e==="max"?">":"<",p=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${o};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${o}; i++) {
          int inIdx = ${p};
          float candidate = getA(batch, inIdx);
          if (candidate ${i} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}};var AC=class{constructor(t,e,n,o){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;y.assert(t.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);let s=t[t.length-1],a=Math.ceil(s/e);this.outputShape=t.slice(0,-1),a>1&&this.outputShape.push(a),o||this.variableNames.push("bestIndicesA");let i=this.outputShape,p=i.length,u=Ue(p),l=pr("coords",p),m,c;if(a===1){c=p+1;let P=Ue(c);m=`
        ${P} sourceLocR = ${P}(${l.join()}, 0);
        ++${l[p-1]};
        ${P} sourceLocG = ${P}(${l.join()}, 0);
        ++${l[p-2]};
        ${P} sourceLocA = ${P}(${l.join()}, 0);
        --${l[p-1]};
        ${P} sourceLocB = ${P}(${l.join()}, 0);
        --${l[p-2]};`}else c=p,m=`
        ${u} sourceLocR = coords;
        ++${l[p-1]};
        ${u} sourceLocG = coords;
        ++${l[p-2]};
        ${u} sourceLocA = coords;
        --${l[p-1]};
        ${u} sourceLocB = coords;
        --${l[p-2]};`;let d=["x","y","z","w","u","v"].slice(0,c),f="."+d[c-1],h=d.map(P=>"int "+P),g=pr("sourceLocR",c-1).concat("inIdx.r"),b=pr("sourceLocG",c-1).concat("inIdx.g"),x=pr("sourceLocB",c-1).concat("inIdx.b"),T=pr("sourceLocA",c-1).concat("inIdx.a"),C=n==="max"?"greaterThan":"lessThan",k=o?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${b.join()}),
                             getBestIndicesAChannel(${x.join()}),
                             getBestIndicesAChannel(${T.join()})));`,w=`vec4(
            getAChannel(${g.join()}),
            hasNextCol ? getAChannel(${b.join()}) : 0.,
            hasNextRow ? getAChannel(${x.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${T.join()}) : 0.)`,_=o?"":`
      float getBestIndicesAChannel(${h.join()}) {
        return getChannel(getBestIndicesA(${d.join()}),
                                          vec2(${d.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${h.join()}) {
        return getChannel(getA(${d.join()}),
                               vec2(${d.slice(-2).join()}));
      }
      ${_}
      void main() {
        ${u} coords = getOutputCoords();
        bool hasNextCol = ${l[p-1]} < ${i[p-1]-1};
        bool hasNextRow = ${l[p-2]} < ${i[p-2]-1};
        ${m}
        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},
          sourceLocB${f}, sourceLocA${f}) * ${e};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${w};

        for (int i = 0; i < ${e}; i++) {
          inIdx = srcIdx;
          ${k}
          vec4 candidate = ${w};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${C}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function nW(r,t,e,n=null){let o=t.shape[0],s=t.shape[1];n!=null&&(o=n.shape[0],s=n.shape[1]);let a=I.computeOptimalWindowSize(s),i={windowSize:a,inSize:s,batchSize:o,outSize:Math.ceil(s/a)},p=new wC(i,e,n==null),u=[t];n!=null&&u.push(n);let l=r.runWebGLProgram(p,u,"int32");if(l.shape[1]===1)return l;let m=nW(r,t,e,l);return r.disposeIntermediateTensorInfo(l),m}function oW(r,t,e,n=null){let o=n!=null?n.shape:t.shape,s=o[o.length-1],a=I.computeOptimalWindowSize(s),i=new AC(o,a,e,n==null),p=n==null?[t]:[t,n],u=r.runWebGLProgram(i,p,"int32");if(u.shape.length===t.shape.length){let l=oW(r,t,e,u);return r.disposeIntermediateTensorInfo(u),l}return u}function NC(r,t,e,n){let o=[e];if(I.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),o,t.shape.length),!L().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let s=[],a=r.texData.get(t.dataId),i=a!==null&&a.isPacked,p=t;i&&(p=r.unpackTensor(t),s.push(p));let[u,l]=I.computeOutAndReduceShapes(p.shape,o),m=y.sizeFromShape(l),c=ue({inputs:{x:p},backend:r,attrs:{shape:[-1,m]}});s.push(c);let d=nW(r,c,n);s.push(d);let f=ue({inputs:{x:d},backend:r,attrs:{shape:u}});return s.forEach(h=>r.disposeIntermediateTensorInfo(h)),f}return oW(r,t,n)}function Ume(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s}=n,a=y.parseAxisParam(s,o.shape),i=I.getAxesPermutation(a,o.shape.length),p=o,u=[];i!=null&&(p=Vt({inputs:{x:o},backend:e,attrs:{perm:i}}),u.push(p),a=I.getInnerMostAxes(a.length,p.shape.length)),I.assertAxesAreInnerMostDims("argMax",[a[0]],p.shape.length);let l=NC(e,p,a[0],"max");return u.forEach(m=>e.disposeIntermediateTensorInfo(m)),l}var sW={kernelName:Ys,backendName:"webgl",kernelFunc:Ume};function Kme(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s}=n,a=y.parseAxisParam(s,o.shape),i=I.getAxesPermutation(a,o.shape.length),p=o,u=[];i!=null&&(p=Vt({inputs:{x:o},backend:e,attrs:{perm:i}}),u.push(p),a=I.getInnerMostAxes(a.length,p.shape.length)),I.assertAxesAreInnerMostDims("argMin",[a[0]],p.shape.length);let l=NC(e,p,a[0],"min");return u.forEach(m=>e.disposeIntermediateTensorInfo(m)),l}var aW={kernelName:Zs,backendName:"webgl",kernelFunc:Kme};var Vme=Sr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,Hme=Se({opSnippet:Vme}),iW={kernelName:Ao,backendName:"webgl",kernelFunc:Hme};var qme=Sr+"return log(x + sqrt(x * x + 1.0));",jme=Se({opSnippet:qme}),uW={kernelName:No,backendName:"webgl",kernelFunc:jme};var Xme=Sr+`
  return atan(x);
`,Yme=Se({opSnippet:Xme}),pW={kernelName:Do,backendName:"webgl",kernelFunc:Yme};var Zme=Kf+`
  return atan(a, b);
`,Qme=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+lo+`
  return result;
`,Jme=gt({opSnippet:Zme,packedOpSnippet:Qme}),lW={kernelName:Mo,backendName:"webgl",kernelFunc:Jme};var ece=Sr+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,tce=Se({opSnippet:ece}),mW={kernelName:_o,backendName:"webgl",kernelFunc:tce};var Ki=class{constructor(t,e,n,o=!1,s=!1){this.variableNames=["x"];if(e==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=t.filterWidth,i=t.strideHeight,p=t.strideWidth,u=t.dilationHeight,l=t.dilationWidth,m=t.effectiveFilterHeight,c=t.effectiveFilterWidth,d=t.padInfo.top,f=t.padInfo.left;this.outputShape=t.outShape;let h=e==="avg",g=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,b=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`,x="0.0";if(h||(x="-1.0 / 1e-20"),n){let P=">=";this.userCode=`
        const ivec2 strides = ivec2(${i}, ${p});
        const ivec2 pads = ivec2(${d}, ${f});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${m};
              wR += ${u}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${c};
                wC += ${l}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${P} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${o?s?g:b:`wR * ${c} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let T="max",C=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(C="avgValue / max(count, 1.0)");let k=Math.floor(a/4)*4,w=a%4,_=`
      if (${h}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${T}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${p});
      const ivec2 pads = ivec2(${d}, ${f});
      const float initializationValue = ${x};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${x});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${m};
            wR += ${u}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${k}; wC += 4) {
            int xC = xCCorner + wC * ${l};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              getValue(batch, xR, xC + 2 * ${l}, d),
              getValue(batch, xR, xC + 3 * ${l}, d)
            );

            ${_}
          }

          int xC = xCCorner + ${k};
          if (${w===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${_}
          } else if (${w===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              initializationValue,
              initializationValue
            );

            ${_}
          } else if (${w===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              getValue(batch, xR, xC + 2 * ${l}, d),
              initializationValue
            );

            ${_}
          }
        }
        setOutput(${C});
      }
    `}},ul=class{constructor(t,e,n,o=!1,s=!1){this.variableNames=["x"];if(e==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=t.filterWidth,i=t.strideDepth,p=t.strideHeight,u=t.strideWidth,l=t.dilationDepth,m=t.dilationHeight,c=t.dilationWidth,d=t.effectiveFilterDepth,f=t.effectiveFilterHeight,h=t.effectiveFilterWidth,g=t.padInfo.front,b=t.padInfo.top,x=t.padInfo.left;this.outputShape=t.outShape;let T=e==="avg",C="0.0";if(T||(C="-1.0 / 1e-20"),n){let R=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${i}, ${p}, ${u});
        const ivec3 pads = ivec3(${g}, ${b}, ${x});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${d};
              wD += ${l}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${t.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${f};
                wR += ${m}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${h};
                  wC += ${c}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${R} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${o?s?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${f} * ${h} +
                      wR * ${h} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let k="max",w=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(w="avgValue / max(count, 1.0)");let _=Math.floor(a/4)*4,P=a%4,M=`
      if (${T}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${k}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${i}, ${p}, ${u});
      const ivec3 pads = ivec3(${g}, ${b}, ${x});
      const float initializationValue = ${C};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${C});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${d};
            wD += ${l}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${f};
            wR += ${m}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${_}; wC += 4) {
              int xC = xCCorner + wC * ${c};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${c}, ch),
                getValue(batch, xD, xR, xC + 2 * ${c}, ch),
                getValue(batch, xD, xR, xC + 3 * ${c}, ch)
              );

              ${M}
            }

            int xC = xCCorner + ${_};
            if (${P===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${M}
            } else if (${P===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${c}, ch),
                initializationValue,
                initializationValue
              );

              ${M}
            } else if (${P===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${c}, ch),
                getValue(batch, xD, xR, xC + 2 * ${c}, ch),
                initializationValue
              );

              ${M}
            }
          }
        }
        setOutput(${w});
      }
    `}};function rce(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t;Wi(o,"avgPool");let{filterSize:s,strides:a,pad:i,dimRoundingMode:p}=n,u=1;y.assert(I.eitherStridesOrDilationsAreOne(a,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);let l=I.computePool2DInfo(o.shape,s,a,u,i,p);if(l.filterWidth===1&&l.filterHeight===1&&y.arraysEqual(l.inShape,l.outShape))return lr({inputs:{x:o},backend:e});let m=new Ki(l,"avg",!1);return e.runWebGLProgram(m,[o],"float32")}var cW={kernelName:Po,backendName:"webgl",kernelFunc:rce};function nce(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{filterSize:s,strides:a,pad:i,dimRoundingMode:p,dataFormat:u}=n,l=[1,1,1],m=I.computePool3DInfo(o.shape,s,a,l,i,p,u),c=new ul(m,"avg",!1);return e.runWebGLProgram(c,[o],"float32")}var dW={kernelName:Qs,backendName:"webgl",kernelFunc:nce};var DC=class{constructor(t){this.variableNames=["dy"];this.outputShape=t.inShape;let e=t.filterHeight,n=t.filterWidth,o=t.strideHeight,s=t.strideWidth,a=t.dilationHeight,i=t.dilationWidth,p=t.effectiveFilterHeight,u=t.effectiveFilterWidth,l=p-1-t.padInfo.top,m=u-1-t.padInfo.left,c=1/(e*n);this.userCode=`
      const ivec2 pads = ivec2(${l}, ${m});
      const float avgMultiplier = float(${c});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${p};
            wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${u};
            wC+= ${i}) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},_C=class{constructor(t){this.variableNames=["dy"];this.outputShape=t.inShape;let e=t.filterDepth,n=t.filterHeight,o=t.filterWidth,s=t.strideDepth,a=t.strideHeight,i=t.strideWidth,p=t.dilationDepth,u=t.dilationHeight,l=t.dilationWidth,m=t.effectiveFilterDepth,c=t.effectiveFilterHeight,d=t.effectiveFilterWidth,f=m-1-t.padInfo.front,h=c-1-t.padInfo.top,g=d-1-t.padInfo.left,b=1/(e*n*o);this.userCode=`
      const ivec3 pads = ivec3(${f}, ${h}, ${g});
      const float avgMultiplier = float(${b});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${m};
            wD += ${p}) {
          float dyD = float(dyDCorner + wD) / ${s}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${c};
              wR += ${u}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${d};
                wC += ${l}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function oce(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,input:s}=t,a=s,{filterSize:i,strides:p,pad:u,dimRoundingMode:l}=n,m=[1,1,1],c=I.computePool3DInfo(a.shape,i,p,m,u,l),d=new _C(c);return e.runWebGLProgram(d,[o],a.dtype)}var fW={kernelName:Zi,backendName:"webgl",kernelFunc:oce};function sce(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,input:s}=t,a=s;Wi([o,s],"avgPoolGrad");let{filterSize:i,strides:p,pad:u}=n,l=I.computePool2DInfo(a.shape,i,p,1,u),m=new DC(l);return e.runWebGLProgram(m,[o],a.dtype)}var hW={kernelName:Yi,backendName:"webgl",kernelFunc:sce};function ace(r){let{inputs:t,backend:e,attrs:n}=r,{a:o,b:s}=t,{transposeA:a,transposeB:i}=n;return Lm({a:o,b:s,transposeA:a,transposeB:i,backend:e})}var gW={kernelName:Ro,backendName:"webgl",kernelFunc:ace};var MC=class{constructor(t,e,n,o,s,a){this.outputShape=[];this.variableNames=["x","mean","variance"],I.assertAndGetBroadcastShape(t,e),I.assertAndGetBroadcastShape(t,n);let i="0.0";o!=null&&(I.assertAndGetBroadcastShape(t,o),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let p="1.0";s!=null&&(I.assertAndGetBroadcastShape(t,s),this.variableNames.push("scale"),p="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${i};
        float scale = ${p};
        float inv = scale * inversesqrt(variance + float(${a}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}};var PC=class{constructor(t,e,n,o,s,a){this.packedInputs=!0;this.packedOutput=!0;this.variableNames=["x","mean","variance"],I.assertAndGetBroadcastShape(t,e),I.assertAndGetBroadcastShape(t,n);let i="vec4(0.0)";o!=null&&(I.assertAndGetBroadcastShape(t,o),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let p="vec4(1.0)";s!=null&&(I.assertAndGetBroadcastShape(t,s),this.variableNames.push("scale"),p="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        vec4 offset = ${i};
        vec4 scale = ${p};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${a}));

        setOutput((x - mean) * inv + offset);
      }
    `}};var ice=({inputs:r,backend:t,attrs:e})=>{let{x:n,mean:o,variance:s,offset:a,scale:i}=r;y.assert(o.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),y.assert(a==null||o.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),y.assert(i==null||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:p}=e;p==null&&(p=.001);let u=[n,o,s],l=null;a!=null&&(l=a.shape,u.push(a));let m=null;i!=null&&(m=i.shape,u.push(i));let c=L().getBool("WEBGL_PACK_NORMALIZATION")?new PC(n.shape,o.shape,s.shape,l,m,p):new MC(n.shape,o.shape,s.shape,l,m,p);return t.runWebGLProgram(c,u,u[0].dtype)},bW={kernelName:Yo,backendName:"webgl",kernelFunc:ice};var RC=class{constructor(t){this.variableNames=["source"];this.outputShape=t,this.rank=t.length;let e=Ue(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n=uce(this.rank),o,s=t.map((a,i)=>`sourceLoc.${v2[i]} = start[${i}] + coords.${v2[i]};`);o=`
        ${e} sourceLoc;
        ${e} coords = getOutputCoords();
        ${s.join(`
`)}
      `,this.userCode=`
      void main() {
        ${o}
        setOutput(getSource(${n}));
      }
    `}},v2=["x","y","z","w","u","v"];function uce(r){if(r===1)return"sourceLoc";if(r<=6)return v2.slice(0,r).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${r} is not yet supported`)}var FC=class{constructor(t){this.variableNames=["source"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=t,this.rank=t.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let e=Ue(this.rank),n=pr("coords",this.rank),o=pr("sourceLoc",this.rank),s=this.rank===1?"sourceLoc":`vec2(${o.slice(-2).join()})`,a=`getChannel(getSource(${o.join()}), ${s})`,i=`
      result.x = ${a};
      if (++${n[this.rank-1]} < ${t[this.rank-1]}) {
        ++${o[this.rank-1]};
        result.y = ${a};
        --${o[this.rank-1]};
      }
    `,p=this.rank===1?"":`
      --${n[this.rank-1]};
      if (++${n[this.rank-2]} < ${t[this.rank-2]}) {
        ++${o[this.rank-2]};
        result.z = ${a};
        if (++${n[this.rank-1]} < ${t[this.rank-1]}) {
          ++${o[this.rank-1]};
          result.w = ${a};
        }
      }
    `,u=this.rank<=4?`sourceLoc = coords +
            ${e}(${t.map((l,m)=>`start[${m}]`).join()});`:t.map((l,m)=>`${o[m]} = ${n[m]} + start[${m}];`).join(`
`);this.userCode=`
      void main() {
        ${e} coords = getOutputCoords();
        ${e} sourceLoc;
        ${u}
        vec4 result = vec4(0.);
        ${i}
        ${p}
        setOutput(result);
      }
    `}};function pce(r,t,e,n){let o=n.texData.get(r.dataId),s=n.makeTensorInfo(e,r.dtype),a=n.texData.get(s.dataId);Object.assign(a,o),a.refCount=1,a.shape=e,a.dtype=r.dtype;let i=kt.computeFlatOffset(t,y.computeStrides(r.shape));o.slice&&(i+=o.slice.flatOffset),a.slice={flatOffset:i,origDataId:o.slice&&o.slice.origDataId||r.dataId};let p=n.dataRefCount.get(a.slice.origDataId)||1;return n.dataRefCount.set(a.slice.origDataId,p+1),s}function Vi(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{begin:s,size:a}=n,[i,p]=kt.parseSliceParams(o,s,a);if(kt.assertParamsValid(o,i,p),y.sizeFromShape(p)===0)return e.makeTensorInfo(p,o.dtype,[]);if(e.shouldExecuteOnCPU([o])||o.dtype==="string"){let m=e.texData.get(o.dataId),c=iG(m.values,i,p,o.shape,o.dtype);return e.makeTensorInfo(p,o.dtype,c)}let{isPacked:u}=e.texData.get(o.dataId),l=kt.isSliceContinous(o.shape,i,p);if(u||!l){let m=L().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new FC(p):new RC(p),c=[i];return e.runWebGLProgram(m,[o],o.dtype,c)}return e.uploadToGPU(o.dataId),pce(o,i,p,e)}var yW={kernelName:pa,backendName:"webgl",kernelFunc:Vi};var lce=r=>{let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{blockShape:s,crops:a}=n;y.assert(o.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let i=s.reduce((x,T)=>x*T),p=I.getReshaped(o.shape,s,i),u=I.getPermuted(p.length,s.length),l=I.getReshapedPermuted(o.shape,s,i),m=I.getSliceBeginCoords(a,s.length),c=I.getSliceSize(l,a,s.length),d=[],f=ue({inputs:{x:o},backend:e,attrs:{shape:p}}),h=Vt({inputs:{x:f},backend:e,attrs:{perm:u}}),g=ue({inputs:{x:h},backend:e,attrs:{shape:l}}),b=Vi({inputs:{x:g},backend:e,attrs:{begin:m,size:c}});return d.push(f),d.push(h),d.push(g),d.forEach(x=>e.disposeIntermediateTensorInfo(x)),b},xW={kernelName:Js,backendName:"webgl",kernelFunc:lce};function mce(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,weights:s}=t,{size:a}=n,i=e.readSync(o.dataId),p=e.readSync(s.dataId),u=dC(i,p,s.dtype,s.shape,a);return e.makeTensorInfo([a],s.dtype,u)}var TW={kernelName:Ha,backendName:"webgl",kernelFunc:mce};var cce=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,dce=`
  return float(int(a.r) & int(b.r));
`;function fce(r){let{inputs:t,backend:e}=r,{a:n,b:o}=t,s=L().getBool("WEBGL_PACK_BINARY_OPERATIONS"),a=L().getNumber("WEBGL_VERSION");if(e.shouldExecuteOnCPU([n,o])||a===1){let p=e.texData.get(n.dataId).values,u=e.texData.get(o.dataId).values,[l,m]=Mz(n.shape,o.shape,p,u,n.dtype),c=e.makeTensorInfo(m,n.dtype),d=e.texData.get(c.dataId);return d.values=l,c}let i;return s?i=new po(cce,n.shape,o.shape,!1):i=new Wn(dce,n.shape,o.shape),e.runWebGLProgram(i,[n,o],n.dtype)}var CW={kernelName:$u,backendName:"webgl",kernelFunc:fce};function hce(r){let{inputs:t,backend:e}=r,{s0:n,s1:o}=t,s=e.readSync(n.dataId),a=e.readSync(o.dataId),i=I.assertAndGetBroadcastShape(Array.from(s),Array.from(a));return e.makeTensorInfo([i.length],"int32",Int32Array.from(i))}var IW={kernelName:Qi,backendName:"webgl",kernelFunc:hce};var gce="return float(a != b);",S2=gt({opSnippet:gce,cpuKernelImpl:Qz,dtype:"bool"}),kW={kernelName:mi,backendName:"webgl",kernelFunc:S2};function mp(r){let{inputs:t,backend:e}=r,{input:n}=t,o=e.texData.get(n.dataId);return lr({inputs:{x:o.complexTensorInfos.real},backend:e})}var vW={kernelName:Np,backendName:"webgl",kernelFunc:mp};var bce="return float(int(x));";function SW(r,t){let e=new Kr(r.shape,bce),n=t.runWebGLProgram(e,[r],"int32");return{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}function w2(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{dtype:s}=n;if(s==="complex64"){if(o.dtype==="complex64")return lr({inputs:{x:o},backend:e});let a=It(o.shape),i=w2({inputs:{x:o},backend:e,attrs:{dtype:"float32"}}),p=Un({inputs:{real:i,imag:a},backend:e});return a.dispose(),e.disposeIntermediateTensorInfo(i),p}if(o.dtype==="complex64"){let a=mp({inputs:{input:o},backend:e}),i=w2({inputs:{x:a},backend:e,attrs:{dtype:s}});return e.disposeIntermediateTensorInfo(a),i}if(!y.hasEncodingLoss(o.dtype,s)){let a=lr({inputs:{x:o},backend:e});return{dataId:a.dataId,shape:a.shape,dtype:s}}if(e.shouldExecuteOnCPU([o])){let a=e.texData.get(o.dataId).values,[i,p,u]=Pz(a,o.shape,o.dtype,s);return e.makeTensorInfo(i,p,u)}if(s==="int32")return SW(o,e);if(s==="bool"){let a=e.makeTensorInfo([],"bool",y.getTypedArrayFromDType("bool",1)),p=S2({inputs:{a:o,b:a},backend:e});return e.disposeIntermediateTensorInfo(a),p}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${s}`)}var wW={kernelName:jn,backendName:"webgl",kernelFunc:w2};var AW="return ceil(x);",yce=Se({opSnippet:AW,packedOpSnippet:AW,cpuKernelImpl:Rz}),NW={kernelName:Fo,backendName:"webgl",kernelFunc:yce};var EC=class{constructor(t){this.variableNames=["A"];this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}];this.outputShape=t,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}};var LC=class{constructor(t){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}];this.outputShape=t,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}};function xce(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{clipValueMin:s,clipValueMax:a}=n,i;L().getBool("WEBGL_PACK_CLIP")?i=new LC(o.shape):i=new EC(o.shape);let p=[[s],[a]];return e.runWebGLProgram(i,[o],o.dtype,p)}var DW={kernelName:Xn,backendName:"webgl",kernelFunc:xce};var BC=class{constructor(t){this.variableNames=["real","imag"];this.outputShape=t,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function _W(r,t){return{dataId:t.dataId,dtype:t.dtype,shape:r.shape}}function Tce(r){let{inputs:t,backend:e}=r,{x:n}=t,o=e.texData.get(n.dataId),s=new BC(n.shape),a=[_W(n,o.complexTensorInfos.real),_W(n,o.complexTensorInfos.imag)];return e.runWebGLProgram(s,a,a[0].dtype)}var MW={kernelName:Ji,backendName:"webgl",kernelFunc:Tce};var $C=class{constructor(t){this.outputShape=[];this.outputShape=I.computeOutShape(t,1),this.variableNames=t.map((a,i)=>`T${i}`);let e=new Array(t.length-1);e[0]=t[0][1];for(let a=1;a<e.length;a++)e[a]=e[a-1]+t[a][1];let n=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<e.length;a++){let i=e[a-1];n.push(`else if (yC < ${e[a]}) setOutput(getT${a}(yR, yC-${i}));`)}let o=e.length,s=e[e.length-1];n.push(`else setOutput(getT${o}(yR, yC-${s}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${n.join(`
        `)}
      }
    `}};var zC=class{constructor(t,e){this.packedInputs=!0;this.packedOutput=!0;this.outputShape=[];this.outputShape=I.computeOutShape(t,e);let n=this.outputShape,o=n.length,s=Ue(o),a=pr("coords",o),i=["x","y","z","w","u","v"].slice(0,o);this.variableNames=t.map((h,g)=>`T${g}`);let p=new Array(t.length-1);p[0]=t[0][e];for(let h=1;h<p.length;h++)p[h]=p[h-1]+t[h][e];let u=i[e],l=i.slice(-2),m=i.join(),c=`if (${u} < ${p[0]}) {
        return getChannel(
            getT0(${m}), vec2(${l.join()}));
        }`;for(let h=1;h<p.length;h++){let g=p[h-1];c+=`
        if (${u} < ${p[h]}  && ${u} >= ${p[h-1]}) {
          return getChannel(
            getT${h}(${OC(i,u,g)}),
            vec2(${OC(l,u,g)}));
        }`}let d=p.length,f=p[p.length-1];c+=`
        return getChannel(
          getT${d}(${OC(i,u,f)}),
          vec2(${OC(l,u,f)}));`,this.userCode=`
      float getValue(${i.map(h=>"int "+h)}) {
        ${c}
      }

      void main() {
        ${s} coords = getOutputCoords();
        vec4 result = vec4(getValue(${a}), 0., 0., 0.);

        ${a[o-1]} = ${a[o-1]} + 1;
        if (${a[o-1]} < ${n[o-1]}) {
          result.g = getValue(${a});
        }

        ${a[o-2]} = ${a[o-2]} + 1;
        if (${a[o-2]} < ${n[o-2]}) {
          result.a = getValue(${a});
        }

        ${a[o-1]} = ${a[o-1]} - 1;
        if (${a[o-2]} < ${n[o-2]} &&
            ${a[o-1]} < ${n[o-1]}) {
          result.b = getValue(${a});
        }
        setOutput(result);
      }
    `}};function OC(r,t,e){let n=r.indexOf(t);return r.map((s,a)=>a===n?`${s} - ${e}`:s).join()}function Bm(r){let{inputs:t,backend:e}=r,{input:n}=t,o=e.texData.get(n.dataId);return lr({inputs:{x:o.complexTensorInfos.imag},backend:e})}var PW={kernelName:Ap,backendName:"webgl",kernelFunc:Bm};function Hf(r,t,e){let n=r[0].dtype;if(n==="complex64"){let d=r.map(x=>mp({inputs:{input:x},backend:e})),f=r.map(x=>Bm({inputs:{input:x},backend:e})),h=Hf(d,t,e),g=Hf(f,t,e),b=Un({inputs:{real:h,imag:g},backend:e});return d.forEach(x=>e.disposeIntermediateTensorInfo(x)),f.forEach(x=>e.disposeIntermediateTensorInfo(x)),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(g),b}let o=e.shouldExecuteOnCPU(r);if(n==="string"&&(o=!0),o){let d=r.map(C=>{let w=[-1,y.sizeFromShape(C.shape.slice(t))];return ue({inputs:{x:C},backend:e,attrs:{shape:w}})}),f=d.map(C=>({vals:e.readSync(C.dataId),shape:C.shape})),h=I.computeOutShape(d.map(C=>C.shape),1),g=d[0].shape[0]===1,b=Fz(f,h,n,g),x=I.computeOutShape(r.map(C=>C.shape),t),T=e.makeTensorInfo(x,n,b);return d.forEach(C=>e.disposeIntermediateTensorInfo(C)),T}let s=r.filter(d=>y.sizeFromShape(d.shape)>0),a=L().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&s[0].shape.length>1;if(s.length===1){let d=a?new Kr(r[0].shape,Du):new Gn(r[0].shape,Du);return e.runWebGLProgram(d,r,n)}let i=L().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(s.length>i){let d=[];for(let h=0;h<s.length;h+=i){let g=s.slice(h,h+i);d.push(Hf(g,t,e))}let f=Hf(d,t,e);for(let h of d)e.disposeIntermediateTensorInfo(h);return f}if(a){let d=new zC(s.map(f=>f.shape),t);return e.runWebGLProgram(d,s,n)}let{tensors2D:p,outShape:u}=Cce(s,t,e),l=new $C(p.map(d=>d.shape)),m=e.runWebGLProgram(l,p,n);p.forEach(d=>e.disposeIntermediateTensorInfo(d));let c=ue({inputs:{x:m},attrs:{shape:u},backend:e});return e.disposeIntermediateTensorInfo(m),c}function Cce(r,t,e){let n=I.computeOutShape(r.map(s=>s.shape),t);return{tensors2D:r.map(s=>ue({inputs:{x:s},attrs:{shape:[-1,y.sizeFromShape(s.shape.slice(t))]},backend:e})),outShape:n}}function A2(r){let{inputs:t,backend:e,attrs:n}=r,{axis:o}=n,s=y.parseAxisParam(o,t[0].shape)[0],a=t.map(u=>u.shape);I.assertParamsConsistent(a,s);let i=I.computeOutShape(t.map(u=>u.shape),s);if(y.sizeFromShape(i)===0)return e.makeTensorInfo(i,t[0].dtype,[]);let p=t.filter(u=>y.sizeFromShape(u.shape)>0);return p.length===1?lr({inputs:{x:p[0]},backend:e}):Hf(p,s,e)}var RW={kernelName:ea,backendName:"webgl",kernelFunc:A2};var qf=class{constructor(t,e=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"];this.outputShape=t.outShape;let a=t.padInfo.top,i=t.padInfo.left,p=t.strideHeight,u=t.strideWidth,l=t.dilationHeight,m=t.dilationWidth,c=t.filterHeight,d=t.filterWidth,f=Math.floor(t.inChannels/4)*4,h=t.inChannels%4,g=t.dataFormat==="channelsLast",b=g?1:2,x=g?2:3,T=g?3:1,C="",k="";n&&(o?C=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?C=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:C=`
          float activation(float x) {
            ${n}
          }
        `,k="result = activation(result);");let w=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${C}

      const ivec2 strides = ivec2(${p}, ${u});
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${T}];

        ivec2 xRCCorner =
            ivec2(coords[${b}], coords[${x}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${c}; wR++) {
          int xR = xRCorner + wR * ${l};

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${d}; wC++) {
            int xC = xCCorner + wC * ${m};

            if (xC < 0 || xC >= ${t.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${f}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${g}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${h===1}) {

              if (${g}) {
                dotProd +=
                    getX(batch, xR, xC, ${f}) *
                    getW(wR, wC, ${f}, d2);
              } else {
                dotProd +=
                    getX(batch, ${f}, xR, xC) *
                    getW(wR, wC, ${f}, d2);
              }

            } else if (${h===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2)
              );

              if (${g}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${h===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2),
                getW(wR, wC, ${f} + 2, d2)
              );

              if (${g}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1),
                  getX(batch, xR, xC, ${f} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC),
                  getX(batch, ${f} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${w}
        ${k}
        setOutput(result);
      }
    `}},GC=class{constructor(t){this.variableNames=["x","W"];this.outputShape=t.outShape;let e=t.padInfo.front,n=t.padInfo.top,o=t.padInfo.left,s=t.strideDepth,a=t.strideHeight,i=t.strideWidth,p=t.dilationDepth,u=t.dilationHeight,l=t.dilationWidth,m=t.filterDepth,c=t.filterHeight,d=t.filterWidth,f=Math.floor(t.inChannels/4)*4,h=t.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${s}, ${a}, ${i});
      const ivec3 pads = ivec3(${e}, ${n}, ${o});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${m}; wF++) {
          int xF = xFCorner + wF * ${p};

          if (xF < 0 || xF >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${c}; wR++) {
            int xR = xRCorner + wR * ${u};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d}; wC++) {
              int xC = xCCorner + wC * ${l};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${f}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${h===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${f}) *
                  getW(wF, wR, wC, ${f}, d2);
              } else if (${h===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${h===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1),
                  getX(batch, xF, xR, xC, ${f} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2),
                  getW(wF, wR, wC, ${f} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};var jf=class{constructor(t,e=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}];this.outputShape=t.outShape,this.enableShapeUniforms=Ct(this.outputShape.length);let a=t.padInfo.left,i=t.strideWidth,p=t.dilationWidth,u=t.filterHeight,l=t.filterWidth,m=l,c=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<l;g++)c+=`
           vec4 xTexelC${g*2};
           int xTexelC${g*2}Ready;
           vec4 xTexelC${g*2+1};
           int xTexelC${g*2+1}Ready;
           vec4 xC${g};`;c+=`
     for (int r = 0; r < ${u}; r++) {
      for (int d1 = 0; d1 < ${t.inChannels}; d1 += 2) {
       `;for(let g=0;g<l;g++)c+=`
           xTexelC${g*2} = vec4(0.0);
           xTexelC${g*2}Ready = 0;
           xTexelC${g*2+1} = vec4(0.0);
           xTexelC${g*2+1}Ready = 0;
           xC${g} = vec4(0.0);`;c+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let g=0;g<(m+1)/2;g++){let b=g*2;if(c+=`
           xC = xCCorner + ${b*p};
           `,i===1){if(b<l&&(a%2===1?(c+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }
               `,p===1&&b>0?c+=`
                 xC${b} = vec4(xTexelC${b-2}.zw, xTexelC${b}.xy);
                 `:c+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${b} = vec4(previous.zw, xTexelC${b}.xy);
                   } else {
                     xC${b} = vec4(0.0, 0.0, xTexelC${b}.xy);
                   }
                   `):c+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }

                 xC${b} = xTexelC${b};
                 `,b+1<l)){let x=a%2===0?y.nearestLargerEven(p):p;p%2===0&&a%2===1||p%2!==0&&a%2!==1?(c+=`
                   xCOffset = xC + imod(pads[1], 2) + ${x};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                     xTexelC${b+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${b+1}.zw = vec2(0.0);
                     }
                     xTexelC${b+1}Ready = 1;
                   }
                   `,p>1?c+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${b+1} = vec4(previous.zw, xTexelC${b+1}.xy);
                     } else {
                      xC${b+1} = vec4(0.0, 0.0, xTexelC${b+1}.xy);
                     }
                     `:c+=`
                     xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.xy);
                     `):x===1?c+=`
                     xC${b+1} = xTexelC${b};
                     `:c+=`
                     xCOffset = xC + ${x};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                       xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${b+1}.zw = vec2(0.0);
                       }
                       xTexelC${b+1}Ready = 1;
                     }

                     xC${b+1} = xTexelC${b+1};
                     `}}else b<l&&(a%2===1?(c+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${b+1}Ready == 0) {
                   xTexelC${b+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${b+1}.zw = vec2(0.0);
                   }
                   xTexelC${b+1}Ready = 1;
                 }

                 xC${b} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
               `,b+1<l&&(c+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${b+1} = vec4(xTexelC${b+1}.xy, final.xy);
                 `)):(c+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                   xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${b+1}.zw = vec2(0.);
                   }
                   xTexelC${b+1}Ready = 1;
                 }

                 xC${b} = vec4(
                   xTexelC${b}.xy, xTexelC${b+1}.xy);
               `,b+1<l&&(c+=`
                   xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
                 `)));b<l&&(c+=`
             wTexel = getW(r, ${b}, d1, d2);
             dotProd += xC${b}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${t.inChannels}) {
               dotProd += xC${b}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,b+1<l&&(c+=`
               wTexel = getW(r, ${b+1}, d1, d2);
               dotProd += xC${b+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${t.inChannels}) {
                 dotProd += xC${b+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}c+=`
     }
   `,c+=`
     }
   `,c+=`
     }
   `;let d="",f="";n&&(o?d=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${n}
         }`:s?d=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${n}
         }`:d=`vec4 activation(vec4 x) {
           ${n}
         }`,f="result = activation(result);");let h=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${d}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${c}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${h}
         ${f}
         setOutput(result);
       }
     `}};var WC=class{constructor(t,e){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}];this.outputShape=t,this.enableShapeUniforms=Ct(this.outputShape.length);let{dataFormat:n}=e,o=Zt(),s=n==="channelsLast",a=s?1:2,i=s?2:3,p=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${t[2]} && pos < ${t[1]}) {`,u="";for(let l=0;l<=1;l++)for(let m=0;m<=1;m++)u+=`
          blockIndex = rc.z + ${m};
          pos = rc.y + ${l};

          ${p}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${a}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${i}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${s}) {
                  innerDims = vec2(d1, ch);
                  result[${l*2+m}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${l*2+m}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${u}

        ${o.output} = result;
      }
    `}};function UC(r,t){let e=r.length;return e>=3?t?[...r.slice(0,-3),r[e-3]*r[e-2],r[e-1]]:[...r.slice(0,-3),r[e-3],r[e-2]*r[e-1]]:!t&&e===1&&r[0]>1?[r[0],1]:null}function KC({x:r,filter:t,convInfo:e,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:i=null}){let p=r.shape,u=n.texData.get(r.dataId),l=e.inChannels,m=p[0]*p[1]*p[2],c=e.outChannels,d=e.dataFormat==="channelsLast",f=!1,h=!1,g,b=[];if(s!=null){let C=UC(s.shape,d);C!=null&&(s=ue({inputs:{x:s},backend:n,attrs:{shape:C}}),b.push(s))}if(o!=null){let C=UC(o.shape,d);C!=null&&(o=ue({inputs:{x:o},backend:n,attrs:{shape:C}}),b.push(o))}if(!((m===1||c===1)&&l>k2)&&u.isPacked&&d&&u.texture!=null&&p[2]%2!==0&&y.arraysEqual(u.shape.slice(-3),p.slice(-3))){let C=p[0]*p[1]*(p[2]+1),k={dataId:r.dataId,shape:[1,C,e.inChannels],dtype:r.dtype},w=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,y.assert(al(u.shape,k.shape),()=>`packed reshape ${u.shape} to ${k.shape} isn't free`);let _=ue({inputs:{x:t},backend:n,attrs:{shape:[1,e.inChannels,e.outChannels]}});b.push(_);let P=Lm({a:k,b:_,backend:n,transposeA:f,transposeB:h,bias:o,activation:i,preluActivationWeights:s,leakyreluAlpha:a}),M=n.texData.get(P.dataId);y.assert(M.isPacked,()=>"batchMatMul result is expected to be packed"),u.shape=w,M.shape=e.outShape,g=lr({inputs:{x:P},backend:n}),g.shape=e.outShape,b.push(P)}else{let C=e.outHeight*e.outWidth,k=ue({inputs:{x:r},backend:n,attrs:{shape:d?[e.batchSize,C,e.inChannels]:[e.batchSize,e.inChannels,C]}}),w=ue({inputs:{x:t},backend:n,attrs:{shape:[1,e.inChannels,e.outChannels]}}),_=Lm({a:d?k:w,b:d?w:k,transposeA:!d,transposeB:h,backend:n,bias:o,activation:i,preluActivationWeights:s,leakyreluAlpha:a});g=ue({inputs:{x:_},backend:n,attrs:{shape:e.outShape}}),b.push(k),b.push(w),b.push(_)}for(let C of b)n.disposeIntermediateTensorInfo(C);return g}function VC({x:r,filter:t,convInfo:e,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:i=null}){let{filterWidth:p,filterHeight:u,inChannels:l,outWidth:m,outHeight:c,dataFormat:d}=e,f=d==="channelsLast",h=p*u*l,g=c*m,b=[e.batchSize,h,g],x=!0,T=!1,C=[];if(s!=null){let j=UC(s.shape,f);j!=null&&(s=ue({inputs:{x:s},backend:n,attrs:{shape:j}}),C.push(s))}if(o!=null){let j=UC(o.shape,f);j!=null&&(o=ue({inputs:{x:o},backend:n,attrs:{shape:j}}),C.push(o))}let k=ue({inputs:{x:t},backend:n,attrs:{shape:[1,h,y.sizeFromShape(t.shape)/h]}});C.push(k);let w=new WC(b,e),_=[r.shape,[e.padInfo.top,e.padInfo.left],[e.strideHeight,e.strideWidth],[e.dilationHeight,e.dilationWidth],[e.inChannels],[e.filterWidth*e.inChannels],[e.outWidth]],P=n.runWebGLProgram(w,[r],"float32",_),M=ue({inputs:{x:P},backend:n,attrs:{shape:b}});C.push(P),C.push(M);let R=o!=null,$=s!=null,G=i==="leakyrelu",W=i?lp(i,!0):null,U=new Vf(f?M.shape:k.shape,f?k.shape:M.shape,f?[e.batchSize,g,e.outChannels]:[e.batchSize,e.outChannels,g],x,T,R,W,$,G),V=f?[M,k]:[k,M];if(o&&V.push(o),$&&V.push(s),G){let j=n.makeTensorInfo([],"float32",y.createScalarValue(a,"float32"));V.push(j),C.push(j)}let K=n.runWebGLProgram(U,V,"float32"),q=ue({inputs:{x:K},backend:n,attrs:{shape:e.outShape}});C.push(K);for(let j of C)n.disposeIntermediateTensorInfo(j);return q}function Ice(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s}=t,{strides:a,pad:i,dataFormat:p,dilations:u,dimRoundingMode:l}=n,m=I.convertConv2DDataFormat(p),c=I.computeConv2DInfo(o.shape,s.shape,a,u,i,l,!1,m),d;if(c.filterHeight===1&&c.filterWidth===1&&c.dilationHeight===1&&c.dilationWidth===1&&c.strideHeight===1&&c.strideWidth===1&&(c.padInfo.type==="SAME"||c.padInfo.type==="VALID"))d=KC({x:o,filter:s,convInfo:c,backend:e});else if(c.strideWidth<=2&&m==="channelsLast"&&L().getBool("WEBGL_EXP_CONV")){let h=new jf(c),g=[[c.padInfo.top,c.padInfo.left],[c.strideHeight,c.strideWidth],[c.dilationHeight,c.dilationWidth],[c.inHeight,c.inWidth]];d=e.runWebGLProgram(h,[o,s],"float32",g)}else if(L().getBool("WEBGL_CONV_IM2COL"))d=VC({x:o,filter:s,convInfo:c,backend:e});else{let h=new qf(c);d=e.runWebGLProgram(h,[o,s],"float32")}let f=ue({inputs:{x:d},backend:e,attrs:{shape:c.outShape}});return e.disposeIntermediateTensorInfo(d),f}var FW={kernelName:Eo,backendName:"webgl",kernelFunc:Ice};var HC=class{constructor(t){this.variableNames=["x","dy"];this.outputShape=t.filterShape;let e=t.strideHeight,n=t.strideWidth,o=t.padInfo.top,s=t.padInfo.left,a=t.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${o};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${s};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              ${a?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}},qC=class{constructor(t){this.variableNames=["dy","W"];this.outputShape=t.inShape;let e=t.filterHeight,n=t.filterWidth,o=t.strideHeight,s=t.strideWidth,a=t.dataFormat==="channelsLast",i=e-1-t.padInfo.top,p=n-1-t.padInfo.left,u=a?1:2,l=a?2:3,m=a?3:1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${p});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${m}];

        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {

              if (${a}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},jC=class{constructor(t){this.variableNames=["x","dy"];this.outputShape=t.filterShape;let e=t.strideDepth,n=t.strideHeight,o=t.strideWidth,s=t.padInfo.front,a=t.padInfo.top,i=t.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yF = 0; yF < ${t.outDepth}; yF++) {
            int xF = wF + yF * ${e} - ${s};

            if (xF < 0 || xF >= ${t.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${t.outHeight}; yR++) {
              int xR = wR + yR * ${n} - ${a};

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${t.outWidth}; yC++) {
                int xC = wC + yC * ${o} - ${i};

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},XC=class{constructor(t){this.variableNames=["dy","W"];this.outputShape=t.inShape;let e=t.filterDepth,n=t.filterHeight,o=t.filterWidth,s=t.strideDepth,a=t.strideHeight,i=t.strideWidth,p=e-1-t.padInfo.front,u=n-1-t.padInfo.top,l=o-1-t.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${p}, ${u}, ${l});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${e}; wF++) {
          float dyF = float(dyFCorner + wF) / ${s}.0;

          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${e} - 1 - wF;

          for (int wR = 0; wR < ${n}; wR++) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${n} - 1 - wR;

            for (int wC = 0; wC < ${o}; wC++) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${o} - 1 - wC;

              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function kce(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,dy:s}=t,{strides:a,pad:i,dataFormat:p,dimRoundingMode:u,filterShape:l}=n,m=I.convertConv2DDataFormat(p),c=I.computeConv2DInfo(o.shape,l,a,1,i,u,!1,m),d=new HC(c);return e.runWebGLProgram(d,[o,s],"float32")}var EW={kernelName:Cp,backendName:"webgl",kernelFunc:kce};var YC=class{constructor(t){this.variableNames=["dy","W"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"strides",type:"vec2"}];this.outputShape=t.inShape,this.enableShapeUniforms=Ct(this.outputShape.length);let e=t.filterHeight,n=t.filterWidth,o=e-1-t.padInfo.top,s=n-1-t.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${s});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            int wCPerm = ${n} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${t.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${t.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}};function vce(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,filter:s}=t,{inputShape:a,strides:i,pad:p,dataFormat:u,dimRoundingMode:l}=n,m=I.convertConv2DDataFormat(u),c=I.computeConv2DInfo(a,s.shape,i,1,p,l,!1,m);if(L().getBool("WEBGL_PACK")&&m==="channelsLast"){let d=[[c.strideHeight,c.strideWidth]],f=new YC(c);return e.runWebGLProgram(f,[o,s],"float32",d)}else{let d=new qC(c);return e.runWebGLProgram(d,[o,s],"float32")}}var LW={kernelName:Lo,backendName:"webgl",kernelFunc:vce};function Sce(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s}=t,{strides:a,pad:i,dilations:p}=n,u=I.computeConv3DInfo(o.shape,s.shape,a,p,i),l=new GC(u);return e.runWebGLProgram(l,[o,s],"float32")}var BW={kernelName:Bo,backendName:"webgl",kernelFunc:Sce};function wce(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,dy:s}=t,{strides:a,pad:i,filterShape:p}=n,u=I.computeConv3DInfo(o.shape,p,a,1,i),l=new jC(u);return e.runWebGLProgram(l,[o,s],"float32")}var $W={kernelName:qa,backendName:"webgl",kernelFunc:wce};function Ace(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,filter:s}=t,{pad:a,strides:i,inputShape:p}=n,u=I.computeConv3DInfo(p,s.shape,i,1,a),l=new XC(u);return e.runWebGLProgram(l,[o,s],"float32")}var OW={kernelName:ja,backendName:"webgl",kernelFunc:Ace};var Nce=$a+`
  return cos(x);
`,Dce=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${lo}
  return result;
`,_ce=Se({opSnippet:Nce,packedOpSnippet:Dce}),zW={kernelName:$o,backendName:"webgl",kernelFunc:_ce};var Mce=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,Pce=Se({opSnippet:Mce}),GW={kernelName:Oo,backendName:"webgl",kernelFunc:Pce};var ZC=class{constructor(t,e,n,o,s){this.variableNames=["Image","Boxes","BoxInd"];this.outputShape=[];let[a,i,p,u]=t,[l]=e,[m,c]=n;this.outputShape=[l,m,c,u];let d=o==="bilinear"?1:0,[f,h]=[`${i-1}.0`,`${p-1}.0`],[g,b,x]=m>1?[`${(i-1)/(m-1)}`,"(y2-y1) * height_ratio",`y1*${f} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${f}`],[T,C,k]=c>1?[`${(p-1)/(c-1)}`,"(x2-x1) * width_ratio",`x1*${h} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${h}`];this.userCode=`
      const float height_ratio = float(${g});
      const float width_ratio = float(${T});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${a}) {
          return;
        }

        float height_scale = ${b};
        float width_scale = ${C};

        float in_y = ${x};
        if( in_y < 0.0 || in_y > ${f} ) {
          setOutput(float(${s}));
          return;
        }
        float in_x = ${k};
        if( in_x < 0.0 || in_x > ${h} ) {
          setOutput(float(${s}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${d} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}};var Rce=r=>{let{inputs:t,backend:e,attrs:n}=r,{image:o,boxes:s,boxInd:a}=t,{cropSize:i,method:p,extrapolationValue:u}=n,l=new ZC(o.shape,s.shape,i,p,u);return e.runWebGLProgram(l,[o,s,a],"float32")},WW={kernelName:Ya,backendName:"webgl",kernelFunc:Rce};var Fg=class{constructor(t,e,n,o){this.op=t;this.outputShape=e;this.variableNames=["x"];this.customUniforms=[{name:"index",type:"float"}];let s=this.outputShape.length,a=this.op==="*"?"1.0":"0.0",i=n?a:`getX(${UW(s,"coords",this.op)})`,p=this.outputShape[this.outputShape.length-1],u="",l="";n?(u=o?`end != ${p-1}`:"end != 0",l=o?"end + 1":"end - 1"):(u=o?`end + pow2 < ${p}`:"end >= pow2",l=o?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${Ue(s)} coords = getOutputCoords();
        int end = ${KW(s,"coords",this.op)};
        float val = ${i};
        int pow2 = int(pow(2.0, index));
        if (${u}) {
          int idx = ${l};
          ${KW(s,"coords",this.op)} = idx;
          val ${this.op}= getX(${UW(s,"coords",this.op)});
        }
        setOutput(val);
      }
    `}};function UW(r,t,e){if(r===1)return`${t}`;if(r===2)return`${t}.x, ${t}.y`;if(r===3)return`${t}.x, ${t}.y, ${t}.z`;if(r===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${e} for rank ${r} is not yet supported`)}function KW(r,t,e){if(r===1)return`${t}`;if(r===2)return`${t}.y`;if(r===3)return`${t}.z`;if(r===4)return`${t}.w`;throw new Error(`Cumulative ${e} for rank ${r} is not yet supported`)}function QC(r,t,e,n,o,s){let a=t.shape.length,i=I.getAxesPermutation([n],a),p=t;i!=null&&(p=Vt({inputs:{x:t},backend:e,attrs:{perm:i}}));let u=I.getInnerMostAxes(1,a)[0];if(u!==a-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${n}`);let l=p.shape[u],m=lr({inputs:{x:p},backend:e});for(let c=0;c<=Math.ceil(Math.log2(l))-1;c++){let d=new Fg(r,p.shape,!1,s),f=[[c]],h=m;m=e.runWebGLProgram(d,[m],m.dtype,f),e.disposeIntermediateTensorInfo(h)}if(o){let c=new Fg(r,p.shape,o,s),d=m;m=e.runWebGLProgram(c,[m],m.dtype),e.disposeIntermediateTensorInfo(d)}if(i!=null){let c=I.getUndoAxesPermutation(i),d=Vt({inputs:{x:m},backend:e,attrs:{perm:c}});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(p),d}return m}function Ece(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,exclusive:a,reverse:i}=n;return QC("*",o,e,s,a,i)}var VW={kernelName:Xa,backendName:"webgl",kernelFunc:Ece};function Lce(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,exclusive:a,reverse:i}=n;return QC("+",o,e,s,a,i)}var HW={kernelName:zo,backendName:"webgl",kernelFunc:Lce};function Bce(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,weights:s}=t,{size:a,binaryOutput:i}=n;if(o.shape.length===1){let p=e.readSync(o.dataId),u=e.readSync(s.dataId),l=dC(p,u,s.dtype,s.shape,a);return e.makeTensorInfo([a],s.dtype,l)}else if(o.shape.length===2){let p=e.bufferSync(o),u=e.bufferSync(s),l=_z(p,u,a,i);return e.makeTensorInfo(l.shape,s.dtype,l.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}var qW={kernelName:eu,backendName:"webgl",kernelFunc:Bce};var JC=class{constructor(t,e,n){this.variableNames=["x"];this.outputShape=[];this.outputShape=t,this.blockSize=e,this.dataFormat=n,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${e};
      int offset_h = imod(h, ${e});
      int in_w = w / ${e};
      int offset_w = imod(w, ${e});
      int offset_d = (offset_h * ${e} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function $ce(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{blockSize:s,dataFormat:a}=n,i=o.shape[0],p=a==="NHWC"?o.shape[1]:o.shape[2],u=a==="NHWC"?o.shape[2]:o.shape[3],l=a==="NHWC"?o.shape[3]:o.shape[1],m=p*s,c=u*s,d=l/(s*s),f=a==="NHWC"?[i,m,c,d]:[i,d,m,c],h=new JC(f,s,a);return e.runWebGLProgram(h,[o],o.dtype)}var jW={kernelName:Za,backendName:"webgl",kernelFunc:$ce};var Xf=class{constructor(t,e=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"];this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}];this.outputShape=t.outShape,this.enableShapeUniforms=Ct(this.outputShape.length);let a=t.filterHeight,i=t.filterWidth,p=t.outChannels/t.inChannels,u="",l="";n&&(o?u=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?u=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:u=`
          float activation(float x) {
            ${n}
          }
        `,l="result = activation(result);");let m=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${u}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${p};
        int q = d2 - d1 * ${p};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${a}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${i}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${m}
        ${l}
        setOutput(result);
      }
    `}};var Yf=class{constructor(t,e=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}];this.outputShape=t.outShape,this.enableShapeUniforms=Ct(this.outputShape.length);let a=t.outChannels/t.inChannels,i=t.padInfo.left,p=t.strideWidth,u=t.dilationWidth,l=t.filterHeight,m=t.filterWidth,c=m,d=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let b=0;b<m;b++)d+=`
          vec4 xTexelC${b*2};
          int xTexelC${b*2}Ready;
          vec4 xTexelC${b*2+1};
          int xTexelC${b*2+1}Ready;
          vec4 xC${b};`;d+=`
    for (int r = 0; r < ${l}; r++) {
      `;for(let b=0;b<m;b++)d+=`
          xTexelC${b*2} = vec4(0.0);
          xTexelC${b*2}Ready = 0;
          xTexelC${b*2+1} = vec4(0.0);
          xTexelC${b*2+1}Ready = 0;
          xC${b} = vec4(0.0);`;d+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let b=0;b<(c+1)/2;b++){let x=b*2;if(d+=`
          xC = xCCorner + ${x*u};
          `,p===1){if(x<m&&(i%2===1?(d+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }
              `,u===1&&x>0?d+=`
                xC${x} = vec4(xTexelC${x-2}.zw, xTexelC${x}.xy);
                `:d+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${x} = vec4(previous.zw, xTexelC${x}.xy);
                  } else {
                    xC${x} = vec4(0.0, 0.0, xTexelC${x}.xy);
                  }
                  `):d+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }

                xC${x} = xTexelC${x};
                `,x+1<m)){let T=i%2===0?y.nearestLargerEven(u):u;u%2===0&&i%2===1||u%2!==0&&i%2!==1?(d+=`
                  xCOffset = xC + imod(pads[1], 2) + ${T};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                    xTexelC${x+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${x+1}.zw = vec2(0.0);
                    }
                    xTexelC${x+1}Ready = 1;
                  }
                  `,u>1?d+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${x+1} = vec4(previous.zw, xTexelC${x+1}.xy);
                    } else {
                     xC${x+1} = vec4(0.0, 0.0, xTexelC${x+1}.xy);
                    }
                    `:d+=`
                    xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.xy);
                    `):T===1?d+=`
                    xC${x+1} = xTexelC${x};
                    `:d+=`
                    xCOffset = xC + ${T};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                      xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${x+1}.zw = vec2(0.0);
                      }
                      xTexelC${x+1}Ready = 1;
                    }

                    xC${x+1} = xTexelC${x+1};
                    `}}else x<m&&(i%2===1?(d+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${x+1}Ready == 0) {
                  xTexelC${x+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${x+1}.zw = vec2(0.0);
                  }
                  xTexelC${x+1}Ready = 1;
                }

                xC${x} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
              `,x+1<m&&(d+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${x+1} = vec4(xTexelC${x+1}.xy, final.xy);
                `)):(d+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                  xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${x+1}.zw = vec2(0.);
                  }
                  xTexelC${x+1}Ready = 1;
                }

                xC${x} = vec4(
                  xTexelC${x}.xy, xTexelC${x+1}.xy);
              `,x+1<m&&(d+=`
                  xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
                `)));x<m&&(d+=`
            wTexel = getW(r, ${x}, d1, q);
            dotProd += xC${x} * vec4(wTexel.xz, wTexel.xz);
          `,x+1<m&&(d+=`
              wTexel = getW(r, ${x+1}, d1, q);
              dotProd += xC${x+1} * vec4(wTexel.xz, wTexel.xz);
            `))}d+=`
    }
  `,d+=`
      }
    `;let f="",h="";n&&(o?f=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?f=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:f=`vec4 activation(vec4 x) {
          ${n}
        }`,h="result = activation(result);");let g=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${f}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${a};
        int q = d2 - d1 * ${a};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${d}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${g}
        ${h}
        setOutput(result);
      }
    `}};function Oce(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s}=t,{strides:a,pad:i,dilations:p,dimRoundingMode:u}=n,l=p;l==null&&(l=[1,1]),y.assert(I.eitherStridesOrDilationsAreOne(a,l),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);let m=I.computeConv2DInfo(o.shape,s.shape,a,l,i,u,!0),c;L().getBool("WEBGL_PACK_DEPTHWISECONV")&&m.strideWidth<=2&&m.outChannels/m.inChannels===1?c=new Yf(m):c=new Xf(m);let d=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]];return e.runWebGLProgram(c,[o,s],"float32",d)}var XW={kernelName:Go,backendName:"webgl",kernelFunc:Oce};var eI=class{constructor(t){this.variableNames=["x","dy"];this.outputShape=t.filterShape;let e=t.strideHeight,n=t.strideWidth,o=t.padInfo.top,s=t.padInfo.left,a=t.outChannels/t.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${a} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${o};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${s};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},tI=class{constructor(t){this.variableNames=["dy","W"];this.outputShape=t.inShape;let e=t.filterHeight,n=t.filterWidth,o=t.strideHeight,s=t.strideWidth,a=e-1-t.padInfo.top,i=n-1-t.padInfo.left,p=t.outChannels/t.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${p}; dm++) {
              int d2 = d1 * ${p} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function zce(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,dy:s}=t,{strides:a,dilations:i,pad:p,dimRoundingMode:u,filterShape:l}=n,m=I.computeConv2DInfo(o.shape,l,a,i,p,u,!0),c=new eI(m);return e.runWebGLProgram(c,[o,s],"float32")}var YW={kernelName:Ip,backendName:"webgl",kernelFunc:zce};function Gce(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,filter:s}=t,{strides:a,dilations:i,pad:p,dimRoundingMode:u,inputShape:l}=n,m=I.computeConv2DInfo(l,s.shape,a,i,p,u,!0),c=new tI(m);return e.runWebGLProgram(c,[o,s],"float32")}var ZW={kernelName:kp,backendName:"webgl",kernelFunc:Gce};var rI=class{constructor(t){this.variableNames=["X"];this.outputShape=[t,t],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function Wce(r){let{inputs:t,backend:e}=r,{x:n}=t,o=[...n.shape,...n.shape],s=y.sizeFromShape(n.shape),a=ue({inputs:{x:n},backend:e,attrs:{shape:[s]}}),i=new rI(s),p=e.runWebGLProgram(i,[a],a.dtype),u=ue({inputs:{x:p},backend:e,attrs:{shape:o}});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(p),u}var QW={kernelName:tu,backendName:"webgl",kernelFunc:Wce};var nI=class{constructor(t){this.variableNames=["x","W"];this.outputShape=t.outShape;let{inHeight:e,inWidth:n,padInfo:o,strideHeight:s,strideWidth:a,filterHeight:i,filterWidth:p,dilationHeight:u,dilationWidth:l}=t,{top:m,left:c}=o;this.userCode=`
      const ivec2 strides = ivec2(${s}, ${a});
      const ivec2 pads = ivec2(${m}, ${c});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${i}; h++) {
          int hIn = hBeg + h * ${u};

          if (hIn >= 0 && hIn < ${e}) {
            for (int w = 0; w < ${p}; w++) {
              int wIn = wBeg + w * ${l};

              if (wIn >= 0 && wIn < ${n}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function Uce(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s}=t,{strides:a,pad:i,dilations:p}=n,u=I.computeDilation2DInfo(o.shape,s.shape,a,i,"NHWC",p),l,m=new nI(u);l=e.runWebGLProgram(m,[o,s],"float32");let c=ue({inputs:{x:l},backend:e,attrs:{shape:u.outShape}});return e.disposeIntermediateTensorInfo(l),c}var JW={kernelName:Wo,backendName:"webgl",kernelFunc:Uce};function Kce(r){let{inputs:t,backend:e,attrs:n}=r,{equation:o}=n,s=t,{allDims:a,summedDims:i,idDims:p}=I.decodeEinsumEquation(o,s.length);I.checkEinsumDimSizes(a.length,p,s);let{path:u,steps:l}=I.getEinsumComputePath(i,p),m=l.length,c=null,d=a.length,f=[];for(let h=0;h<m;++h){for(let g of l[h]){let{permutationIndices:b,expandDims:x}=I.getEinsumPermutation(d,p[g]),T;I.isIdentityPermutation(b)?T=s[g]:(T=Vt({inputs:{x:s[g]},backend:e,attrs:{perm:b}}),f.push(T));let C=T.shape.slice();for(let k=0;k<x.length;++k)C.splice(x[k],0,1);y.arraysEqual(T.shape,C)||(T=ue({inputs:{x:T},backend:e,attrs:{shape:C}}),f.push(T)),c===null?c=T:(c=Pg({inputs:{a:T,b:c},backend:e}),f.push(c))}h<m-1&&(u[h]>=0&&(c=Em({inputs:{x:c},backend:e,attrs:{axis:u[h]-(a.length-d),keepDims:!1}}),f.push(c)),d--)}for(let h of f)h!==c&&e.disposeIntermediateTensorInfo(h);return c}var eU={kernelName:vp,backendName:"webgl",kernelFunc:Kce};var Vce="return (x >= 0.0) ? x : (exp(x) - 1.0);",Hce=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,qce=Se({opSnippet:Vce,packedOpSnippet:Hce}),tU={kernelName:Ko,backendName:"webgl",kernelFunc:qce};var jce="return (b >= 0.0) ? a : a * (b + 1.0);",Xce=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,Yce=r=>{let{inputs:t,backend:e}=r,{dy:n,y:o}=t,s=L().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new po(Xce,n.shape,o.shape):new Wn(jce,n.shape,o.shape);return e.runWebGLProgram(s,[n,o],n.dtype)},rU={kernelName:Qa,backendName:"webgl",kernelFunc:Yce};var Zce=`
  return vec4(equal(a, b));
`,Qce="return float(a == b);",Jce=gt({opSnippet:Qce,packedOpSnippet:Zce,dtype:"bool",cpuKernelImpl:Ez}),nU={kernelName:Ja,backendName:"webgl",kernelFunc:Jce};var ede=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${I.ERF_P};
  float a1 = ${I.ERF_A1};
  float a2 = ${I.ERF_A2};
  float a3 = ${I.ERF_A3};
  float a4 = ${I.ERF_A4};
  float a5 = ${I.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,tde=Se({opSnippet:ede}),oU={kernelName:Vo,backendName:"webgl",kernelFunc:tde};var rde=$a+`
  return exp(x);
`,nde=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,N2=Se({opSnippet:rde,packedOpSnippet:nde,cpuKernelImpl:Lz,dtype:"float32"}),sU={kernelName:Ho,backendName:"webgl",kernelFunc:N2};function oI(r){let{inputs:t,attrs:e,backend:n}=r,{dim:o}=e,{input:s}=t,a=s.shape.length,i=s.shape.slice(),p=o;return o<0&&(y.assert(-(a+1)<=o,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),p=a+o+1),i.splice(p,0,1),ue({inputs:{x:s},backend:n,attrs:{shape:i}})}var aU={kernelName:ta,backendName:"webgl",kernelFunc:oI};var iU="return exp(x) - 1.0;",ode=Se({opSnippet:iU,packedOpSnippet:iU,cpuKernelImpl:Bz}),uU={kernelName:qo,backendName:"webgl",kernelFunc:ode};var Eg=class{constructor(t,e,n){this.variableNames=["real","imag"];let o=e[1];this.outputShape=e;let s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${o}.0`:"1.0",i;if(t==="real")i="return real * expR - imag * expI;";else if(t==="imag")i="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);this.userCode=`
      const float exponentMultiplier = ${s};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${i}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${o});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${o}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${a};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function sI(r,t,e){let n=e.texData.get(r.dataId),o=y.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],a=o/s,i=ue({inputs:{x:r},backend:e,attrs:{shape:[a,s]}}),p=i.shape,u=new Eg("real",p,t),l=new Eg("imag",p,t),m=[{dataId:n.complexTensorInfos.real.dataId,dtype:n.complexTensorInfos.real.dtype,shape:p},{dataId:n.complexTensorInfos.imag.dataId,dtype:n.complexTensorInfos.imag.dtype,shape:p}],c=e.runWebGLProgram(u,m,"float32"),d=e.runWebGLProgram(l,m,"float32"),f=Un({inputs:{real:c,imag:d},backend:e});e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(d);let h=ue({inputs:{x:f},backend:e,attrs:{shape:r.shape}});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(f),h}function sde(r){let{inputs:t,backend:e}=r,{input:n}=t;return sI(n,!1,e)}var pU={kernelName:Sp,backendName:"webgl",kernelFunc:sde};var aI=class{constructor(t,e){this.outputShape=[];this.customUniforms=[{name:"value",type:"float"}];this.variableNames=["x"],this.outputShape=t,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};function cp(r){let{backend:t,attrs:e}=r,{shape:n,value:o}=e,{dtype:s}=e;if(s=s||y.inferDtype(o),s==="string"){let a=y.getArrayFromDType(s,y.sizeFromShape(n));return a.fill(o),t.makeTensorInfo(n,s,a)}else{let a=new aI(n,o),i=[[o]];return t.runWebGLProgram(a,[],s,i)}}var lU={kernelName:ou,backendName:"webgl",kernelFunc:cp};var iI=class{constructor(t){this.variableNames=["Image"];this.outputShape=[];let e=t[2];this.outputShape=t,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${e} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${e}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}};var mU={kernelName:ei,backendName:"webgl",kernelFunc:({inputs:r,backend:t})=>{let{image:e}=r,n=t,o=new iI(e.shape);return n.runWebGLProgram(o,[e],e.dtype)}};var cU="return floor(x);",ade=Se({opSnippet:cU,packedOpSnippet:cU,cpuKernelImpl:$z}),dU={kernelName:jo,backendName:"webgl",kernelFunc:ade};var ide=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,ude=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,pde=gt({opSnippet:ide,packedOpSnippet:ude,dtype:"int32"}),fU={kernelName:Xo,backendName:"webgl",kernelFunc:pde};var uI=class{constructor(t){this.variableNames=["A"];let e=Zt(),[n,o]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${o}.0, ${n}.0);

        vec4 values = ${e.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}};var pI=class{constructor(t){this.variableNames=["A"];this.packedInputs=!1;this.packedOutput=!0;let e=Zt(),[n,o]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${o}.0, ${n}.0);
            vec4 values = ${e.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${e.output} = result;
      }
    `}};var hU={kernelName:Cl,backendName:"webgl",kernelFunc:lde},Zf,D2=L().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function lde(r){let{inputs:t,backend:e,attrs:n}=r,{pixels:o}=t,{numChannels:s}=n,a=typeof HTMLVideoElement<"u"&&o instanceof HTMLVideoElement,i=typeof HTMLImageElement<"u"&&o instanceof HTMLImageElement,[p,u]=a?[o.videoWidth,o.videoHeight]:[o.width,o.height],l=[u,p],m=[u,p,s];if(i||a){let h=L().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Zf==null||h!==D2)&&(D2=h,Zf=document.createElement("canvas").getContext("2d",{willReadFrequently:D2})),Zf.canvas.width=p,Zf.canvas.height=u,Zf.drawImage(o,0,0,p,u),o=Zf.canvas}let c=e.makeTensorInfo(l,"int32");e.texData.get(c.dataId).usage=2,e.gpgpu.uploadPixelDataToTexture(e.getTexture(c.dataId),o);let d=L().getBool("WEBGL_PACK")?new pI(m):new uI(m),f=e.runWebGLProgram(d,[c],"int32");return e.disposeData(c.dataId),f}function mde(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=t,{strides:p,pad:u,dataFormat:l,dilations:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=n,h=I.convertConv2DDataFormat(l),g=I.computeConv2DInfo(o.shape,s.shape,p,m,u,c,!1,h),b,x=[],T=a!=null,C=i!=null,k=d==="leakyrelu",w=()=>{let P=[o,s],M=(R,$)=>{if($==="NCHW"&&R.shape.length===1&&R.shape[0]!==1){let G=ue({inputs:{x:R},backend:e,attrs:{shape:[R.shape[0],1,1]}});return x.push(G),G}return R};if(T&&P.push(M(a,l)),C&&P.push(M(i,l)),k){let R=e.makeTensorInfo([],"float32",y.createScalarValue(f,"float32"));P.push(R),x.push(R)}return P};if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))b=KC({x:o,filter:s,convInfo:g,backend:e,bias:a,activation:d,preluActivationWeights:i,leakyreluAlpha:f});else if(g.strideWidth<=2&&h==="channelsLast"&&L().getBool("WEBGL_EXP_CONV")){let P=d?lp(d,!0):null,M=new jf(g,T,P,C,k),R=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],$=w();b=e.runWebGLProgram(M,$,"float32",R)}else if(L().getBool("WEBGL_CONV_IM2COL"))b=VC({x:o,filter:s,convInfo:g,backend:e,bias:a,activation:d,preluActivationWeights:i,leakyreluAlpha:f});else{let P=d?lp(d,!1):null,M=new qf(g,T,P,C,k),R=w();b=e.runWebGLProgram(M,R,"float32")}let _=ue({inputs:{x:b},backend:e,attrs:{shape:g.outShape}});return x.push(b),x.forEach(P=>e.disposeIntermediateTensorInfo(P)),_}var gU={kernelName:ha,backendName:"webgl",kernelFunc:mde};function cde(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=t,{strides:p,pad:u,dilations:l,dimRoundingMode:m,activation:c,leakyreluAlpha:d}=n,f=[],h=l;h==null&&(h=[1,1]),y.assert(I.eitherStridesOrDilationsAreOne(p,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${p} and dilations '${h}'`);let g=I.computeConv2DInfo(o.shape,s.shape,p,h,u,m,!0),b=L().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,x=c?lp(c,b):null,T=[o,s],C=a!=null,k=i!=null,w=c==="leakyrelu";if(C&&T.push(a),k&&T.push(i),w){let R=e.makeTensorInfo([],"float32",y.createScalarValue(d,"float32"));T.push(R),f.push(R)}let _;b?_=new Yf(g,C,x,k,w):_=new Xf(g,C,x,k,w);let P=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],M=e.runWebGLProgram(_,T,"float32",P);return f.forEach(R=>e.disposeIntermediateTensorInfo(R)),M}var bU={kernelName:ga,backendName:"webgl",kernelFunc:cde};var lI=class{constructor(t,e,n,o){this.sliceDim=t;this.strides=e;this.paramsShape=o;this.variableNames=["x","indices"];this.outputShape=n;let s=Ue(n.length),a=`
    int index;`;for(let i=0;i<this.sliceDim;i++)a+=`
          index = round(getIndices(coords[0], ${i}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[i]};
          flattenIndex += index * ${this.strides[i]};`;this.userCode=`
         void main() {
          ${s} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${a}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}};function dde(r){let{inputs:t,backend:e}=r,{params:n,indices:o}=t,s=o.shape,a=s[s.length-1],i=y.sizeFromShape(n.shape),[p,u,l,m]=I.prepareAndValidate(n,o),c=ue({inputs:{x:o},backend:e,attrs:{shape:[u,a]}}),d=ue({inputs:{x:n},backend:e,attrs:{shape:[y.sizeFromShape(n.shape)/l,l]}});if(e.shouldExecuteOnCPU([n,o])||n.dtype==="string"){let b=e.readSync(o.dataId),x=e.bufferSync(n),T=Oz(b,x,n.dtype,u,a,l,m,n.shape,i);return e.makeTensorInfo(p,n.dtype,T.values)}let f=new lI(a,m,[u,l],n.shape),h=e.runWebGLProgram(f,[d,c],d.dtype),g=ue({inputs:{x:h},backend:e,attrs:{shape:p}});return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(h),g}var yU={kernelName:ti,backendName:"webgl",kernelFunc:dde};var mI=class{constructor(t,e){this.variableNames=["A","indices"];this.outputShape=e,this.rank=e.length;let n=Ue(this.rank),o=fde(t,2);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${t[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${o}));
      }
    `}};function fde(r,t){let e=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let o=0;o<r.length;o++)o===2?n.push("index"):n.push(`${e[o]}`);return n.join()}function _2(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,indices:s}=t,{axis:a,batchDims:i}=n,p=y.parseAxisParam(a,o.shape)[0];if(L().get("DEBUG")){let x=e.readSync(s.dataId),T=o.shape[p];for(let C=0;C<x.length;++C){let k=x[C];y.assert(k<=T-1&&k>=0,()=>`GatherV2: the index value ${k} is not in [0, ${T-1}]`)}}let u=I.segment_util.collectGatherOpShapeInfo(o,s,p,i),l=y.sizeFromShape(s.shape),m=[],c=ue({inputs:{x:o},backend:e,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),d=ue({inputs:{x:s},backend:e,attrs:{shape:[u.batchSize,l/u.batchSize]}});m.push(c),m.push(d);let f=[u.batchSize,u.outerSize,l/u.batchSize,u.sliceSize];if(e.shouldExecuteOnCPU([o,s])||o.dtype==="string"){let x=e.bufferSync(d),T=e.bufferSync(c),C=zz(T,x,f);return m.forEach(k=>e.disposeIntermediateTensorInfo(k)),e.makeTensorInfo(u.outputShape,C.dtype,C.values)}let h=new mI(c.shape,f),g=e.runWebGLProgram(h,[c,d],c.dtype);m.push(g);let b=ue({inputs:{x:g},backend:e,attrs:{shape:u.outputShape}});return m.forEach(x=>e.disposeIntermediateTensorInfo(x)),b}var xU={kernelName:ra,backendName:"webgl",kernelFunc:_2};var hde="return float(a > b);",gde=`
  return vec4(greaterThan(a, b));
`,bde=gt({opSnippet:hde,packedOpSnippet:gde,cpuKernelImpl:Gz,dtype:"bool"}),TU={kernelName:ri,backendName:"webgl",kernelFunc:bde};var yde="return float(a >= b);",xde=`
  return vec4(greaterThanEqual(a, b));
`,Tde=gt({opSnippet:yde,packedOpSnippet:xde,dtype:"bool",cpuKernelImpl:Wz}),CU={kernelName:Zo,backendName:"webgl",kernelFunc:Tde};function Cde(r){let{inputs:t,backend:e}=r,{input:n}=t;return sI(n,!0,e)}var IU={kernelName:wp,backendName:"webgl",kernelFunc:Cde};var Ide="return float(!isnan(x) && !isinf(x));",kde=Se({opSnippet:Ide,dtype:"bool"}),kU={kernelName:Qo,backendName:"webgl",kernelFunc:kde};var vde="return float(isinf(x));",Sde=Se({opSnippet:vde,dtype:"bool"}),vU={kernelName:Jo,backendName:"webgl",kernelFunc:Sde};var wde="return float(isnan(x));",Ade=Se({opSnippet:wde,dtype:"bool"}),SU={kernelName:es,backendName:"webgl",kernelFunc:Ade};var Nde="return float(a < b);",Dde=`
  return vec4(lessThan(a, b));
`,_de=gt({opSnippet:Nde,packedOpSnippet:Dde,cpuKernelImpl:Uz,dtype:"bool"}),wU={kernelName:ni,backendName:"webgl",kernelFunc:_de};var Mde="return float(a <= b);",Pde=`
  return vec4(lessThanEqual(a, b));
`,Rde=gt({opSnippet:Mde,packedOpSnippet:Pde,cpuKernelImpl:Kz,dtype:"bool"}),AU={kernelName:oi,backendName:"webgl",kernelFunc:Rde};function Fde(r){let{backend:t,attrs:e}=r,{start:n,stop:o,num:s}=e,a=Vz(n,o,s);return t.makeTensorInfo([a.length],"float32",a)}var NU={kernelName:si,backendName:"webgl",kernelFunc:Fde};var Ede=$a+`
  return x < 0.0 ? 0./0. : log(x);
`,Lde=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,Bde=Se({opSnippet:Ede,packedOpSnippet:Lde,cpuKernelImpl:Hz}),DU={kernelName:rs,backendName:"webgl",kernelFunc:Bde};var $de=$a+`
  return log(1.0 + x);
`,Ode=Se({opSnippet:$de}),_U={kernelName:ns,backendName:"webgl",kernelFunc:Ode};var zde="return float(a >= 1.0 && b >= 1.0);",Gde=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,Wde=gt({opSnippet:zde,packedOpSnippet:Gde,dtype:"bool"}),MU={kernelName:ai,backendName:"webgl",kernelFunc:Wde};var Ude="return float(!(x >= 1.0));",Kde=Se({opSnippet:Ude}),PU={kernelName:ii,backendName:"webgl",kernelFunc:Kde};var Vde="return float(a >= 1.0 || b >= 1.0);",Hde=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,qde=gt({opSnippet:Vde,packedOpSnippet:Hde,dtype:"bool"}),RU={kernelName:ui,backendName:"webgl",kernelFunc:qde};var cI=class{constructor(t,e,n,o,s){this.variableNames=["x"];this.outputShape=[];let a=e,i=t[3]-1;this.outputShape=t;let p,u=`float(${n}) + float(${o}) * sum`;s===.5?p=`inversesqrt(${u})`:s===1?p=`1.0/(${u})`:p=`exp(log(${u}) * float(-${s}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${a}; j <= ${a}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${i}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${p};
        setOutput(val);
      }
    `}};var dI=class{constructor(t,e,n,o,s){this.variableNames=["x"];this.outputShape=[];this.packedInputs=!0;this.packedOutput=!0;let a=e,i=t[3]-1;this.outputShape=t;let p,u=`float(${n}) + float(${o}) * sum`;s===.5?p=`inversesqrt(${u})`:s===1?p=`1.0/(${u})`:p=`exp(log(${u}) * float(-${s}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${a};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${a}; j <= ${a}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${p};
        setOutput(result);
      }
    `}};var jde=r=>{let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{depthRadius:s,bias:a,alpha:i,beta:p}=n,u=L().getBool("WEBGL_PACK_NORMALIZATION")?new dI(o.shape,s,a,i,p):new cI(o.shape,s,a,i,p);return e.runWebGLProgram(u,[o],o.dtype)},FU={kernelName:os,backendName:"webgl",kernelFunc:jde};var fI=class{constructor(t,e,n,o,s){this.variableNames=["inputImage","outputImage","dy"];this.outputShape=[];this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=n,this.alpha=o,this.beta=s,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${e})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${e} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${o}) * norm + float(${n});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${o})
                * float(${s})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${s});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}};var Xde=r=>{let{inputs:t,backend:e,attrs:n}=r,{x:o,y:s,dy:a}=t,{depthRadius:i,bias:p,alpha:u,beta:l}=n,m=new fI(o.shape,i,p,u,l);return e.runWebGLProgram(m,[o,s,a],o.dtype)},EU={kernelName:pi,backendName:"webgl",kernelFunc:Xde};function LU(r,t,e,n){let o=y.sizeFromShape(t),a=y.sizeFromShape(r.shape)/o,i=ue({inputs:{x:r},attrs:{shape:[a,o]},backend:n}),p=mo(i,r.dtype,"max",n),u=ue({inputs:{x:p},attrs:{shape:e},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(p),u}function M2(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{reductionIndices:s,keepDims:a}=n,i=o.shape.length,p=y.parseAxisParam(s,o.shape),u=p,l=I.getAxesPermutation(u,i),m=l!=null,c=e.shouldExecuteOnCPU([o]),d=o;if(m){if(c){let T=e.texData.get(d.dataId).values,C=new Array(i);for(let _=0;_<C.length;_++)C[_]=o.shape[l[_]];let k=Fm(T,o.shape,o.dtype,l,C);d=e.makeTensorInfo(C,o.dtype);let w=e.texData.get(d.dataId);w.values=k}else d=il(o,l,e);u=I.getInnerMostAxes(u.length,i)}I.assertAxesAreInnerMostDims("max",u,i);let[f,h]=I.computeOutAndReduceShapes(d.shape,u),g=f;a&&(g=I.expandShapeToKeepDim(f,p));let b;if(c){let T=e.texData.get(d.dataId).values,C=qz(T,y.sizeFromShape(h),g,o.dtype);b=e.makeTensorInfo(g,o.dtype);let k=e.texData.get(b.dataId);k.values=C}else b=LU(d,h,g,e);return m&&e.disposeIntermediateTensorInfo(d),b}var BU={kernelName:ss,backendName:"webgl",kernelFunc:M2};var Yde=Kf+`
  return max(a, b);
`,Zde=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+lo+`
  return result;
`,Qde=gt({opSnippet:Yde,packedOpSnippet:Zde,cpuKernelImpl:jz}),$U={kernelName:as,backendName:"webgl",kernelFunc:Qde};function Jde(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t;Wi(o,"maxPool");let{filterSize:s,strides:a,pad:i,dimRoundingMode:p}=n,u=1;y.assert(I.eitherStridesOrDilationsAreOne(a,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);let l=I.computePool2DInfo(o.shape,s,a,u,i,p);if(l.filterWidth===1&&l.filterHeight===1&&y.arraysEqual(l.inShape,l.outShape))return lr({inputs:{x:o},backend:e});let m=new Ki(l,"max",!1);return e.runWebGLProgram(m,[o],o.dtype)}var OU={kernelName:is,backendName:"webgl",kernelFunc:Jde};function efe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{filterSize:s,strides:a,pad:i,dataFormat:p,dimRoundingMode:u}=n,l=[1,1,1],m=I.computePool3DInfo(o.shape,s,a,l,i,u,p),c=new ul(m,"max",!1);return e.runWebGLProgram(c,[o],o.dtype)}var zU={kernelName:na,backendName:"webgl",kernelFunc:efe};var hI=class{constructor(t){this.variableNames=["dy","maxPos"];this.outputShape=t.inShape;let e=t.strideHeight,n=t.strideWidth,o=t.dilationHeight,s=t.effectiveFilterHeight,a=t.effectiveFilterWidth,i=s-1-t.padInfo.top,p=a-1-t.padInfo.left,u=s*a-1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${p});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${s};
          wR += ${o}) {
          float dyR = float(dyRCorner + wR) / ${e}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${a} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},gI=class{constructor(t){this.variableNames=["dy","maxPos"];this.outputShape=t.inShape;let e=t.strideDepth,n=t.strideHeight,o=t.strideWidth,s=t.dilationDepth,a=t.dilationHeight,i=t.dilationWidth,p=t.effectiveFilterDepth,u=t.effectiveFilterHeight,l=t.effectiveFilterWidth,m=p-1-t.padInfo.front,c=u-1-t.padInfo.top,d=l-1-t.padInfo.left,f=p*u*l-1;this.userCode=`
      const ivec3 pads = ivec3(${m}, ${c}, ${d});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${p};
           wD += ${s}) {
          float dyD = float(dyDCorner + wD) / ${e}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${u};
              wR += ${a}) {
            float dyR = float(dyRCorner + wR) / ${n}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${l};
                wC += ${i}) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${f} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${u} * ${l} +
                  wR * ${l} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function tfe(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,input:s}=t,a=s,{filterSize:i,strides:p,pad:u,dimRoundingMode:l}=n,m=[1,1,1],c=I.computePool3DInfo(a.shape,i,p,m,u,l),d=new ul(c,"max",!0),f=e.runWebGLProgram(d,[a],a.dtype),h=new gI(c),g=e.runWebGLProgram(h,[o,f],a.dtype);return e.disposeIntermediateTensorInfo(f),g}var GU={kernelName:au,backendName:"webgl",kernelFunc:tfe};function rfe(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,input:s,output:a}=t,i=s;Wi([s,a],"maxPoolGrad");let{filterSize:p,strides:u,pad:l,dimRoundingMode:m}=n,c=I.computePool2DInfo(i.shape,p,u,1,l,m),d=!0,f=new Ki(c,"max",d),h=e.runWebGLProgram(f,[i],i.dtype),g=new hI(c),b=e.runWebGLProgram(g,[o,h],i.dtype);return e.disposeIntermediateTensorInfo(h),b}var WU={kernelName:su,backendName:"webgl",kernelFunc:rfe};function UU(r,t,e,n){let o=new Ki(e,"max",!1),s=n.runWebGLProgram(o,[r],"float32");o=new Ki(e,"max",!0,!0,t);let a=n.runWebGLProgram(o,[r],"float32");return[s,a]}var KU={kernelName:iu,backendName:"webgl",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{x:n}=r,{filterSize:o,strides:s,pad:a,includeBatchInIndex:i}=t,p=e;y.assert(n.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${n.shape.length}.`);let u=[1,1];y.assert(I.eitherStridesOrDilationsAreOne(s,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${u}'`);let l=I.computePool2DInfo(n.shape,o,s,u,a),[m,c]=UU(n,i,l,p);return[m,c]}};function VU(r,t,e,n){let o=y.sizeFromShape(t),a=y.sizeFromShape(r.shape)/o,i=ue({inputs:{x:r},attrs:{shape:[a,o]},backend:n}),p=mo(i,"float32","mean",n),u=ue({inputs:{x:p},attrs:{shape:e},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(p),u}var HU={kernelName:us,backendName:"webgl",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{x:n}=r,{keepDims:o,axis:s}=t,a=e,i=n.shape.length,p=y.parseAxisParam(s,n.shape),u=p,l=I.getAxesPermutation(u,i),m=l!=null,c=a.shouldExecuteOnCPU([n]),d=[],f=n;if(m){if(c){let C=a.texData.get(f.dataId).values,k=new Array(i);for(let P=0;P<k.length;P++)k[P]=n.shape[l[P]];let w=Fm(C,n.shape,n.dtype,l,k);f=a.makeTensorInfo(k,n.dtype);let _=a.texData.get(f.dataId);_.values=w}else f=il(n,l,a);d.push(f),u=I.getInnerMostAxes(u.length,i)}I.assertAxesAreInnerMostDims("sum",u,i);let[h,g]=I.computeOutAndReduceShapes(f.shape,u),b=h;o&&(b=I.expandShapeToKeepDim(h,p));let x=VU(f,g,b,a);for(let T of d)a.disposeIntermediateTensorInfo(T);return x}};function nfe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:a}=n,i=o.shape.length,p=y.parseAxisParam(s,o.shape),u=p,l=I.getAxesPermutation(u,i),m=o;l!=null&&(m=Vt({inputs:{x:o},backend:e,attrs:{perm:l}}),u=I.getInnerMostAxes(u.length,o.shape.length)),I.assertAxesAreInnerMostDims("min",u,i);let[c,d]=I.computeOutAndReduceShapes(m.shape,u),f=y.sizeFromShape(d),h=ue({inputs:{x:m},backend:e,attrs:{shape:[-1,f]}}),g=mo(h,h.dtype,"min",e),b;if(a){let x=I.expandShapeToKeepDim(c,p);b=ue({inputs:{x:g},backend:e,attrs:{shape:x}})}else b=ue({inputs:{x:g},backend:e,attrs:{shape:c}});return e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(g),l!=null&&e.disposeIntermediateTensorInfo(m),b}var qU={kernelName:ps,backendName:"webgl",kernelFunc:nfe};var ofe=Kf+`
  return min(a, b);
`,sfe=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+lo+`
  return result;
`,afe=gt({opSnippet:ofe,packedOpSnippet:sfe,cpuKernelImpl:Xz}),jU={kernelName:ls,backendName:"webgl",kernelFunc:afe};var bI=class{constructor(t,e,n){this.variableNames=["x"];this.outputShape=e.map((l,m)=>l[0]+t[m]+l[1]);let o=t.length,s=Ue(o),a=e.map(l=>l[0]).join(","),i=e.map((l,m)=>l[0]+t[m]).join(","),p=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o),u=n==="reflect"?0:1;if(o===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${u};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${u};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${a});
      ${s} end = ${s}(${i});

      void main() {
        ${s} outC = getOutputCoords();
        for (int i = 0; i < ${o}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${u};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};
          }
        }
        ${s} coords = outC - start;
        setOutput(getX(${p}));
      }
    `}};var yI=class{constructor(t,e,n){this.variableNames=["x"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=e.map((f,h)=>f[0]+t[h]+f[1]);let o=t.length,s=Ue(o),a=e.map(f=>f[0]).join(","),i=e.map((f,h)=>f[0]+t[h]).join(","),p=pr("rc",o),u=pr("source",o),l=`${p[o-1]} < ${this.outputShape[o-1]}`,m=o===1?"source":`vec2(${u.slice(-2).join()})`,c=n==="reflect"?0:1,d="";if(o===1){let f=`
        ${s} source = rc;
        if (source < start) {
          source = start * 2 - source - ${c};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${c};
        }
        source -= start;
      `;d=`
        ${s} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${u.join()}), ${m});
        ${p[o-1]} += 1;
        if(${l}) {
          ${f}
          result[1] = getChannel(getX(${u.join()}), ${m});
        }
      `}else{let f=`
        ${s} source = rc;
        ${s} lt = ${s}(lessThan(source, start));
        ${s} gte = ${s}(greaterThanEqual(source, end));
        ${s} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${c}) +
                gte * ((end - 1) * 2 - source + ${c});
        source -= start;
      `;d=`
        ${s} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${u.join()}), ${m});
        ${p[o-1]} += 1;
        if(${l}) {
          ${f}
          result[1] = getChannel(getX(${u.join()}), ${m});
        }
        rc = outputLoc;
        ${p[o-2]} += 1;
        if(${p[o-2]} < ${this.outputShape[o-2]}) {
          ${f}
          result[2] = getChannel(getX(${u.join()}), ${m});
          ${p[o-1]} += 1;
          if(${l}) {
            ${f}
            result[3] = getChannel(getX(${u.join()}), ${m});
          }
        }
      `}this.userCode=`
      const ${s} start = ${s}(${a});
      const ${s} end = ${s}(${i});

      void main() {
        ${s} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${d}
        setOutput(result);
      }
    `}};var ife=({inputs:r,backend:t,attrs:e})=>{let{x:n}=r,{paddings:o,mode:s}=e,a=L().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new yI(n.shape,o,s):new bI(n.shape,o,s);return t.runWebGLProgram(a,[n],n.dtype)},XU={kernelName:ms,backendName:"webgl",kernelFunc:ife};var ufe=`if (b == 0.0) return NAN;
  return mod(a, b);`,pfe=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+lo+`
  return result;
`,lfe=gt({opSnippet:ufe,packedOpSnippet:pfe}),YU={kernelName:cs,backendName:"webgl",kernelFunc:lfe};var xI=class{constructor(t,e,n){this.variableNames=["probs"];this.customUniforms=[{name:"seed",type:"float"}];this.outputShape=[t,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${e-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${e-1}));
      }
    `}};var mfe=`
if (a == b) {
  return 1.0;
};
return a / b;`,cfe=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,P2=gt({opSnippet:mfe,packedOpSnippet:cfe,checkOutOfBounds:!0}),ZU={kernelName:Uo,backendName:"webgl",kernelFunc:P2};var QU="return a - b;",R2=gt({opSnippet:QU,packedOpSnippet:QU,supportsComplex:!0,cpuKernelImpl:gG}),JU={kernelName:Bs,backendName:"webgl",kernelFunc:R2};function F2(r){let{inputs:t,backend:e,attrs:n}=r,{logits:o}=t,{dim:s}=n,a=y.parseAxisParam([s],o.shape),i=M2({inputs:{x:o},backend:e,attrs:{reductionIndices:a,keepDims:!1}}),p=I.expandShapeToKeepDim(i.shape,a),u=ue({inputs:{x:i},backend:e,attrs:{shape:p}}),l=R2({inputs:{a:o,b:u},backend:e}),m=N2({inputs:{x:l},backend:e}),c=Em({inputs:{x:m},backend:e,attrs:{axis:a,keepDims:!1}}),d=ue({inputs:{x:c},backend:e,attrs:{shape:p}}),f=P2({inputs:{a:m,b:d},backend:e});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(l),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(d),f}var eK={kernelName:Es,backendName:"webgl",kernelFunc:F2};function dfe(r){let{inputs:t,backend:e,attrs:n}=r,{logits:o}=t,{numSamples:s,seed:a,normalized:i}=n,p=i?o:F2({inputs:{logits:o},backend:e,attrs:{dim:o.shape.length-1}}),u=p.shape[0],l=p.shape[1],m=new xI(u,l,s),c=[[a]],d=e.runWebGLProgram(m,[p],"int32",c);return i||e.disposeIntermediateTensorInfo(p),d}var tK={kernelName:li,backendName:"webgl",kernelFunc:dfe};var ffe=Sr+`
  return -x;
`,hfe=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function gfe(r){let{inputs:t,backend:e}=r,{x:n}=t;if(e.shouldExecuteOnCPU([n])){let s=e.texData.get(n.dataId),[a,i]=Zz(s.values,n.shape,n.dtype);return e.makeTensorInfo(i,n.dtype,a)}let o;return L().getBool("WEBGL_PACK_UNARY_OPERATIONS")?o=new Gn(n.shape,hfe):o=new Kr(n.shape,ffe),e.runWebGLProgram(o,[n],n.dtype)}var rK={kernelName:oa,backendName:"webgl",kernelFunc:gfe};var bfe=vr.nonMaxSuppressionV3Impl;function yfe(r){I.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:e,attrs:n}=r,{boxes:o,scores:s}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:p}=n,u=e.readSync(o.dataId),l=e.readSync(s.dataId),{selectedIndices:m}=bfe(u,l,a,i,p);return e.makeTensorInfo([m.length],"int32",new Int32Array(m))}var nK={kernelName:ci,backendName:"webgl",kernelFunc:yfe};var xfe=vr.nonMaxSuppressionV4Impl;function Tfe(r){I.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:e,attrs:n}=r,{boxes:o,scores:s}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:p,padToMaxOutputSize:u}=n,l=e.readSync(o.dataId),m=e.readSync(s.dataId),{selectedIndices:c,validOutputs:d}=xfe(l,m,a,i,p,u);return[e.makeTensorInfo([c.length],"int32",new Int32Array(c)),e.makeTensorInfo([],"int32",new Int32Array([d]))]}var oK={kernelName:Ou,backendName:"webgl",kernelFunc:Tfe};var Cfe=vr.nonMaxSuppressionV5Impl;function Ife(r){I.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:e,attrs:n}=r,{boxes:o,scores:s}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:p,softNmsSigma:u}=n,l=e.readSync(o.dataId),m=e.readSync(s.dataId),c=a,d=i,f=p,h=u,{selectedIndices:g,selectedScores:b}=Cfe(l,m,c,d,f,h);return[e.makeTensorInfo([g.length],"int32",new Int32Array(g)),e.makeTensorInfo([b.length],"float32",new Float32Array(b))]}var sK={kernelName:di,backendName:"webgl",kernelFunc:Ife};var TI=class{constructor(t,e,n,o){this.variableNames=["indices"];this.outputShape=[t,e],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${o}), float(${n}),
                      float(index == coords.y)));
      }
    `}};var kfe=r=>{let{inputs:t,backend:e,attrs:n}=r,{indices:o}=t,{dtype:s,depth:a,onValue:i,offValue:p}=n,u=y.sizeFromShape(o.shape),l=new TI(u,a,i,p),m=ue({inputs:{x:o},backend:e,attrs:{shape:[u]}}),c=e.runWebGLProgram(l,[m],s);e.disposeIntermediateTensorInfo(m);let d=[...o.shape,a],f=ue({inputs:{x:c},backend:e,attrs:{shape:d}});return e.disposeIntermediateTensorInfo(c),f},aK={kernelName:fs,backendName:"webgl",kernelFunc:kfe};function Lg(r){let{inputs:t,backend:e}=r,{x:n}=t;if(n.dtype==="complex64"){let o=mp({inputs:{input:n},backend:e}),s=Lg({inputs:{x:o},backend:e}),a=Bm({inputs:{input:n},backend:e}),i=Lg({inputs:{x:a},backend:e}),p=Un({inputs:{real:s,imag:i},backend:e});return e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(s),e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(i),p}else return cp({attrs:{shape:n.shape,dtype:n.dtype,value:n.dtype==="string"?"":0},backend:e})}var iK={kernelName:da,backendName:"webgl",kernelFunc:Lg};function uK(r){let{inputs:t,backend:e}=r,{x:n}=t;if(n.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(n.dtype==="complex64"){let o=mp({inputs:{input:n},backend:e}),s=uK({inputs:{x:o},backend:e}),a=Bm({inputs:{input:n},backend:e}),i=Lg({inputs:{x:a},backend:e}),p=Un({inputs:{real:s,imag:i},backend:e});return e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(s),e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(i),p}else return cp({attrs:{shape:n.shape,dtype:n.dtype,value:1},backend:e})}var pK={kernelName:sa,backendName:"webgl",kernelFunc:uK};function vfe(r){let{inputs:t,backend:e,attrs:n}=r,{axis:o}=n;if(t.length===1)return oI({inputs:{input:t[0]},backend:e,attrs:{dim:o}});let s=t[0].shape,a=t[0].dtype;t.forEach(l=>{y.assertShapesMatch(s,l.shape,"All tensors passed to stack must have matching shapes"),y.assert(a===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],p=t.map(l=>{let m=oI({inputs:{input:l},backend:e,attrs:{dim:o}});return i.push(m),m}),u=A2({inputs:p,backend:e,attrs:{axis:o}});return i.forEach(l=>e.disposeIntermediateTensorInfo(l)),u}var lK={kernelName:aa,backendName:"webgl",kernelFunc:vfe};var CI=class{constructor(t,e,n){this.variableNames=["x"];this.customUniforms=[{name:"value",type:"float"}];this.outputShape=e.map((u,l)=>u[0]+t[l]+u[1]);let o=t.length,s=Ue(o),a=e.map(u=>u[0]).join(","),i=e.map((u,l)=>u[0]+t[l]).join(","),p=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o);if(o===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${a});
      ${s} end = ${s}(${i});

      void main() {
        ${s} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${s} coords = outC - start;
          setOutput(getX(${p}));
        }
      }
    `}};var II=class{constructor(t,e,n){this.variableNames=["x"];this.packedInputs=!0;this.packedOutput=!0;this.customUniforms=[{name:"value",type:"float"}];this.outputShape=e.map((h,g)=>h[0]+t[g]+h[1]);let o=t.length,s=Ue(o),a=e.map(h=>h[0]).join(","),i=e.map((h,g)=>h[0]+t[g]).join(","),p=pr("rc",o),u=pr("source",o),l=`${p[o-1]} < ${this.outputShape[o-1]}`,m=o===1?"source":`vec2(${u.slice(-2).join()})`,c=[`${s} rc = outputLoc;`,`${p[o-1]} += 1;
       if(${l}) {
      `,o===1?"":`}
       rc = outputLoc;
       ${p[o-2]} += 1;
       if(${p[o-2]} < ${this.outputShape[o-2]}) {`,o===1?"":`  ${p[o-1]} += 1;
         if(${l}) {`],d=o===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",f="";for(let h=0,g=o===1?2:4;h<g;h++)f+=`
        ${c[h]}
        if (${d}) {
          result[${h}] = float(value);
        } else {
          ${s} source = rc - start;
          result[${h}] = getChannel(getX(${u.join()}), ${m});
        }
      `;f+=o===1?"} ":"}}",this.userCode=`
      const ${s} start = ${s}(${a});
      const ${s} end = ${s}(${i});

      void main() {
        ${s} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}};var E2=r=>{let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{paddings:s,constantValue:a}=n;if(y.sizeFromShape(o.shape)===0){let u=s.map((l,m)=>l[0]+o.shape[m]+l[1]);return cp({backend:e,attrs:{shape:u,value:a,dtype:o.dtype}})}let i=L().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new II(o.shape,s,a):new CI(o.shape,s,a),p=[[a]];return e.runWebGLProgram(i,[o],o.dtype,p)},mK={kernelName:hs,backendName:"webgl",kernelFunc:E2};var Sfe=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,wfe=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+lo+`
  return result;
`,Afe=gt({opSnippet:Sfe,packedOpSnippet:wfe}),cK={kernelName:gs,backendName:"webgl",kernelFunc:Afe};function Nfe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:a}=n,i=o.shape.length,p=[],u=y.parseAxisParam(s,o.shape),l=u,m=I.getAxesPermutation(l,i),c=o;m!=null&&(c=Vt({inputs:{x:o},backend:e,attrs:{perm:m}}),l=I.getInnerMostAxes(l.length,i),p.push(c)),I.assertAxesAreInnerMostDims("prod",l,i);let d;if(e.shouldExecuteOnCPU([c])){let f=e.texData.get(c.dataId).values,{outVals:h,outShape:g,outDtype:b}=Jz(c.shape,c.dtype,f,l);d=e.makeTensorInfo(g,b,h)}else{let[f,h]=I.computeOutAndReduceShapes(c.shape,l),g=y.sizeFromShape(h),b=ue({inputs:{x:c},backend:e,attrs:{shape:[-1,g]}}),x=Uu(o.dtype),T=mo(b,x,"prod",e);d=ue({inputs:{x:T},backend:e,attrs:{shape:f}}),p.push(b),p.push(T)}if(a){p.push(d);let f=I.expandShapeToKeepDim(d.shape,u);d=ue({inputs:{x:d},backend:e,attrs:{shape:f}})}return p.forEach(f=>e.disposeIntermediateTensorInfo(f)),d}var dK={kernelName:ys,backendName:"webgl",kernelFunc:Nfe};function Dfe(r){let{inputs:t,backend:e,attrs:n}=r,{paramsNestedSplits:o,paramsDenseValues:s,indices:a}=t,{outputRaggedRank:i}=n,p=o.map(b=>e.readSync(b.dataId)),u=o.map(b=>b.shape),l=e.readSync(s.dataId),m=e.readSync(a.dataId),[c,d,f]=eG(p,u,l,s.shape,s.dtype,m,a.shape,i),h=c.map(b=>e.makeTensorInfo([b.length],"int32",b)),g=e.makeTensorInfo(f,s.dtype,d);return h.concat([g])}var fK={kernelName:nc,backendName:"webgl",kernelFunc:Dfe};function _fe(r){let{inputs:t,backend:e}=r,{starts:n,limits:o,deltas:s}=t,a=e.readSync(n.dataId),i=e.readSync(o.dataId),p=e.readSync(s.dataId),[u,l]=tG(a,n.shape,n.dtype,i,o.shape,p,s.shape),m=e.makeTensorInfo([u.length],"int32",u),c=e.makeTensorInfo([l.length],n.dtype,l);return[m,c]}var hK={kernelName:oc,backendName:"webgl",kernelFunc:_fe};function Mfe(r){let{inputs:t,backend:e,attrs:n}=r,{shape:o,values:s,defaultValue:a,rowPartitionTensors:i}=t,{rowPartitionTypes:p}=n,u=e.readSync(o.dataId),l=e.readSync(s.dataId),m=e.readSync(a.dataId),c=i.map(g=>e.readSync(g.dataId)),d=i.map(g=>g.shape),[f,h]=rG(u,o.shape,l,s.shape,s.dtype,m,a.shape,c,d,p);return e.makeTensorInfo(f,s.dtype,h)}var gK={kernelName:sc,backendName:"webgl",kernelFunc:Mfe};var L2=r=>{let{backend:t,attrs:e}=r,{start:n,stop:o,step:s,dtype:a}=e,i=nG(n,o,s,a);return t.makeTensorInfo([i.length],a,i)},bK={kernelName:uu,backendName:"webgl",kernelFunc:L2};var Pfe="return 1.0 / x;",Rfe=Se({opSnippet:Pfe}),yK={kernelName:xs,backendName:"webgl",kernelFunc:Rfe};var Ffe=Sr+`
  return (x < 0.0) ? 0.0 : x;
`,Efe=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Lfe=Se({opSnippet:Ffe,packedOpSnippet:Efe}),xK={kernelName:Ts,backendName:"webgl",kernelFunc:Lfe};var Bfe=Sr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,$fe=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Ofe=Se({opSnippet:Bfe,packedOpSnippet:$fe}),TK={kernelName:ks,backendName:"webgl",kernelFunc:Ofe};var kI=class{constructor(t,e,n,o,s){this.variableNames=["A"];this.outputShape=[];let[a,i,p,u]=t;this.outputShape=[a,e,n,u];let l=[o&&e>1?i-1:i,o&&n>1?p-1:p],m=[o&&e>1?e-1:e,o&&n>1?n-1:n],c;s?c="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":c="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${l[0]/m[0]},
          ${l[1]/m[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${p}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${c};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}};var vI=class{constructor(t,e,n,o,s){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=[];let[a,i,p,u]=t;this.outputShape=[a,e,n,u];let l=[o&&e>1?i-1:i,o&&n>1?p-1:p],m=[o&&e>1?e-1:e,o&&n>1?n-1:n],c;s?c="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":c="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${l[0]/m[0]},
          ${l[1]/m[1]},
          ${l[1]/m[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${p}.0,
                                     ${p}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${c};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${n-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function zfe(r){let{inputs:t,backend:e,attrs:n}=r,{images:o}=t,{alignCorners:s,halfPixelCenters:a,size:i}=n,[p,u]=i,l=L().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new vI(o.shape,p,u,s,a):new kI(o.shape,p,u,s,a);return e.runWebGLProgram(l,[o],"float32")}var CK={kernelName:Is,backendName:"webgl",kernelFunc:zfe};var SI=class{constructor(t,e,n){this.variableNames=["dy"];this.outputShape=[];this.outputShape=e;let[,o,s]=e,[,a,i]=t,p=[n&&a>1?o-1:o,n&&i>1?s-1:s],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],l=p[0]/u[0],m=p[1]/u[1],c=1/l,d=1/m,f=Math.ceil(c)*2+2,h=Math.ceil(d)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${l});
        const float widthScale = float(${m});

        const float invHeightScale = float(${c});
        const float invWidthScale = float(${d});

        const int winHeight = int(${f});
        const int winWidth = int(${h});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${o-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function Gfe(r){let{inputs:t,backend:e,attrs:n}=r,{images:o,dy:s}=t,{alignCorners:a}=n,i=new SI(s.shape,o.shape,a);return e.runWebGLProgram(i,[s],s.dtype)}var IK={kernelName:hi,backendName:"webgl",kernelFunc:Gfe};var wI=class{constructor(t,e,n,o,s){this.variableNames=["A"];this.outputShape=[];let[a,i,p,u]=t;this.outputShape=[a,e,n,u];let l=[o&&e>1?i-1:i,o&&n>1?p-1:p],m=[o&&e>1?e-1:e,o&&n>1?n-1:n],c=o?"0.5":"0.0",d;s?d="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${l[0]/m[0]},
          ${l[1]/m[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${p}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${c})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}};var AI=class{constructor(t,e,n,o,s){this.variableNames=["A"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=[];let[a,i,p,u]=t;this.outputShape=[a,e,n,u];let l=[o&&e>1?i-1:i,o&&n>1?p-1:p],m=[o&&e>1?e-1:e,o&&n>1?n-1:n],c=o?"0.5":"0.0",d;s?d="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${l[0]/m[0]},
          ${l[1]/m[1]},
          ${l[1]/m[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${p}.0,
                                     ${p}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${c})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${n-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}};function Wfe(r){let{inputs:t,backend:e,attrs:n}=r,{images:o}=t,{alignCorners:s,halfPixelCenters:a,size:i}=n,[p,u]=i,l=L().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new AI(o.shape,p,u,s,a):new wI(o.shape,p,u,s,a);return e.runWebGLProgram(l,[o],o.dtype)}var kK={kernelName:Cs,backendName:"webgl",kernelFunc:Wfe};var NI=class{constructor(t,e,n){this.variableNames=["dy"];this.outputShape=[];this.outputShape=e;let[,o,s]=e,[,a,i]=t,p=[n&&a>1?o-1:o,n&&i>1?s-1:s],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],l=p[0]/u[0],m=p[1]/u[1],c=1/l,d=1/m,f=Math.ceil(c)*2+2,h=Math.ceil(d)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${l});
        const float widthScale = float(${m});

        const float invHeightScale = float(${c});
        const float invWidthScale = float(${d});

        const int winHeight = int(${f});
        const int winWidth = int(${h});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float sourceFracRow =
              float(${p[0]}) *
                (float(dyR) / float(${u[0]}));

            float sourceFracCol =
                float(${p[1]}) *
                  (float(dyC) / float(${u[1]}));

            int sourceNearestRow = int(min(
                float(int(${o}) - 1),
                ${n} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${s}) - 1),
                ${n} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function Ufe(r){let{inputs:t,backend:e,attrs:n}=r,{images:o,dy:s}=t,{alignCorners:a}=n,i=new NI(s.shape,o.shape,a);return e.runWebGLProgram(i,[s],s.dtype)}var vK={kernelName:fi,backendName:"webgl",kernelFunc:Ufe};var DI=class{constructor(t,e){this.variableNames=["x"];let n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=t,n===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${t[0]} - coord - 1));
        }
      `;return}let o=i=>e.indexOf(i)!==-1&&t[i]!==1?`${t[i]} - coords[${i}] - 1`:`coords[${i}]`,s=t.map((i,p)=>o(p)).join(","),a=Ue(n);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${s}));
      }
    `}};var _I=class{constructor(t,e){this.variableNames=["x"];this.packedInputs=!0;this.packedOutput=!0;let n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=t;let o=pr("rc",n),s=`${o[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${o[n-2]} + 1 < ${this.outputShape[n-2]}`,i=Ue(n);n===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${t[0]} - rc - 1),
            ${t[0]} - rc - 1);
          if(${s}){
              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),
                ${t[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${i} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${p(o.slice())};
          if(${s}){
            result.g = ${u(o.slice())};
          }
          if(${a}) {
            result.b = ${l(o.slice())};
            if(${s}) {
              result.a = ${m(o.slice())};
            }
          }
          setOutput(result);
        }
    `;function p(f){return c(f)}function u(f){return f[n-1]="("+f[n-1]+" + 1)",c(f)}function l(f){return f[n-2]="("+f[n-2]+" + 1)",c(f)}function m(f){return f[n-1]="("+f[n-1]+" + 1)",f[n-2]="("+f[n-2]+" + 1)",c(f)}function c(f){let h=t.map((x,T)=>d(T,f)),g=h.join(","),b=h.slice(-2).join(",");return`getChannel(getX(${g}), vec2(${b}))`}function d(f,h){return e.indexOf(f)!==-1&&t[f]!==1?`${t[f]} - ${h[f]} - 1`:`${h[f]}`}}};function Kfe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{dims:s}=n,a=o.shape.length,i=y.parseAxisParam(s,o.shape);if(a===0)return lr({inputs:{x:o},backend:e});let p=L().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new _I(o.shape,i):new DI(o.shape,i);return e.runWebGLProgram(p,[o],o.dtype)}var SK={kernelName:vs,backendName:"webgl",kernelFunc:Kfe};var MI=class{constructor(t,e){this.variableNames=["Image"];this.outputShape=[];this.customUniforms=[{name:"params",type:"vec4"}];let n=t[1],o=t[2];this.outputShape=t;let s="";typeof e=="number"?s=`float outputValue = ${e.toFixed(2)};`:s=`
        vec3 fill = vec3(${e.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${s}
          if(coordX >= 0 && coordX < ${o} && coordY >= 0 && coordY < ${n}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}};var wK={kernelName:ki,backendName:"webgl",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{image:n}=r,{radians:o,fillValue:s,center:a}=t,i=e,p=new MI(n.shape,s),[u,l]=I.getImageCenter(a,n.shape[1],n.shape[2]),m=[[u,l,Math.sin(o),Math.cos(o)]];return i.runWebGLProgram(p,[n],n.dtype,m)}};var Vfe=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,Hfe=Se({opSnippet:Vfe}),AK={kernelName:Ss,backendName:"webgl",kernelFunc:Hfe};var qfe="return inversesqrt(x);",jfe=Se({opSnippet:qfe,cpuKernelImpl:oG}),NK={kernelName:ws,backendName:"webgl",kernelFunc:jfe};var pl=class{constructor(t,e,n,o,s,a,i=!0,p=!1){this.variableNames=["updates","indices","defaultValue"];this.outputShape=a;let u=Ue(s.length),l=Ue(a.length),m="";n===1?m="i":n===2&&(m="i, j");let c=`getIndices(${m})`,d="";o===1?d="i":o===2&&(d="i, coords[1]");let f=`getUpdates(${d})`,h="";p&&(h="coords[0], coords[1]");let g=`getDefaultValue(${h})`,b=e>1?"strides[j]":"strides";this.userCode=`
        ${u} strides = ${u}(${s});

        void main() {
          ${l} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${t}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${e}; j++) {
              int index = round(${c});
              flattenedIndex += index * ${b};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${f};
              found = true;
            }
          }
          setOutput(mix(${g}, sum, float(found)));
        }
      `}};var PI=class{constructor(t,e,n,o,s,a,i=!0,p=!1){this.variableNames=["updates","indices","defaultValue"];this.packedInputs=!0;this.packedOutput=!0;this.outputShape=a;let u=Ue(s.length),l=Ue(a.length),m="";n===1?m="i":n===2&&(m="i, j");let c=`getIndices(${m})`,d="";o===1?d="i":o===2&&(d="i, coords[1]");let f=`getUpdates(${d})`,h="";p&&(h="coords[0], coords[1]");let g=`getDefaultValue(${h})`,b=e>1?"strides[j]":"strides",x=e>1?"strides[j + 1]":"strides";this.userCode=`
        ${u} strides = ${u}(${s});

        void main() {
          ${l} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${t}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${e}; j+=2) {
              ivec4 index = round(${c});
              flattenedIndex += index.xz * ${b};
              if (j + 1 < ${e}) {
                flattenedIndex += index.yw * ${x};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${f};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${g}, sum, found));
        }
      `}};function Xfe(r){let{inputs:t,backend:e,attrs:n}=r,{indices:o,updates:s}=t,{shape:a}=n,{sliceRank:i,numUpdates:p,sliceSize:u,strides:l,outputSize:m}=I.calculateShapes(s,o,a),c=[m/u,u];if(m===0)return e.makeTensorInfo(a,o.dtype);let d=ue({inputs:{x:o},backend:e,attrs:{shape:[p,i]}}),f=ue({inputs:{x:s},backend:e,attrs:{shape:[p,u]}}),h=e.makeTensorInfo([],"float32",new Float32Array([0])),g;L().getBool("WEBGL_PACK")?g=new PI(p,i,d.shape.length,f.shape.length,l,c):g=new pl(p,i,d.shape.length,f.shape.length,l,c);let b=e.runWebGLProgram(g,[f,d,h],f.dtype),x=ue({inputs:{x:b},backend:e,attrs:{shape:a}});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(b),e.disposeIntermediateTensorInfo(h),x}var DK={kernelName:gi,backendName:"webgl",kernelFunc:Xfe};var RI=class{constructor(t,e,n,o){this.variableNames=["sortedSequence","values"];this.customUniforms=[{name:"numInputs",type:"int"}];this.outputShape=[t,n];let s="while (left < right) {",a=`for (int i = 0; i < ${Math.ceil(Math.log2(e+1))}; ++i) { if (left >= right) break;`,i=L().getNumber("WEBGL_VERSION")===2?s:a,p=o==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${i}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${p} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}};function Yfe(r){let{inputs:t,backend:e,attrs:n}=r,{sortedSequence:o,values:s}=t,{side:a}=n,i=new RI(o.shape[0],o.shape[1],s.shape[1],a),p=[[o.shape[1]]];return e.runWebGLProgram(i,[o,s],"int32",p)}var _K={kernelName:yi,backendName:"webgl",kernelFunc:Yfe};var FI=class{constructor(t,e,n){this.variableNames=["c","a","b"];this.outputShape=e;let o,s;if(n>4)throw Error(`Where for rank ${n} is not yet supported`);if(n===1)s="resRC",o="resRC";else{let i=["resRC.x","resRC.y","resRC.z","resRC.w"],p=[],u=[];for(let l=0;l<e.length;l++)u.push(`${i[l]}`),l<t&&p.push(`${i[l]}`);o=p.join(),s=u.join()}let a=Ue(n);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        float cVal = getC(${o});
        if (cVal >= 1.0) {
          setOutput(getA(${s}));
        } else {
          setOutput(getB(${s}));
        }
      }
    `}};function Zfe(r){let{inputs:t,backend:e}=r,{condition:n,t:o,e:s}=t,a=new FI(n.shape.length,o.shape,o.shape.length);return e.runWebGLProgram(a,[n,o,s],At(o.dtype,s.dtype))}var MK={kernelName:ua,backendName:"webgl",kernelFunc:Zfe};var Qfe=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${I.SELU_SCALEALPHA};
  float scale = ${I.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,Jfe=Se({opSnippet:Qfe}),PK={kernelName:As,backendName:"webgl",kernelFunc:Jfe};var ehe=$a+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,the=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,rhe=Se({opSnippet:ehe,packedOpSnippet:the,cpuKernelImpl:aG}),RK={kernelName:Ms,backendName:"webgl",kernelFunc:rhe};var nhe=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,ohe=Se({opSnippet:nhe}),FK={kernelName:_s,backendName:"webgl",kernelFunc:ohe};var she=$a+`
  return sin(x);
`,ahe=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${lo}
  return result;
`,ihe=Se({opSnippet:she,packedOpSnippet:ahe}),EK={kernelName:Ns,backendName:"webgl",kernelFunc:ihe};var uhe=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,phe=Se({opSnippet:uhe}),LK={kernelName:Ds,backendName:"webgl",kernelFunc:phe};var lhe=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,mhe=Se({opSnippet:lhe}),BK={kernelName:Ps,backendName:"webgl",kernelFunc:mhe};var che=r=>{let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{blockShape:s,paddings:a}=n;y.assert(o.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let i=s.reduce((b,x)=>b*x),p=[[0,0]];p.push(...a);for(let b=1+s.length;b<o.shape.length;++b)p.push([0,0]);let u=[],l=E2({inputs:{x:o},backend:e,attrs:{paddings:p,constantValue:0}}),m=I.getReshaped(l.shape,s,i,!1),c=I.getPermuted(m.length,s.length,!1),d=I.getReshapedPermuted(l.shape,s,i,!1),f=ue({inputs:{x:l},backend:e,attrs:{shape:m}}),h=Vt({inputs:{x:f},backend:e,attrs:{perm:c}}),g=ue({inputs:{x:h},backend:e,attrs:{shape:d}});return u.push(l),u.push(f),u.push(h),u.forEach(b=>e.disposeIntermediateTensorInfo(b)),g},$K={kernelName:la,backendName:"webgl",kernelFunc:che};function dhe(r){let{inputs:t,backend:e}=r,{indices:n,values:o,denseShape:s,defaultValue:a}=t;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${s.shape}`);if(n.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${n.shape}`);if(o.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${o.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);let i=e.readSync(n.dataId),p=e.readSync(o.dataId),u=e.readSync(s.dataId),l=e.readSync(a.dataId)[0],[m,c,d,f,h]=uG(i,n.shape,n.dtype,p,o.dtype,u,l);return[e.makeTensorInfo(c,n.dtype,m),e.makeTensorInfo([c[0]],o.dtype,d),e.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),e.makeTensorInfo([h.length],n.dtype,new Int32Array(h))]}var OK={kernelName:Dp,backendName:"webgl",kernelFunc:dhe};function fhe(r){let{inputs:t,backend:e}=r,{inputIndices:n,inputShape:o,newShape:s}=t;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${n.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${o.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let a=Array.from(e.readSync(o.dataId)),i=e.readSync(n.dataId),p=Array.from(e.readSync(s.dataId)),[u,l,m]=pG(i,n.shape,n.dtype,a,p);return[e.makeTensorInfo(l,n.dtype,u),e.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}var zK={kernelName:zu,backendName:"webgl",kernelFunc:fhe};function hhe(r){let{inputs:t,backend:e}=r,{data:n,indices:o,segmentIds:s}=t;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${s.shape}`);let a=e.readSync(n.dataId),i=e.readSync(o.dataId),p=e.readSync(s.dataId),[u,l]=hC(a,n.shape,n.dtype,i,p,!0);return e.makeTensorInfo(l,n.dtype,u)}var GK={kernelName:pu,backendName:"webgl",kernelFunc:hhe};function ghe(r){let{inputs:t,backend:e}=r,{data:n,indices:o,segmentIds:s}=t;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${s.shape}`);let a=e.readSync(n.dataId),i=e.readSync(o.dataId),p=e.readSync(s.dataId),[u,l]=hC(a,n.shape,n.dtype,i,p);return e.makeTensorInfo(l,n.dtype,u)}var WK={kernelName:lu,backendName:"webgl",kernelFunc:ghe};function bhe(r){let{inputs:t,backend:e,attrs:n}=r,{sparseIndices:o,sparseValues:s,defaultValue:a}=t,{outputShape:i}=n,{sliceRank:p,numUpdates:u,sliceSize:l,strides:m,outputSize:c}=I.calculateShapes(s,o,i),d=!1;if(s.dtype==="string"){let b=e.bufferSync(o),x=e.bufferSync(s),T=y.decodeString(e.readSync(a.dataId)[0]),C=sG(b,x,i,c,l,u,p,m,T,d);return e.makeTensorInfo(i,C.dtype,C.values)}let f=new pl(u,p,o.shape.length,s.shape.length,m,[c,1],d),h=e.runWebGLProgram(f,[s,o,a],s.dtype),g=ue({inputs:{x:h},backend:e,attrs:{shape:i}});return e.disposeIntermediateTensorInfo(h),g}var UK={kernelName:xi,backendName:"webgl",kernelFunc:bhe};function yhe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{numOrSizeSplits:s,axis:a}=n,i=y.parseAxisParam(a,o.shape)[0],p=I.prepareSplitSize(o,s,i),u=o.shape.length,l=new Array(u).fill(0),m=o.shape.slice();return p.map(c=>{let d=[...m];d[i]=c;let f=Vi({inputs:{x:o},backend:e,attrs:{begin:l,size:d}});return l[i]+=c,f})}var KK={kernelName:ma,backendName:"webgl",kernelFunc:yhe};var VK="return sqrt(x);",xhe=Se({opSnippet:VK,packedOpSnippet:VK,cpuKernelImpl:lG}),HK={kernelName:Rs,backendName:"webgl",kernelFunc:xhe};var The="return x * x;",Che=Se({opSnippet:The}),qK={kernelName:mu,backendName:"webgl",kernelFunc:Che};var jK="return (a - b) * (a - b);",Ihe=gt({opSnippet:jK,packedOpSnippet:jK}),XK={kernelName:Ls,backendName:"webgl",kernelFunc:Ihe};function khe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t;if(o.dtype!=="string")throw new Error("Input must be of datatype string");let s=e.readSync(o.dataId),a=I.fromUint8ToStringArray(s),i=mG(a,"string",n);return e.makeTensorInfo(o.shape,"string",i)}var YK={kernelName:Tl,backendName:"webgl",kernelFunc:khe};function vhe({inputs:r,attrs:t,backend:e}){let{x:n}=r,o=Sr+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,s=new Kr(n.shape,o);return e.runWebGLProgram(s,[n],n.dtype)}var ZK={kernelName:Zn,backendName:"webgl",kernelFunc:vhe};var EI=class{constructor(t,e,n){this.variableNames=["x"];this.outputShape=n;let o=n.length,s=Ue(n.length),a=Ue(n.length),i="";if(o===1)i="coords * strides + begin";else{let p=0;i=n.map((u,l)=>(p++,n.length===1?`coords * strides[${l}] + begin[${l}]`:`coords[${p-1}] * strides[${l}] + begin[${l}]`)).join(",")}this.userCode=`
      ${s} begin = ${s}(${t});
      ${s} strides = ${s}(${e});

      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}};function She(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{begin:s,end:a,strides:i,beginMask:p,endMask:u,ellipsisMask:l,newAxisMask:m,shrinkAxisMask:c}=n,{finalShapeSparse:d,finalShape:f,isIdentity:h,sliceDim0:g,isSimpleSlice:b,begin:x,end:T,strides:C}=kt.sliceInfo(o.shape,s,a,i,p,u,l,m,c),k;if(h)k=ue({inputs:{x:o},backend:e,attrs:{shape:f}});else if(g||b){y.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let _=kt.computeOutShape(x,T,C),P=Vi({inputs:{x:o},backend:e,attrs:{begin:x,size:_}});k=ue({inputs:{x:P},backend:e,attrs:{shape:f}}),e.disposeIntermediateTensorInfo(P)}else if(e.shouldExecuteOnCPU([o])){let P=e.readSync(o.dataId),M=Ce(o.shape,o.dtype,P),R=cG(d,M,C,x);k=e.makeTensorInfo(f,o.dtype,R.values)}else{let P=new EI(x,C,d);k=e.runWebGLProgram(P,[o],o.dtype)}let w=ue({inputs:{x:k},backend:e,attrs:{shape:f}});return e.disposeIntermediateTensorInfo(k),w}var QK={kernelName:Ti,backendName:"webgl",kernelFunc:She};function whe(r){let{inputs:t,backend:e,attrs:n}=r,{separator:o,nGramWidths:s,leftPad:a,rightPad:i,padWidth:p,preserveShortSequences:u}=n,{data:l,dataSplits:m}=t,c=e.readSync(l.dataId),d=e.readSync(m.dataId),[f,h]=dG(c,d,o,s,a,i,p,u);return[e.makeTensorInfo([f.length],"string",f),e.makeTensorInfo(m.shape,"int32",h)]}var JK={kernelName:cu,backendName:"webgl",kernelFunc:whe};function Ahe(r){let{inputs:t,backend:e,attrs:n}=r,{skipEmpty:o}=n,{input:s,delimiter:a}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);let i=e.readSync(s.dataId),p=e.readSync(a.dataId)[0],[u,l,m]=fG(i,p,o),c=l.length;return[e.makeTensorInfo([c,2],"int32",u),e.makeTensorInfo([c],"string",l),e.makeTensorInfo([2],"int32",new Int32Array(m))]}var eV={kernelName:_p,backendName:"webgl",kernelFunc:Ahe};function Nhe(r){let{inputs:t,backend:e,attrs:n}=r,{numBuckets:o}=n,{input:s}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(o<=0)throw new Error("Number of buckets must be at least 1");let a=e.readSync(s.dataId),i=hG(a,o);return e.makeTensorInfo(s.shape,"int32",i)}var tV={kernelName:Mp,backendName:"webgl",kernelFunc:Nhe};var Dhe="return tan(x);",_he=Se({opSnippet:Dhe}),rV={kernelName:$s,backendName:"webgl",kernelFunc:_he};var Mhe=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,Phe=Se({opSnippet:Mhe}),nV={kernelName:Os,backendName:"webgl",kernelFunc:Phe};function Rhe(r){let{inputs:t,backend:e,attrs:n}=r,{tensor:o,indices:s,updates:a}=t,{}=n,{sliceRank:i,numUpdates:p,sliceSize:u,strides:l,outputSize:m}=I.calculateShapes(a,s,o.shape),c=[m/u,u];if(m===0)return e.makeTensorInfo(o.shape,s.dtype);let d=ue({inputs:{x:s},backend:e,attrs:{shape:[p,i]}}),f=ue({inputs:{x:a},backend:e,attrs:{shape:[p,u]}}),h=ue({inputs:{x:o},backend:e,attrs:{shape:c}}),g=new pl(p,i,d.shape.length,f.shape.length,l,c,!1,!0),b=e.runWebGLProgram(g,[f,d,h],h.dtype),x=ue({inputs:{x:b},backend:e,attrs:{shape:o.shape}});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(b),x}var oV={kernelName:bi,backendName:"webgl",kernelFunc:Rhe};var LI=class{constructor(t,e){this.variableNames=["A"];let n=new Array(t.length);for(let a=0;a<n.length;a++)n[a]=t[a]*e[a];this.outputShape=n,this.rank=n.length;let o=Ue(this.rank),s=Fhe(t);this.userCode=`
      void main() {
        ${o} resRC = getOutputCoords();
        setOutput(getA(${s}));
      }
    `}};function Fhe(r){let t=r.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${r[0]})`;let e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],n=[];for(let o=0;o<r.length;o++)n.push(`imod(${e[o]}, ${r[o]})`);return n.join()}function B2(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{reps:s}=n;if(o.dtype==="string"||o.shape.length>5){let p=e.readSync(o.dataId),u=o.dtype==="string"?p.map(c=>y.decodeString(c)):p,l=Ce(o.shape,o.dtype,u),m=bG(l,s);return e.makeTensorInfo(m.shape,m.dtype,m.values)}let a=new LI(o.shape,s);return e.runWebGLProgram(a,[o],o.dtype)}var sV={kernelName:Pn,backendName:"webgl",kernelFunc:B2};var BI=class{constructor(t){this.variableNames=["x","indices"];this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}];this.outputShape=t,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},$I=class{constructor(t){this.variableNames=["x","indices"];this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}];this.outputShape=t,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};function $m(r,t){t!==null&&r.disposeIntermediateTensorInfo(t)}function aV(r){let t=1;for(;t<r;)t*=2;return t}function Ehe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{k:s,sorted:a}=n,i=L().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),p=L().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=o.shape,l=u[u.length-1];if(e.shouldExecuteOnCPU([o])||l<i||s>p){let R=e.readSync(o.dataId),[$,G]=yG(R,u,o.dtype,s,a);return[e.makeTensorInfo($.shape,$.dtype,$.values),e.makeTensorInfo(G.shape,G.dtype,G.values)]}if(s===0)return u[u.length-1]=0,[e.makeTensorInfo(u,o.dtype,[]),e.makeTensorInfo(u,"int32",[])];if(l===1)return[o,cp({attrs:{shape:u,dtype:"int32",value:0},backend:e})];let m=e.texData.get(o.dataId),c=m!==null&&m.isPacked,d=c?e.unpackTensor(o):o,h=y.sizeFromShape(u)/l,g=ue({inputs:{x:d},attrs:{shape:[h,l]},backend:e});c&&$m(e,d);let b=aV(s),x=aV(l),T=null,C=()=>T===null?[g,g]:[g,T],k=(R,$,G)=>{let W=C(),U=new BI(G),K=[[l],[T===null?1:0],[Number.NEGATIVE_INFINITY],[R],[$]],q=T;T=e.runWebGLProgram(U,W,"int32",K),$m(e,q)};for(let R=1;R<b;R*=2){let $=R*2;for(let G=R;G>=1;G/=2)k($,G,[h,x])}for(let R=x;R>b;R/=2){let $=C(),G=new $I([h,R/2]),U=[[l],[T===null?1:0],[b]],V=T;T=e.runWebGLProgram(G,$,"int32",U),$m(e,V);let K=b/2,q=K*2;for(let j=K;j>=1;j/=2)k(q,j,T.shape)}let w=T;T=Vi({inputs:{x:T},backend:e,attrs:{begin:0,size:[h,s]}}),$m(e,w);let _=_2({inputs:{x:g,indices:T},backend:e,attrs:{axis:1,batchDims:1}});$m(e,g);let P=u.slice(0,-1);P.push(s),w=T,T=ue({inputs:{x:T},attrs:{shape:P},backend:e}),$m(e,w);let M=_;return _=ue({inputs:{x:_},attrs:{shape:P},backend:e}),$m(e,M),[_,T]}var iV={kernelName:Ci,backendName:"webgl",kernelFunc:Ehe};var OI=class{constructor(t,e,n,o,s,a){this.variableNames=["Image","Transforms"];this.outputShape=a;let i=n==="nearest"?1:2,p;switch(o){case"constant":p=1;break;case"reflect":p=2;break;case"wrap":p=3;break;case"nearest":p=4;break;default:p=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${p} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${p} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${p} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${t} && 0 <= coordX && coordX < ${e}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${s});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${s});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${e}));
                float mapY = mapCoord(inY, float(${t}));

                if (${i} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};function Lhe(r){let{inputs:t,backend:e,attrs:n}=r,{image:o,transforms:s}=t,{interpolation:a,fillMode:i,fillValue:p,outputShape:u}=n,[l,m,c,d]=o.shape,[f,h]=u??[m,c],g=[l,f,h,d],b=new OI(m,c,a,i,p,g);return e.runWebGLProgram(b,[o,s],"float32")}var uV={kernelName:Ii,backendName:"webgl",kernelFunc:Lhe};function Bhe(r){let{inputs:t,attrs:e,backend:n}=r,{axis:o}=e,{x:s}=t;Wi(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let a=n.readSync(s.dataId),{outputValues:i,outputShape:p,indices:u}=xG(a,o,s.shape,s.dtype);return[n.makeTensorInfo(p,s.dtype,i),n.makeTensorInfo([u.length],"int32",u)]}var pV={kernelName:Pp,backendName:"webgl",kernelFunc:Bhe};function $he(r){let{inputs:t,backend:e,attrs:n}=r,{value:o}=t,{axis:s}=n;s<0&&(s+=o.shape.length);let a=o,i=a.shape.length,p=o.shape[s],u=new Array(i-1),l=0;for(let h=0;h<i;h++)h!==s&&(u[l++]=a.shape[h]);let m=[],c=new Array(i).fill(0),d=a.shape.slice();d[s]=1;let f=new Array(p);for(let h=0;h<f.length;h++){c[s]=h;let g=Vi({inputs:{x:a},backend:e,attrs:{begin:c,size:d}}),b=ue({inputs:{x:g},backend:e,attrs:{shape:u}});f[h]=b,m.push(g)}return m.forEach(h=>e.disposeIntermediateTensorInfo(h)),f}var lV={kernelName:ca,backendName:"webgl",kernelFunc:$he};var zI=class{constructor(t,e){this.variableNames=["x","segmentIds"];let n=t.windowSize,o=t.batchSize,s=t.inSize,a=t.numSegments,i=a*Math.ceil(s/n);this.outputShape=[o,i];let p="0.0",u="sumValue",l=Math.floor(n/4)*4,m=n%4,c=`
        sumValue += dot(values, segFilter);
    `,d="";s%n>0&&(d=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return initializationValue;
        }
      `);let f="";s%n>0&&(f=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${p};

      float getValue(int batch, int inIdx) {
        ${d}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${f}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${a})) * float(${n}));
        int currentSeg = int(mod(float(outIdx), float(${a})));

        float sumValue = 0.0;

        for (int i = 0; i < ${l}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${c}
        }

        int inIdx = inOffset + ${l};
        if (${m===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${c}
        } else if (${m===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${c}
        } else if (${m===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${c}
        }
        setOutput(${u});
      }
    `}};function Ohe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,segmentIds:s}=t,{numSegments:a}=n,i=o.shape.length,p=[],u=0,l=I.getAxesPermutation([u],i),m=o;l!=null&&(m=Vt({inputs:{x:o},backend:e,attrs:{perm:l}}),p.push(m),u=I.getInnerMostAxes(1,i)[0]);let c=I.segment_util.computeOutShape(m.shape,u,a),d=y.sizeFromShape([m.shape[u]]),f=ue({inputs:{x:m},backend:e,attrs:{shape:[-1,d]}});p.push(f);let h=Uu(o.dtype),g=(C,k,w,_,P)=>{let M=C.shape[0],R=C.shape[1],$=I.segment_util.segOpComputeOptimalWindowSize(R,P),G={windowSize:$,inSize:R,batchSize:M,numSegments:P},W=new zI(G,k),U=e.compileAndRun(W,[C,w],_);if(p.push(U),U.shape[1]===P)return U;let V=L2({backend:e,attrs:{start:0,stop:P,step:1,dtype:"float32"}}),K=B2({inputs:{x:V},backend:e,attrs:{reps:[R/$]}});return p.push(V),p.push(K),g(U,k,K,_,P)},b=g(f,"unsortedSegmentSum",s,h,a),x=ue({inputs:{x:b},backend:e,attrs:{shape:c}}),T=x;if(l!=null){p.push(x);let C=I.getUndoAxesPermutation(l);T=Vt({inputs:{x:T},backend:e,attrs:{perm:C}})}return p.forEach(C=>e.disposeIntermediateTensorInfo(C)),T}var mV={kernelName:du,backendName:"webgl",kernelFunc:Ohe};var zhe=[qG,XG,YG,ZG,JG,eW,tW,rW,sW,aW,iW,uW,pW,lW,mW,cW,dW,fW,hW,gW,bW,xW,TW,CW,IW,wW,NW,DW,BG,MW,RW,FW,EW,LW,BW,$W,OW,zW,GW,WW,VW,HW,qW,jW,XW,YW,ZW,QW,JW,eU,tU,rU,nU,oU,sU,aU,uU,pU,lU,mU,dU,fU,hU,gU,bU,yU,xU,TU,CU,LG,IU,PW,kU,vU,SU,$G,wU,AU,NU,DU,_U,MU,PU,RU,FU,EU,BU,$U,OU,zU,GU,WU,KU,HU,qU,jU,XU,YU,tK,GG,rK,nK,oK,sK,kW,aK,pK,lK,mK,cK,OG,dK,fK,hK,gK,bK,vW,ZU,yK,xK,TK,UG,CK,IK,kK,vK,SK,wK,AK,NK,DK,_K,MK,PK,RK,FK,EK,LK,yW,eK,BK,$K,OK,zK,GK,WK,UK,KK,HK,qK,XK,YK,ZK,QK,JK,eV,tV,JU,VG,rV,nV,oV,sV,iV,uV,HG,pV,lV,mV,iK];for(let r of zhe)Gu(r);var Hs=L();Hs.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",()=>15);Hs.registerFlag("WEBGPU_CPU_FORWARD",()=>!0);Hs.registerFlag("WEBGPU_MATMUL_PROGRAM_TYPE",()=>-1);Hs.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",()=>!0);Hs.registerFlag("WEBGPU_USE_LOW_POWER_GPU",()=>!1);Hs.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e3);Hs.registerFlag("WEBGPU_USE_PROFILE_TOOL",()=>!1);Hs.registerFlag("WEBGPU_IMPORT_EXTERNAL_TEXTURE",()=>!0);Hs.registerFlag("WEBGPU_USE_NAIVE_CONV2D_DEBUG",()=>!1);Hs.registerFlag("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL",()=>0);Hs.registerFlag("WEBGPU_CONV_SEPARATE_IM2COL_SHADER",()=>!1);Hs.registerFlag("WEBGPU_PRINT_SHADER",()=>"");Hs.registerFlag("WEBGPU_ENGINE_COMPILE_ONLY",()=>!1);var GI=class{constructor(t){t&&(this.vendor=t.vendor,this.architecture=t.architecture,this.intelGPUGeneration=this.getIntelGPUGeneration())}getIntelGPUGeneration(){if(this.isIntel()){if(this.architecture.startsWith("gen"))return Number(this.architecture.match(/\d+/));if(this.architecture.startsWith("xe"))return 12}return 0}isIntel(){return this.vendor==="intel"}};var WI=class{constructor(t){this.device=t;this.numUsedBuffers=0;this.numFreeBuffers=0;this.freeBuffers=new Map;this.usedBuffers=new Map;this.numBytesUsed=0;this.numBytesAllocated=0}acquireBuffer(t,e,n=!1,o=!0){let s,a=cV(t,e);return o?(this.freeBuffers.has(a)||this.freeBuffers.set(a,[]),this.freeBuffers.get(a).length>0?(s=this.freeBuffers.get(a).pop(),this.numFreeBuffers--):(s=this.device.createBuffer({size:t,usage:e,mappedAtCreation:n}),this.numBytesAllocated+=t)):(s=this.device.createBuffer({size:t,usage:e,mappedAtCreation:n}),this.numBytesAllocated+=t),this.usedBuffers.has(a)||this.usedBuffers.set(a,[]),this.usedBuffers.get(a).push(s),this.numUsedBuffers++,this.numBytesUsed+=t,s}releaseBuffer(t,e=!0){if(this.freeBuffers.size===0)return;let n=t.size,o=t.usage,s=cV(n,o),a=this.usedBuffers.get(s),i=a.indexOf(t);if(i<0)throw new Error("Cannot find the buffer in buffer manager");a[i]=a[a.length-1],a.pop(),this.numUsedBuffers--,this.numBytesUsed-=n,e?(this.freeBuffers.get(s).push(t),this.numFreeBuffers++):(t.destroy(),this.numBytesAllocated-=n)}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach((t,e)=>{t.forEach(n=>{n.destroy()})}),this.usedBuffers.forEach((t,e)=>{t.forEach(n=>{n.destroy()})}),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function cV(r,t){return`${r}_${t}`}var UI=class{constructor(t){this.device=t;this.numUsedTextures=0;this.numFreeTextures=0;this.freeTextures=new Map;this.usedTextures=new Map;this.numBytesUsed=0;this.numBytesAllocated=0}acquireTexture(t,e,n,o){let s=fV(n),a=t*e*s,i=dV(t,e,n,o);if(this.freeTextures.has(i)||this.freeTextures.set(i,[]),this.usedTextures.has(i)||this.usedTextures.set(i,[]),this.numBytesUsed+=a,this.numUsedTextures++,this.freeTextures.get(i).length>0){this.numFreeTextures--;let u=this.freeTextures.get(i).shift();return this.usedTextures.get(i).push(u),u}this.numBytesAllocated+=a;let p=this.device.createTexture({size:[t,e],format:n,usage:o});return this.usedTextures.get(i).push(p),p}releaseTexture(t){if(this.freeTextures.size===0)return;let e=t.width,n=t.height,o=t.format,s=t.usage,a=dV(e,n,o,s);this.freeTextures.has(a)||this.freeTextures.set(a,[]),this.freeTextures.get(a).push(t),this.numFreeTextures++,this.numUsedTextures--;let i=this.usedTextures.get(a),p=i.indexOf(t);if(p<0)throw new Error("Cannot release a texture that was never provided by this texture manager");i.splice(p,1);let u=fV(o),l=e*n*u;this.numBytesUsed-=l}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){this.freeTextures.forEach((t,e)=>{t.forEach(n=>{n.destroy()})}),this.usedTextures.forEach((t,e)=>{t.forEach(n=>{n.destroy()})}),this.freeTextures=new Map,this.usedTextures=new Map,this.numUsedTextures=0,this.numFreeTextures=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function dV(r,t,e,n){return`${r}_${t}_${e}_${n}`}function fV(r){if(r==="rgba8unorm")return 16;throw new Error(`${r} is not supported!`)}function hV(r,t){if(Math.max(...r)>5)throw new Error("Cannot symbolically compute strides for rank > 6 tensor.");let e=r.length,n="xyzwuv",o=r.map(a=>`${t}.${n[a]}`),s=new Array(e-1);s[e-2]=o[e-1];for(let a=e-3;a>=0;--a)s[a]=`(${s[a+1]} * ${o[a+1]})`;return s}var co=(r,t,e)=>e==="int32"?`atomicAdd(${r}, bitcast<i32>(${t}));`:`
          {
            var oldValue = 0;
            loop {
              let newValueF32 = bitcast<f32>(oldValue) + (${t});
              let newValue = bitcast<i32>(newValueF32);
              let res = atomicCompareExchangeWeak(${r}, oldValue, newValue);
              if res.exchanged {
                break;
              }
              oldValue = res.old_value;
            }
          }`;var xV=(r,t,e,n,o)=>{let s={dtype:n.dtype,shape:n.shape},a=Whe(e,s,t),i=r.createShaderModule({code:a,label:t.constructor.name}),p=L().get("WEBGPU_PRINT_SHADER");if(p!==""){p=p.toLowerCase();let u=p.split(",");(p==="all"||u.some(l=>t.shaderKey.toLowerCase().includes(l)))&&(console.group(t.shaderKey),console.debug(a),console.groupEnd())}return o?r.createComputePipelineAsync({compute:{module:i,entryPoint:"_start"},label:t.constructor.name,layout:"auto"}):r.createComputePipeline({compute:{module:i,entryPoint:"_start"},label:t.constructor.name,layout:"auto"})},Ye=(r,t="f32")=>{switch(r){case 1:return`${t}`;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw new Error(`${r}-component ${t} is not supported.`)}};function Lt(r){if(r<=1)return"i32";if(r===2)return"vec2<i32>";if(r===3)return"vec3<i32>";if(r===4)return"vec4<i32>";if(r===5)return"vec5";if(r===6)return"vec6";throw Error(`GPU for rank ${r} is not yet supported`)}function Oa(r){if(r===0)return"x";if(r===1)return"y";if(r===2)return"z";if(r===3)return"w";if(r===4)return"u";if(r===5)return"v";throw Error(`Index ${r} is not yet supported`)}function X(...r){let t;switch(r.length){case 0:t=`
        fn main()
      `;break;case 1:t=`
        fn main(${r[0]} : i32)
      `;break;default:throw Error("Unreachable")}return t}function gV(r,t){let e;return e=`
     ${Ghe(t)}
      fn _start(@builtin(local_invocation_id) LocalId : vec3<u32>,
                @builtin(global_invocation_id) GlobalId : vec3<u32>,
                @builtin(local_invocation_index) LocalIndex: u32,
                @builtin(workgroup_id) WorkgroupId : vec3<u32>,
                @builtin(num_workgroups) NumWorkgroups : vec3<u32>) {
        localId = LocalId;
        localIndex = LocalIndex;
        globalId = GlobalId;
        numWorkgroups = NumWorkgroups;
        workgroupId = WorkgroupId;
        ${r?"main(getGlobalIndex());":"main();"};
      }
    `,e}function Ghe(r){return`
  @compute @workgroup_size(${r.workgroupSize[0]}, ${r.workgroupSize[1]}, ${r.workgroupSize[2]})
`}function Whe(r,t,e){let n=[],o=e.workgroupSize[0]*e.workgroupSize[1]*e.workgroupSize[2];if(e.outputComponent=e.outputComponent?e.outputComponent:1,n.push(`

      var<private> localId: vec3<u32>;
      var<private> localIndex: u32;
      var<private> globalId: vec3<u32>;
      var<private> numWorkgroups: vec3<u32>;
      var<private> workgroupId: vec3<u32>;

      // Only used when the y/z dimension of workgroup size is 1.
      fn getGlobalIndex() -> i32 {
        ${CV(e)?"  return i32(globalId.x);":`  return i32((workgroupId.z * numWorkgroups.x * numWorkgroups.y +
                workgroupId.y * numWorkgroups.x + workgroupId.x) * ${o}u +
                localIndex);
        `}
      }
    `),e.isFromPixels){n.push(`
        struct Uniform {
          size            : i32,
          numChannels     : i32,
          outShapeStrides : vec2<i32>,
        };

        @group(0) @binding(0) var<storage, read_write> result: array<${Om(t.dtype,e.outputComponent)}>;
        @group(0) @binding(2) var<uniform> uniforms: Uniform;
      `);let f=yV(e);return[bV,n.join(`
`),Bg(t.shape),e.getUserCode(),gV(f,e)].join(`
`)}let s,a,i="struct Uniforms { NAN : f32, INFINITY : f32, ";e.variableNames.forEach((f,h)=>{let g=Lt(r[h].shape.length);i+=`${f.charAt(0).toLowerCase()+f.slice(1)}Shape : ${g}, `,s=r[h].shape.length-1,a=Lt(s),i+=`${f.charAt(0).toLowerCase()+f.slice(1)}ShapeStrides: ${a}, `});let p=Lt(t.shape.length);i+=`outShape : ${p}, `,s=t.shape.length-1,a=Lt(s),i+=`
         outShapeStrides: ${a}, `,e.size&&(i+="size : i32, "),e.uniforms&&(i+=e.uniforms),i+="};",i=Yhe(i),n.push(i),e.atomic?n.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<atomic<i32>>;
    `):n.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<${Om(t.dtype,e.outputComponent)}>;
    `),e.variableNames.forEach((f,h)=>{n.push(`
      @group(0) @binding(${1+h}) var<storage, read> ${f}: array<${e.variableComponents?Om(r[h].dtype,e.variableComponents[h]):Om(r[h].dtype,e.outputComponent)}>;
        `)}),i!==""&&n.push(`
      @group(0) @binding(${1+e.variableNames.length}) var<uniform> uniforms: Uniforms;
      `);let u=qhe(t.shape,e.dispatchLayout),l=[bV,n.join(`
`)+Uhe,Bg(t.shape),u,jhe(t.shape.length)];e.atomic||l.push(Xhe(t.shape,t.dtype,e.outputComponent)),e.variableNames.forEach((f,h)=>{l.push(`${Bg(r[h].shape,f)}`)});let m=r.map((f,h)=>Hhe(f,t.shape,e.variableComponents?e.variableComponents[h]:e.outputComponent,e.dispatchLayout.x.length===t.shape.length)).join(`
`);l.push(m),l.push(e.getUserCode());let c=yV(e);return l.push(gV(c,e)),l.join(`
`)}function TV(r,t,e){let n=r.shaderKey;if(r.isFromPixels)return n;let o=[],s=[];t.forEach(l=>{o.push(l.shape),s.push(l.dtype)}),o.push(e.shape),s.push(e.dtype);let a=t.map(l=>I.getBroadcastDims(l.shape,e.shape)),i=t.map(l=>y.arraysEqual(l.shape,e.shape)).join("_"),p=a.map(l=>l.join("_")).join(";"),u=CV(r)?"flatDispatch":"";return n+="_"+(r.workgroupSize?r.workgroupSize.join(","):"")+o.map(l=>l.length).join(",")+s.join(",")+r.variableNames.join(",")+p+i+u,n}var bV=`
  struct vec5 {x: i32, y: i32, z: i32, w: i32, u: i32};
  struct vec6 {x: i32, y: i32, z: i32, w: i32, u: i32, v: i32};

  // Checks whether coordinates lie within the bounds of the shape.
  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {
    return all(coord >= vec2<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {
    return all(coord >= vec3<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {
    return all(coord >= vec4<i32>(0)) && all(coord < shape);
  }

  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {
    return coord;
  }
  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {
    return dot(coords, vec2<i32>(shape.y, 1));
  }
  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {
    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));
  }
  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
    return dot(coords, vec4<i32>(
        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
  }
  fn getIndexFromCoords5D(coords : vec5, shape : vec5) -> i32 {
    let shapeStrides: vec5 = vec5(shape.y * shape.z * shape.w * shape.u, shape.z * shape.w * shape.u, shape.w * shape.u, shape.u, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u;
  }
  fn getIndexFromCoords6D(coords : vec6, shape : vec6) -> i32 {
    let shapeStrides: vec6 = vec6(shape.y * shape.z * shape.w * shape.u * shape.v, shape.z * shape.w * shape.u * shape.v, shape.w * shape.u * shape.v, shape.u * shape.v, shape.v, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u + coords.v*shapeStrides.v;
  }

  fn idiv(a: i32, b: i32, sign: f32) -> i32 {
    var res: i32 = a / b;
    let modulo: i32 = a % b;
    if (sign < 0. && modulo != 0) {
      res = res - 1;
    }
    return res;
  }

  // NaN defination in IEEE 754-1985 is :
  //   - sign = either 0 or 1.
  //   - biased exponent = all 1 bits.
  //   - fraction = anything except all 0 bits (since all 0 bits represents infinity).
  // https://en.wikipedia.org/wiki/IEEE_754-1985#Representation_of_non-numbers
  fn isnan(val: f32) -> bool {
    let floatToUint: u32 = bitcast<u32>(val);
    return (floatToUint & 0x7fffffffu) > 0x7f800000u;
  }
  fn isnanVec4(val : vec4<f32>) -> vec4<bool> {
    let floatToUint: vec4<u32> = bitcast<vec4<u32>>(val);
    return (floatToUint & vec4<u32>(0x7fffffffu)) > vec4<u32>(0x7f800000u);
  }
`,Uhe=`
  fn isinf(val: f32) -> bool {
    return abs(val) == uniforms.INFINITY;
  }
`;function Bg(r,t=""){let e=r.length,n=t!==""?`get${t.charAt(0).toUpperCase()+t.slice(1)}CoordsFromIndex`:"getCoordsFromIndex",o=t!==""?`${t.charAt(0).toLowerCase()+t.slice(1)}ShapeStrides`:"outShapeStrides";if(e<=1)return`fn ${n}(index : i32) -> i32 { return index; }`;let s=y.computeStrides(r),a=Lt(e),i=[];for(let u=0;u<e;u++)i.push(`d${u}`);if(s.length===1)return`    fn ${n}(index : i32) -> vec2<i32> {
      let d0 = index / uniforms.${o}; let d1 = index - d0 * uniforms.${o};
      return vec2<i32>(d0, d1);
    }`;let p;return p="var index2 = index;"+s.map((u,l)=>{let m=`let ${i[l]} = index2 / uniforms.${o}.${Oa(l)}`,c=l===s.length-1?`let ${i[l+1]} = index2 - ${i[l]} * uniforms.${o}.${Oa(l)}`:`index2 = index2 - ${i[l]} * uniforms.${o}.${Oa(l)}`;return`${m}; ${c};`}).join(""),`
    fn ${n}(index : i32) -> ${a} {
      ${p}
      return ${a}(${i.join(",")});
    }
  `}function Khe(r,t){let e=r.name,n=r.shape.length,o=Lt(n),s="get"+e.charAt(0).toUpperCase()+e.slice(1),a=["d0","d1","d2","d3","d4","d5"].slice(0,n),i=a.map(l=>`${l} : i32`).join(", ");if(n<1)return`
      fn ${s}() -> ${Ye(t)} {
        return ${Ye(t)}(${e}[0]);
      }
    `;let p=`uniforms.${e.charAt(0).toLowerCase()+e.slice(1)}Shape`,u=`${n}D`;return n===0&&(u="1D"),`
    fn ${s}(${i}) -> ${Ye(t)} {
      return ${Ye(t)}(${e}[getIndexFromCoords${u}(${o}(${a.join(",")}),
        ${p})${t===1?"":` / ${t}`}]);
    }
   `}function Vhe(r,t,e,n){let o=r.name,s=o.charAt(0).toUpperCase()+o.slice(1),a="get"+s+"ByOutput",i=r.shape.length,p=t.length,u=Lt(p);if(y.arraysEqual(r.shape,t)&&n)return`
    fn ${a}Index(globalIndex : i32) -> ${Ye(e)} {
      return ${Ye(e)}(${o}[globalIndex]);
    }

    fn ${a}Coords(coords : ${u}) -> ${Ye(e)} {
      return ${Ye(e)}(${o}[${p>1?"getOutputIndexFromCoords(coords)":"coords"}${e===1?"":` / ${e}`}]);
    }
    `;let l=I.getBroadcastDims(r.shape,t),m=p-i,c="";if(i===0)return`
    fn ${a}Index(globalIndex : i32) -> ${Ye(e)}{
      return get${s}();
    }

    fn ${a}Coords(coords : ${u}) -> ${Ye(e)}{
      return get${s}();
    }
  `;p<2&&l.length>=1?c="coords = 0;":c=l.map(g=>`coords.${Oa(g+m)} = 0;`).join(`
`);let d="";if(p<2&&i>0)d="coords";else if(p>1){let g=Lt(i),b=r.shape.map((x,T)=>`coords.${Oa(T+m)}`).join(", ");d=`${g}(${b})`}else d="coords";let f=`uniforms.${o.charAt(0).toLowerCase()+o.slice(1)}Shape`,h=`${i}D`;return`
  fn ${a}Index(globalIndex : i32) -> ${Ye(e)} {
    var coords = getCoordsFromIndex(globalIndex);
    ${c}
    return ${Ye(e)}(${o}[getIndexFromCoords${h}(${d}, ${f})${e===1?"":` / ${e}`}]);
  }

  fn ${a}Coords(coordsIn : ${u}) -> ${Ye(e)} {
    var coords = coordsIn;
    ${c}
    return ${Ye(e)}(${o}[getIndexFromCoords${h}(${d}, ${f})${e===1?"":` / ${e}`}]);
  }
`}function Hhe(r,t,e,n){let o=Khe(r,e);return r.shape.length<=t.length&&(o+=Vhe(r,t,e,n)),o}function qhe(r,t){let{x:e,y:n=[],z:o=[]}=t,s=r.length,a=e.length+n.length+o.length;if(a!==s)return"";if(e.length===s)return`fn getOutputCoords() -> ${Lt(s)}{
    let globalIndex = getGlobalIndex();
    return getCoordsFromIndex(globalIndex);
  }
  `;let i="",p=[e,n,o];for(let c=0;c<p.length;c++){let d=p[c];if(d.length!==0)if(d.length===1)i+=`let d${d[0]} = i32(globalId[${c}]);`;else{let f=hV(d,"uniforms.outShape");i+=`var index${c} = i32(globalId[${c}]);`;for(let h=0;h<f.length;h++)i+=`let d${d[h]} = index${c} / ${f[h]};`,h===f.length-1?i+=`let d${d[h+1]} = index${c} - d${d[h]} * ${f[h]};`:i+=`index${c} = index${c} - d${d[h]} * ${f[h]};`}}let u=[];for(let c=0;c<a;c++)u.push(`d${c}`);let l=Lt(a),m=`fn getOutputCoords() -> ${l} {
  ${i}
`;return u.length===0?m+=`return ${l}(0); }`:m+=`return ${l}(${u.join(",")}); }`,m}function jhe(r){let t="";switch(r){case 0:case 1:t+=`
        fn getOutputIndexFromCoords(coords : i32) -> i32 {
          return coords;
        }
        `;break;case 2:t+=`
        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {
          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));
        }
        `;break;case 3:t+=`
        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {
          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));
        }
        `;break;case 4:t+=`
        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
          return dot(coords, vec4<i32>(
            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));
        }
        `;break;case 5:t+=`
        fn getOutputIndexFromCoords(coords : vec5) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u;
        }
        `;break;case 6:t+=`
        fn getOutputIndexFromCoords(coords : vec6) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u * uniforms.outShapeStrides.u +
              coords.v;
        }
        `;break;default:y.assert(!1,()=>`Unsupported ${r}D shape`);break}return t}function CV(r){return r.dispatch[1]===1&&r.dispatch[2]===1}function Om(r,t=1){if(r==="float32")return Ye(t,"f32");if(r==="int32"||r==="bool")return Ye(t,"i32");throw new Error(`type ${r} is not supported.`)}function Xhe(r,t,e){let n=r.length,o=Om(t,e),s=`fn setOutputAtIndex(flatIndex : i32, value : ${Ye(e)}) {
      result[flatIndex] = ${o}(value);
    }

    fn setOutputAtIndexI32(flatIndex : i32, value : ${Ye(e,"i32")}) {
      result[flatIndex] = ${o}(value);
    }
    `;if(n>=2){let a=["d0","d1","d2","d3","d4","d5"].slice(0,n),i=Lt(n);s+=`
      fn setOutputAtCoords(${a.map(p=>`${p} : i32`).join(", ")}, value : ${Ye(e)}) {
        let flatIndex = getOutputIndexFromCoords(${i}(${a.join(", ")}));
        setOutputAtIndex(flatIndex${e===1?"":` / ${e}`}, value);
      }
      fn setOutputAtCoordsI32(${a.map(p=>`${p} : i32`).join(", ")}, value : ${Ye(e,"i32")}) {
        let flatIndex = getOutputIndexFromCoords(${i}(${a.join(", ")}));
        setOutputAtIndexI32(flatIndex${e===1?"":` / ${e}`}, value);
      }
    `}return s}function Yhe(r){let t=/(\w+)\s*:\s*vec(5|6)/g;r=r.replace(t,n=>"@align(16) "+n);let e=/vec(5|6)\s*,\s*(\w+)/g;return r=r.replace(e,(n,o,s)=>`vec${o}, @align(16) ${s}`),r}function yV(r){return!(r.dispatchLayout.hasOwnProperty("y")&&r.dispatchLayout.y.length!==0||r.dispatchLayout.hasOwnProperty("z")&&r.dispatchLayout.z.length!==0)}var z2={};Xe(z2,{GPUBytesPerElement:()=>KI,MatMulProgramType:()=>O2,assertNotComplex:()=>Gg,computeDispatch:()=>Y,computeWorkPerThreadForConv2d:()=>Og,computeWorkgroupInfoForMatMul:()=>$2,computeWorkgroupSizeForConv2d:()=>$g,flatDispatchLayout:()=>re,isWebGPUSupported:()=>zg,tilesFitEvenlyIntoShape:()=>Qhe});var zm=r=>{let t=1;for(let e=0;e<r.length;e++)t*=r[e];return t};function Qhe(r,t){if(r.length!==t.length)throw new Error(`Cannot compute whether rank ${r.length} tiles fit evenly into rank ${t.length} shape - ranks must match.`);return t.every((e,n)=>e%r[n]===0)}function Y(r,t,e=[1,1,1],n=[1,1,1]){let[o,s,a]=[Math.ceil(zm(r.x.map(i=>t[i]))/(e[0]*n[0])),r.y?Math.ceil(zm(r.y.map(i=>t[i]))/(e[1]*n[1])):1,r.z?Math.ceil(zm(r.z.map(i=>t[i]))/(e[2]*n[2])):1];return[o,s,a]}function $2(r,t,e,n=!1){let o=[8,8,1],s=[4,4,1];return n||(r<=8&&(s[1]=1),t<=16&&e<=16&&(o[0]=4)),{workgroupSize:o,elementsPerThread:s}}function $g(r,t,e=!1){if(e)return[8,8,1];let n=zm(r.x.map(s=>t[s])),o=zm(r.y.map(s=>t[s]));return n<=4?[4,16,1]:o<=4?[16,4,1]:[16,16,1]}function Og(r,t,e=!1){if(e)return[4,4,1];let n=zm(r.x.map(s=>t[s])),o=zm(r.y.map(s=>t[s]));return n<=4?[1,2,1]:o<=4?[2,1,1]:[2,2,1]}function re(r){return{x:r.map((t,e)=>e)}}function KI(r){if(r==="float32"||r==="int32"||r==="bool"||r==="string")return 4;if(r==="complex64")return 8;throw new Error(`Unknown dtype ${r}`)}function zg(){return(typeof window<"u"||typeof WorkerGlobalScope<"u")&&!!navigator.gpu}function Gg(r,t){Array.isArray(r)||(r=[r]),r.forEach(e=>{e!=null&&y.assert(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGPU backend.`)})}var O2=(s=>(s[s.MatMulReduceProgram=0]="MatMulReduceProgram",s[s.MatMulSplitKProgram=1]="MatMulSplitKProgram",s[s.MatMulSmallOutputSizeProgram=2]="MatMulSmallOutputSizeProgram",s[s.MatMulPackedProgram=3]="MatMulPackedProgram",s[s.MatMulMax=4]="MatMulMax",s))(O2||{});var Jhe=L().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),ege=(r,t)=>{let e=r.limits.maxComputeWorkgroupsPerDimension,n=t.dispatchLayout,o=t.dispatch;if(o.every(a=>a<=e))return o;y.assert(o[0]>e&&n.y===void 0&&n.z===void 0,()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension.");let s=Math.ceil(Math.sqrt(o[0]));return s>e?(s=Math.ceil(Math.cbrt(o[0])),y.assert(s<=e,()=>"Total dispatch size exceeds WebGPU maximum."),[s,s,s]):[s,s,1]},G2=class extends Io{constructor(e,n){super();this.commandQueueOwnedIds=new WeakSet;this.dispatchCountInPass=0;this.disposed=!1;this.downloadWaitMs=0;this.tensorDataPendingDisposal=[];this.queryResolveBuffer=null;this.querySet=null;this.querySetCount=2;this.stagingPendingDisposal=[];this.uniformPendingDisposal=[];this.uploadWaitMs=0;this.hasReadSyncWarned=!1;this.hasTimestampQueryWarned=!1;if(!zg())throw new Error("WebGPU is not supported on this device");this.pipelineCache={},this.device=e,this.queue=e.queue,this.commandEncoder=null,this.computePassEncoder=null,this.adapterInfo=new GI(n),this.supportTimestampQuery=this.device.features.has("timestamp-query"),this.thresholdToIncreaseWorkgroups=this.adapterInfo.intelGPUGeneration>=12?16:8,this.bufferManager=new WI(this.device),this.textureManager=new UI(this.device),this.tensorMap=new Wa(this,Xr()),L().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}nextDataId(){return G2.nextDataId++}floatPrecision(){return 32}disposeData(e,n=!1){if(!this.tensorMap.has(e))return!0;let o=this.tensorMap.get(e);return n?o.refCount=0:o.refCount--,o.refCount>0?!1:(o.complexTensorInfos!=null&&(this.disposeData(o.complexTensorInfos.real.dataId),this.disposeData(o.complexTensorInfos.imag.dataId)),this.commandQueueOwnedIds.has(e)?(this.tensorDataPendingDisposal.push(e),!0):(this.releaseResource(e),this.tensorMap.delete(e),!0))}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}releaseResource(e){let n=this.tensorMap.get(e);if(!(!n||!n.resource)){if(n.external){n.resource=null;return}n.resource instanceof GPUBuffer?this.bufferManager.releaseBuffer(n.resource):n.resource instanceof GPUTexture&&this.textureManager.releaseTexture(n.resource),n.resource=null}}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){let n=this.tensorMap.get(e);n.refCount++}decRef(e){if(this.tensorMap.has(e)){let n=this.tensorMap.get(e);n.refCount--}}write(e,n,o){if(o==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let s={id:this.nextDataId()};return this.tensorMap.set(s,{dtype:o,shape:n,values:e,refCount:1}),s}move(e,n,o,s,a){if(s==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.tensorMap.set(e,{dtype:s,shape:o,values:n,refCount:a})}submitQueue(){this.queue.submit([this.commandEncoder.finish()]),this.commandEncoder=null,this.dispatchCountInPass=0,this.commandQueueOwnedIds=new WeakSet,this.tensorDataPendingDisposal.forEach(e=>{this.releaseResource(e),this.tensorMap.delete(e)}),this.uniformPendingDisposal.forEach(e=>this.bufferManager.releaseBuffer(e)),this.stagingPendingDisposal.forEach(e=>this.bufferManager.releaseBuffer(e,!1)),this.tensorDataPendingDisposal=[],this.uniformPendingDisposal=[],this.stagingPendingDisposal=[]}ensureCommandEncoderReady(){this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder())}endComputePassEncoder(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}async checkCompileCompletionAsync(){let e;try{e=await Promise.all(Object.values(this.pipelineCache))}catch(n){throw new Error(n.message)}Object.keys(this.pipelineCache).map((n,o)=>{this.pipelineCache[n]=e[o]})}async getBufferData(e){if(L().getBool("WEBGPU_ENGINE_COMPILE_ONLY"))return console.warn("The data may be invalid since WEBGPU_ENGINE_COMPILE_ONLY is true, this can only be called when WEBGPU_ENGINE_COMPILE_ONLY is false"),null;let n=e.size,o=this.bufferManager.acquireBuffer(n,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,o,0,n),this.submitQueue(),await o.mapAsync(GPUMapMode.READ);let s=o.getMappedRange().slice(0);return o.unmap(),o!=null&&this.bufferManager.releaseBuffer(o),L().getBool("WEBGPU_USE_PROFILE_TOOL")&&(y.assert(this.dummyContext!==void 0,()=>"Fail to get context for profiling tool"),this.dummyContext.getCurrentTexture()),s}convertAndCacheOnCPU(e,n){let o=this.tensorMap.get(e);return o.values=n,o.values}readSync(e){let n=this.tensorMap.get(e),{values:o,complexTensorInfos:s}=n;if(o!=null||n.dtype==="string")return o;if(n.dtype==="complex64"){let g=this.readSync(s.real.dataId),b=this.readSync(s.imag.dataId),x=y.convertBackendValuesAndArrayBuffer(I.mergeRealAndImagArrays(g,b).buffer,"float32");return this.convertAndCacheOnCPU(e,x),x}this.hasReadSyncWarned||(this.hasReadSyncWarned=!0,console.warn("The performance of synchronously reading data from GPU to CPU is poor on the webgpu backend, please use asynchronous APIs instead."));let a=["opaque","premultiplied"],i=n.resource,p=i.size;y.assert(p%4===0,()=>"Because there is 4 bytes for one pixel, buffer size must be multiple of 4.");let u=p/4,l=new ArrayBuffer(p),m=256,c=256,d=a.map(g=>new OffscreenCanvas(m,c)),f=new OffscreenCanvas(m,c);this.endComputePassEncoder(),d.map((g,b)=>{let x=g.getContext("webgpu");return x.configure({device:this.device,format:"bgra8unorm",usage:GPUTextureUsage.COPY_DST,alphaMode:a[b]}),x.getCurrentTexture()}).map((g,b)=>{let x=m*4,T=(M,R,$)=>{this.ensureCommandEncoderReady(),this.commandEncoder.copyBufferToTexture({buffer:i,bytesPerRow:x,offset:$},{texture:g},{width:M,height:R}),this.submitQueue();let G=f.getContext("2d",{willReadFrequently:!0});G.clearRect(0,0,M,R),G.drawImage(d[b],0,0);let W=G.getImageData(0,0,M,R).data,U=a[b],V=new Uint8ClampedArray(l,$,M*R*4);for(let K=0;K<V.length;K+=4)if(U==="premultiplied")V[K+3]=W[K+3];else{let q=W[K];V[K]=W[K+2],V[K+1]=W[K+1],V[K+2]=q}},C=Math.floor(u/(m*c)),k=m,w=c,_=0;for(let M=0;M<C;M++)T(k,w,_),_+=m*c*4;let P=u%(m*c);w=Math.floor(P/m),w>0&&(T(k,w,_),_+=w*(m*4)),k=P%m,k>0&&T(k,1,_)});let h=y.convertBackendValuesAndArrayBuffer(l,n.dtype);return this.convertAndCacheOnCPU(e,h),h}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);let n=this.tensorMap.get(e),{values:o}=n;if(o!=null)return o;let s;if(n.dtype==="complex64"){let a=await Promise.all([this.read(n.complexTensorInfos.real.dataId),this.read(n.complexTensorInfos.imag.dataId)]),i=a[0],p=a[1];s=I.mergeRealAndImagArrays(i,p)}else{let a=await this.getBufferData(n.resource);s=y.convertBackendValuesAndArrayBuffer(a,n.dtype)}return this.convertAndCacheOnCPU(e,s),s}copyBuffer(e){let n=e.size,o=e.usage,s=this.bufferManager.acquireBuffer(n,o);return this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,s,0,n),this.submitQueue(),s}createTensorFromGPUData(e,n,o){let s=e.buffer;if(o==="complex64")throw new Error("Cannot write to a complex64 dtype. ");let a={id:this.nextDataId()};this.tensorMap.set(a,{dtype:o,shape:n,values:null,refCount:1,external:e.zeroCopy});let i=this.tensorMap.get(a),p=KI(i.dtype)*y.sizeFromShape(i.shape);if(e.buffer.size<p)throw new Error(`GPUBuffer size(${e.buffer.size}) is smaller than tensor size(${p})!`);if((e.buffer.usage&(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))!==(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))throw new Error("GPUBuffer.usage should include GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC!");return e.zeroCopy!==!0&&(s=this.copyBuffer(s)),i.resource=s,Xr().makeTensorFromDataId(a,n,o,this)}readToGPU(e){let n=this.tensorMap.get(e),{values:o,dtype:s,shape:a,resource:i}=n;if(s==="complex64")throw new Error("Does not support reading buffer for complex64 dtype.");if(i==null)throw o!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let p=i,u=p.size,l=p.usage,m=this.bufferManager.acquireBuffer(u,l);this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(i,0,m,0,u),this.submitQueue();let c=this.makeTensorInfo(a,s),d=Xr().makeTensorFromTensorInfo(c),f=this.tensorMap.get(c.dataId);return f.resource=m,{tensorRef:d,buffer:m}}bufferSync(e){let n=this.readSync(e.dataId);if(e.dtype==="string")try{let o=n.map(s=>y.decodeString(s));return Ce(e.shape,e.dtype,o)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Ce(e.shape,e.dtype,n)}async time(e){!this.supportTimestampQuery&&!this.hasTimestampQueryWarned&&(console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --disable-dawn-features=disallow_unsafe_apis to try it again. Otherwise, zero will be shown for the kernel time when profiling mode is enabled."),this.hasTimestampQueryWarned=!0);let n=this.activeTimers,o=[],s=!1;this.programTimersStack==null?(this.programTimersStack=o,s=!0):this.activeTimers.push(o),this.activeTimers=o,e();let a=y.flatten(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),i=y.flatten(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=n,s&&(this.programTimersStack=null);let p={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},u=await Promise.all(a);return p.kernelMs=y.sum(u),p.getExtraProfileInfo=()=>u.map((l,m)=>({name:i[m],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,p}makeTensorInfo(e,n,o){return n==="string"&&o!=null&&o.length>0&&y.isString(o[0])&&(o=o.map(a=>y.encodeString(a))),{dataId:this.write(o,e,n),shape:e,dtype:n}}tensorToBinding(e){if(!e)return null;let o=this.tensorMap.get(e.dataId).resource;return o instanceof GPUBuffer?{buffer:o}:o instanceof GPUTexture?o.createView():o}uploadToGPU(e){let n=this.tensorMap.get(e);if(n.resource!=null)return;let o=KI(n.dtype)*y.sizeFromShape(n.shape),s,a=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST;if(n.values){if(s=this.bufferManager.acquireBuffer(o,a,!0),s.mapState==="unmapped"){let i=this.bufferManager.acquireBuffer(o,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,!0,!1),p=i.getMappedRange();n.dtype==="int32"||n.dtype==="bool"?new Int32Array(p).set(n.values):new Float32Array(p).set(n.values),i.unmap(),this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(i,0,s,0,o),this.stagingPendingDisposal.push(i)}else{let i=s.getMappedRange();n.dtype==="int32"||n.dtype==="bool"?new Int32Array(i).set(n.values):new Float32Array(i).set(n.values),s.unmap()}n.values=null}else s=this.bufferManager.acquireBuffer(o,a);n.resource=s}makeUniforms(e){let n=0,o=0,s=[],a=1;e.forEach(u=>{u.data.length===0&&(u.data=[1]);let l;switch(u.data.length){case 1:l=4;break;case 2:l=8;break;case 3:l=16;break;case 4:l=16;break;case 5:l=16;break;case 6:l=16;break;default:y.assert(!1,()=>`Unsupported ${u.data.length}D shape`)}(o===5||o===6)&&(l=16),l>a&&(a=l),n=Math.ceil(n/l)*l,o=u.data.length,s.push(n),n+=u.data.length*4}),n=Math.ceil(n/a)*a;let i=new ArrayBuffer(n);e.forEach((u,l)=>{let m=s[l];u.type==="int32"?new Int32Array(i,m,u.data.length).set(u.data):u.type==="uint32"?new Uint32Array(i,m,u.data.length).set(u.data):new Float32Array(i,m,u.data.length).set(u.data)});let p=this.bufferManager.acquireBuffer(n,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);return this.queue.writeBuffer(p,0,i,0,n),this.uniformPendingDisposal.push(p),{offset:0,size:n,buffer:p}}runWebGPUProgram(e,n,o,s,a){if(a||(a=this.makeTensorInfo(e.outputShape,o)),y.sizeFromShape(a.shape)===0)return this.tensorMap.get(a.dataId).values=y.getTypedArrayFromDType(a.dtype,0),a;this.uploadToGPU(a.dataId),e.dispatch=ege(this.device,e);let i=n.map((u,l)=>{if(u.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(u.dataId),{dtype:this.tensorMap.get(u.dataId).dtype,shape:u.shape,name:e.variableNames[l]}});e.shaderKey=TV(e,i,a);let p=L().getBool("WEBGPU_ENGINE_COMPILE_ONLY");return e.shaderKey in this.pipelineCache||(this.pipelineCache[e.shaderKey]=xV(this.device,e,i,a,p)),e.pipeline=this.pipelineCache[e.shaderKey],p||this.recordAndSubmit(e,a,n,s),a}recordAndSubmit(e,n,o,s){if(e.pipeline instanceof Promise)throw new Error("Please call checkCompileCompletionAsync to ensure parallel compilation is done!");let a=[],i=[];if(!e.isFromPixels){a.push({type:"float32",data:[NaN]},{type:"float32",data:[1/0]}),i=o.concat(n).map(d=>d.shape);let c="int32";if(i.map(d=>{a.push({type:c,data:d});let f=y.computeStrides(d);a.push({type:c,data:f})}),e.size){let d=y.sizeFromShape(e.outputShape);a.push({type:c,data:[e.outputComponent?d/e.outputComponent:d]})}}s&&(a=[...a,...s]);let p=[this.tensorToBinding(n),...o.map(c=>this.tensorToBinding(c)),this.makeUniforms(a)];o.forEach(c=>{this.commandQueueOwnedIds.add(c.dataId)}),this.commandQueueOwnedIds.add(n.dataId);let u=this.device.createBindGroup({layout:e.pipeline.getBindGroupLayout(0),entries:p.map((c,d)=>({binding:d,resource:c}))}),l=this.activeTimers!=null;this.ensureCommandEncoderReady();let m={};l&&this.supportTimestampQuery?(this.endComputePassEncoder(),this.querySet==null&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.querySetCount})),m.timestampWrites=[{querySet:this.querySet,queryIndex:0,location:"beginning"},{querySet:this.querySet,queryIndex:1,location:"end"}],this.computePassEncoder=this.commandEncoder.beginComputePass(m)):this.computePassEncoder||(this.computePassEncoder=this.commandEncoder.beginComputePass(m)),this.computePassEncoder.setPipeline(e.pipeline),this.computePassEncoder.setBindGroup(0,u),this.computePassEncoder.dispatchWorkgroups(e.dispatch[0],e.dispatch[1],e.dispatch[2]),this.dispatchCountInPass++,(l||L().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchCountInPass)&&(this.endComputePassEncoder(),l?this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime()}):this.submitQueue())}async getQueryTime(){if(!this.supportTimestampQuery)return 0;this.queryResolveBuffer==null&&(this.queryResolveBuffer=this.bufferManager.acquireBuffer(this.querySetCount*8,GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST|GPUBufferUsage.QUERY_RESOLVE)),this.commandEncoder.resolveQuerySet(this.querySet,0,this.querySetCount,this.queryResolveBuffer,0);let e=this.bufferManager.acquireBuffer(this.querySetCount*8,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,this.querySetCount*8),this.submitQueue(),await e.mapAsync(GPUMapMode.READ);let n=new BigUint64Array(e.getMappedRange()),o=Number(n[1]-n[0])/1e6;return e.unmap(),this.bufferManager.releaseBuffer(e),o}shouldExecuteOnCPU(e,n=Jhe){return L().getBool("WEBGPU_CPU_FORWARD")&&e.every(o=>this.tensorMap.get(o.dataId).resource==null&&y.sizeFromShape(o.shape)<n)}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDataPendingDisposal.length}dispose(){this.disposed||(this.querySet!=null&&this.querySet.destroy(),this.bufferManager.dispose(),this.textureManager.dispose(),this.disposed=!0)}},Qf=G2;Qf.nextDataId=0;zg()&&Bp("webgpu",async()=>{let r={powerPreference:L().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},t=await navigator.gpu.requestAdapter(r),e={};t.features.has("timestamp-query")&&(e.requiredFeatures=["timestamp-query"]);let n=t.limits;e.requiredLimits={maxComputeWorkgroupStorageSize:n.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:n.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:n.maxStorageBufferBindingSize,maxBufferSize:n.maxBufferSize,maxComputeWorkgroupSizeX:n.maxComputeWorkgroupSizeX,maxComputeInvocationsPerWorkgroup:n.maxComputeInvocationsPerWorkgroup};let o=await t.requestDevice(e),s=await t.requestAdapterInfo();return new Qf(o,s)},3);var tge="let resultTemp = a + b;",rge="let resultTemp = atan2(a, b);",nge="let resultTemp = areal * breal - aimag * bimag;",oge="let resultTemp = areal * bimag + aimag * breal;",sge="let resultTemp = a / b;",age="let resultTemp = select(a * (b + 1.0), a, b >= b - b);",ige="return f32(a == b);",uge="return vec4<f32>(a == b);",pge="return f32(a > b);",lge="return vec4<f32>(a > b);",mge="return f32(a >= b);",cge="return vec4<f32>(a >= b);",dge=`
  let s = sign(a) * sign(b);
  let ia = i32(round(a));
  let ib = i32(round(b));
  return f32(idiv(ia, ib, s));
`,fge=`
  let ia = vec4<i32>(round(a));
  let ib = vec4<i32>(round(b));
  let cond = ib != vec4<i32>(0);
  var resultTemp = vec4<i32>(0);
  let s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    resultTemp[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    resultTemp[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    resultTemp[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    resultTemp[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4<f32>(resultTemp);
`,hge="return f32(a < b);",gge="return vec4<f32>(a < b);",bge="return f32(a <= b);",yge="return vec4<f32>(a <= b);",xge="return f32(a >= 1.0 && b >= 1.0);",Tge=`return (vec4<f32>(a >= vec4<f32>(1.0)) *
  vec4<f32>(b >= vec4<f32>(1.0)));`,Cge="return f32(a >= 1.0 || b >= 1.0);",Ige=`return min(vec4<f32>(a >= vec4<f32>(1.0)) +
  vec4<f32>(b >= vec4<f32>(1.0)), vec4<f32>(1.0));`,kge="let resultTemp = max(a, b);",vge="let resultTemp = min(a, b);",Sge=`
  let isNaN = b == 0.;
  var resultTemp = a % b;
  resultTemp = select((resultTemp + b) % b, resultTemp,
      (a < 0. && b < 0.) || (a >= 0. && b > 0.));
`,wge=`
  let isNaN = !vec4<bool>(b);
  var resultTemp = vec4<f32>(a % b);
  if (!((a[0] < 0. && b[0] < 0.) || (a[0] >= 0. && b[0] > 0.))) {
    resultTemp[0] = (resultTemp[0] + b[0]) % b[0];
  }
  if (!((a[1] < 0. && b[1] < 0.) || (a[1] >= 0. && b[1] > 0.))) {
    resultTemp[1] = (resultTemp[1] + b[1]) % b[1];
  }
  if (!((a[2] < 0. && b[2] < 0.) || (a[2] >= 0. && b[2] > 0.))) {
    resultTemp[2] = (resultTemp[2] + b[2]) % b[2];
  }
  if (!((a[3] < 0. && b[3] < 0.) || (a[3] >= 0. && b[3] > 0.))) {
    resultTemp[3] = (resultTemp[3] + b[3]) % b[3];
  }
`,Age="let resultTemp = a * b;",Nge=`
  var resultTemp = f32(a != b);
  let valueForNaN = 1.0;
`,Dge=`
  var resultTemp = vec4<f32>(a != b);
  let valueForNaN = 1.0;
`,_ge=`
  let isNaN = a < 0.0 && floor(b) < b;
  if (b == 0.0) {
    return 1.0;
  }
  var resultTemp = select(sign(a) * pow(abs(a), b), pow(abs(a), b),
      round(abs(b) % 2.0) != 1.0);
`,Mge=`
  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);
  let isModRound1 = vec4<f32>(isModRound1Bool);
  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);
  var resultTemp = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  let isExpZero = b == vec4<f32>(0.0);
  if (isExpZero.r) {
    resultTemp.r = 1.0;
  }
  if (isExpZero.g) {
    resultTemp.g = 1.0;
  }
  if (isExpZero.b) {
    resultTemp.b = 1.0;
  }
  if (isExpZero.a) {
    resultTemp.a = 1.0;
  }
  let isNaN = (a < vec4<f32>(0.0)) & (floor(b) < b);
`,Pge="if (a < 0.0) { return b * a; }  return a;",Rge=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,Fge="let resultTemp = (a - b) * (a - b);",Ege="let resultTemp = a - b;";function Jf(r,t){let e;do{switch(r){case 1:e=rge;break;case 14:e=kge;break;case 15:e=vge;break;case 16:e=t?wge:Sge;break;case 18:e=t?Dge:Nge;break;case 19:e=t?Mge:_ge;break;default:continue}let n,o,s;return t?(n="isnanVec4",o="vec4<f32>",s="vec4<bool>"):(n="isnan",o="f32",s="bool"),`
      let aIsNaN = ${n}(a);
      let aPostLegalization = select(a, ${o}(42), aIsNaN);
      let bIsNaN = ${n}(b);
      let bPostLegalization = select(b, ${o}(42), bIsNaN);
      let isNaN = false;
      let valueForNaN = uniforms.NAN;
      {
        let a = aPostLegalization;
        let b = bPostLegalization;
        ${e}
        return select(
            resultTemp, ${o}(valueForNaN),
            ${s}(isNaN) | aIsNaN | bIsNaN);
      }
    `}while(!1);switch(r){case 0:e=tge;break;case 2:e=oge;break;case 3:e=nge;break;case 4:e=sge;break;case 5:e=age;break;case 6:return t?uge:ige;case 7:return t?lge:pge;case 8:return t?cge:mge;case 9:return t?fge:dge;case 10:return t?gge:hge;case 11:return t?yge:bge;case 12:return t?Tge:xge;case 13:return t?Ige:Cge;case 17:e=Age;break;case 20:return t?Rge:Pge;case 21:e=Fge;break;case 22:e=Ege;break;default:}return`
    ${e}
    return resultTemp;
  `}var Lge="return abs(a);",Bge=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  return acos(a);
`,$ge=`
  if (a < 1.) {
    return uniforms.NAN;
  }
  return acosh(a);
`,Oge=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  return asin(a);
`,zge="return asinh(a);",Gge=`
  if (isnan(a)) {
    return uniforms.NAN;
  }
  return atan(a);
`,Wge=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  if (a == 1.) {
    return uniforms.INFINITY;
  }
  if (a == -1.) {
    return -uniforms.INFINITY;
  }
  return atanh(a);
`,Uge="return ceil(a);",Kge="return cos(a);",Vge=`
  let e2x = exp(-a);
  return (e2x + 1.0 / e2x) / 2.0;
`,Hge="return exp(a) - 1.0;",qge="if (a >= 0.0) { return a; }  return (exp(a) - 1.0);",jge=`
  var resFloat = exp(a) - vec4<f32>(1.0);
  if (a.r >= 0.0) {
    resFloat.r = a.r;
  }
  if (a.g >= 0.0) {
    resFloat.g = a.g;
  }
  if (a.b >= 0.0) {
    resFloat.b = a.b;
  }
  if (a.a >= 0.0) {
    resFloat.a = a.a;
  }
  return resFloat;
`,Xge=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  let p = ${I.ERF_P};
  let a1 = ${I.ERF_A1};
  let a2 = ${I.ERF_A2};
  let a3 = ${I.ERF_A3};
  let a4 = ${I.ERF_A4};
  let a5 = ${I.ERF_A5};

  let sign = sign(a);
  let absA = abs(a);
  let t = 1.0 / (1.0 + p * absA);
  return sign * (1.0 - (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t * exp(-absA * absA));
`,Yge="return exp(a);",Zge="return floor(a);",Qge="return f32(!isnan(a) && !isinf(a));",Jge="return f32(isinf(a));",ebe="return f32(isnan(a));",tbe="return a;",rbe=`if (a < 0.0) { return uniforms.NAN; }
  return log(a);`,nbe=`
  if (isnan(a)) { return a; }
  return log(1.0 + a);
`,obe="return f32(!(a >= 1.0));",sbe="return -a;",abe="if (a < 0.0) { return uniforms.alpha * a; } return a;",ibe=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (uniforms.alpha * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,ube="return 1.0 / a;",pbe="return select(a, 0.0, a < 0.0);",lbe="return clamp(a, 0.0, 6.0);",mbe="return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));",cbe=`
  return select(a, vec4<f32>(0.0), a < vec4<f32>(0.0));
`,dbe="return round(a);",fbe="return inverseSqrt(a);",hbe=`
  if (a >= 0.0) {
    return ${I.SELU_SCALE} * a;
  } else {
    return ${I.SELU_SCALEALPHA} * (exp(a) - 1.0);
  }
`,gbe="return 1.0 / (1.0 + exp(-1.0 * a));",bbe="return sign(a);",ybe="return sin(a);",xbe=`
  let e2x = exp(a);
  return (e2x - 1.0 / e2x) / 2.0;
`,Tbe=`
  let epsilon = 1.1920928955078125e-7;
  let threshold = log(epsilon) + 2.0;

  let too_large = a > -threshold;
  let too_small = a < threshold;
  let exp_a = exp(a);

  if (too_large) {
    return a;
  } else if (too_small) {
    return exp_a;
  } else {
    return log(exp_a + 1.0);
  }
`,Cbe="return sqrt(a);",Ibe="return a * a;",kbe=`
  if (isnan(a)) {
    return a;
  }

  return select(uniforms.stepAlpha, 1.0, a > 0.0);
`,vbe="return tan(a);",Sbe=`
  let e2x = exp(-2.0 * abs(a));
  return sign(a) * (1.0 - e2x) / (1.0 + e2x);
`,wbe="return f32(i32((a)));";function dp(r,t){switch(r){case 0:return Lge;case 1:return Bge;case 2:return $ge;case 3:return Oge;case 4:return zge;case 5:return Gge;case 6:return Wge;case 8:return Kge;case 9:return Vge;case 7:return Uge;case 10:return t?jge:qge;case 11:return Xge;case 12:return Yge;case 13:return Hge;case 14:return Zge;case 15:return Qge;case 16:return Jge;case 17:return ebe;case 18:return tbe;case 19:return rbe;case 20:return nbe;case 21:return obe;case 22:return sbe;case 25:return t?ibe:abe;case 26:return ube;case 23:return t?cbe:pbe;case 24:return t?mbe:lbe;case 27:return dbe;case 28:return fbe;case 29:return hbe;case 30:return gbe;case 31:return bbe;case 32:return ybe;case 33:return xbe;case 34:return Tbe;case 35:return Cbe;case 36:return Ibe;case 37:return kbe;case 38:return vbe;case 39:return Sbe;case 40:return wbe;default:throw new Error(`BinaryType ${r} is not implemented!`)}}function on(r,t=!1,e=!1,n=3){if(r===null)return"";let o="";if(r==="linear")o=dp(18);else if(r==="relu")o=dp(23,e);else if(r==="elu")o=dp(10,e);else if(r==="relu6")o=dp(24,e);else if(r==="prelu")o=Jf(20,e);else if(r==="sigmoid")o=dp(30,e);else if(r==="leakyrelu")o=dp(25,e);else throw new Error(`Activation ${r} has not been implemented for the WebGPU backend.`);let a=Ye(e?4:1),i="";return t?i=`
      fn activation(a : ${a}, coords : vec${n}<i32>) -> ${a} {
        let b = getPreluActivationWeightsByOutputCoords(coords);
        ${o}
      }`:i=`
      fn activation(a : ${a}, coords : vec${n}<i32>) -> ${a} {
        ${o}
      }`,i}function fo(r,t){return`
      ${r?"value = value + getBiasByOutputCoords(coords);":""}
      ${t?"value = activation(value, coords);":""}
      `}function W2(r,t,e=!1,n=!1,o=!1,s=1){y.assert(r&&s===1||!r,()=>`transposeA ${r} is not compatible with component size ${s}`);let a=`
      ${r?"value = getA(batch, col, row);":"value = getA(batch, row, col);"}

    `,i=t?"value = getB(batch, col, row);":"value = getB(batch, row, col);";return`
  fn mm_readA(batch: i32, row: i32, col: i32) -> ${Ye(s)} {
    var value = ${Ye(s)}(0.0);
    ${e&&o?a:`
    ${r?"if(row < uniforms.dimAOuter && col < uniforms.dimInner)":"if(row < uniforms.aShape[1] && col < uniforms.aShape[2])"}
    {
      ${a}
    }
    `}
    return value;
  }

  fn mm_readB(batch: i32, row: i32, col: i32) -> ${Ye(s)} {
    var value = ${Ye(s)}(0.0);
    ${i}
    return value;
  }
  `}function Wg(r,t,e,n,o=!1,s=!1,a=!1,i=1){return`
  ${W2(e,n,o,s,a,i)}
  fn mm_write(batch: i32, row: i32, col: i32, valueIn: ${Ye(i)}) {
    ${o&&s?"":"if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)"}
    {
      var value = valueIn;
      let coords = vec3<i32>(batch, row, col);
      ${fo(r,t)}
      setOutputAtCoords(coords[0], coords[1], coords[2], value);
    }
  }
  `}var Abe=(r,t)=>r?`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          kStart + inputRow,
          globalRowStart + inputCol * ${t});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          globalRow + innerRow,
          kStart + inputCol * ${t});
        `,Nbe=(r,t,e,n)=>{if(r)return`
      for (var k = 0; k < ${n}; k++) {
        let BCached0 = mm_Bsub[k][tileCol];
        let ACached0 = mm_Asub[k][localRow];
        for (var i = 0; i < ${e}; i++) {
          acc[i] = fma(BCached0, vec4<f32>(ACached0[i]), acc[i]);
        }
      }`;{let o="",s="";for(let a=0;a<t;a++)o+=`let BCached${a} = mm_Bsub[k * ${t} + ${a}][tileCol];`,s+=`acc[i] = fma(BCached${a}, vec4<f32>(ACached[${a}]), acc[i]);`;return`
      for (var k = 0; k < ${n/t}; k++) {
        ${o}
        for (var i = 0; i < ${e}; i++) {
          let ACached = mm_Asub[tileRow + i][k];
          ${s}
        }
      }`}};function Gm(r,t,e=!1,n=32,o=!1,s=32,a=!1){let i=t[1]*r[1],p=t[0]*r[0],u=e?i:n,l=e?n:i,m=u/t[0],c=n/t[1],d=r[1],f=r[0];return y.assert((e&&m===4&&r[1]===4||!e&&(m===3||m===4))&&u%t[0]===0&&n%t[1]===0&&r[0]===4,()=>`If transposeA ${e} is true, innerElementSize ${m} and workPerThread[1] ${r[1]} must be 4.
          Otherwise, innerElementSize ${m} must be 3 or 4.
      tileAWidth ${u} must be divisible by workgroupSize[0]${t[0]}. tileInner ${n} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${r[0]} must be 4.`),`
  var<workgroup> mm_Asub : array<array<vec${m}<f32>, ${u/m}>, ${l}>;
  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${p/r[0]}>, ${n}>;

  ${X()} {
    let localRow = i32(localId.y);
    let tileRow = localRow * ${d};
    let tileCol = i32(localId.x);

    let globalRow = i32(globalId.y) * ${d};
    let globalCol = i32(globalId.x) * ${f};
    let batch = ${o?"0":"i32(globalId.z)"};
    let batchA = ${o||!a?"batch":"batch % uniforms.aShape[0]"};
    let batchB = ${o||!a?"batch":"batch % uniforms.bShape[0]"};
    let globalRowStart = i32(workgroupId.y) * ${i};

    let numTiles = ${o?`${Math.ceil(s/n)}`:`(uniforms.dimInner - 1) / ${n} + 1`};
    var kStart = ${o?`i32(globalId.z) * ${s}`:"0"};

    var acc: array<vec4<f32>, ${d}>;

    // Loop over shared dimension.
    let tileRowB = localRow * ${c};
    for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < ${d}; innerRow++) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileCol;
            ${Abe(e,m)}
        }

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < ${c}; innerRow++) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(batchB, kStart + inputRow, globalCol);
        }
        kStart = kStart + ${n};
        workgroupBarrier();

        // Compute acc values for a single thread.
        ${Nbe(e,m,d,n)}
        workgroupBarrier();
    }

    for (var innerRow = 0; innerRow < ${d}; innerRow++) {
        mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
    }
  }`}var IV=r=>r?`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          kStart + inputRow,
          globalRowStart + inputCol);
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          globalRowStart + inputRow,
          kStart + inputCol);
        `,Dbe=r=>r?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];";function Wm(r,t,e=!1,n=32,o=!1,s=32,a=!1,i=!1){let p=r[1]*t[1],u=r[0]*t[0],l=e?p:n,m=e?n:p;y.assert(m%t[1]===0&&l%t[0]===0&&n%t[1]===0,()=>`tileAHight ${m} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${l} must be divisible by workgroupSize[0]${t[0]}, tileInner ${n} must be divisible by workgroupSize[1]${t[1]}`);let c=m/t[1],d=l/t[0],f=n/t[1],h=r[1],g=r[0],b=a?`
      let localRow = i32(localId.y);
      let localCol = i32(localId.x);
      let globalRowStart = i32(workgroupId.y) * ${p};
      let globalColStart = i32(workgroupId.x) * ${u};

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        for (var inputRow = localRow; inputRow < ${m}; inputRow = inputRow + ${t[1]}) {
          for (var inputCol = localCol; inputCol < ${l}; inputCol = inputCol + ${t[0]}) {
            ${IV(e)}
          }
        }
        // Load one tile of B into local memory.
        for (var inputRow = localRow; inputRow < ${n}; inputRow = inputRow + ${t[1]}) {
              for (var inputCol = localCol; inputCol < ${u}; inputCol = inputCol + ${t[0]}) {
            mm_Bsub[inputRow][inputCol] = mm_readB(batchB,
              kStart + inputRow,
              globalColStart + inputCol);
          }
        }
        kStart = kStart + ${n};
        workgroupBarrier();

        // Compute acc values for a single thread.
        var BCached : array<f32, ${g}>;
        for (var k = 0; k < ${n}; k++) {
          for (var inner = 0; inner < ${g}; inner++) {
            BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];
          }
          for (var innerRow = 0; innerRow < ${h}; innerRow++) {
            let ACached = ${e?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}
            for (var innerCol = 0; innerCol < ${g}; innerCol++) {
              acc[innerRow][innerCol] =
                  fma(ACached, BCached[innerCol], acc[innerRow][innerCol]);
            }
          }
        }
        workgroupBarrier();
      }
      for (var innerRow = 0; innerRow < ${h}; innerRow++) {
        let gRow = globalRowStart + localRow + innerRow * ${t[1]};
        for (var innerCol = 0; innerCol < ${g}; innerCol++) {
          let gCol = globalColStart + localCol + innerCol * ${t[0]};
          mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
        }
      }
      `:`
  let tileRow = i32(localId.y) * ${h};
  let tileCol = i32(localId.x) * ${g};

  let globalRow = i32(globalId.y) * ${h};
  let globalCol = i32(globalId.x) * ${g};
  let globalRowStart = i32(workgroupId.y) * ${p};

  let tileRowA = i32(localId.y) * ${c};
  let tileColA = i32(localId.x) * ${d};
  let tileRowB = i32(localId.y) * ${f};
  // Loop over shared dimension.
  for (var t = 0; t < numTiles; t++) {
    // Load one tile of A into local memory.
    for (var innerRow = 0; innerRow < ${c}; innerRow++) {
      for (var innerCol = 0; innerCol < ${d}; innerCol++) {
        let inputRow = tileRowA + innerRow;
        let inputCol = tileColA + innerCol;
        ${IV(e)}
      }
    }

    // Load one tile of B into local memory.
    for (var innerRow = 0; innerRow < ${f}; innerRow++) {
      for (var innerCol = 0; innerCol < ${g}; innerCol++) {
        let inputRow = tileRowB + innerRow;
        let inputCol = tileCol + innerCol;
        mm_Bsub[inputRow][inputCol] = mm_readB(batchB,
          kStart + inputRow,
          globalCol + innerCol);
      }
    }
    kStart = kStart + ${n};
    workgroupBarrier();

    // Compute acc values for a single thread.
    var BCached : array<f32, ${g}>;
    for (var k = 0; k < ${n}; k++) {
      for (var inner = 0; inner < ${g}; inner++) {
        BCached[inner] = mm_Bsub[k][tileCol + inner];
      }

      for (var innerRow = 0; innerRow < ${h}; innerRow++) {
        ${Dbe(e)}
        for (var innerCol = 0; innerCol < ${g}; innerCol++) {
          acc[innerRow][innerCol] =
              fma(ACached, BCached[innerCol], acc[innerRow][innerCol]);
        }
      }
    }

    workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < ${h}; innerRow++) {
    for (var innerCol = 0; innerCol < ${g}; innerCol++) {
      mm_write(batch, globalRow + innerRow, globalCol + innerCol,
          acc[innerRow][innerCol]);
    }
  }
  `;return`
    var<workgroup> mm_Asub : array<array<f32, ${l}>, ${m}>;
    var<workgroup> mm_Bsub : array<array<f32, ${u}>, ${n}>;

    ${X()} {
      let batch = ${o?"0":"i32(globalId.z)"};
      let batchA = ${o||!i?"batch":"batch % uniforms.aShape[0]"};
      let batchB = ${o||!i?"batch":"batch % uniforms.bShape[0]"};
      let numTiles = ${o?`${Math.ceil(s/n)}`:`(uniforms.dimInner - 1) / ${n} + 1`};
      var kStart = ${o?`i32(globalId.z) * ${s}`:"0"};

      var acc : array<array<f32, ${g}>, ${h}>;

      // Without this initialization strange values show up in acc.
      for (var innerRow = 0; innerRow < ${h}; innerRow++) {
        for (var innerCol = 0; innerCol < ${g}; innerCol++) {
          acc[innerRow][innerCol] = 0.0;
        }
      }
      ${b}
    }
  `}var _be=r=>r?`
      mm_readA(batchA, colA, globalRow),
      mm_readA(batchA, colA + 1, globalRow),
      mm_readA(batchA, colA + 2, globalRow),
      mm_readA(batchA, colA + 3, globalRow)
  `:`
      mm_readA(batchA, globalRow, colA),
      mm_readA(batchA, globalRow, colA + 1),
      mm_readA(batchA, globalRow, colA + 2),
      mm_readA(batchA, globalRow, colA + 3)
  `;function Mbe(r,t=!1){y.assert(r[1]===1&&r[2]===1,()=>`A linear work group size is required. But got ${r}.`);let e=r[0]*4;return`
    var<workgroup> mm_Asub : array<vec4<f32>, ${r[0]}>;

    ${X()} {
      let tileCol = i32(localId.x);
      let globalCol = i32(globalId.x);
      let globalRow = i32(globalId.y);

      let numTiles = (uniforms.dimInner - 1) / ${e} + 1;
      let batch = i32(globalId.z);
      let batchA = batch % uniforms.aShape[0];
      let batchB = batch % uniforms.bShape[0];
      // Without this initialization strange values show up in acc.
      var acc = 0.0;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        let colA = t * ${e} + tileCol * 4;
        mm_Asub[tileCol] = vec4<f32>(${_be(t)});
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < ${e/4}; k++) {
          let rowB = t * ${e} + k * 4;
          let BCached = vec4<f32>(mm_readB(batchB, rowB, globalCol),
                              mm_readB(batchB, rowB + 1, globalCol),
                              mm_readB(batchB, rowB + 2, globalCol),
                              mm_readB(batchB, rowB + 3, globalCol));

          let ACached = mm_Asub[k];
          acc = acc + dot(ACached, BCached);
        }

        workgroupBarrier();
      }

      mm_write(batch, globalRow, globalCol, acc);
    }
  `}var VI=class{constructor(t,e,n=!1,o=!1,s=null,a=null,i=null,p=!1){this.variableNames=["A","B"];this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,";this.outputShape=e,this.dispatchLayout={x:[2],y:[1],z:[0]};let u=n?t[1]:t[2];if(this.isVec4=(u%4===0&&!n||e[1]%4===0&&n)&&e[2]%4===0&&!o,this.outputComponent=this.isVec4?4:1,this.isVectorA=e[1]===1&&!n,!this.isVec4&&this.isVectorA)this.elementsPerThread=[1,1,1],this.workgroupSize=[32,1,1];else{let c=$2(e[1],u,e[2],n);this.workgroupSize=c.workgroupSize,this.elementsPerThread=c.elementsPerThread}this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread);let l=s!=null,m=i!=null;l&&this.variableNames.push("bias"),m&&this.variableNames.push("preluActivationWeights"),this.sequentialAccessByThreads=p,this.transposeA=n,this.transposeB=o,this.addBias=l,this.activation=a,this.hasPreluActivationWeights=m,[this.fitAOuter,this.fitBOuter,this.fitInner]=this.getShapeFit(e[1],e[2],u),this.shaderKey=`matMulPacked_${this.elementsPerThread}_${n}_${o}_${this.activation}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.isVectorA}_${this.sequentialAccessByThreads}`}getShapeFit(t,e,n){let o=this.workgroupSize[1]*this.elementsPerThread[1],s=this.workgroupSize[0]*this.elementsPerThread[0];!this.isVec4&&this.isVectorA?this.tileInner=this.workgroupSize[0]*4:this.tileInner=s;let a=t%o===0,i=e%s===0,p=n%this.tileInner===0;return[a,i,p]}getUserCode(){return`
      ${on(this.activation,this.hasPreluActivationWeights,this.isVec4)}
      ${Wg(this.addBias,this.activation,!1,this.transposeB,this.fitAOuter,this.fitBOuter,this.fitInner,this.isVec4?4:1)}
      ${this.isVec4?Gm(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,!0):this.isVectorA?Mbe(this.workgroupSize,this.transposeA):Wm(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,this.sequentialAccessByThreads,!0)}
    `}};function Pbe(r){return`
    var<workgroup> sumValues : array<f32, ${r}>;
    ${X()} {
      let coords = getOutputCoords();
      let batch = coords[0];
      let batchA = batch % uniforms.aShape[0];
      let batchB = batch % uniforms.bShape[0];
      let row = coords[1];
      let col = coords[2];
      var sum = 0.0;
      let Length = uniforms.dimInner;
      for (var k = i32(localId.x); k < Length; k = k + ${r}) {
        let dataA = mm_readA(batchA, row, k);
        let dataB = mm_readB(batchB, k, col);
        sum = sum + dataA * dataB;
      }
      sumValues[localId.x] = sum;
      workgroupBarrier();

      for(var currentSize = ${r/2}u; currentSize > 1u;
          currentSize = currentSize / 2u) {
        if (localId.x < currentSize)
        {
          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];
        }
        workgroupBarrier();
      }

      if (localId.x == 0u) {
        sum = sumValues[0] + sumValues[1];
        mm_write(batch, row, col, sum);
      }
    }
  `}var HI=class{constructor(t,e=!1,n=!1,o=null,s=null,a=null){this.variableNames=["A","B"];this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,";this.workgroupSize=[256,1,1];this.outputShape=t,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize);let i=o!=null,p=a!=null;i&&this.variableNames.push("bias"),p&&this.variableNames.push("preluActivationWeights"),this.transposeA=e,this.transposeB=n,this.addBias=i,this.activation=s,this.hasPreluActivationWeights=p,this.shaderKey=`matMulReduce_${this.activation}_${e}_${n}`}getUserCode(){return`
      ${on(this.activation,this.hasPreluActivationWeights)}
      ${Wg(this.addBias,this.activation,this.transposeA,this.transposeB)}
      ${Pbe(this.workgroupSize[0])}
    `}};function Rbe(r){let t=r[1],e=r[0],n=t>e?t:e;return`
  var<workgroup> mm_Asub : array<array<f32, ${n}>, ${t}>;
  var<workgroup> mm_Bsub : array<array<f32, ${e}>, ${n}>;

  // If the output size is small for matrix multiplication, avoid to use vec4
  // and handle some elements per thread to optimally utilize the ALU.
  // Read data from global memory to registers firstly, then store them into
  // shared memory, so it is instruction-Level parallelism for arithmetic
  // operations and others handle IO operations between barrier api, makes ALU
  // and load/store units work simultaneously, could improves the performance.
  ${X()} {
    let tileRow = i32(localId.y);
    let tileCol = i32(localId.x);
    let globalRow = i32(globalId.y);
    let globalCol = i32(globalId.x);
    let batch = i32(globalId.z);
    let batchA = batch % uniforms.aShape[0];
    let batchB = batch % uniforms.bShape[0];

    // uniforms.dimInner should be greater than 0.
    let numTiles = (uniforms.dimInner - 1) / ${n} + 1;
    var acc = 0.0;

    var globalColA = tileCol;
    var globalRowB = 0;
    var regA = mm_readA(batchA, globalRow, globalColA);
    var regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);
    var regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);
    globalColA = globalColA + ${n};
    globalRowB = globalRowB + ${n};

    for (var t = 0; t < numTiles; t = t + 1) {
      mm_Asub[tileRow][tileCol] = regA;
      mm_Bsub[2 * tileRow][tileCol] = regB0;
      mm_Bsub[2 * tileRow + 1][tileCol] = regB1;

      workgroupBarrier();

      regA = mm_readA(batchA, globalRow, globalColA);
      regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);
      regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);
      globalColA = globalColA + ${n};
      globalRowB = globalRowB + ${n};

      for (var k = 0; k < ${n}; k = k + 1) {
        acc = acc + mm_Asub[tileRow][k] * mm_Bsub[k][tileCol];
      }
      workgroupBarrier();
    }

    mm_write(batch, globalRow, globalCol, acc);
  }
  `}var qI=class{constructor(t,e,n,o=!1,s=!1,a=null,i=null,p=null){this.variableNames=["A","B"];this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,";this.workgroupSize=[16,8,1];this.outputShape=n,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(n[2]/this.workgroupSize[0]),Math.ceil(n[1]/this.workgroupSize[1]),n[0]];let u=a!=null;u&&this.variableNames.push("bias");let l=p!=null;l&&this.variableNames.push("preluActivationWeights"),this.transposeA=o,this.transposeB=s,this.addBias=u,this.activation=i,this.hasPreluActivationWeights=l,this.shaderKey=`matMulSmallOutputSize_${this.activation}_${o}_${s}`}getUserCode(){return`
      ${on(this.activation,this.hasPreluActivationWeights)}
      ${Wg(this.addBias,this.activation,this.transposeA,this.transposeB)}
      ${Rbe(this.workgroupSize)}
    `}};var jI=class{constructor(t,e,n=!1,o=!1){this.variableNames=["A","B"];this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,";this.workgroupSize=[8,8,1];this.atomic=!0;this.splitedDimInner=128;y.assert(t[0]===1,()=>"MatMulSplitKProgram only supports batch = 1."),this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0,3]};let s=(n&&this.outputShape[1]%4===0||!n&&e%4===0)&&this.outputShape[2]%4===0;this.elementsPerThread=[4,4,this.splitedDimInner],this.outputComponent=s?4:1,s||(this.outputShape[1]<16&&(this.elementsPerThread[1]=1),this.outputShape[2]<16&&(this.elementsPerThread[0]=1)),this.dispatch=Y(this.dispatchLayout,[this.outputShape[0],this.outputShape[1],this.outputShape[2],e],this.workgroupSize,this.elementsPerThread),this.transposeA=n,this.transposeB=o,this.shaderKey=`matMulSplitK_${n}_${o}_${this.elementsPerThread}_${this.outputComponent}`}getUserCode(){let t=this.outputComponent;return`
      ${W2(!1,this.transposeB,!1,!1,!1,t)}
      fn mm_write(batch: i32, row : i32, col : i32, value : ${Ye(t)}) {
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
          let coords = vec3<i32>(batch, row, col);
          let flatIndex = getOutputIndexFromCoords(coords);
          // The problem is that we should initialize output to zero before using.
          // Otherwise, the original value will be added to the result.
          for (var i = 0; i < ${t}; i = i + 1) {
            ${co("&result[flatIndex + i]",`${t>1?"value[i]":"value"}`,"float32")}
          }
        }
      }
      ${t===4?Gm(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner):Wm(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner)}
    `}},XI=class{constructor(t,e=null,n=null,o=null){this.uniforms="";this.variableNames=["x"];this.workgroupSize=[64,1,1];this.size=!0;this.outputShape=t,this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=e!=null,this.hasPreluActivationWeights=o!=null,this.activation=n,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`biasActivation_${n}`}getUserCode(){return`
    ${on(this.activation,this.hasPreluActivationWeights)}
    ${X("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        var value = getXByOutputIndex(index);
        ${fo(this.addBias,this.activation)}
        setOutputAtIndex(index, value);
      }
    }
    `}};var YI=class{constructor(t){this.variableNames=[];this.outputShape=[];this.uniforms="value : f32,";this.workgroupSize=[64,1,1];this.size=!0;this.outputShape=t,this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="fill"}getUserCode(){return`
    ${X("index")} {
      if (index < uniforms.size) {
        setOutputAtIndex(index, uniforms.value);
      }
    }
  `}};function Qt(r){let{backend:t,attrs:e}=r,{shape:n,value:o}=e,{dtype:s}=e;if(s=s||y.inferDtype(o),s==="string"){let a=y.getArrayFromDType(s,y.sizeFromShape(n));return a.fill(o),t.makeTensorInfo(n,s,a)}else{let a=new YI(n),i=[{type:"float32",data:[o]}];return t.runWebGPUProgram(a,[],s,i)}}var kV={kernelName:ou,backendName:"webgpu",kernelFunc:Qt};function ye(r){let{inputs:t,attrs:e}=r,{x:n}=t,{shape:o}=e,s=y.sizeFromShape(n.shape),a=y.inferFromImplicitShape(o,s),i=y.sizeFromShape(a);return y.assert(s===i,()=>`The new shape (${a}) has ${i} elements and the old shape (${n.shape}) has ${s} elements. The new shape and old shape must have the same number of elements.`),r.backend.incRef(n.dataId),{dataId:n.dataId,shape:a,dtype:n.dtype}}var vV={kernelName:ia,backendName:"webgpu",kernelFunc:ye};function Um({a:r,b:t,transposeA:e,transposeB:n,backend:o,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:p=null}){let u=r.shape.length,l=t.shape.length,m=e?r.shape[u-2]:r.shape[u-1],c=n?t.shape[l-1]:t.shape[l-2],d=e?r.shape[u-1]:r.shape[u-2],f=n?t.shape[l-2]:t.shape[l-1],h=r.shape.slice(0,-2),g=t.shape.slice(0,-2),b=y.sizeFromShape(h),x=y.sizeFromShape(g),C=Mr.assertAndGetBroadcastShape(r.shape.slice(0,-2),t.shape.slice(0,-2)).concat([d,f]);y.assert(m===c,()=>`Error in matMul: inner shapes (${m}) and (${c}) of Tensors with shapes ${r.shape} and ${t.shape} and transposeA=${e} and transposeB=${n} must match.`);let k=e?[b,m,d]:[b,d,m],w=n?[x,f,c]:[x,c,f],_=ye({inputs:{x:r},backend:o,attrs:{shape:k}}),P=ye({inputs:{x:t},backend:o,attrs:{shape:w}}),M=[_,P],R=Math.max(b,x),$=[_,P],G=[{type:"int32",data:[d]},{type:"int32",data:[f]},{type:"int32",data:[m]}],W,U,V=[R,d,f],K=L().get("WEBGPU_MATMUL_PROGRAM_TYPE");if(K<0){let j=L().getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),te=j>0?j:o.thresholdToIncreaseWorkgroups,se=R*Math.ceil(d/32)*Math.ceil(f/32);se<=te||d<=8&&se<=te*2?R*d*f<=128?K=0:R===1&&c>=2e3?K=1:K=2:K=3}switch(K){case 0:W=new HI(V,e,n,s,p,a);break;case 1:{if(U=Qt({backend:o,attrs:{shape:V,value:0,dtype:r.dtype}}),W=new jI(V,c,e,n),s||p){U=o.runWebGPUProgram(W,$,r.dtype,G,U);let te=new XI(U.shape,s,p,a),se=null,ie=[U];s&&ie.push(s),a&&ie.push(a),p==="leakyrelu"&&(se=[{type:"float32",data:[i]}],te.uniforms+=" alpha : f32,");let pe=o.runWebGPUProgram(te,ie,U.dtype,se);M.push(U);let ae=ye({inputs:{x:pe},backend:o,attrs:{shape:C}});M.push(pe);for(let le of M)o.disposeData(le.dataId);return ae}break}case 2:W=new qI(k,w,V,e,n,s,p,a);break;case 3:let j=o.adapterInfo.isIntel();W=new VI(k,V,e,n,s,p,a,j);break;default:throw new Error(`Unsupported MatMulProgramType ${K}.`)}s&&$.push(s),a&&$.push(a),p==="leakyrelu"&&(G.push({type:"float32",data:[i]}),W.uniforms+=" alpha : f32,"),U=o.runWebGPUProgram(W,$,r.dtype,G,U);let q=ye({inputs:{x:U},backend:o,attrs:{shape:C}});M.push(U);for(let j of M)o.disposeData(j.dataId);return q}function Fbe(r){let{inputs:t,backend:e,attrs:n}=r,{a:o,b:s,bias:a,preluActivationWeights:i}=t,{transposeA:p,transposeB:u,activation:l,leakyreluAlpha:m}=n;return Um({a:o,b:s,transposeA:p,transposeB:u,backend:e,bias:a,preluActivationWeights:i,leakyreluAlpha:m,activation:l})}var SV={kernelName:fa,backendName:"webgpu",kernelFunc:Fbe};var Ug=class{constructor(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"];this.workgroupSize=[128,1,1];this.size=!0;this.outputShape=I.assertAndGetBroadcastShape(e,n),this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`binaryOpComplex_${t}`,this.op=t}getUserCode(){return`
      fn binaryOpComplex(
          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {
        ${Jf(this.op,!1)}
      }

      ${X("index")} {
        if(index < uniforms.size) {
          let areal = getARealByOutputIndex(index);
          let aimag = getAImagByOutputIndex(index);
          let breal = getBRealByOutputIndex(index);
          let bimag = getBImagByOutputIndex(index);
          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));
        }
      }
    `}};var fp=class{constructor(t,e,n){this.size=!0;this.variableNames=["A","B"];if(this.outputShape=I.assertAndGetBroadcastShape(e,n),this.dispatchLayout=re(this.outputShape),this.op=t,this.useSharedMemoryWithA=e.length<=1&&n.length>1&&e[0]<128,this.useSharedMemoryWithB=n.length<=1&&e.length>1&&n[0]<128,this.useSharedMemoryWithA||this.useSharedMemoryWithB)this.outputComponent=1,this.variableComponents=[1,1],this.lastDimensionSize=this.useSharedMemoryWithB?n[0]:e[0],this.shaderKey=`binary_${t}_${this.lastDimensionSize}`,this.type="shared",this.workgroupSize=[256,1,1];else{let o=e.length>0&&e[e.length-1]%4===0,s=n.length>0&&n[n.length-1]%4===0;o&&s?(this.outputComponent=4,this.variableComponents=[4,4]):o&&(y.isScalarShape(n)||n[n.length-1]===1)||s&&(y.isScalarShape(e)||e[e.length-1]===1)?(this.outputComponent=4,this.variableComponents=o?[4,1]:[1,4]):(this.outputComponent=1,this.variableComponents=[1,1]),this.type="nonshared",this.shaderKey=`binary_${t}_${this.variableComponents}`,this.workgroupSize=[128,1,1]}this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.outputComponent,1,1])}getUserCode(){let t,e=this.outputComponent===4?"vec4<f32>":"f32",n=`
    fn binaryOperation(a : ${e}, b : ${e}) -> ${e} {
      ${Jf(this.op,this.outputComponent===4)}
    };
    `;if(this.type==="shared"){let o=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",s=this.useSharedMemoryWithB?`let a = getAByOutputIndex(index);
          let b = sharedBuf[${o}];`:`let a = sharedBuf[${o}];
          let b = getBByOutputIndex(index);`;t=`
        ${n}
        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;
        ${X("index")} {
          // Fill in the shared memory buffer.
          let localIndex = i32(localId.x);
          if(localIndex < ${this.lastDimensionSize}) {
            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}[localIndex]);
          }
          workgroupBarrier();

          if(index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            ${s}
            setOutputAtIndex(index, binaryOperation(a, b));
          }
        }
        `}else t=`
       ${n}
       ${X("index")} {
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index * ${this.outputComponent});
           let a = ${e}(getAByOutputCoords(coords));
           let b = ${e}(getBByOutputCoords(coords));
           setOutputAtIndex(index, binaryOperation(a, b));
         }
       }
       `;return t}};function mr(r){let{inputs:t}=r,{x:e}=t;return r.backend.incRef(e.dataId),{dataId:e.dataId,shape:e.shape,dtype:e.dtype}}var wV={kernelName:Yn,backendName:"webgpu",kernelFunc:mr};function qs(r){let{inputs:t,backend:e}=r,{real:n,imag:o}=t,s=e.makeTensorInfo(n.shape,"complex64"),a=e.tensorMap.get(s.dataId),i=mr({inputs:{x:n},backend:e}),p=mr({inputs:{x:o},backend:e});return a.complexTensorInfos={real:i,imag:p},s}var AV={kernelName:Tp,backendName:"webgpu",kernelFunc:qs};var ho=class{constructor(t,e,n=""){this.variableNames=["A"];this.size=!0;this.workgroupSize=[128,1,1],this.outputShape=t,this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize),this.op=e,n!==""&&(this.uniforms=n),this.shaderKey=`unary_${e}`}getUserCode(){return`
      fn unaryOperation(a : f32) -> f32 {
        ${dp(this.op,!1)}
      }
      ${X("index")} {
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          setOutputAtIndex(index, unaryOperation(a));
        }
      }
      `}};function we({opType:r,cpuKernelImpl:t,dtype:e}){return({inputs:n,backend:o})=>{let{x:s}=n,a=o,i=e||s.dtype;if(a.shouldExecuteOnCPU([s])&&t!=null){let u=a.tensorMap.get(s.dataId),l=t(u.values,i);return a.makeTensorInfo(s.shape,i,l)}let p=new ho(s.shape,r);return a.runWebGPUProgram(p,[s],i)}}function dt({opType:r,cpuKernelImpl:t,supportsComplex:e=!1,dtype:n}){return({inputs:o,backend:s})=>{let{a,b:i}=o,p=s;if(e&&a.dtype==="complex64"){let m=p.tensorMap.get(a.dataId),c=p.tensorMap.get(i.dataId),d,f;if(r!==17)[d,f]=[[m.complexTensorInfos.real,c.complexTensorInfos.real],[m.complexTensorInfos.imag,c.complexTensorInfos.imag]].map(g=>{let[b,x]=g,T={dataId:b.dataId,dtype:b.dtype,shape:a.shape},C={dataId:x.dataId,dtype:x.dtype,shape:i.shape},k=new fp(r,a.shape,i.shape);return p.runWebGPUProgram(k,[T,C],At(b.dtype,x.dtype))});else{let g=new Ug(3,a.shape,i.shape),b=new Ug(2,a.shape,i.shape),x=[{dataId:m.complexTensorInfos.real.dataId,dtype:m.complexTensorInfos.real.dtype,shape:a.shape},{dataId:m.complexTensorInfos.imag.dataId,dtype:m.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:c.complexTensorInfos.real.dataId,dtype:c.complexTensorInfos.real.dtype,shape:i.shape},{dataId:c.complexTensorInfos.imag.dataId,dtype:c.complexTensorInfos.imag.dtype,shape:i.shape}];d=p.runWebGPUProgram(g,x,"float32"),f=p.runWebGPUProgram(b,x,"float32")}let h=qs({inputs:{real:d,imag:f},backend:p});return p.disposeData(d.dataId),p.disposeData(f.dataId),h}let u=n||At(a.dtype,i.dtype);if((a.dtype==="string"||i.dtype==="string"||p.shouldExecuteOnCPU([a,i]))&&t!=null){let m=p.tensorMap.get(a.dataId).values,c=p.tensorMap.get(i.dataId).values,d=a.dtype==="string"?I.fromUint8ToStringArray(m):m,f=a.dtype==="string"?I.fromUint8ToStringArray(c):c,[h,g]=t(a.shape,i.shape,d,f,u);return p.makeTensorInfo(g,u,h)}let l=new fp(r,a.shape,i.shape);return p.runWebGPUProgram(l,[a,i],u)}}var{addImpl:NV,castImpl:DV,ceilImpl:_V,concatImpl:MV,equalImpl:PV,expImpl:RV,expm1Impl:FV,floorImpl:EV,floorDivImpl:LV,gatherNdImpl:BV,gatherV2Impl:$V,greaterEqualImpl:OV,greaterImpl:zV,lessEqualImpl:GV,lessImpl:WV,logImpl:UV,maxImpl:KV,maximumImpl:VV,minimumImpl:HV,multiplyImpl:qV,negImpl:jV,notEqualImpl:XV,prodImpl:YV,rangeImpl:ZV,rsqrtImpl:QV,scatterImpl:JV,simpleAbsImpl:e4,sliceImpl:t4,stridedSliceImpl:r4,stringNGramsImpl:n4,subImpl:o4,tileImpl:s4,topKImpl:a4,transposeImpl:i4,uniqueImpl:oLr}=Nf;var Ebe=we({opType:0,cpuKernelImpl:e4}),u4={kernelName:Xs,backendName:"webgpu",kernelFunc:Ebe};var Lbe=we({opType:1}),p4={kernelName:vo,backendName:"webgpu",kernelFunc:Lbe};var Bbe=we({opType:2}),l4={kernelName:So,backendName:"webgpu",kernelFunc:Bbe};var $be=dt({opType:0,cpuKernelImpl:NV,supportsComplex:!0}),m4={kernelName:Mn,backendName:"webgpu",kernelFunc:$be};var ZI=class{constructor(t){this.workPerThread=1;this.workgroupSize=[64,1,1];this.size=!0;this.outputShape=t[0],this.variableNames=t.map((e,n)=>`T${n}`),this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){let t=[];this.variableNames.forEach(o=>{t.push(`let v${o} = get${o}ByOutputCoords(coords);`)});let e=this.variableNames.map(o=>`v${o}`).join(" + ");return`
      ${X("index")} {
        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            ${t.join(`
        `)}
            setOutputAtIndex(flatIndex, ${e});
          }
        }
      }
    `}};function Obe(r){let{inputs:t,backend:e}=r,n=t;if(n.length===1)return mr({inputs:{x:n[0]},backend:e});let o=n.map(i=>i.dtype).reduce((i,p)=>At(i,p)),s=n.map(i=>i.shape),a=new ZI(s);return e.runWebGPUProgram(a,n,o)}var c4={kernelName:wo,backendName:"webgpu",kernelFunc:Obe};var QI=class{constructor(t,e){this.variableNames=["A"];this.workgroupSize=[16,16,1];let n=new Array(t.length);for(let o=0;o<n.length;o++)n[o]=t[e[o]];this.outputShape=n,this.dispatchLayout={x:[0],y:[1]},this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){y.assert(this.workgroupSize[0]===this.workgroupSize[1],()=>`Must be a square tile, current tile shape is ${this.workgroupSize[0]} x ${this.workgroupSize[1]}`);let t=this.workgroupSize[0];return`
      var<workgroup> tile : array<array<f32, ${this.workgroupSize[0]+1}>, ${this.workgroupSize[0]}>;
      ${X()} {
        var x = i32(workgroupId.x) * ${t} + i32(localId.x);
        var y = i32(workgroupId.y) * ${t} + i32(localId.y);
        let width = uniforms.outShape[0];
        let height = uniforms.outShape[1];
        if (x < width && y < height) {
          tile[localId.y][localId.x] = f32(A[y * width + x]);
        }
        workgroupBarrier();

        x = i32(workgroupId.y) * ${t} + i32(localId.x);
        y = i32(workgroupId.x) * ${t} + i32(localId.y);
        if (x < height && y < width) {
          setOutputAtIndex((y * height + x), tile[localId.x]
            [localId.y]);
        }
      }
    `}};var JI=class{constructor(t,e){this.variableNames=["A"];this.workPerThread=1;this.workgroupSize=[64,1,1];this.size=!0;let n=new Array(t.length);for(let o=0;o<n.length;o++)n[o]=t[e[o]];this.outputShape=n,this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.newDim=e,this.shaderKey=`transpose_${e}`}getUserCode(){let t=Lt(this.outputShape.length),e=U2(this.newDim);return`
      ${X("index")} {
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            setOutputAtIndex(flatIndex, A[getIndexFromCoords${this.outputShape.length}D(
              ${t}(${e}), uniforms.aShape)]);
          }
        }
      }
    `}};function U2(r){let t=r.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let e=new Array(t);for(let n=0;n<r.length;n++)e[r[n]]=`coords.${Oa(n)}`;return e.join()}function fn(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{perm:s}=n,a=e,i=o.shape.length,p=new Array(i);for(let l=0;l<p.length;l++)p[l]=o.shape[s[l]];if(e.shouldExecuteOnCPU([o])){let m=a.tensorMap.get(o.dataId).values,c=i4(m,o.shape,o.dtype,s,p);return e.makeTensorInfo(p,o.dtype,c)}if(o.shape.length===2&&y.arraysEqual(s,[1,0])){let l=new QI(o.shape,s);return a.runWebGPUProgram(l,[o],o.dtype)}let u=new JI(o.shape,s);return a.runWebGPUProgram(u,[o],o.dtype)}var d4={kernelName:Rn,backendName:"webgpu",kernelFunc:fn};var ek=class{constructor(t,e,n){this.variableNames=["x"];this.uniforms="reduceSize : i32,";this.size=!0;this.inputShape=[t.batchSize,t.inSize];let[o]=I.computeOutAndReduceShapes(this.inputShape,[1]);this.outputShape=o.length===0?[1]:o,t.inSize>=32768&&n>=512?this.workgroupSize=[512,1,1]:t.inSize>=4096?this.workgroupSize=[256,1,1]:this.workgroupSize=[64,1,1],this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=e,this.shaderKey=`reduce_${e}`}getUserCode(){let t="",e="0.0",n=this.workgroupSize[0];this.reduceType==="min"||this.reduceType==="max"?(t=`
         if (isnan(candidate)) {
          bestValue = uniforms.NAN;
         } else if (!isnan(bestValue) && candidate ${this.reduceType==="min"?"<":">"} bestValue)
           {  bestValue = candidate; }`,e="f32(x[offset])"):this.reduceType==="sum"||this.reduceType==="mean"?t=" bestValue = bestValue + candidate; ":this.reduceType==="prod"?(t=" bestValue = bestValue * candidate; ",e="1.0"):this.reduceType==="all"?(t=" bestValue = f32(bestValue >= 1.0 && candidate >= 1.0); ",e="1.0"):this.reduceType==="any"&&(t=" bestValue = f32(bestValue >= 1.0 || candidate >= 1.0); ",e="0.0");let o=this.reduceType==="mean"?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);";return`
       fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
       }

       ${`
         var<workgroup> xBestValues : array<f32, ${n}>;
       `}
       fn getOffset(outputIndex : i32) -> i32 {
         let outputCoords = getCoordsFromIndex(outputIndex);
         let offset = ${this.outputShape.length===1?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;
          return offset;
       }
       ${X("index")} {
         let outputIndex = index / ${n};
         let offset = getOffset(outputIndex);
         var bestValue = ${e};
         let Length = uniforms.reduceSize;
         let WorkPerThread = DIV_CEIL(u32(Length), ${n}u);
         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
             k = k + ${n}) {
           let candidate = f32(x[offset + k]);
           ${t}
         }
         xBestValues[localId.x] = bestValue;
         workgroupBarrier();

         var reduceSize = min(u32(Length), ${n}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            ${t}
            xBestValues[localId.x] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (localId.x == 0u && outputIndex < uniforms.size) {
          ${o}
        }
       }
     `}};function go(r,t,e,n,o){let s=r.shape.length,a=[],i=y.parseAxisParam(t,r.shape),p=i,u=I.getAxesPermutation(p,s),l=r;u!=null&&(l=fn({inputs:{x:r},attrs:{perm:u},backend:o}),p=I.getInnerMostAxes(p.length,s),a.push(l)),I.assertAxesAreInnerMostDims(n,p,s);let[m,c]=I.computeOutAndReduceShapes(l.shape,p),d=m;e&&(d=I.expandShapeToKeepDim(m,i));let f;if((n==="max"||n==="prod")&&o.shouldExecuteOnCPU([l])){let h=o.tensorMap.get(l.dataId).values;switch(n){case"max":let g=KV(h,y.sizeFromShape(c),d,r.dtype);f=o.makeTensorInfo(d,r.dtype,g);break;case"prod":let{outVals:b,outShape:x,outDtype:T}=YV(l.shape,l.dtype,h,p);f=o.makeTensorInfo(x,T,b);break;default:throw new Error(`${n} CPU implementation is not yet supported.`)}}else{let h=y.sizeFromShape(c),b=y.sizeFromShape(l.shape)/h,x={windowSize:h,inSize:h,batchSize:b,outSize:1},T=n==="mean"?"float32":Uu(r.dtype),C=[{type:"int32",data:[h]}],k=new ek(x,n,o.device.limits.maxComputeWorkgroupSizeX),w=o.runWebGPUProgram(k,[l],T,C);a.push(w),f=ye({inputs:{x:w},attrs:{shape:d},backend:o})}return a.forEach(h=>o.disposeData(h.dataId)),f}function zbe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{keepDims:s,axis:a}=n;return go(o,a,s,"all",e)}var f4={kernelName:Ka,backendName:"webgpu",kernelFunc:zbe};function Gbe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{keepDims:s,axis:a}=n;return go(o,a,s,"any",e)}var h4={kernelName:Va,backendName:"webgpu",kernelFunc:Gbe};var eh=class{constructor(t,e,n){this.workgroupSize=[64,1,1];this.variableNames=["x"];this.uniforms="infinityValue : f32,";this.size=!0;let o=[e];this.op=n==="min"?"<":">";let[s,a]=I.computeOutAndReduceShapes(t,o);this.outputShape=s.length===0?[1]:s,this.dispatchLayout=re(this.outputShape),y.sizeFromShape(a)<32?(this.type="plain",this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize)):(this.type="shared",this.dispatch=Y(this.dispatchLayout,this.outputShape,[1,1,1])),this.inputShape=t,this.shaderKey=`argMinMax_${this.op}_${this.type}`}getUserCode(){let t=this.workgroupSize[0],e=()=>this.inputShape.length===1?"uniforms.xShape":`uniforms.xShape.${Oa(this.inputShape.length-1)}`,n=()=>{let o="";if(this.outputShape.length===1)this.inputShape.length!==1&&(o+="outputCoords,");else for(let s=0;s<this.outputShape.length;s++)o+=`outputCoords.${Oa(s)},`;return o};return this.type==="shared"?`
      fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
      }

      ${`
      var<workgroup> xBestIndices : array<i32, ${t}>;
      var<workgroup> xBestValues : array<f32, ${t}>;
    `}

      ${X("index")} {
        let outputIndex = index / ${t};
        let reduceLength = ${e()};

        var bestIndex = i32(localId.x);
        var bestValue = uniforms.infinityValue;
        let outputCoords = getCoordsFromIndex(outputIndex);
        for (var k = i32(localId.x); k < reduceLength && outputIndex < uniforms.size;
            k = k + ${t}) {
          let candidate = getX(${n()} k);
          if (!isnan(candidate) && candidate ${this.op} bestValue) {
            bestValue = candidate;
            bestIndex = k;
          }
        }
        xBestValues[localId.x] = bestValue;
        xBestIndices[localId.x] = bestIndex;
        workgroupBarrier();

        var reduceSize = min(u32(reduceLength), ${t}u);
        for (var currentSize = reduceSize / 2u; reduceSize > 1u;
            currentSize = reduceSize / 2u) {
          let interval = DIV_CEIL(reduceSize, 2u);
          if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              xBestValues[localId.x] = bestValue;
              xBestIndices[localId.x] = xBestIndices[localId.x + interval];
            }
          }
          reduceSize = interval;
          workgroupBarrier();
        }

        if (localId.x == 0u && outputIndex < uniforms.size) {
          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);
        }
      }
    `:`
      ${X("index")} {
        if (index < uniforms.size) {
          let outputCoords = getCoordsFromIndex(index);
          var bestIndex = 0;
          var bestValue = getX(${n()} 0);
          let reduceLength = ${e()};
          for (var i = 1; i < reduceLength; i++) {
            let candidate = getX(${n()} i);
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              bestIndex = i;
            }
          }
          setOutputAtIndexI32(index, bestIndex);
        }
      }
      `}};function Wbe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s}=n,a=y.parseAxisParam(s,o.shape),i=I.getAxesPermutation(a,o.shape.length),p=o,u=[];i!=null&&(p=fn({inputs:{x:o},backend:e,attrs:{perm:i}}),u.push(p),a=I.getInnerMostAxes(a.length,p.shape.length)),I.assertAxesAreInnerMostDims("argMax",[a[0]],p.shape.length);let l=new eh(p.shape,a[0],"max"),m=[{type:"float32",data:[Number.NEGATIVE_INFINITY]}],c=e.runWebGPUProgram(l,[p],"int32",m);return u.forEach(d=>e.disposeData(d.dataId)),c}var g4={kernelName:Ys,backendName:"webgpu",kernelFunc:Wbe};function Ube(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s}=n,a=y.parseAxisParam(s,o.shape),i=I.getAxesPermutation(a,o.shape.length),p=o,u=[];i!=null&&(p=fn({inputs:{x:o},backend:e,attrs:{perm:i}}),u.push(p),a=I.getInnerMostAxes(a.length,p.shape.length)),I.assertAxesAreInnerMostDims("argMin",[a[0]],p.shape.length);let l=new eh(p.shape,a[0],"min"),m=[{type:"float32",data:[Number.POSITIVE_INFINITY]}],c=e.runWebGPUProgram(l,[p],"int32",m);return u.forEach(d=>e.disposeData(d.dataId)),c}var b4={kernelName:Zs,backendName:"webgpu",kernelFunc:Ube};var Kbe=we({opType:3}),y4={kernelName:Ao,backendName:"webgpu",kernelFunc:Kbe};var Vbe=we({opType:4}),x4={kernelName:No,backendName:"webgpu",kernelFunc:Vbe};var Hbe=we({opType:5}),T4={kernelName:Do,backendName:"webgpu",kernelFunc:Hbe};var qbe=dt({opType:1}),C4={kernelName:Mo,backendName:"webgpu",kernelFunc:qbe};var jbe=we({opType:6}),I4={kernelName:_o,backendName:"webgpu",kernelFunc:jbe};var tk=class{constructor(t){this.variableNames=["x"];this.uniforms="strides : vec2<i32>,";this.workgroupSize=[256,1,1];this.size=!0;this.outputShape=t.outShape,this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`
      ${X("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];

          let xRCCorner = coords.yz * uniforms.strides;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          let value = getX(batch, xRCorner, xCCorner, d);
          setOutputAtIndex(index, value);
        }
      }
    `}};var _u=class{constructor(t,e,n=!1,o=!1,s=!1){this.variableNames=["x"];this.uniforms="strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, convDims : vec2<i32>, filterDims : vec2<i32>,";this.workgroupSize=[128,1,1];this.size=!0;if(e==="avg"&&n)throw new Error("Cannot compute positions for average pool.");this.outputShape=t.outShape,this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize),this.poolType=e,this.computePositions=n,this.flattenPositions=o,this.includeBatchIndex=s,this.shaderKey=`pool2D_${e}_${n}_${o}_${s}`}getUserCode(){let t;this.poolType==="avg"?t="resultValue = resultValue + value; count = count + 1.0;":this.computePositions?t=`let currMaxValue = mix(value, maxValue, maxValueFound);
      if (value >= currMaxValue) {
        maxValue = value;
        maxValueFound = 1.0;
        maxPosition = ${this.flattenPositions?this.includeBatchIndex?"((batch * uniforms.xShape[1] + xR) * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d":"(xR * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d":"wR * uniforms.filterDims.y + wC"};
      }`:t="resultValue = max(value, resultValue);";let e="resultValue";return this.poolType==="avg"&&(e="resultValue / max(count, 1.0)"),`
      ${X("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];
          let xRCCorner = vec2<i32>(coords.yz) * uniforms.strides - uniforms.pads;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          ${this.computePositions?`var maxValue = 0.0;
            var maxValueFound = 0.0;
            var maxPosition = 0;`:`var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};`}

          var count = 0.0;
          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilations.x) {
            let xR = xRCorner + wR;

            if (xR < 0 || xR >= uniforms.convDims.x) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilations.y) {
              let xC = xCCorner + wC;
              if (xC < 0 || xC >= uniforms.convDims.y) {
                continue;
              }

              let value = getX(batch, xR, xC, d);
              ${t}
            }
          }

          ${this.computePositions?"setOutputAtIndexI32(index, maxPosition);":`setOutputAtIndex(index, ${e});`}
        }
      }
    `}},ll=class{constructor(t,e,n=!1,o=!1,s=!1){this.variableNames=["x"];this.uniforms="strides : vec3<i32>, pads : vec3<i32>, convDims : vec3<i32>, filterDims : vec3<i32>,";this.workgroupSize=[128,1,1];this.size=!0;if(e==="avg"&&n)throw new Error("Cannot compute positions for average pool.");this.outputShape=t.outShape,this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize),this.poolType=e,this.computePositions=n,this.flattenPositions=o,this.includeBatchIndex=s,this.shaderKey=`pool3D_${e}_${n}_${o}_${s}`}getUserCode(){let t;this.poolType==="avg"?t="resultValue += value; count += 1.0;":this.computePositions?t=`let currMaxValue = mix(value, maxValue, maxValueFound);
      if (value >= currMaxValue) {
        maxValue = value;
        maxValueFound = 1.0;
        maxPosition = ${this.flattenPositions?this.includeBatchIndex?"(((batch * uniforms.xShape.y + xD) * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch":"((xD * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch":"wD * uniforms.filterDims.y * uniforms.filterDims.y + wR * uniforms.filterDims.z + wC"};
      }`:t="resultValue = max(value, resultValue);";let e="resultValue";return this.poolType==="avg"&&(e="resultValue / max(count, 1.0)"),`
      ${X("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords.x;
          let ch = coords.u;

          let xCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;
          let xDCorner = xCorner.x;
          let xRCorner = xCorner.y;
          let xCCorner = xCorner.z;

          ${this.computePositions?`var maxValue = 0.0;
            var maxValueFound = 0.0;
            var maxPosition = 0;`:`var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};`}

          var count = 0.0;
          for (var wD = 0; wD < uniforms.filterDims.x; wD++) {
            let xD = xDCorner + wD;
            if (xD < 0 || xD >= uniforms.convDims.x) {
              continue;
            }

            for (var wR = 0; wR < uniforms.filterDims.y; wR++) {
              let xR = xRCorner + wR;
              if (xR < 0 || xR >= uniforms.convDims.y) {
                continue;
              }

              for (var wC = 0; wC < uniforms.filterDims.z; wC++) {
                let xC = xCCorner + wC;
                if (xC < 0 || xC >= uniforms.convDims.z) {
                  continue;
                }

                let value = getX(batch, xD, xR, xC, ch);
                ${t}
              }
            }
          }

          ${this.computePositions?"setOutputAtIndexI32(index, maxPosition);":`setOutputAtIndex(index, ${e});`}
        }
      }
    `}};function K2(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{reductionIndices:s,keepDims:a}=n;return go(o,s,a,"max",e)}var k4={kernelName:ss,backendName:"webgpu",kernelFunc:K2};function V2(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{keepDims:s,axis:a}=n;return go(o,a,s,"mean",e)}var v4={kernelName:us,backendName:"webgpu",kernelFunc:V2};function rk(r,t,e,n){if(t.filterWidth===1&&t.filterHeight===1&&y.arraysEqual(t.inShape,t.outShape))return mr({inputs:{x:r},backend:n});if(t.filterWidth===t.inWidth&&t.filterHeight===t.inHeight&&t.batchSize===1&&t.padInfo.type==="VALID"){let a=r.shape.length,i=ye({inputs:{x:r},backend:n,attrs:{shape:[r.shape[a-3]*r.shape[a-2],r.shape[a-1]]}}),p;e==="avg"?p=V2({inputs:{x:i},backend:n,attrs:{axis:0,keepDims:!1}}):(y.assert(e==="max",()=>`Invalid pool type ${e}`),p=K2({inputs:{x:i},backend:n,attrs:{reductionIndices:0,keepDims:!1}}));let u=ye({inputs:{x:p},backend:n,attrs:{shape:t.outShape}});return n.disposeData(i.dataId),n.disposeData(p.dataId),u}let o,s=[{type:"int32",data:[t.strideHeight,t.strideWidth]}];return t.filterHeight===1&&t.filterWidth===1?o=new tk(t):(e==="avg"?o=new _u(t,"avg"):(y.assert(e==="max",()=>`Invalid pool type ${e}`),o=new _u(t,"max")),s.push({type:"int32",data:[t.padInfo.top,t.padInfo.left]},{type:"int32",data:[t.dilationHeight,t.dilationWidth]},{type:"int32",data:[t.inHeight,t.inWidth]},{type:"int32",data:[t.effectiveFilterHeight,t.effectiveFilterWidth]})),n.runWebGPUProgram(o,[r],r.dtype,s)}function Xbe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{filterSize:s,strides:a,pad:i,dimRoundingMode:p}=n,u=1,l=I.computePool2DInfo(o.shape,s,a,u,i,p);return rk(o,l,"avg",e)}var S4={kernelName:Po,backendName:"webgpu",kernelFunc:Xbe};function Ybe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{filterSize:s,strides:a,pad:i,dataFormat:p,dimRoundingMode:u}=n,l=[1,1,1],m=I.computePool3DInfo(o.shape,s,a,l,i,u,p),c=new ll(m,"avg"),d=[{type:"int32",data:[m.strideDepth,m.strideHeight,m.strideWidth]},{type:"int32",data:[m.padInfo.front,m.padInfo.top,m.padInfo.left]},{type:"int32",data:[m.inDepth,m.inHeight,m.inWidth]},{type:"int32",data:[m.effectiveFilterDepth,m.effectiveFilterHeight,m.effectiveFilterWidth]}];return e.runWebGPUProgram(c,[o],o.dtype,d)}var w4={kernelName:Qs,backendName:"webgpu",kernelFunc:Ybe};var nk=class{constructor(t){this.variableNames=["dy"];this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32, avgMultiplier : f32,`;this.workgroupSize=[64,1,1];this.size=!0;this.outputShape=t.inShape,this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avgPool2DBackprop"}getUserCode(){return`
      ${X("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d = coords[3];

        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;
        let dyRCorner = dyRCCorner.x;
        let dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR = wR + uniforms.dilations[0]) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims[1]; wC = wC + uniforms.dilations[1]) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }
            let idyC = i32(dyC);

            let dyValue = getDy(batch, idyR, idyC, d);

            dotProd = dotProd + dyValue * uniforms.avgMultiplier;
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}},ok=class{constructor(t){this.variableNames=["dy"];this.uniforms=`strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,
       outDepth : i32, outHeight : i32, outWidth : i32, avgMultiplier : f32,`;this.workgroupSize=[64,1,1];this.size=!0;this.outputShape=t.inShape,this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avgPool3DBackprop"}getUserCode(){return`
      ${X("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let ch = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyDCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {
          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);

          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {
            continue;
          }
          let idyD = i32(dyD);

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let dyValue = getDy(batch, idyD, idyR, idyC, ch);
              dotProd += dyValue * uniforms.avgMultiplier;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}};function Zbe(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,input:s}=t,a=s,{filterSize:i,strides:p,pad:u,dimRoundingMode:l}=n,m=I.computePool3DInfo(a.shape,i,p,1,u,l),c=new ok(m),d=1/(m.filterDepth*m.filterHeight*m.filterWidth),f=[{type:"int32",data:[m.strideDepth,m.strideHeight,m.strideWidth]},{type:"int32",data:[m.effectiveFilterDepth-1-m.padInfo.front,m.effectiveFilterHeight-1-m.padInfo.top,m.effectiveFilterWidth-1-m.padInfo.left]},{type:"int32",data:[m.effectiveFilterDepth,m.effectiveFilterHeight,m.effectiveFilterWidth]},{type:"int32",data:[m.outDepth]},{type:"int32",data:[m.outHeight]},{type:"int32",data:[m.outWidth]},{type:"float32",data:[d]}];return e.runWebGPUProgram(c,[o],a.dtype,f)}var A4={kernelName:Zi,backendName:"webgpu",kernelFunc:Zbe};function Qbe(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,input:s}=t,a=s;Gg([o,s],"avgPoolGrad");let{filterSize:i,strides:p,pad:u}=n,l=I.computePool2DInfo(a.shape,i,p,1,u),m=new nk(l),c=1/(l.filterHeight*l.filterWidth),d=[{type:"int32",data:[l.strideHeight,l.strideWidth]},{type:"int32",data:[l.effectiveFilterHeight-1-l.padInfo.top,l.effectiveFilterWidth-1-l.padInfo.left]},{type:"int32",data:[l.dilationHeight,l.dilationWidth]},{type:"int32",data:[l.effectiveFilterHeight,l.effectiveFilterWidth]},{type:"int32",data:[l.outHeight]},{type:"int32",data:[l.outWidth]},{type:"float32",data:[c]}];return e.runWebGPUProgram(m,[o],a.dtype,d)}var N4={kernelName:Yi,backendName:"webgpu",kernelFunc:Qbe};function Jbe(r){let{inputs:t,backend:e,attrs:n}=r,{a:o,b:s}=t,{transposeA:a,transposeB:i}=n;return Um({a:o,b:s,transposeA:a,transposeB:i,backend:e})}var D4={kernelName:Ro,backendName:"webgpu",kernelFunc:Jbe};var sk=class{constructor(t,e){this.variableNames=["source"];this.workPerThread=1;this.workgroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.rank=e.length,this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.start=t,this.uniforms=`start : ${Lt(t.length)}, `,this.shaderKey="slice"}getUserCode(){let t=Lt(this.rank),e=eye(this.rank),n;return this.start.length===1?n=this.outputShape.map((s,a)=>"sourceLoc = uniforms.start + coords;"):n=this.outputShape.map((s,a)=>`sourceLoc.${H2[a]} = uniforms.start.${Oa(a)} + coords.${H2[a]};`),`
      ${X("index")} {
        if (index < uniforms.size) {
          var sourceLoc : ${t};
          let coords = getCoordsFromIndex(index);
          ${n.join(`
`)}
          setOutputAtIndex(index, getSource(${e}));
        }
      }
    `}},H2=["x","y","z","w","u","v"];function eye(r){if(r===1)return"sourceLoc";if(r<=6)return H2.slice(0,r).map(t=>`sourceLoc.${t}`).join(",");throw Error(`Slicing for rank ${r} is not yet supported`)}function Hi(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{begin:s,size:a}=n,[i,p]=kt.parseSliceParams(o,s,a);if(kt.assertParamsValid(o,i,p),e.shouldExecuteOnCPU([o])||o.dtype==="string"){let m=e.tensorMap.get(o.dataId),c=t4(m.values,i,p,o.shape,o.dtype);return e.makeTensorInfo(p,o.dtype,c)}if(y.sizeFromShape(p)===0)return e.makeTensorInfo(p,o.dtype,[]);let u=new sk(i,p),l=[{type:"int32",data:i}];return e.runWebGPUProgram(u,[o],o.dtype,l)}var _4={kernelName:pa,backendName:"webgpu",kernelFunc:Hi};var tye=r=>{let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{blockShape:s,crops:a}=n;y.assert(o.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet");let i=s.reduce((x,T)=>x*T),p=I.getReshaped(o.shape,s,i),u=I.getPermuted(p.length,s.length),l=I.getReshapedPermuted(o.shape,s,i),m=I.getSliceBeginCoords(a,s.length),c=I.getSliceSize(l,a,s.length),d=[],f=ye({inputs:{x:o},backend:e,attrs:{shape:p}}),h=fn({inputs:{x:f},backend:e,attrs:{perm:u}}),g=ye({inputs:{x:h},backend:e,attrs:{shape:l}}),b=Hi({inputs:{x:g},backend:e,attrs:{begin:m,size:c}});return d.push(f),d.push(h),d.push(g),d.forEach(x=>e.disposeData(x.dataId)),b},M4={kernelName:Js,backendName:"webgpu",kernelFunc:tye};var rye=`
  fn bincount_write(index: i32, value: f32) {
    ${co("&result[index]","value","float32")}
  }
`,nye=`
  fn bincount_write(index: i32, value: f32) {
    atomicStore(&result[index], bitcast<i32>(value));
  }
`,th=class{constructor(t,e,n=!1){this.outputShape=[];this.variableNames=["x"];this.uniforms="binCountSize : i32,";this.workgroupSize=[64,1,1];this.atomic=!0;this.hasWeights=!0;this.binaryOutput=!1;this.outputShape=t,this.rank=t.length,this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize),this.binaryOutput=n,n&&(this.atomic=!1),this.hasWeights=e,this.hasWeights&&this.variableNames.push("w"),this.shaderKey=`bincount_${this.hasWeights}_${this.binaryOutput}_${this.rank}`}getUserCode(){return`
    ${this.binaryOutput?nye:rye}
  ${X("index")} {
    ${this.rank===1?`if (index < uniforms.xShape) {
      let indexVal = i32(getX(index));
      if (indexVal < uniforms.binCountSize) {
        let value = ${this.binaryOutput?1:this.hasWeights?"getW(index)":"1."};
        bincount_write(indexVal, value);
      }
    }`:`let coord = getCoordsFromIndex(index);
    if (coordsInBounds2D(coord, uniforms.xShape)) {
      let indexVal = i32(getX(coord[0], coord[1]));
      if (indexVal < uniforms.binCountSize) {
        let value = ${this.binaryOutput?1:this.hasWeights?"getW(coord[0], coord[1])":"1."};
        bincount_write(coord.x * uniforms.binCountSize + indexVal, value);
      }
    }`}
  }
  `}};function oye(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,weights:s}=t,{size:a}=n,i=y.sizeFromShape(o.shape),u=y.sizeFromShape(s.shape)>0,l=[a],m=s.dtype,c=Qt({backend:e,attrs:{shape:l,value:0,dtype:m}}),d=new th([i],u),f=[{type:"int32",data:[a]}],h=u?[o,s]:[o];return e.runWebGPUProgram(d,h,m,f,c)}var P4={kernelName:Ha,backendName:"webgpu",kernelFunc:oye};var ak=class{constructor(t){this.outputShape=[];this.variableNames=["s0","s1"];this.uniforms="s0Size : i32, s1Size : i32, ";this.workgroupSize=[64,1,1];this.size=!0;this.outputShape=[t],this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="broadcastArgs"}getUserCode(){return`
  ${X("index")} {
    if (index < uniforms.size) {
      var s0 = 1.0;
      var s1 = 1.0;
      let indexS0 = index - uniforms.size + uniforms.s0Size;
      let indexS1 = index - uniforms.size + uniforms.s1Size;
      if (indexS0 >= 0) {
        s0 = getS0(indexS0);
      }
      if (indexS1 >= 0) {
        s1 = getS1(indexS1);
      }

      if (s0 == 1.0) {
        setOutputAtIndex(index, s1);
      } else if (s1 == 1.0) {
        setOutputAtIndex(index, s0);
      } else if (s0 != s1) {
        setOutputAtIndex(index, uniforms.NAN);
      } else {
        setOutputAtIndex(index, s0);
      }
    }
  }
  `}};function sye(r){let{inputs:t,backend:e}=r,{s0:n,s1:o}=t;if(e.shouldExecuteOnCPU([n,o])){let l=e.tensorMap.get(n.dataId),m=e.tensorMap.get(o.dataId),c=l.values,d=m.values,f=I.assertAndGetBroadcastShape(Array.from(c),Array.from(d));return e.makeTensorInfo([f.length],"int32",Int32Array.from(f))}let s=y.sizeFromShape(n.shape),a=y.sizeFromShape(o.shape),i=Math.max(s,a),p=new ak(i),u=[{type:"int32",data:[s]},{type:"int32",data:[a]}];return e.runWebGPUProgram(p,[n,o],"int32",u)}var R4={kernelName:Qi,backendName:"webgpu",kernelFunc:sye};var q2=dt({opType:18,dtype:"bool",cpuKernelImpl:XV}),F4={kernelName:mi,backendName:"webgpu",kernelFunc:q2};function hp(r){let{inputs:t,backend:e}=r,{input:n}=t,o=e.tensorMap.get(n.dataId);return mr({inputs:{x:o.complexTensorInfos.real},backend:e})}var E4={kernelName:Np,backendName:"webgpu",kernelFunc:hp};function L4(r,t){let e=new ho(r.shape,40),n=t.runWebGPUProgram(e,[r],"int32");return{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}function j2(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{dtype:s}=n;if(s==="complex64"){if(o.dtype==="complex64")return mr({inputs:{x:o},backend:e});let a=It(o.shape),i=j2({inputs:{x:o},backend:e,attrs:{dtype:"float32"}}),p=qs({inputs:{real:i,imag:a},backend:e});return a.dispose(),e.disposeData(i.dataId),p}if(o.dtype==="complex64"){let a=hp({inputs:{input:o},backend:e}),i=j2({inputs:{x:a},backend:e,attrs:{dtype:s}});return e.disposeData(a.dataId),i}if(!y.hasEncodingLoss(o.dtype,s)){let a=mr({inputs:{x:o},backend:e});return{dataId:a.dataId,shape:a.shape,dtype:s}}if(e.shouldExecuteOnCPU([o])){let a=e.tensorMap.get(o.dataId).values,[i,p,u]=DV(a,o.shape,o.dtype,s);return e.makeTensorInfo(i,p,u)}if(s==="int32")return L4(o,e);if(s==="bool"){let a=e.makeTensorInfo([],"bool",y.getTypedArrayFromDType("bool",1)),p=q2({inputs:{a:o,b:a},backend:e});return e.disposeData(a.dataId),p}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${s}`)}var B4={kernelName:jn,backendName:"webgpu",kernelFunc:j2};var aye=we({opType:7,cpuKernelImpl:_V}),$4={kernelName:Fo,backendName:"webgpu",kernelFunc:aye};var ik=class{constructor(t){this.variableNames=["A"];this.uniforms="minVal : f32, maxVal : f32,";this.workPerThread=4;this.workgroupSize=[64,1,1];this.outputComponent=4;this.size=!0;this.outputShape=t,this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return`
      ${X("index")} {
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          var clampedValue = clamp(
              value, vec4<f32>(uniforms.minVal), vec4<f32>(uniforms.maxVal));
          clampedValue = select(clampedValue, value, isnanVec4(value));
          setOutputAtIndex(index, clampedValue);
        }
      }
    `}};var uk=class{constructor(t){this.variableNames=["A"];this.uniforms="minVal : f32, maxVal : f32,";this.workgroupSize=[64,1,1];this.size=!0;this.outputShape=t,this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="clip"}getUserCode(){return`
      ${X("index")} {
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          if (isnan(value)) {
            setOutputAtIndex(index, value);
            return;
          }
          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));
        }
      }
    `}};function iye(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{clipValueMin:s,clipValueMax:a}=n,i,p=[{type:"float32",data:[s]},{type:"float32",data:[a]}];return y.sizeFromShape(o.shape)%4===0?i=new ik(o.shape):i=new uk(o.shape),e.runWebGPUProgram(i,[o],o.dtype,p)}var O4={kernelName:Xn,backendName:"webgpu",kernelFunc:iye};var pk=class{constructor(t){this.outputShape=[];this.variableNames=["real","imag"];this.workgroupSize=[64,1,1];this.size=!0;this.outputShape=t,this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="complexAbs"}getUserCode(){return`
    ${X("index")} {
      if (index < uniforms.size) {
        let re = abs(getRealByOutputIndex(index));
        let im = abs(getImagByOutputIndex(index));
        let mx = max(re, im);

        // The length function in wgsl may be not underflow-safe on some GPUs.
        // So the safe solution is to ensure underflow-safety in all cases.
        setOutputAtIndex(index, select(mx * length(vec2<f32>(1, min(re, im)/mx)), 0.0, mx == 0.0));
      }
    }
  `}};function z4(r,t){return{dataId:t.dataId,dtype:t.dtype,shape:r.shape}}function uye(r){let{inputs:t,backend:e}=r,{x:n}=t,o=e.tensorMap.get(n.dataId),s=new pk(n.shape),a=[z4(n,o.complexTensorInfos.real),z4(n,o.complexTensorInfos.imag)];return e.runWebGPUProgram(s,a,a[0].dtype)}var G4={kernelName:Ji,backendName:"webgpu",kernelFunc:uye};var lk=class{constructor(t){this.uniforms="";this.workPerThread=1;this.workgroupSize=[64,1,1];this.size=!0;this.outputShape=I.computeOutShape(t,1),this.variableNames=t.map((e,n)=>`T${n}`),this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.offsetLength=t.length-1;for(let e=0;e<this.offsetLength;e++)this.uniforms+=`offset${e} : i32,`;this.shaderKey="concat"}getUserCode(){let t=[];if(this.offsetLength>0){t.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let s=1;s<this.offsetLength;s++)t.push(`else if (yC < uniforms.offset${[s]}){ setOutputAtCoords(coords.x, coords.y, getT${s}(yR, yC - uniforms.offset${s-1})); }`);let n=this.offsetLength,o=this.offsetLength-1;t.push(`else { setOutputAtCoords(coords.x, coords.y, getT${n}(yR, yC - uniforms.offset${o})); }`)}else t.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return`
      ${X("index")} {
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            let yR = coords.x;
            let yC = coords.y;

            ${t.join(`
        `)}
          }
        }
      }
    `}};function Km(r){let{inputs:t,backend:e}=r,{input:n}=t,o=e.tensorMap.get(n.dataId);return mr({inputs:{x:o.complexTensorInfos.imag},backend:e})}var W4={kernelName:Ap,backendName:"webgpu",kernelFunc:Km};function rh(r,t,e){let n=r[0].dtype;if(n==="complex64"){let f=r.map(T=>hp({inputs:{input:T},backend:e})),h=r.map(T=>Km({inputs:{input:T},backend:e})),g=rh(f,t,e),b=rh(h,t,e),x=qs({inputs:{real:g,imag:b},backend:e});return f.forEach(T=>e.disposeData(T.dataId)),h.forEach(T=>e.disposeData(T.dataId)),e.disposeData(g.dataId),e.disposeData(b.dataId),x}let o=e.shouldExecuteOnCPU(r);if(n==="string"&&(o=!0),o){let f=r.map(k=>{let _=[-1,y.sizeFromShape(k.shape.slice(t))];return ye({inputs:{x:k},backend:e,attrs:{shape:_}})}),h=f.map(k=>({vals:e.readSync(k.dataId),shape:k.shape})),g=I.computeOutShape(f.map(k=>k.shape),1),b=f[0].shape[0]===1,x=MV(h,g,n,b),T=I.computeOutShape(r.map(k=>k.shape),t),C=e.makeTensorInfo(T,n,x);return f.forEach(k=>e.disposeData(k.dataId)),C}let s=e.device.limits.maxStorageBuffersPerShaderStage-1;if(r.length>s){let f=[];for(let g=0;g<r.length;g+=s){let b=r.slice(g,g+s);f.push(rh(b,t,e))}let h=rh(f,t,e);for(let g of f)e.disposeData(g.dataId);return h}let{tensors2D:a,outShape:i}=pye(r,t,e),p=a.map(f=>f.shape),u=new lk(p),l=[],m=new Array(p.length-1);if(m.length>0){m[0]=p[0][1],l.push({type:"int32",data:[m[0]]});for(let f=1;f<m.length;f++)m[f]=m[f-1]+p[f][1],l.push({type:"int32",data:[m[f]]})}let c=e.runWebGPUProgram(u,a,a[0].dtype,l);a.forEach(f=>e.disposeData(f.dataId));let d=ye({inputs:{x:c},backend:e,attrs:{shape:i}});return e.disposeData(c.dataId),d}function pye(r,t,e){let n=I.computeOutShape(r.map(s=>s.shape),t);return{tensors2D:r.map(s=>ye({inputs:{x:s},backend:e,attrs:{shape:[y.sizeFromShape(s.shape.slice(0,t)),y.sizeFromShape(s.shape.slice(t))]}})),outShape:n}}function X2(r){let{inputs:t,backend:e,attrs:n}=r,{axis:o}=n,s=y.parseAxisParam(o,t[0].shape)[0],a=t.map(u=>u.shape);I.assertParamsConsistent(a,s);let i=I.computeOutShape(t.map(u=>u.shape),s);if(y.sizeFromShape(i)===0)return e.makeTensorInfo(i,t[0].dtype,[]);let p=t.filter(u=>y.sizeFromShape(u.shape)>0);return p.length===1?mr({inputs:{x:p[0]},backend:e}):rh(p,s,e)}var U4={kernelName:ea,backendName:"webgpu",kernelFunc:X2};function lye(r,t,e,n,o=!1,s=null,a=!1,i=4,p=4,u=4){let l=M=>{switch(M){case 1:return"resData = x[xIndex];";case 3:return"resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);";case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${M} is not supported.`)}},m=M=>{switch(M){case 1:return"return W[row * uniforms.wShape[3] + col];";case 4:return"return W[(row * uniforms.wShape[3] + col) / 4];";default:throw new Error(`innerElementSize ${M} is not supported.`)}},c=r?`
      let coord = vec4<i32>(batch, xRow, xCol, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, xRow, xCol);
      `,d=r?`
      let coords = vec4<i32>(
        batch,
        row / outWidth,
        row % outWidth,
        col);
      `:`
      let coords = vec4<i32>(
        batch,
        row,
        col / outWidth,
        col % outWidth);
      `,f=r?"uniforms.xShape[1]":"uniforms.xShape[2]",h=r?"uniforms.xShape[2]":"uniforms.xShape[3]",g=r?"row":"col",b=r?"col":"row",x=`
      let inChannels = uniforms.wShape[2];
      let outWidth = ${r?"uniforms.outShape[2]":"uniforms.outShape[3]"};
      let outRow = ${g} / outWidth;
      let outCol = ${g} % outWidth;

      let WRow = ${b} / (uniforms.filterDims[1] * inChannels);
      let WCol = ${b} / inChannels % uniforms.filterDims[1];
      let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * WRow - uniforms.pads[0];
      let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * WCol - uniforms.pads[1];
      let xCh = ${b} % inChannels;
      var resData = ${Ye(i)}(0.0);
      // The bounds checking is always needed since we use it to pad zero for
      // the 'same' padding type.
      if (xRow >= 0 && xRow < ${f} && xCol >= 0 && xCol < ${h}) {
        ${c}
        let xIndex = getIndexFromCoords4D(coord, uniforms.xShape);
        ${l(i)}
      }
      return resData;`,T=r?t&&n?`
      ${x}`:`
      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${x}
      }
      return ${Ye(i)}(0.0);`:n&&e?`
      ${x}`:`
      if (row < uniforms.dimInner && col < uniforms.dimBOuter) {
        ${x}
      }
      return ${Ye(i)}(0.0);`,C=`${m(p)}`,k=Ye(u),w=r?Ye(i):Ye(p),_=r?Ye(p):Ye(i);return`
      ${on(s,a,u===4,4)}
      fn mm_readA(batch: i32, row : i32, col : i32) -> ${w} {
        ${r?T:C}
      }

      fn mm_readB(batch: i32, row : i32, col : i32) -> ${_} {
        ${r?C:T}
      }

      fn mm_write(batch: i32, row : i32, col : i32, valueIn : ${k}) {
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)
        {
        var value = valueIn;
        let outWidth = ${r?"uniforms.outShape[2]":"uniforms.outShape[3]"};
        ${d}
        ${fo(o,s)}
        setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }`}var mk=class{constructor(t,e,n,o,s=!1,a=null,i=!1,p=!1){this.variableNames=["x","W"];this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,";this.outputShape=t.outShape,this.isChannelsLast=t.dataFormat==="channelsLast",this.isVec4=((t.inChannels%4===0||t.inChannels%3===0)&&this.isChannelsLast||t.outWidth%4===0&&!this.isChannelsLast)&&t.outChannels%4===0,this.dispatchLayout=this.isChannelsLast?{x:[3],y:[1,2],z:[0]}:{x:[2,3],y:[1],z:[0]},this.workgroupSize=$g(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=Og(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4?(this.outputComponent=4,this.isChannelsLast&&t.inChannels%4!==0?(this.innerElementSize=3,this.variableComponents=[1,4]):(this.innerElementSize=4,this.variableComponents=[4,4]),s&&(this.variableNames.push("bias"),this.variableComponents.push(4)),i&&(this.variableNames.push("preluActivationWeights"),this.variableComponents.push(4))):(this.innerElementSize=this.elementsPerThread[0],s&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights")),this.sequentialAccessByThreads=p,this.addBias=s,this.activation=a,this.hasPreluActivationWeights=i,this.tileAOuter=this.workgroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workgroupSize[0]*this.elementsPerThread[0],this.tileInner=Math.max(this.workgroupSize[0]*this.innerElementSize,this.workgroupSize[1]),this.fitAOuter=e%this.tileAOuter===0,this.fitBOuter=n%this.tileBOuter===0,this.fitInner=o%this.tileInner===0,this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.innerElementSize}_${this.isChannelsLast}_${this.sequentialAccessByThreads}`}getUserCode(){let t=this.isVec4?Gm(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner):Wm(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner,!1,null,this.sequentialAccessByThreads),e=this.isVec4?[this.innerElementSize,4,4]:[1,1,1];return`
    ${lye(this.isChannelsLast,this.fitAOuter,this.fitBOuter,this.fitInner,this.addBias,this.activation,this.hasPreluActivationWeights,e[0],e[1],e[2])}
    ${t}
  `}};var ck=class{constructor(t,e=!1,n=null,o=!1){this.variableNames=["x","W"];this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>,";this.workgroupSize=[4,4,8];this.outputShape=t.outShape,this.isChannelsLast=t.dataFormat==="channelsLast",this.dispatchLayout=this.isChannelsLast?{x:[2],y:[1],z:[0,3]}:{x:[3],y:[2],z:[0,1]},this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=e,this.activation=n,this.hasPreluActivationWeights=o,e&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`conv2dnaive_${this.activation}_${this.isChannelsLast}`}getUserCode(){return`
       ${on(this.activation,this.hasPreluActivationWeights,!1,4)}
       fn readInp(batch : i32, row : i32, col : i32, chan : i32) -> f32{
         let coords = vec4<i32>(batch, row, col, chan);
         if (coordsInBounds4D(coords, uniforms.xShape)) {
           return  getX(batch, row, col, chan);
         } else {
          return 0.0;
         }
       }
       fn readFilt(row : i32, col : i32, xChannel : i32, outChannel : i32) -> f32{
         let coords = vec4<i32>(row, col, xChannel, outChannel);
         if(coordsInBounds4D(coords, uniforms.wShape)) {
           return getW(row, col, xChannel, outChannel);
          } else {
            return 0.0;
          }
       }
       fn writeResult(batch : i32, row : i32, col : i32, chan : i32, valueIn : f32) {
         let coords = ${this.isChannelsLast?"vec4<i32>(batch, row, col, chan);":"vec4<i32>(batch, chan, row, col);"}
         if (coordsInBounds4D(coords, uniforms.outShape)) {
           var value = valueIn;
           ${fo(this.addBias,this.activation)}
           setOutputAtCoords(coords.x, coords.y, coords.z, coords.w, value);
         }
       }
       ${X("index")} {
         let coords = getOutputCoords();
         let batch = coords[0];
         let outChannel = ${this.isChannelsLast?"coords[3];":"coords[1];"}
         let outRow = ${this.isChannelsLast?"coords[1];":"coords[2];"}
         let outCol = ${this.isChannelsLast?"coords[2];":"coords[3];"}
         var acc : f32 = 0.0;
         for (var row = 0; row < uniforms.filterDims[0]; row = row + 1) {
           for (var col = 0; col < uniforms.filterDims[1]; col = col + 1) {
             let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * row - uniforms.pads[0];
             let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * col - uniforms.pads[1];
             for (var xChannel = 0; xChannel < ${this.isChannelsLast?"uniforms.xShape[3];":"uniforms.xShape[1];"} xChannel = xChannel + 1) {
               ${this.isChannelsLast?"let v = readInp(batch, xRow, xCol, xChannel);":"let v = readInp(batch, xChannel, xRow, xCol);"}
               let f = readFilt(row, col, xChannel, outChannel);
               acc = acc + v * f;
             }
           }
         }
         writeResult(batch, outRow, outCol, outChannel, acc);
       }
     `}};var dk=class{constructor(t,e){this.variableNames=["x"];this.uniforms=`pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, outWidth : i32, itemsPerBlockRow : i32,
       inChannels : i32,`;this.workgroupSize=[64,1,1];this.size=!0;this.outputShape=t,this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=e,this.shaderKey=`im2col_${this.isChannelsLast}`}getUserCode(){let t=this.isChannelsLast?1:2,e=this.isChannelsLast?2:3,n=this.isChannelsLast?"coords[1]":"coords[2]",o=this.isChannelsLast?"coords[2]":"coords[1]",s=this.isChannelsLast?"getX(batch, xRow, xCol, ch)":"getX(batch, ch, xRow, xCol)";return`
    ${X("index")} {
      let coords = getCoordsFromIndex(index);
      if(index < uniforms.size) {
        let batch = coords[0];
        let row = ${n};
        let col = ${o};
        let offsetY = (row / uniforms.outWidth) * uniforms.strides[0] - uniforms.pads[0];
        let xRow = offsetY + uniforms.dilations[0] * (col / uniforms.itemsPerBlockRow);
        var value = 0.0;
        if(xRow < uniforms.xShape[${t}] && xRow >= 0) {
          let offsetX = (row % uniforms.outWidth) * uniforms.strides[1] -
              uniforms.pads[1];
          let xCol = offsetX + uniforms.dilations[1] * ((col %
              uniforms.itemsPerBlockRow) / uniforms.inChannels);
          let ch = col % uniforms.inChannels;
          if(xCol < uniforms.xShape[${e}] && xCol >= 0) {
            value = ${s};
          }
        }
        setOutputAtIndex(index, value);
      }
    }
   `}};function fk(r,t){let e=r.length;return e>=3?t?[...r.slice(0,-3),r[e-3]*r[e-2],r[e-1]]:[...r.slice(0,-3),r[e-3],r[e-2]*r[e-1]]:!t&&e===1&&r[0]>1?[r[0],1]:null}function mye({x:r,filter:t,convInfo:e,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:i=null}){let p=e.dataFormat==="channelsLast",u=!p,l=!1,m=p&&e.filterHeight===e.inHeight&&e.filterWidth===e.inWidth&&e.padInfo.type==="VALID",c=[],d,f;if(m){let b=e.inHeight*e.inWidth*e.inChannels;d=ye({inputs:{x:r},backend:n,attrs:{shape:[1,e.batchSize,b]}}),f=ye({inputs:{x:t},backend:n,attrs:{shape:[1,b,e.outChannels]}})}else d=ye({inputs:{x:r},backend:n,attrs:{shape:p?[e.batchSize,e.inHeight*e.inWidth,e.inChannels]:[e.batchSize,e.inChannels,e.inHeight*e.inWidth]}}),f=ye({inputs:{x:t},backend:n,attrs:{shape:[1,e.inChannels,e.outChannels]}});if(c.push(d),c.push(f),s!=null){let b=fk(s.shape,p);b!=null&&(s=ye({inputs:{x:s},backend:n,attrs:{shape:b}}),c.push(s))}if(o!=null){let b=fk(o.shape,p);b!=null&&(o=ye({inputs:{x:o},backend:n,attrs:{shape:b}}),c.push(o))}let h=Um({a:p?d:f,b:p?f:d,transposeA:u,transposeB:l,backend:n,bias:o,activation:i,preluActivationWeights:s,leakyreluAlpha:a}),g=ye({inputs:{x:h},backend:n,attrs:{shape:e.outShape}});c.push(h);for(let b of c)n.disposeData(b.dataId);return g}function cye({x:r,filter:t,convInfo:e,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:i=null}){let{filterWidth:p,filterHeight:u,inChannels:l,strideWidth:m,strideHeight:c,padInfo:d,outWidth:f,outHeight:h,dilationWidth:g,dilationHeight:b,dataFormat:x}=e,T=x==="channelsLast",C=p*u*l,k=h*f,w=T?[e.batchSize,k,C]:[e.batchSize,C,k],_=new dk(w,T),P=[{type:"int32",data:[d.top,d.left]},{type:"int32",data:[c,m]},{type:"int32",data:[b,g]},{type:"int32",data:[f]},{type:"int32",data:[l*p]},{type:"int32",data:[l]}],M=n.runWebGPUProgram(_,[r],r.dtype,P),R=[];R.push(M);let $=ye({inputs:{x:t},backend:n,attrs:{shape:[1,C,-1]}});if(R.push($),s!=null){let K=fk(s.shape,T);K!=null&&(s=ye({inputs:{x:s},backend:n,attrs:{shape:K}}),R.push(s))}if(o!=null){let K=fk(o.shape,T);K!=null&&(o=ye({inputs:{x:o},backend:n,attrs:{shape:K}}),R.push(o))}let U=Um({a:T?M:$,b:T?$:M,transposeA:!T,transposeB:!1,backend:n,bias:o,activation:i,preluActivationWeights:s,leakyreluAlpha:a}),V=ye({inputs:{x:U},backend:n,attrs:{shape:e.outShape}});R.push(U);for(let K of R)n.disposeData(K.dataId);return V}function hk({x:r,filter:t,convInfo:e,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:a=0,activation:i=null}){let p=o!=null,u=s!=null,l=e.dataFormat==="channelsLast",m=l&&e.filterHeight===e.inHeight&&e.filterWidth===e.inWidth&&e.padInfo.type==="VALID",c=L().getBool("WEBGPU_USE_NAIVE_CONV2D_DEBUG");if(!c&&(m||e.filterHeight===1&&e.filterWidth===1&&e.dilationHeight===1&&e.dilationWidth===1&&e.strideHeight===1&&e.strideWidth===1&&(e.padInfo.type==="SAME"||e.padInfo.type==="VALID")))return mye({x:r,filter:t,convInfo:e,backend:n,bias:o,activation:i,preluActivationWeights:s,leakyreluAlpha:a});let d=L().getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),f=d>0?d:n.thresholdToIncreaseWorkgroups,h=e.batchSize*Math.ceil(e.outHeight*e.outWidth/32)*Math.ceil(e.outChannels/32);if(L().getBool("WEBGPU_CONV_SEPARATE_IM2COL_SHADER")||h<=f)return cye({x:r,filter:t,convInfo:e,backend:n,bias:o,preluActivationWeights:s,leakyreluAlpha:a,activation:i});let g,b=[e.padInfo.top,e.padInfo.left],x=[{type:"int32",data:[e.filterHeight,e.filterWidth]},{type:"int32",data:[...b]},{type:"int32",data:[e.strideHeight,e.strideWidth]},{type:"int32",data:[e.dilationHeight,e.dilationWidth]}];if(c)g=new ck(e,p,i,u);else{let w=l?e.outHeight*e.outWidth:e.outChannels,_=l?e.outChannels:e.outHeight*e.outWidth,P=e.filterHeight*e.filterWidth*e.inChannels;x.push({type:"int32",data:[w]},{type:"int32",data:[_]},{type:"int32",data:[P]});let M=n.adapterInfo.isIntel();g=new mk(e,w,_,P,p,i,u,M)}let T=[],C=[r,t];p&&(!l&&o.shape.length===1&&(o=ye({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}}),T.push(o)),C.push(o)),u&&(!l&&s.shape.length===1&&(s=ye({inputs:{x:s},backend:n,attrs:{shape:[s.shape[0],1,1]}}),T.push(s)),C.push(s)),i==="leakyrelu"&&(x.push({type:"float32",data:[a]}),g.uniforms+=" alpha : f32,");let k=n.runWebGPUProgram(g,C,r.dtype,x);for(let w of T)n.disposeData(w.dataId);return k}function dye(r){let{inputs:t,attrs:e,backend:n}=r,{x:o,filter:s}=t,{strides:a,pad:i,dataFormat:p,dilations:u,dimRoundingMode:l}=e,m=I.convertConv2DDataFormat(p),c=I.computeConv2DInfo(o.shape,s.shape,a,u,i,l,!1,m);return hk({x:o,filter:s,convInfo:c,backend:n})}var K4={kernelName:Eo,backendName:"webgpu",kernelFunc:dye};var gk=class{constructor(t){this.variableNames=["dy","W"];this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>,";this.workgroupSize=[64,1,1];this.size=!1;this.isVec4=!1;this.workPerThread=1;this.outputShape=t.inShape,this.isChannelsLast=t.dataFormat==="channelsLast",this.isVec4=this.isChannelsLast&&t.outChannels%4===0&&t.inChannels%4===0,this.isVec4?(this.workPerThread=2,this.outputComponent=4,this.workgroupSize=[4,4,4],this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize,[4,this.workPerThread,1])):(this.size=!0,this.workPerThread=1,this.workgroupSize=[64,1,1],this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize)),this.shaderKey=`conv2DDerInput_${this.isChannelsLast}_${this.isVec4}_${this.workPerThread}`}getUserCode(){let t=this.isChannelsLast?1:2,e=this.isChannelsLast?2:3,n=this.isChannelsLast?3:1,o=`
    ${X()} {
      let batch = i32(globalId.z) / uniforms.outShape[1];
      let r = i32(globalId.z) % uniforms.outShape[1];
      let c = i32(globalId.y) * ${this.workPerThread};
      let d1 = i32(globalId.x) * 4;

      let dyCorner = vec2<i32>(r, c) - uniforms.pads;

      // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
      // ? = to be determined. : = across all values in that axis.
      var dotProd: array<vec4<f32>, ${this.workPerThread}>;
      for (var i = 0; i < ${this.workPerThread}; i++) {
        dotProd[i] = vec4<f32>(0.0);
      }
      for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
        let dyR = f32(dyCorner.x + wR) / f32(uniforms.strides.x);
        let wRPerm = uniforms.filterDims.x - 1 - wR;
        if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) ||
            fract(dyR) > 0.0) {
          continue;
        }
        let idyR = i32(dyR);

        for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
          let dyC = f32(dyCorner.y + wC) / f32(uniforms.strides.y);
          let dyC2 = f32(dyCorner.y + 1 + wC) / f32(uniforms.strides.y);
          let wCPerm = uniforms.filterDims.y - 1 - wC;
          var bDyCVal = true;
          var bDyCVal2 = true;
          if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
              fract(dyC) > 0.0) {
            bDyCVal = false;
          }
          if (dyC2 < 0.0 || dyC2 >= f32(uniforms.outBackprop[2]) ||
              fract(dyC2) > 0.0) {
            bDyCVal2 = false;
          }

          let idyC = i32(dyC);
          let idyC2 = i32(dyC2);
          if (bDyCVal && bDyCVal2) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[0] = dotProd[0] + tmpval;
              xValue = getDy(batch, idyR, idyC2, d2);
              dotProd[1] = dotProd[1] + vec4<f32>(dot(xValue, wValue0),
                                                  dot(xValue, wValue1),
                                                  dot(xValue, wValue2),
                                                  dot(xValue, wValue3));
            }
          } else if (bDyCVal) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[0] = dotProd[0] + tmpval;
            }
          } else if (bDyCVal2) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC2, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[1] = dotProd[1] + tmpval;
            }
          }
        }
      }

      for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
        let coords = vec4<i32>(batch, r, c + i, d1);
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], dotProd[i]);
        }
      }
    }
    `;return this.isVec4?`
    ${o}
    `:`
    ${X("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[${n}];

        let dyCorner = vec2<i32>(coords[${t}], coords[${e}]) - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.strides.x);
          let wRPerm = uniforms.filterDims.x - 1 - wR;
          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||
              wRPerm < 0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.strides.y);
            let wCPerm = uniforms.filterDims.y - 1 - wC;
            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
                fract(dyC) > 0.0 || wCPerm < 0) {
              continue;
            }
            let idyC = i32(dyC);

            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {
              let xValue = ${this.isChannelsLast?"getDy(batch, idyR, idyC, d2)":"getDy(batch, d2, idyR, idyC)"};
              let wValue = getW(wRPerm, wCPerm, d1, d2);
              dotProd = dotProd + xValue * wValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}},bk=class{constructor(t){this.variableNames=["x","dy"];this.uniforms="pads : vec2<i32>, strides : vec2<i32>, batchSize : i32, outHeight : i32, outWidth : i32, inHeight : i32, inWidth : i32,";this.workgroupSize=[64,1,1];this.size=!0;this.outputShape=t.filterShape,this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=t.dataFormat==="channelsLast",this.shaderKey=`conv2DDerFilter_${this.isChannelsLast}`}getUserCode(){return`
    ${X("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wR = coords[0];
        let wC = coords[1];
        let d1 = coords[2];
        let d2 = coords[3];

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b = b + 1) {
          for (var yR = 0; yR < uniforms.outHeight; yR = yR + 1) {
            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];
            if (xR < 0 || xR >= uniforms.inHeight) {
              continue;
            }

            for (var yC = 0; yC < uniforms.outWidth; yC = yC + 1) {
              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];

              if (xC < 0 || xC >= uniforms.inWidth) {
                continue;
              }

              if (${this.isChannelsLast}) {
                let dyValue = getDy(b, yR, yC, d2);
                let xValue = getX(b, xR, xC, d1);
                dotProd = dotProd + xValue * dyValue;
              } else {
                let dyValue = getDy(b, d2, yR, yC);
                let xValue = getX(b, d1, xR, xC);
                dotProd = dotProd + xValue * dyValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}},yk=class{constructor(t){this.variableNames=["x","dy"];this.uniforms=`pads : vec3<i32>, strides : vec3<i32>, batchSize : i32, outDepth : i32,
       outHeight : i32, outWidth : i32, inDepth : i32, inHeight : i32, inWidth : i32,`;this.workgroupSize=[64,1,1];this.size=!0;this.outputShape=t.filterShape,this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3DDerFilter"}getUserCode(){return`
    ${X("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wF = coords.x;
        let wR = coords.y;
        let wC = coords.z;
        let d1 = coords.w;
        let d2 = coords.u;

        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b++) {
          for (var yF = 0; yF < uniforms.outDepth; yF++) {
            let xF = wF + yF * uniforms.strides[0] - uniforms.pads[0];
            if (xF < 0 || xF >= uniforms.inDepth) {
              continue;
            }

            for (var yR = 0; yR < uniforms.outHeight; yR++) {
              let xR = wR + yR * uniforms.strides[1] - uniforms.pads[1];
              if (xR < 0 || xR >= uniforms.inHeight) {
                continue;
              }

              for (var yC = 0; yC < uniforms.outWidth; yC++) {
                let xC = wC + yC * uniforms.strides[2] - uniforms.pads[2];
                if (xC < 0 || xC >= uniforms.inWidth) {
                  continue;
                }

                let dyValue = getDy(b, yF, yR, yC, d2);
                let xValue = getX(b, xF, xR, xC, d1);
                dotProd += xValue * dyValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}},xk=class{constructor(t){this.variableNames=["dy","W"];this.uniforms=`filterDims : vec3<i32>, pads : vec3<i32>, strides : vec3<i32>,
      outDepth : i32, outHeight : i32, outWidth : i32, outChannels : i32,`;this.workgroupSize=[64,1,1];this.size=!0;this.outputShape=t.inShape,this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3DDerInput"}getUserCode(){return`
    ${X("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let d1 = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyFCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        var dotProd = 0.0;
        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {
          let dyF = f32(dyFCorner + wF) / f32(uniforms.strides[0]);
          if (dyF < 0.0 || dyF >= f32(uniforms.outDepth) || fract(dyF) > 0.0) {
            continue;
          }
          let idyF = i32(dyF);

          let wFPerm = uniforms.filterDims[0] - 1 - wF;

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            let wRPerm = uniforms.filterDims[1] - 1 - wR;

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let wCPerm = uniforms.filterDims[2] - 1 - wC;

              for (var d2 = 0; d2 < uniforms.outChannels; d2++) {
                let xValue = getDy(batch, idyF, idyR, idyC, d2);
                let wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}};function fye(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,dy:s}=t,{strides:a,pad:i,dataFormat:p,dimRoundingMode:u,filterShape:l}=n,m=I.convertConv2DDataFormat(p),c=I.computeConv2DInfo(o.shape,l,a,1,i,u,!1,m),d=new bk(c),f=[{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.batchSize]},{type:"int32",data:[c.outHeight]},{type:"int32",data:[c.outWidth]},{type:"int32",data:[c.inHeight]},{type:"int32",data:[c.inWidth]}];return e.runWebGPUProgram(d,[o,s],o.dtype,f)}var V4={kernelName:Cp,backendName:"webgpu",kernelFunc:fye};function hye(r=4){let t=s=>{switch(s){case 1:return"return W[getIndexFromCoords4D(coord, uniforms.wShape)];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = W[getIndexFromCoords4D(coord, uniforms.wShape)];
            let v1 = W[getIndexFromCoords4D(coord1, uniforms.wShape)];
            let v2 = W[getIndexFromCoords4D(coord2, uniforms.wShape)];
            let v3 = W[getIndexFromCoords4D(coord3, uniforms.wShape)];
            return vec4<f32>(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${s} is not supported.`)}},n=`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${`
      let outRow = row / uniforms.outShape[2];
      let outCol = row % uniforms.outShape[2];

      let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
      let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];
      let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.strides[0]);
      let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.strides[1]);
      if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {
        return ${Ye(r)}(0.0);
      }
      if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {
        return ${Ye(r)}(0.0);
      }
      let coord = vec4<i32>(
          batch,
          i32(xR),
          i32(xC),
          col % uniforms.outBackprop[3]);
      return x[getIndexFromCoords4D(coord, uniforms.xShape)/${r}];`}
      }
      return ${Ye(r)}(0.0);`;return`
  fn mm_readA(batch: i32, row : i32, col : i32) -> ${Ye(r)} {
    ${n}
  }

  fn mm_readB(batch: i32, row : i32, col : i32) -> ${Ye(r)} {
    let coordX = uniforms.filterDims.x - 1 -
        row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
    let coordY = uniforms.filterDims.y - 1 -
        (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];
    if (row < uniforms.dimInner && col < uniforms.dimBOuter &&
        coordX >= 0 && coordY >= 0) {
      let rowInner = row % uniforms.outBackprop[3];
      let coord = vec4<i32>(coordX, coordY, col, rowInner);
      ${t(r)}
    }
    return ${Ye(r)}(0.0);
  }

  fn mm_write(batch: i32, row : i32, col : i32, valueInput : ${Ye(r)}) {
    if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      result[getIndexFromCoords4D(outCoord, uniforms.outShape)/${r}] = value;
    }
  }`}var Tk=class{constructor(t){this.variableNames=["x","W"];this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,";this.outputShape=t.inShape,y.assert(t.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.isVec4=t.inChannels%4===0&&t.outChannels%4===0,this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workgroupSize=$g(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=Og(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4&&(this.outputComponent=4,this.variableComponents=[4,1]),this.shaderKey=`conv2DDerInputMM_${this.isVec4}_${this.elementsPerThread}`}getUserCode(){let t=this.isVec4?Gm(this.elementsPerThread,this.workgroupSize):Wm(this.elementsPerThread,this.workgroupSize);return`
    ${hye(this.isVec4?4:1)}
    ${t}
    `}};function gye(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,filter:s}=t,{inputShape:a,strides:i,pad:p,dataFormat:u,dimRoundingMode:l}=n,m=I.convertConv2DDataFormat(u),c=I.computeConv2DInfo(a,s.shape,i,1,p,l,!1,m),d=[{type:"int32",data:[c.filterHeight,c.filterWidth]},{type:"int32",data:[c.filterHeight-1-c.padInfo.top,c.filterWidth-1-c.padInfo.left]},{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.batchSize,c.outHeight,c.outWidth,c.outChannels]}],f;if(L().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE")||c.dataFormat!=="channelsLast")f=new gk(c);else{f=new Tk(c);let h=c.inHeight*c.inWidth,g=c.inChannels,b=c.filterHeight*c.filterWidth*c.outChannels;d.push({type:"uint32",data:[h]},{type:"uint32",data:[g]},{type:"uint32",data:[b]})}return e.runWebGPUProgram(f,[o,s],"float32",d)}var H4={kernelName:Lo,backendName:"webgpu",kernelFunc:gye};var Ck=class{constructor(t){this.variableNames=["x","W"];this.uniforms="filterDims: vec3<i32>, pads: vec3<i32>, strides: vec3<i32>, dilations: vec3<i32>,";this.workgroupSize=[64,1,1];this.size=!0;this.outputShape=t.outShape,this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3dnaive"}getUserCode(){return`
    ${X("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let batch = coords.x;
        let d2 = coords.u;

        let xFRCCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;
        let xFCorner = xFRCCorner.x;
        let xRCorner = xFRCCorner.y;
        let xCCorner = xFRCCorner.z;

        let inputDepthNearestVec4 = (uniforms.xShape.u / 4) * 4;
        let inputDepthVec4Remainder = uniforms.xShape.u % 4;

        var dotProd = 0.0;
        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {
          let xF = xFCorner + wF * uniforms.dilations[0];
          if (xF < 0 || xF >= uniforms.xShape.y) {
            continue;
          }

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let xR = xRCorner + wR * uniforms.dilations[1];
            if (xR < 0 || xR >= uniforms.xShape.z) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let xC = xCCorner + wC * uniforms.dilations[2];
              if (xC < 0 || xC >= uniforms.xShape.w) {
                continue;
              }

              for (var d1 = 0; d1 < inputDepthNearestVec4; d1 += 4) {
                let xValues = vec4<f32>(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                let wValues = vec4<f32>(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (inputDepthVec4Remainder == 1) {
                dotProd += getX(batch, xF, xR, xC, inputDepthNearestVec4) *
                  getW(wF, wR, wC, inputDepthNearestVec4, d2);
              } else if (inputDepthVec4Remainder == 2) {
                let xValues = vec2<f32>(
                  getX(batch, xF, xR, xC, inputDepthNearestVec4),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1)
                );
                let wValues = vec2<f32>(
                  getW(wF, wR, wC, inputDepthNearestVec4, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (inputDepthVec4Remainder == 3) {
                let xValues = vec3<f32>(
                  getX(batch, xF, xR, xC, inputDepthNearestVec4),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2)
                );
                let wValues = vec3<f32>(
                  getW(wF, wR, wC, inputDepthNearestVec4, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }`}};function bye(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s}=t,{strides:a,pad:i,dilations:p}=n,u=I.computeConv3DInfo(o.shape,s.shape,a,p,i),l=[u.padInfo.front,u.padInfo.top,u.padInfo.left],m=[{type:"int32",data:[u.filterDepth,u.filterHeight,u.filterWidth]},{type:"int32",data:[...l]},{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.dilationDepth,u.dilationHeight,u.dilationWidth]}],c=new Ck(u),d=At(o.dtype,s.dtype);return e.runWebGPUProgram(c,[o,s],d,m)}var q4={kernelName:Bo,backendName:"webgpu",kernelFunc:bye};function yye(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,dy:s}=t,{strides:a,pad:i,filterShape:p}=n,u=I.computeConv3DInfo(o.shape,p,a,1,i),l=new yk(u),m=[{type:"int32",data:[u.padInfo.front,u.padInfo.top,u.padInfo.left]},{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.batchSize]},{type:"int32",data:[u.outDepth]},{type:"int32",data:[u.outHeight]},{type:"int32",data:[u.outWidth]},{type:"int32",data:[u.inDepth]},{type:"int32",data:[u.inHeight]},{type:"int32",data:[u.inWidth]}];return e.runWebGPUProgram(l,[o,s],s.dtype,m)}var j4={kernelName:qa,backendName:"webgpu",kernelFunc:yye};function xye(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,filter:s}=t,{strides:a,pad:i,inputShape:p}=n,u=I.computeConv3DInfo(p,s.shape,a,1,i),l=new xk(u),m=[{type:"int32",data:[u.filterDepth,u.filterHeight,u.filterWidth]},{type:"int32",data:[u.filterDepth-1-u.padInfo.front,u.filterHeight-1-u.padInfo.top,u.filterWidth-1-u.padInfo.left]},{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.outDepth]},{type:"int32",data:[u.outHeight]},{type:"int32",data:[u.outWidth]},{type:"int32",data:[u.outChannels]}];return e.runWebGPUProgram(l,[o,s],o.dtype,m)}var X4={kernelName:ja,backendName:"webgpu",kernelFunc:xye};var Tye=we({opType:8}),Y4={kernelName:$o,backendName:"webgpu",kernelFunc:Tye};var Cye=we({opType:9}),Z4={kernelName:Oo,backendName:"webgpu",kernelFunc:Cye};var Ik=class{constructor(t,e,n,o){this.variableNames=["Image","Boxes","BoxInd"];this.uniforms="extrapolationValue : f32,";this.workgroupSize=[64,1,1];this.size=!0;let[s]=e;this.outputShape=[s,n[0],n[1],t],this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize),this.methodId=o==="bilinear"?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){let[t,e]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[n,o,s]=this.cropHeightBiggerThan1?[`(${t} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${t} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${t}`],[a,i,p]=this.cropWidthBiggerThan1?[`(${e} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${e} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${e}`];return`
    ${X("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let height_ratio = f32(${n});
        let width_ratio = f32(${a});
        let b = coords[0];
        let y = coords[1];
        let x = coords[2];
        let d = coords[3];
        // get box vals
        let y1 = getBoxes(b, 0);
        let x1 = getBoxes(b, 1);
        let y2 = getBoxes(b, 2);
        let x2 = getBoxes(b, 3);
        // get image in batch index
        let bInd = i32(round(getBoxInd(b)));
        if(bInd < 0 || bInd >= uniforms.outShape[0]) {
          return;
        }
        let height_scale = ${o};
        let width_scale = ${i};
        let in_y = ${s};
        if( in_y < 0.0 || in_y > ${t} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let in_x = ${p};
        if( in_x < 0.0 || in_x > ${e} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let sourceFracIndexCR = vec2<f32>(in_x,in_y);
        if(${this.methodId} == 1) {
          // Compute the four integer indices.
          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);
          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));
          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);
          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);
          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);
          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);
          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);
          let top = topLeft + (topRight - topLeft) * fracCR.x;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          let newValue = top + (bottom - top) * fracCR.y;
          setOutputAtIndex(index, newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          let sourceNearestCR = vec2<i32>(floor(
            sourceFracIndexCR + vec2<f32>(0.5,0.5)));
          let newValue = getImage(
            bInd, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutputAtIndex(index, newValue);
        }
      }
    }
    `}};var Iye=r=>{let{inputs:t,backend:e,attrs:n}=r,{image:o,boxes:s,boxInd:a}=t,{cropSize:i,method:p,extrapolationValue:u}=n,l=new Ik(o.shape[3],s.shape,i,p),m=[{type:"float32",data:[u]}];return e.runWebGPUProgram(l,[o,s,a],"float32",m)},Q4={kernelName:Ya,backendName:"webgpu",kernelFunc:Iye};var Kg=class{constructor(t,e,n,o){this.variableNames=["x"];this.uniforms="index : f32,";this.size=!0;this.workgroupSize=[128,1,1],this.outputShape=e,this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize),this.exclusive=n,this.reverse=o,this.op=t,this.shaderKey=`cum_${this.op}_${this.exclusive}_${this.reverse}`}getUserCode(){let t=this.outputShape.length,e=this.op==="*"?"1.0":"0.0",n=this.exclusive?e:`getX(${J4(t,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1],s="",a="";return this.exclusive?(s=this.reverse?`end != ${o-1}`:"end != 0",a=this.reverse?"end + 1":"end - 1"):(s=this.reverse?`end + pow2 < ${o}`:"end >= pow2",a=this.reverse?"end + pow2":"end - pow2"),`
      ${X("index")} {
       if (index < uniforms.size) {
         var coords = getCoordsFromIndex(index);

         let end = ${eH(t,"coords",this.op)};
         var val = ${n};
         let pow2 = i32(pow(2.0, uniforms.index));
         if (${s}) {
           let idx = ${a};
           ${eH(t,"coords",this.op)} = idx;
           val ${this.op}= getX(${J4(t,"coords",this.op)});
         }
         setOutputAtIndex(index, val);
       }
      }
    `}};function J4(r,t,e){if(r===1)return`${t}`;if(r===2)return`${t}.x, ${t}.y`;if(r===3)return`${t}.x, ${t}.y, ${t}.z`;if(r===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative ${e} for rank ${r} is not yet supported`)}function eH(r,t,e){if(r===1)return`${t}`;if(r===2)return`${t}.y`;if(r===3)return`${t}.z`;if(r===4)return`${t}.w`;throw Error(`Cumulative ${e} for rank ${r} is not yet supported`)}function kk(r,t,e,n,o,s){let a=t.shape.length,i=I.getAxesPermutation([n],a),p=t;i!=null&&(p=fn({inputs:{x:t},backend:e,attrs:{perm:i}}));let u=I.getInnerMostAxes(1,a)[0];if(u!==a-1)throw new Error(`WebGPU cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${n}`);let l=p.shape[u],m=mr({inputs:{x:p},backend:e});for(let c=0;c<=Math.ceil(Math.log2(l))-1;c++){let d=new Kg(r,p.shape,!1,s),f=m,h=[{type:"float32",data:[c]}];m=e.runWebGPUProgram(d,[m],m.dtype,h),e.disposeData(f.dataId)}if(o){let c=new Kg(r,p.shape,o,s),d=m,f=[{type:"float32",data:[0]}];m=e.runWebGPUProgram(c,[m],m.dtype,f),e.disposeData(d.dataId)}if(i!=null){let c=I.getUndoAxesPermutation(i),d=fn({inputs:{x:m},backend:e,attrs:{perm:c}});return e.disposeData(m.dataId),e.disposeData(p.dataId),d}return m}function vye(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,exclusive:a,reverse:i}=n;return kk("*",o,e,s,a,i)}var tH={kernelName:Xa,backendName:"webgpu",kernelFunc:vye};function Sye(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,exclusive:a,reverse:i}=n;return kk("+",o,e,s,a,i)}var rH={kernelName:zo,backendName:"webgpu",kernelFunc:Sye};function wye(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,weights:s}=t,{size:a,binaryOutput:i}=n,p=o.shape.length===1,l=y.sizeFromShape(s.shape)>0,m=s.dtype,c=p?[o.shape[0]]:[o.shape[0],o.shape[1]],d=p?[a]:[o.shape[0],a],f=Qt({backend:e,attrs:{shape:d,value:0,dtype:m}}),h=new th(c,l,i),g=[{type:"int32",data:[a]}],b=l?[o,s]:[o];return e.runWebGPUProgram(h,b,m,g,f)}var nH={kernelName:eu,backendName:"webgpu",kernelFunc:wye};var vk=class{constructor(t,e){this.variableNames=["x"];this.workgroupSize=[64,1,1];this.size=!0;this.uniforms="blockSize : i32,";this.outputShape=t,this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`depthToSpace_${e}`,this.dataFormat=e}getUserCode(){return`
      ${X("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let h = ${this.getHeightCoordString()};
          let w = ${this.getWidthCoordString()};
          let d = ${this.getDepthCoordString()};

          let in_h = h / uniforms.blockSize;
          let offset_h = h % uniforms.blockSize;
          let in_w = w / uniforms.blockSize;
          let offset_w = w % uniforms.blockSize;
          let offset_d = (offset_h * uniforms.blockSize + offset_w) *
            ${this.getOutputDepthSize()};
          let in_d = d + offset_d;

          let rlt = ${this.getInputSamplingString()};
          setOutputAtIndex(index, rlt);
        }
      }`}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function Aye(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{blockSize:s,dataFormat:a}=n,i=o.shape[0],p=a==="NHWC"?o.shape[1]:o.shape[2],u=a==="NHWC"?o.shape[2]:o.shape[3],l=a==="NHWC"?o.shape[3]:o.shape[1],m=p*s,c=u*s,d=l/(s*s),f=a==="NHWC"?[i,m,c,d]:[i,d,m,c],h=[{type:"int32",data:[s]}],g=new vk(f,a);return e.runWebGPUProgram(g,[o],o.dtype,h)}var oH={kernelName:Za,backendName:"webgpu",kernelFunc:Aye};var Sk=class{constructor(t,e,n,o=!1,s=null,a=!1){this.variableNames=["x","W"];this.uniforms="pads : vec2<i32>, inDims : vec2<i32>,";this.workgroupSize=[16,16,1];this.outputShape=t,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize),o&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),this.addBias=o,this.activation=s,this.hasPreluActivation=a,this.filterHeight=e,this.filterWidth=n,this.shaderKey=`depthwiseNCHW_${this.activation}_${this.filterHeight}_${this.filterWidth}`}getUserCode(){let t=this.filterWidth*this.filterHeight,e=this.workgroupSize[0]*this.workgroupSize[1]*this.workgroupSize[2],n=this.workgroupSize[1]+this.filterHeight-1,o=this.workgroupSize[0]+this.filterWidth-1;return`
      ${on(this.activation,this.hasPreluActivation,!1,4)}

      var<workgroup> mm_Asub : array<array<f32, ${o}>, ${n}>;
      var<workgroup> mm_Bsub : array<array<f32, ${this.filterWidth}>, ${this.filterHeight}>;
      fn readX(batch : i32, channel : i32, row : i32, col : i32) -> f32 {
        var value = 0.0;
        if (row >=0 && row < uniforms.inDims[0] && col >=0 && col < uniforms.inDims[1])
        {
          value = getX(batch, channel, row, col);
        }
        return value;
      }

      ${X()} {
        let coords = getOutputCoords();
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.zw) - uniforms.pads;
        let channelMul = uniforms.wShape[3];
        let d1 = coords[1] / channelMul;
        let q = coords[1] % channelMul;

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;

        let localRow = i32(localId.y);
        let localCol = i32(localId.x);

        // Load one tile of X into local memory.
        for (var inputRow = localRow; inputRow < ${n}; inputRow = inputRow + ${this.workgroupSize[1]}) {
          for (var inputCol = localCol; inputCol < ${o}; inputCol = inputCol + ${this.workgroupSize[0]}) {
            let rowOffset = inputRow - localRow;
            let colOffset = inputCol - localCol;
            mm_Asub[inputRow][inputCol] = readX(batch, d1, inputRowStart + rowOffset, inputColStart + colOffset);
          }
        }

        // Load one tile of W into local memory.
        var wIndex = i32(localIndex);
        ${t<e?`if (wIndex < ${t})`:`for(; wIndex < ${t}; wIndex = wIndex + ${e})`}

        {
          let wRow = wIndex / ${this.filterWidth};
          let wCol = wIndex % ${this.filterWidth};
          mm_Bsub[wRow][wCol] = getW(wRow, wCol, d1, q);
        }

        workgroupBarrier();

        var value = 0.0;
        for (var wR = 0; wR < ${this.filterHeight}; wR = wR + 1) {
          for (var wC = 0; wC < ${this.filterWidth}; wC = wC + 1) {
            let xVal = mm_Asub[localRow + wR][localCol + wC];
            let wVal = mm_Bsub[wR][wC];
            value = fma(xVal, wVal, value);
          }
        }
        ${fo(this.addBias,this.activation)}
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}};var nh=class{constructor(t,e=!1,n=null,o=!1){this.variableNames=["x","W"];this.uniforms="pads : vec2<i32>, inDims : vec2<i32>, virtualWidth : i32,";this.workgroupSize=[64,1,1];this.workPerThread=4;this.outputComponent=4;this.outputShape=t.outShape,this.virtualWidth=Math.ceil(this.outputShape[2]/this.workPerThread)*this.workPerThread;let s=[this.outputShape[0],this.outputShape[1],this.virtualWidth,this.outputShape[3]];this.dispatchLayout=re(s),this.dispatch=Y(this.dispatchLayout,s,this.workgroupSize,[this.outputComponent*this.workPerThread,1,1]),y.assert(t.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),e&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.convInfo=t,this.addBias=e,this.activation=n,this.hasPreluActivation=o,this.shaderKey=`depthwiseVec4_${n}_${this.convInfo.filterHeight}_${this.convInfo.filterWidth}_${this.convInfo.strideHeight}_${this.convInfo.strideWidth}_${this.workPerThread}`}getUserCode(){let t=(this.workPerThread-1)*this.convInfo.strideWidth+this.convInfo.filterWidth,e=this.convInfo.strideHeight,n=this.convInfo.strideWidth;return`
      ${on(this.activation,this.hasPreluActivation,!0,4)}
      fn readX(batch : i32, row : i32, col : i32, channel : i32) -> vec4<f32> {
        var value = vec4<f32>(0.0);
        if (col >=0 && col < uniforms.inDims[1]) {
          value = getX(batch, row, col, channel);
        }
        return value;
      }

      ${X("index")} {
        let width0 = uniforms.outShape[3] / ${this.outputComponent};
        let d1 = (index % width0) * ${this.outputComponent};
        var index1 = index / width0;
        let width1 = uniforms.virtualWidth / ${this.workPerThread};
        let c = (index1 % width1) * ${this.workPerThread};
        index1 = index1 / width1;
        let r = index1 % uniforms.outShape[1];
        let batch = index1 / uniforms.outShape[1];

        let xRCCorner = vec2<i32>(r, c) * vec2<i32>(${e}, ${n}) - uniforms.pads;

        let xRCorner = xRCCorner.x;
        let xCCorner = xRCCorner.y;
        var xVals : array<vec4<f32>, ${t}>;
        var dotProd : array<vec4<f32>, ${this.workPerThread}>;
        for (var i = 0; i < ${this.workPerThread}; i++) {
          dotProd[i] = vec4<f32>(0.0);
        }

        // Use constant instead of uniform can give better performance.
        for (var wR = 0; wR < ${this.convInfo.filterHeight}; wR = wR + 1) {
          let xR = xRCorner + wR;
          if (xR >=0 && xR < uniforms.inDims[0]) {
            for (var i = 0; i < ${t}; i++) {
              xVals[i] = readX(batch, xR, xCCorner + i, d1);
            }
            for (var wC = 0; wC < ${this.convInfo.filterWidth}; wC = wC + 1) {
              let wValue = getW(wR, wC, d1, 0);
              for (var i = 0; i < ${this.workPerThread}; i++) {
                dotProd[i] = fma(xVals[i * ${n} + wC], wValue, dotProd[i]);
              }
            }
          }
        }

        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let coords = vec4<i32>(batch, r, c + i, d1);
          if (coordsInBounds4D(coords, uniforms.outShape)) {
            var value = dotProd[i];
            ${fo(this.addBias,this.activation)}
            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
          }
        }
      }
    `}};var oh=class{constructor(t,e=!1,n=null,o=!1){this.variableNames=["x","W"];this.uniforms=`pads : vec2<i32>, inDims : vec2<i32>, filterHeight : i32,
      filterWidth : i32, strides : vec2<i32>, dilations : vec2<i32>,`;this.workgroupSize=[256,1,1];this.size=!0;this.outputShape=t.outShape,this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=t.dataFormat==="channelsLast",e&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.convInfo=t,this.addBias=e,this.activation=n,this.hasPreluActivation=o,this.shaderKey=`depthwise_${this.activation}_${this.isChannelsLast}`}getUserCode(){let t=this.isChannelsLast?"getX(batch, xR, xC, d1);":"getX(batch, d1, xR, xC);";return`
      ${on(this.activation,this.hasPreluActivation,!1,4)}

      ${X("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let batch = coords[0];
          let xRCCorner = vec2<i32>(coords.${this.isChannelsLast?"yz":"zw"}) * uniforms.strides - uniforms.pads;
          let d2 = coords[${this.isChannelsLast?3:1}];
          let channelMul = uniforms.wShape[3];
          let d1 = d2 / channelMul;
          let q = d2 % channelMul;

          let inputRowStart = xRCCorner.x;
          let inputColStart = xRCCorner.y;
          let inputRowEnd = inputRowStart + uniforms.filterHeight *
              uniforms.dilations[0];
          let inputColEnd = inputColStart + uniforms.filterWidth *
              uniforms.dilations[1];

          // Convolve x(?, ?, d1)|x(d1, ?, ?) with w(:, :, d1, q) to get
          // y(yR, yC, d2)|y(d2, yR, yC). ? = to be determined. : = across all
          // values in that axis. x(?, ?, d1) and y(yR, yC, d2) is for NHWC.
          // x(d1, ?, ?) and y(d2, yR, yC) is for NCHW.
          var value = 0.0;

          // Extract if checking out of for loop for performance.
          if (inputRowStart >= 0 && inputColStart >= 0 &&
            inputRowEnd < uniforms.inDims[0] &&
                inputColEnd < uniforms.inDims[1]) {
              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
                let xR = inputRowStart + wR * uniforms.dilations[0];

                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                  let xC = inputColStart + wC * uniforms.dilations[1];

                  let xVal = ${t};
                  let wVal = getW(wR, wC, d1, q);
                  value = value + xVal * wVal;
                }
              }
            } else {
              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
                let xR = inputRowStart + wR * uniforms.dilations[0];

                if (xR < 0 || xR >= uniforms.inDims[0]) {
                  continue;
                }

                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                  let xC = inputColStart + wC * uniforms.dilations[1];

                  if (xC < 0 || xC >= uniforms.inDims[1]) {
                    continue;
                  }

                  let xVal = ${t};
                  let wVal = getW(wR, wC, d1, q);
                  value = value + xVal * wVal;
                }
              }
            }
            ${fo(this.addBias,this.activation)}
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}};function Nye(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s}=t,{strides:a,pad:i,dataFormat:p,dilations:u,dimRoundingMode:l}=n,m=I.convertConv2DDataFormat(p),c=u;c==null&&(c=[1,1]);let d=I.computeConv2DInfo(o.shape,s.shape,a,c,i,l,!0,m),f=[{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.inHeight,d.inWidth]}],h=d.dataFormat==="channelsLast",g;return!h&&d.inHeight>16&&d.inWidth>16&&d.strideHeight===1&&d.strideWidth===1&&d.dilationWidth===1&&d.dilationHeight===1&&d.inChannels===d.outChannels?g=new Sk(d.outShape,d.filterHeight,d.filterWidth):h&&d.outHeight>4&&d.outWidth>4&&d.strideWidth<=2&&d.inChannels===d.outChannels&&d.dilationHeight===1&&d.dilationWidth===1&&d.inChannels%4===0?(g=new nh(d),f.push({type:"int32",data:[g.virtualWidth]})):(g=new oh(d),f.push({type:"int32",data:[d.filterHeight]},{type:"int32",data:[d.filterWidth]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]})),e.runWebGPUProgram(g,[o,s],o.dtype,f)}var sH={kernelName:Go,backendName:"webgpu",kernelFunc:Nye};var wk=class{constructor(t){this.variableNames=["x","dy"];this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>, outHeight : i32,
      outWidth : i32, inHeight : i32, inWidth : i32, batchSize : i32, channelMul : i32,`;this.workgroupSize=[64,1,1];this.size=!0;this.outputShape=t.filterShape,this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthwise_conv2d_backprop_filter"}getUserCode(){return`
      ${X("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wR = coords[0];
        let wC = coords[1];
        let d1 = coords[2];
        let dm = coords[3];
        let d2 = d1 * uniforms.channelMul + dm;

        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b++) {
          for (var yR = 0; yR < uniforms.outHeight; yR++) {
            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];

            if (xR < 0 || xR >= uniforms.inHeight) {
              continue;
            }

            for (var yC = 0; yC < uniforms.outWidth; yC++) {
              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];

              if (xC < 0 || xC >= uniforms.inWidth) {
                continue;
              }

              let dyValue = getDy(b, yR, yC, d2);
              let xValue = getX(b, xR, xC, d1);
              dotProd += xValue * dyValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}},Ak=class{constructor(t){this.variableNames=["dy","W"];this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32, channelMul : i32,`;this.workgroupSize=[64,1,1];this.size=!0;this.outputShape=t.inShape,this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthwise_conv2d_backprop_input"}getUserCode(){return`
      ${X("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[3];
        let dyCorner = coords.yz - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }

          let idyR = i32(dyR);
          let wRPerm = uniforms.filterDims[0] - 1 - wR;

          for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }

            let idyC = i32(dyC);
            let wCPerm = uniforms.filterDims[1] - 1 - wC;

            for (var dm = 0; dm < uniforms.channelMul; dm++) {
              let d2 = d1 * uniforms.channelMul + dm;
              let xValue = getDy(batch, idyR, idyC, d2);
              let wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}};function Dye(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,dy:s}=t,{strides:a,dilations:i,pad:p,dimRoundingMode:u,filterShape:l}=n,m=I.computeConv2DInfo(o.shape,l,a,i,p,u,!0),c=new wk(m),d=[{type:"int32",data:[m.strideHeight,m.strideWidth]},{type:"int32",data:[m.padInfo.top,m.padInfo.left]},{type:"int32",data:[m.filterHeight,m.filterWidth]},{type:"int32",data:[m.outHeight]},{type:"int32",data:[m.outWidth]},{type:"int32",data:[m.inHeight]},{type:"int32",data:[m.inWidth]},{type:"int32",data:[m.batchSize]},{type:"int32",data:[m.outChannels/m.inChannels]}];return e.runWebGPUProgram(c,[o,s],"float32",d)}var aH={kernelName:Ip,backendName:"webgpu",kernelFunc:Dye};function _ye(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,filter:s}=t,{strides:a,dilations:i,pad:p,dimRoundingMode:u,inputShape:l}=n,m=I.computeConv2DInfo(l,s.shape,a,i,p,u,!0),c=new Ak(m),d=[{type:"int32",data:[m.strideHeight,m.strideWidth]},{type:"int32",data:[m.filterHeight-1-m.padInfo.top,m.filterWidth-1-m.padInfo.left]},{type:"int32",data:[m.filterHeight,m.filterWidth]},{type:"int32",data:[m.outHeight]},{type:"int32",data:[m.outWidth]},{type:"int32",data:[m.outChannels/m.inChannels]}];return e.runWebGPUProgram(c,[o,s],o.dtype,d)}var iH={kernelName:kp,backendName:"webgpu",kernelFunc:_ye};var Nk=class{constructor(t){this.variableNames=["x"];this.workgroupSize=[64,1,1];this.size=!0;this.outputShape=[t,t],this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="diag"}getUserCode(){return`
      ${X("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let value = select(0.0, getX(coords[0]), coords[0] == coords[1]);
          setOutputAtIndex(index, value);
        }
      }
    `}};function Mye(r){let{inputs:t,backend:e}=r,{x:n}=t,o=[...n.shape,...n.shape],s=y.sizeFromShape(n.shape),a=ye({inputs:{x:n},backend:e,attrs:{shape:[s]}}),i=new Nk(s),p=e.runWebGPUProgram(i,[a],a.dtype),u=ye({inputs:{x:p},backend:e,attrs:{shape:o}});return e.disposeData(a.dataId),e.disposeData(p.dataId),u}var uH={kernelName:tu,backendName:"webgpu",kernelFunc:Mye};var Dk=class{constructor(t){this.variableNames=["x","w"];this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>";this.workgroupSize=[64,1,1];this.size=!0;this.outputShape=t.outShape,this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="dilation2d"}getUserCode(){return`
       ${X("index")} {
         if (index < uniforms.size) {
           let neg_infinity = -3.4e38;
           let coords = getOutputCoords();
           let batch = coords.x;
           let d1 = coords.w;
           let outTopLeftCorner = coords.yz * uniforms.strides - uniforms.pads;
           let hBeg = outTopLeftCorner.x;
           let wBeg = outTopLeftCorner.y;

           var curVal = neg_infinity;
           for (var h = 0; h < uniforms.filterDims[0]; h = h + 1) {
             let hIn = hBeg + h * uniforms.dilations[0];

             if (hIn >= 0 && hIn < uniforms.xShape[1]) {
               for (var w = 0; w < uniforms.filterDims[1]; w = w + 1) {
                 let wIn = wBeg + w * uniforms.dilations[1];

                 if (wIn >= 0 && wIn < uniforms.xShape[2]) {
                   let val = getX(batch, hIn, wIn, d1) + getW(h, w, d1);
                   if (val > curVal) {
                     curVal = val;
                   }
                 }
               }
             }
           }

           setOutputAtIndex(index, curVal);
         }
       }
     `}};function Pye(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s}=t,{strides:a,pad:i,dilations:p}=n,u=I.computeDilation2DInfo(o.shape,s.shape,a,i,"NHWC",p),l=[u.padInfo.top,u.padInfo.left],m=[{type:"int32",data:[u.filterHeight,u.filterWidth]},{type:"int32",data:[...l]},{type:"int32",data:[u.strideHeight,u.strideWidth]},{type:"int32",data:[u.dilationHeight,u.dilationWidth]}],c=new Dk(u);return e.runWebGPUProgram(c,[o,s],o.dtype,m)}var pH={kernelName:Wo,backendName:"webgpu",kernelFunc:Pye};var _k=class{constructor(t,e){this.variableNames=["x","w","dy"];this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,";this.workgroupSize=[64,1,1];this.atomic=!0;if(this.outputShape=t.inShape,this.dispatchLayout=re(t.outShape),this.dispatch=Y(this.dispatchLayout,t.outShape,this.workgroupSize),e!=="float32"&&e!=="int32")throw new Error(`Dilation2DBackpropInput only supports float32 and int32
          types, does not support ${e} type.`);this.type=e,this.shaderKey="dilation2DBackpropInput"}getUserCode(){return`
       ${X("index")} {
         if (index < uniforms.dySize) {
           let coords = getDyCoordsFromIndex(index);
           let b = coords[0];
           let r = coords[1];
           let c = coords[2];
           let d = coords[3];

           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;
           var curVal = -3.4e38;  // neg_infinity
           var xRMax = 0;
           var xCMax = 0;

           // In the case of multiple argmax branches, we only back-propagate
           // along the last branch, i.e., the one with largest value of
           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling
           // backward routines.
           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
             let xR = dyCorner.x + wR * uniforms.dilations[0];

             if (xR >= 0 && xR < uniforms.xShape[1]) {
               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
                 let xC = dyCorner.y + wC * uniforms.dilations[1];

                 if (xC >= 0 && xC < uniforms.xShape[2]) {
                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);
                   if (val > curVal) {
                     curVal = val;
                     xRMax = xR;
                     xCMax = xC;
                   }
                 }
               }
             }
           }

           let flatIndexIn = d + uniforms.xShape[3] *
               (xCMax + uniforms.xShape[2] * (xRMax + uniforms.xShape[1] * b));
           let value = getDy(b, r, c, d);
           ${co("&result[flatIndexIn]","value",this.type)}
         }
       }
     `}},Mk=class{constructor(t,e,n){this.variableNames=["x","w","dy"];this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,";this.workgroupSize=[64,1,1];this.atomic=!0;if(this.outputShape=t.filterShape,this.dispatchLayout=re(t.outShape),this.dispatch=Y(this.dispatchLayout,t.outShape,this.workgroupSize),n!=="float32"&&n!=="int32")throw new Error(`Dilation2DBackpropFilter only supports float32 and int32
          types, does not support ${n} type.`);this.type=n,this.shaderKey="dilation2DBackpropFilter"}getUserCode(){return`
       ${X("index")} {
         if (index < uniforms.dySize) {
           let coords = getDyCoordsFromIndex(index);
           let b = coords[0];
           let r = coords[1];
           let c = coords[2];
           let d = coords[3];

           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;
           var curVal = -3.4e38;  // neg_infinity
           var wRMax = 0;
           var wCMax = 0;

           // In the case of multiple argmax branches, we only back-propagate
           // along the last branch, i.e., the one with largest value of
           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling
           // backward routines.
           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
             let xR = dyCorner.x + wR * uniforms.dilations[0];

             if (xR >= 0 && xR < uniforms.xShape[1]) {
               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
                 let xC = dyCorner.y + wC * uniforms.dilations[1];

                 if (xC >= 0 && xC < uniforms.xShape[2]) {
                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);
                   if (val > curVal) {
                     curVal = val;
                     wRMax = wR;
                     wCMax = wC;
                   }
                 }
               }
             }
           }

           let flatIndexIn = d + uniforms.wShape[2] * (wCMax + wRMax * uniforms.wShape[1]);
           let value = getDy(b, r, c, d);
           ${co("&result[flatIndexIn]","value",this.type)}
         }
       }
     `}};function Rye(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s,dy:a}=t,{strides:i,pad:p,dilations:u}=n,l=I.computeDilation2DInfo(o.shape,s.shape,i,p,"NHWC",u),m=s.dtype,c=new Mk(l,s.shape,m),d=[{type:"int32",data:[l.filterHeight,l.filterWidth]},{type:"int32",data:[l.padInfo.top,l.padInfo.left]},{type:"int32",data:[l.strideHeight,l.strideWidth]},{type:"int32",data:[l.dilationHeight,l.dilationWidth]},{type:"int32",data:[y.sizeFromShape(l.outShape)]}],f=Qt({backend:e,attrs:{shape:s.shape,value:0,dtype:m}});return e.runWebGPUProgram(c,[o,s,a],m,d,f)}var lH={kernelName:nu,backendName:"webgpu",kernelFunc:Rye};function Fye(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s,dy:a}=t,{strides:i,pad:p,dilations:u}=n,l=I.computeDilation2DInfo(o.shape,s.shape,i,p,"NHWC",u),m=o.dtype,c=new _k(l,m),d=[{type:"int32",data:[l.filterHeight,l.filterWidth]},{type:"int32",data:[l.padInfo.top,l.padInfo.left]},{type:"int32",data:[l.strideHeight,l.strideWidth]},{type:"int32",data:[l.dilationHeight,l.dilationWidth]},{type:"int32",data:[y.sizeFromShape(l.outShape)]}],f=Qt({backend:e,attrs:{shape:l.inShape,value:0,dtype:m}});return e.runWebGPUProgram(c,[o,s,a],m,d,f)}var mH={kernelName:ru,backendName:"webgpu",kernelFunc:Fye};var Y2=dt({opType:17,cpuKernelImpl:qV,supportsComplex:!0}),cH={kernelName:ds,backendName:"webgpu",kernelFunc:Y2};function Z2(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:a}=n;return go(o,s,a,"sum",e)}var dH={kernelName:Fs,backendName:"webgpu",kernelFunc:Z2};function Eye(r){let{inputs:t,backend:e,attrs:n}=r,{equation:o}=n,s=t,{allDims:a,summedDims:i,idDims:p}=I.decodeEinsumEquation(o,s.length);I.checkEinsumDimSizes(a.length,p,s);let{path:u,steps:l}=I.getEinsumComputePath(i,p),m=l.length,c=null,d=a.length,f=[];for(let h=0;h<m;++h){for(let g of l[h]){let{permutationIndices:b,expandDims:x}=I.getEinsumPermutation(d,p[g]),T;I.isIdentityPermutation(b)?T=s[g]:(T=fn({inputs:{x:s[g]},backend:e,attrs:{perm:b}}),f.push(T));let C=T.shape.slice();for(let k=0;k<x.length;++k)C.splice(x[k],0,1);y.arraysEqual(T.shape,C)||(T=ye({inputs:{x:T},backend:e,attrs:{shape:C}}),f.push(T)),c===null?c=T:(c=Y2({inputs:{a:T,b:c},backend:e}),f.push(c))}h<m-1&&(u[h]>=0&&(c=Z2({inputs:{x:c},backend:e,attrs:{axis:u[h]-(a.length-d),keepDims:!1}}),f.push(c)),d--)}for(let h of f)h!==c&&e.disposeData(h.dataId);return c}var fH={kernelName:vp,backendName:"webgpu",kernelFunc:Eye};var Lye=we({opType:10}),hH={kernelName:Ko,backendName:"webgpu",kernelFunc:Lye};var Bye=r=>{let{inputs:t,backend:e}=r,{dy:n,y:o}=t,s=new fp(5,n.shape,o.shape);return e.runWebGPUProgram(s,[n,o],n.dtype)},gH={kernelName:Qa,backendName:"webgpu",kernelFunc:Bye};var $ye=dt({opType:6,dtype:"bool",cpuKernelImpl:PV}),bH={kernelName:Ja,backendName:"webgpu",kernelFunc:$ye};var Oye=we({opType:11}),yH={kernelName:Vo,backendName:"webgpu",kernelFunc:Oye};var zye=we({opType:12,cpuKernelImpl:RV,dtype:"float32"}),xH={kernelName:Ho,backendName:"webgpu",kernelFunc:zye};function Pk(r){let{inputs:t,attrs:e,backend:n}=r,{dim:o}=e,{input:s}=t,a=s.shape.length,i=s.shape.slice(),p=o;return o<0&&(y.assert(-(a+1)<=o,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),p=a+o+1),i.splice(p,0,1),ye({inputs:{x:s},backend:n,attrs:{shape:i}})}var TH={kernelName:ta,backendName:"webgpu",kernelFunc:Pk};var Gye=we({opType:13,cpuKernelImpl:FV}),CH={kernelName:qo,backendName:"webgpu",kernelFunc:Gye};var Vg=class{constructor(t,e){this.variableNames=["real","imag"];this.outputShape=[];this.uniforms="exponentMultiplier : f32, denominator: f32,";this.workgroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize),this.component=t,this.shaderKey=`fft_${t}`}getUserCode(){return`
    fn unaryOpComplex(real: f32, expR: f32, imag: f32, expI: f32) -> f32 {
      ${this.component==="real"?"return real * expR - imag * expI;":"return real * expI + imag * expR;"}
    }

    fn mulMatDFT(batch: i32, index: i32) -> f32 {
      let indexRatio = f32(index) / f32(uniforms.realShape[1]);
      let exponentMultiplierTimesIndexRatio =
          uniforms.exponentMultiplier * indexRatio;

      var result = 0.0;

      for (var i = 0; i < uniforms.realShape[1]; i = i + 1) {
        // x = (-2|2 * PI / N) * index * i;
        let x = exponentMultiplierTimesIndexRatio * f32(i);
        let expR = cos(x);
        let expI = sin(x);
        let real = getReal(batch, i);
        let imag = getImag(batch, i);

        result = result +
            unaryOpComplex(real, expR, imag, expI) / uniforms.denominator;
      }

      return result;
    }

    ${X("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        setOutputAtIndex(index, mulMatDFT(coords[0], coords[1]));
      }
    }
  `}};function Rk(r,t,e){let n=e.tensorMap.get(r.dataId),o=y.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],a=o/s,i=[],p=ye({inputs:{x:r},backend:e,attrs:{shape:[a,s]}});i.push(p);let u=p.shape,l=new Vg("real",u),m=new Vg("imag",u),c=[{dataId:n.complexTensorInfos.real.dataId,dtype:n.complexTensorInfos.real.dtype,shape:u},{dataId:n.complexTensorInfos.imag.dataId,dtype:n.complexTensorInfos.imag.dtype,shape:u}],d=t?2*Math.PI:-2*Math.PI,f=t?u[1]:1,h=[{type:"float32",data:[d]},{type:"float32",data:[f]}],g=e.runWebGPUProgram(l,c,"float32",h);i.push(g);let b=e.runWebGPUProgram(m,c,"float32",h);i.push(b);let x=qs({inputs:{real:g,imag:b},backend:e});i.push(x);let T=ye({inputs:{x},backend:e,attrs:{shape:r.shape}});return i.forEach(C=>e.disposeData(C.dataId)),T}function Wye(r){let{inputs:t,backend:e}=r,{input:n}=t;return Rk(n,!1,e)}var IH={kernelName:Sp,backendName:"webgpu",kernelFunc:Wye};var Fk=class{constructor(t){this.outputShape=[];this.variableNames=["x"];this.workgroupSize=[64,1,1];this.size=!0;this.outputShape=t,this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return`
      ${X("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let coordX = uniforms.xShape[2] - coords[2] - 1;
          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);
          setOutputAtIndex(index, outputValue);
        }
      }
    `}};var kH={kernelName:ei,backendName:"webgpu",kernelFunc:({inputs:r,backend:t})=>{let{image:e}=r,n=t,o=new Fk(e.shape);return n.runWebGPUProgram(o,[e],e.dtype)}};var Uye=we({opType:14,cpuKernelImpl:EV}),vH={kernelName:jo,backendName:"webgpu",kernelFunc:Uye};var Kye=dt({opType:9,cpuKernelImpl:LV,dtype:"int32"}),SH={kernelName:Xo,backendName:"webgpu",kernelFunc:Kye};var Ek=class{constructor(t,e,n=!1){this.isFromPixels=!0;this.outputShape=[0];this.variableNames=[];this.workgroupSize=[256,1,1];this.outputShape=t,this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize,[e,1,1]),this.importVideo=n,this.shaderKey=`fromPixels_${this.importVideo}`}getUserCode(){let t=this.importVideo?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`
      @binding(1) @group(0) var src: ${this.importVideo?"texture_external":"texture_2d<f32>"};
      ${X("index")} {
        let flatIndex = index * uniforms.numChannels;
        if (flatIndex < uniforms.size) {
          let coords = getCoordsFromIndex(flatIndex);
          let values = ${t};
          for (var i = 0; i < uniforms.numChannels; i = i + 1) {
            result[flatIndex + i] = i32(floor(255.0 * values[i]));
          }
        }
      }
  `}};var wH={kernelName:Cl,backendName:"webgpu",kernelFunc:Vye},sh,Q2=L().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function Vye(r){let{inputs:t,backend:e,attrs:n}=r,{pixels:o}=t,{numChannels:s}=n;if(o==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let a=typeof HTMLVideoElement<"u"&&o instanceof HTMLVideoElement,i=typeof HTMLImageElement<"u"&&o instanceof HTMLImageElement,p=typeof HTMLCanvasElement<"u"&&o instanceof HTMLCanvasElement||typeof OffscreenCanvas<"u"&&o instanceof OffscreenCanvas,u=typeof ImageBitmap<"u"&&o instanceof ImageBitmap,[l,m]=a?[o.videoWidth,o.videoHeight]:[o.width,o.height],c=[m,l,s],d=!1,f=a||i;if(u||p||f){let x;if(d)x=e.device.importExternalTexture({source:o});else{if(f){let W=L().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(sh==null||W!==Q2)&&(Q2=W,sh=document.createElement("canvas").getContext("2d",{willReadFrequently:Q2})),sh.canvas.width=l,sh.canvas.height=m,sh.drawImage(o,0,0,l,m),o=sh.canvas}let R=GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING,$="rgba8unorm",G=e.textureManager.acquireTexture(c[1],c[0],$,R);e.queue.copyExternalImageToTexture({source:o},{texture:G},[c[1],c[0]]),x=G}let T=y.sizeFromShape(c),C=y.computeStrides(c),k=new Ek(c,s,d),w=[{type:"uint32",data:[T]},{type:"uint32",data:[s]},{type:"uint32",data:[...C]}],_=e.makeTensorInfo([m,l],"int32"),P=e.tensorMap.get(_.dataId);P.resource=x;let M=e.runWebGPUProgram(k,[_],"int32",w);return e.disposeData(_.dataId),M}let h=o.data,g=h;if(s!=null&&s!==4){g=new Uint8Array(o.width*o.height*s);let x=h.length,T=0;for(let C=0;C<x;C++)C%4<s&&(g[T++]=h[C])}let b=e.makeTensorInfo(c,"int32",new Int32Array(g));return e.uploadToGPU(b.dataId),b}var Lk=class{constructor(t,e,n,o,s){this.uniforms="varianceEpsilon : f32,";this.workgroupSize=[128,1,1];this.size=!0;this.variableNames=["x","mean","variance"],I.assertAndGetBroadcastShape(t,e),I.assertAndGetBroadcastShape(t,n),this.outputShape=t,this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize),o!=null&&(I.assertAndGetBroadcastShape(t,o),this.variableNames.push("offset")),s!=null&&(I.assertAndGetBroadcastShape(t,s),this.variableNames.push("scale")),this.offsetShape=o,this.scaleShape=s,this.shaderKey="batchNorm"}getUserCode(){let t="0.0";this.offsetShape!=null&&(t="getOffsetByOutputIndex(index)");let e="1.0";return this.scaleShape!=null&&(e="getScaleByOutputIndex(index)"),`
      ${X("index")} {
        if (index < uniforms.size)
        {
          let xValue = getXByOutputIndex(index);
          let meanValue = getMeanByOutputIndex(index);
          let varianValue = getVarianceByOutputIndex(index);
          let offsetValue = ${t};
          let scaleValue = ${e};
          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));
          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));
        }
      }
  `}};var AH={kernelName:Yo,backendName:"webgpu",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{x:n,scale:o,offset:s,mean:a,variance:i}=r,{varianceEpsilon:p}=t,u=e,l=[n,a,i],m=null;s!=null&&(m=s.shape,l.push(s));let c=null;o!=null&&(c=o.shape,l.push(o));let d=new Lk(n.shape,a.shape,i.shape,m,c),f=[{type:"float32",data:[p]}];return u.runWebGPUProgram(d,l,n.dtype,f)}};function Hye(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=t,{strides:p,pad:u,dataFormat:l,dilations:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=n,h=I.convertConv2DDataFormat(l),g=I.computeConv2DInfo(o.shape,s.shape,p,m,u,c,!1,h);return hk({x:o,filter:s,convInfo:g,backend:e,bias:a,preluActivationWeights:i,leakyreluAlpha:f,activation:d})}var NH={kernelName:ha,backendName:"webgpu",kernelFunc:Hye};function qye(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=t,{strides:p,pad:u,dilations:l,dimRoundingMode:m,activation:c,leakyreluAlpha:d}=n,f=l;f==null&&(f=[1,1]),y.assert(I.eitherStridesOrDilationsAreOne(p,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${p} and dilations '${f}'`);let h=I.computeConv2DInfo(o.shape,s.shape,p,f,u,m,!0),g=[o,s],b=a!=null,x=i!=null;b&&g.push(a),x&&g.push(i);let T=[{type:"int32",data:[h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.inHeight,h.inWidth]}],C;return h.outHeight>4&&h.outWidth>4&&h.strideWidth<=2&&h.inChannels===h.outChannels&&h.dilationHeight===1&&h.dilationWidth===1&&h.inChannels%4===0?(C=new nh(h,b,c,x),T.push({type:"int32",data:[C.virtualWidth]})):(C=new oh(h,b,c,x),T.push({type:"int32",data:[h.filterHeight]},{type:"int32",data:[h.filterWidth]},{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.dilationHeight,h.dilationWidth]})),c==="leakyrelu"&&(T.push({type:"float32",data:[d]}),C.uniforms+=" alpha : f32,"),e.runWebGPUProgram(C,g,"float32",T)}var DH={kernelName:ga,backendName:"webgpu",kernelFunc:qye};var Bk=class{constructor(t,e){this.variableNames=["A","indices"];this.workgroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`gathernd_${t}`,this.sliceDim=t,this.uniforms=`sliceDim : i32, strides : ${Lt(t)},`}getUserCode(){let t;return this.sliceDim>1?t="uniforms.strides[j]":t="uniforms.strides",`
      ${X("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          var flattenIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexTemp = i32(round(getIndices(coords[0], j)));
            let strideNum = ${t};
            flattenIndex = flattenIndex + indexTemp * strideNum;
          }

          setOutputAtIndex(index, getA(flattenIndex, coords[1]));
        }
      }
      `}};function jye(r){let{inputs:t,backend:e}=r,{params:n,indices:o}=t,s=o.shape,a=s[s.length-1],i=y.sizeFromShape(n.shape),[p,u,l,m]=I.prepareAndValidate(n,o),c=ye({inputs:{x:o},backend:e,attrs:{shape:[u,a]}}),d=ye({inputs:{x:n},backend:e,attrs:{shape:[y.sizeFromShape(n.shape)/l,l]}});if(e.shouldExecuteOnCPU([n,o])||n.dtype==="string"){let x=e.readSync(o.dataId),T=e.bufferSync(n),C=BV(x,T,n.dtype,u,a,l,m,n.shape,i);return e.makeTensorInfo(p,n.dtype,C.values)}let f=new Bk(a,[u,l]),h=[{type:"int32",data:[a]},{type:"int32",data:m}],g=e.runWebGPUProgram(f,[d,c],d.dtype,h),b=ye({inputs:{x:g},backend:e,attrs:{shape:p}});return e.disposeData(c.dataId),e.disposeData(d.dataId),e.disposeData(g.dataId),b}var _H={kernelName:ti,backendName:"webgpu",kernelFunc:jye};var $k=class{constructor(t,e){this.variableNames=["A","indices"];this.workgroupSize=[64,1,1];this.size=!0;this.outputShape=t.slice(),this.aShape=t,this.outputShape=e,this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="gather"}getUserCode(){let t=Xye(this.aShape);return`
      ${X("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let indexZ = i32(getIndices(resRC.x, resRC.z));
          let inBounds = select(0.0, 1.0, indexZ >= 0 && indexZ < uniforms.aShape[2]);
          setOutputAtIndex(index, inBounds * getA(${t}));
        }
      }
    `}};function Xye(r){let t=["resRC.x","resRC.y","resRC.z","resRC.w"],e=[];for(let n=0;n<r.length;n++)n===2?e.push("indexZ"):e.push(`${t[n]}`);return e.join()}function J2(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,indices:s}=t,{axis:a,batchDims:i}=n,p=y.parseAxisParam(a,o.shape)[0],u=I.segment_util.collectGatherOpShapeInfo(o,s,p,i),l=y.sizeFromShape(s.shape),m=[],c=ye({inputs:{x:o},backend:e,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),d=ye({inputs:{x:s},backend:e,attrs:{shape:[u.batchSize,l/u.batchSize]}});m.push(c),m.push(d);let f=[u.batchSize,u.outerSize,l/u.batchSize,u.sliceSize];if(e.shouldExecuteOnCPU([o,s])){let T=e.tensorMap.get(d.dataId).values,C=Ce(d.shape,d.dtype,T),w=e.tensorMap.get(c.dataId).values,_=Ce(c.shape,c.dtype,w),P=$V(_,C,f);return m.forEach(M=>e.disposeData(M.dataId)),e.makeTensorInfo(u.outputShape,P.dtype,P.values)}let h=new $k(c.shape,f),g=e.runWebGPUProgram(h,[c,d],c.dtype);m.push(g);let b=ye({inputs:{x:g},backend:e,attrs:{shape:u.outputShape}});return m.forEach(x=>e.disposeData(x.dataId)),b}var MH={kernelName:ra,backendName:"webgpu",kernelFunc:J2};var Yye=dt({opType:7,cpuKernelImpl:zV,dtype:"bool"}),PH={kernelName:ri,backendName:"webgpu",kernelFunc:Yye};var Zye=dt({opType:8,dtype:"bool",cpuKernelImpl:OV}),RH={kernelName:Zo,backendName:"webgpu",kernelFunc:Zye};function Qye(r){let{inputs:t,backend:e}=r,{input:n}=t;return Rk(n,!0,e)}var FH={kernelName:wp,backendName:"webgpu",kernelFunc:Qye};var Jye=we({opType:15,dtype:"bool"}),EH={kernelName:Qo,backendName:"webgpu",kernelFunc:Jye};var exe=we({opType:16,dtype:"bool"}),LH={kernelName:Jo,backendName:"webgpu",kernelFunc:exe};var txe=we({opType:17,dtype:"bool"}),BH={kernelName:es,backendName:"webgpu",kernelFunc:txe};function rxe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{alpha:s}=n,a=[{type:"float32",data:[s]}],i=new ho(o.shape,25,"alpha : f32,");return e.runWebGPUProgram(i,[o],"float32",a)}var $H={kernelName:ts,backendName:"webgpu",kernelFunc:rxe};var nxe=dt({opType:10,dtype:"bool",cpuKernelImpl:WV}),OH={kernelName:ni,backendName:"webgpu",kernelFunc:nxe};var oxe=dt({opType:11,dtype:"bool",cpuKernelImpl:GV}),zH={kernelName:oi,backendName:"webgpu",kernelFunc:oxe};var Ok=class{constructor(t){this.variableNames=[];this.outputShape=[];this.uniforms="start : f32, step : f32,";this.workgroupSize=[64,1,1];this.size=!0;this.outputShape=[t],this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="linSpace"}getUserCode(){return`
      ${X("index")} {
        if (index < uniforms.size) {
          setOutputAtIndex(index, uniforms.start + f32(index) * uniforms.step);
        }
      }
    `}};function sxe(r){let{backend:t,attrs:e}=r,{start:n,stop:o,num:s}=e,a=(o-n)/(s-1),i=new Ok(s),p=[{type:"float32",data:[n]},{type:"float32",data:[a]}];return t.runWebGPUProgram(i,[],"float32",p)}var GH={kernelName:si,backendName:"webgpu",kernelFunc:sxe};var axe=we({opType:19,cpuKernelImpl:UV}),WH={kernelName:rs,backendName:"webgpu",kernelFunc:axe};var ixe=we({opType:20}),UH={kernelName:ns,backendName:"webgpu",kernelFunc:ixe};var uxe=dt({opType:12,dtype:"bool"}),KH={kernelName:ai,backendName:"webgpu",kernelFunc:uxe};var pxe=we({opType:21}),VH={kernelName:ii,backendName:"webgpu",kernelFunc:pxe};var lxe=dt({opType:13}),HH={kernelName:ui,backendName:"webgpu",kernelFunc:lxe};var qH=`
  var powValue = 0.0;
  let basis = uniforms.bias + uniforms.alpha * sum;
  if (uniforms.beta == 0.5) {
    powValue = inverseSqrt(basis);
  } else if (uniforms.beta == 1.0) {
    powValue = 1.0 / basis;
  } else {
    powValue = exp(log(basis) * (-uniforms.beta));
  }
`,zk=class{constructor(t){this.outputShape=[];this.variableNames=["x"];this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,";this.workgroupSize=[64,1,1];this.size=!0;this.outputShape=t,this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn"}getUserCode(){return`
    ${X("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let b = coords[0];
        let r = coords[1];
        let c = coords[2];
        let d = coords[3];

        let x = getX(b, r, c, d);
        var sum = 0.0;
        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {
          let idx = d + i;
          if (idx >= 0 && idx < uniforms.xShape[3]) {
            let z = getX(b, r, c, idx);
            sum = sum + z * z;
          }
        }
        ${qH}

        setOutputAtIndex(index, x * powValue);
      }
    }
  `}},Gk=class{constructor(t,e){this.outputShape=[];this.variableNames=["x"];this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,";this.workgroupSize=[256,1,1];this.maxAllowRadius=16;y.assert(e<=this.maxAllowRadius,()=>`Radius must be less than or equal to ${this.maxAllowRadius}, current radius is ${e}`),this.outputShape=t,this.elementsPerWorkgroup=this.workgroupSize[0]-2*this.maxAllowRadius,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=Y(this.dispatchLayout,this.outputShape,[this.elementsPerWorkgroup,this.workgroupSize[1],this.workgroupSize[2]]),this.shaderKey="lrn_shared"}getUserCode(){return`
    var <workgroup>lrnSub: array<f32, ${this.workgroupSize[0]}>;
    const elementsPerWorkgroup = ${this.elementsPerWorkgroup};
    const maxAllowRadius = ${this.maxAllowRadius};

    ${X()} {
      let localDepth = i32(localId.x);
      let workgroupDepth = i32(workgroupId.x) * elementsPerWorkgroup;
      let xDepth = workgroupDepth + localDepth - maxAllowRadius;
      let b = i32(globalId.z) / uniforms.xShape[1];
      let r = i32(globalId.z) - b * uniforms.xShape[1];
      let c = i32(globalId.y);
      let d = workgroupDepth + localDepth;

      var x = 0.0;
      if (xDepth >= 0 && xDepth < uniforms.xShape[3]) {
        x = getX(b, r, c, xDepth);
      }
      lrnSub[localDepth] = x;
      workgroupBarrier();

      if (localDepth < elementsPerWorkgroup && d < uniforms.outShape[3]) {
        var sum = 0.0;
        let index = localDepth + maxAllowRadius;
        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {
          let z = lrnSub[index + i];
          sum = sum + z * z;
        }
        ${qH}

        setOutputAtCoords(b, r, c, d, lrnSub[index] * powValue);
      }
    } `}};function mxe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{depthRadius:s,bias:a,alpha:i,beta:p}=n,u;s>16?u=new zk(o.shape):u=new Gk(o.shape,s);let l=[{type:"int32",data:[s]},{type:"float32",data:[a]},{type:"float32",data:[i]},{type:"float32",data:[p]}];return e.runWebGPUProgram(u,[o],o.dtype,l)}var jH={kernelName:os,backendName:"webgpu",kernelFunc:mxe};var Wk=class{constructor(t){this.outputShape=[];this.variableNames=["inputImage","outputImage","dy"];this.uniforms="depthRadius : i32, bias : f32, alpha : f32, beta : f32,";this.workgroupSize=[64,1,1];this.size=!0;this.outputShape=t,this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn_grad"}getUserCode(){return`
    ${X("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let b = coords[0];
        let r = coords[1];
        let c = coords[2];

        let MIN_DEPTH_BEGIN = 0;
        let MAX_DEPTH_END = uniforms.outShape[3];
        var result = 0.0;
        for (var d = MIN_DEPTH_BEGIN; d < MAX_DEPTH_END; d++) {
          let depthBegin = max(MIN_DEPTH_BEGIN, d - uniforms.depthRadius);
          let depthEnd = min(MAX_DEPTH_END, d + uniforms.depthRadius + 1);

          var norm = 0.0;
          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {
            if (k < depthBegin) {
              continue;
            } else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            } else {
              break;
            }
          }

          norm = uniforms.alpha * norm + uniforms.bias;

          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {
            if (k < depthBegin) {
              continue;
            } else if (k >= depthBegin && k < depthEnd) {
              var dyi = -2.0 * uniforms.alpha * uniforms.beta
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d) / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * uniforms.beta);
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            } else {
              break;
            }
          }
        }

        setOutputAtIndex(index, result);
      }
    }
  `}};function cxe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,y:s,dy:a}=t,{depthRadius:i,bias:p,alpha:u,beta:l}=n,m=new Wk(o.shape),c=[{type:"int32",data:[i]},{type:"float32",data:[p]},{type:"float32",data:[u]},{type:"float32",data:[l]}];return e.runWebGPUProgram(m,[o,s,a],o.dtype,c)}var XH={kernelName:pi,backendName:"webgpu",kernelFunc:cxe};var dxe=dt({opType:14,cpuKernelImpl:VV}),YH={kernelName:as,backendName:"webgpu",kernelFunc:dxe};function fxe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{filterSize:s,strides:a,pad:i,dimRoundingMode:p}=n,u=1,l=I.computePool2DInfo(o.shape,s,a,u,i,p);return rk(o,l,"max",e)}var ZH={kernelName:is,backendName:"webgpu",kernelFunc:fxe};function hxe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{filterSize:s,strides:a,pad:i,dataFormat:p,dimRoundingMode:u}=n,l=[1,1,1],m=I.computePool3DInfo(o.shape,s,a,l,i,u,p),c=new ll(m,"max"),d=[{type:"int32",data:[m.strideDepth,m.strideHeight,m.strideWidth]},{type:"int32",data:[m.padInfo.front,m.padInfo.top,m.padInfo.left]},{type:"int32",data:[m.inDepth,m.inHeight,m.inWidth]},{type:"int32",data:[m.effectiveFilterDepth,m.effectiveFilterHeight,m.effectiveFilterWidth]}];return e.runWebGPUProgram(c,[o],o.dtype,d)}var QH={kernelName:na,backendName:"webgpu",kernelFunc:hxe};var Uk=class{constructor(t){this.variableNames=["dy","maxPos"];this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32`;this.workgroupSize=[64,1,1];this.size=!0;this.outputShape=t.inShape,this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="maxPool2DBackprop"}getUserCode(){return`
      ${X("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d = coords[3];

        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;
        let dyRCorner = dyRCCorner.x;
        let dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] - 1;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR += uniforms.dilations[0]) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims[1]; wC += uniforms.dilations[1]) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }
            let idyC = i32(dyC);

            let dyValue = getDy(batch, idyR, idyC, d);
            let maxPosValue = lastIndex - i32(getMaxPos(batch, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            let curPosValue = wR * uniforms.filterDims[1] + wC;
            let mask = select(0.0, 1.0, maxPosValue == curPosValue);
            dotProd += dyValue * mask;
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}},Kk=class{constructor(t){this.variableNames=["dy","maxPos"];this.uniforms=`strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,
      outDepth : i32, outHeight : i32, outWidth : i32`;this.workgroupSize=[64,1,1];this.size=!0;this.outputShape=t.inShape,this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="maxPool3DBackprop"}getUserCode(){return`
      ${X("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let ch = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyDCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] * uniforms.filterDims[2] - 1;

        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {
          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);

          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {
            continue;
          }
          let idyD = i32(dyD);

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let dyValue = getDy(batch, idyD, idyR, idyC, ch);
              let maxPosValue = lastIndex - i32(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              let curPosValue = wD * uniforms.filterDims[1] * uniforms.filterDims[2] + wR * uniforms.filterDims[2] + wC;
              let mask = select(0.0, 1.0, maxPosValue == curPosValue);
              dotProd += dyValue * mask;
            }
          }
        }

        setOutputAtIndex(index, dotProd);
      }
    }
    `}};function gxe(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,input:s}=t,a=s,{filterSize:i,strides:p,pad:u,dimRoundingMode:l}=n,m=[1,1,1],c=I.computePool3DInfo(a.shape,i,p,m,u,l),d=new ll(c,"max",!0),f=[{type:"int32",data:[c.strideDepth,c.strideHeight,c.strideWidth]},{type:"int32",data:[c.padInfo.front,c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.inDepth,c.inHeight,c.inWidth]},{type:"int32",data:[c.effectiveFilterDepth,c.effectiveFilterHeight,c.effectiveFilterWidth]}],h=e.runWebGPUProgram(d,[a],"int32",f),g=new Kk(c);f=[{type:"int32",data:[c.strideDepth,c.strideHeight,c.strideWidth]},{type:"int32",data:[c.effectiveFilterDepth-1-c.padInfo.front,c.effectiveFilterHeight-1-c.padInfo.top,c.effectiveFilterWidth-1-c.padInfo.left]},{type:"int32",data:[c.effectiveFilterDepth,c.effectiveFilterHeight,c.effectiveFilterWidth]},{type:"int32",data:[c.outDepth]},{type:"int32",data:[c.outHeight]},{type:"int32",data:[c.outWidth]}];let b=e.runWebGPUProgram(g,[o,h],a.dtype,f);return e.disposeData(h.dataId),b}var JH={kernelName:au,backendName:"webgpu",kernelFunc:gxe};function bxe(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,input:s,output:a}=t,i=s;Gg([s,a],"maxPoolGrad");let{filterSize:p,strides:u,pad:l,dimRoundingMode:m}=n,c=I.computePool2DInfo(i.shape,p,u,1,l,m),d=new _u(c,"max",!0),f=[{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[c.inHeight,c.inWidth]},{type:"int32",data:[c.effectiveFilterHeight,c.effectiveFilterWidth]}],h=e.runWebGPUProgram(d,[i],"int32",f),g=new Uk(c);f=[{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.effectiveFilterHeight-1-c.padInfo.top,c.effectiveFilterWidth-1-c.padInfo.left]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[c.effectiveFilterHeight,c.effectiveFilterWidth]},{type:"int32",data:[c.outHeight]},{type:"int32",data:[c.outWidth]}];let b=e.runWebGPUProgram(g,[o,h],i.dtype,f);return e.disposeData(h.dataId),b}var eq={kernelName:su,backendName:"webgpu",kernelFunc:bxe};function yxe(r){let{inputs:t,backend:e,attrs:n}=r,{filterSize:o,strides:s,pad:a,includeBatchInIndex:i}=n,{x:p}=t;y.assert(p.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${p.shape.length}.`);let u=[1,1];y.assert(I.eitherStridesOrDilationsAreOne(s,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${u}'`);let l=I.computePool2DInfo(p.shape,o,s,u,a),m=[{type:"int32",data:[l.strideHeight,l.strideWidth]},{type:"int32",data:[l.padInfo.top,l.padInfo.left]},{type:"int32",data:[l.dilationHeight,l.dilationWidth]},{type:"int32",data:[l.inHeight,l.inWidth]},{type:"int32",data:[l.effectiveFilterHeight,l.effectiveFilterWidth]}],c=new _u(l,"max",!1),d=e.runWebGPUProgram(c,[p],p.dtype,m);c=new _u(l,"max",!0,!0,i);let f=e.runWebGPUProgram(c,[p],"int32",m);return[d,f]}var tq={kernelName:iu,backendName:"webgpu",kernelFunc:yxe};function xxe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:a}=n;return go(o,s,a,"min",e)}var rq={kernelName:ps,backendName:"webgpu",kernelFunc:xxe};var Txe=dt({opType:15,cpuKernelImpl:HV}),nq={kernelName:ls,backendName:"webgpu",kernelFunc:Txe};var Vk=class{constructor(t,e,n){this.uniforms="";this.variableNames=["x"];this.workgroupSize=[64,1,1];this.size=!0;this.outputShape=e.map((o,s)=>o[0]+t[s]+o[1]),this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=t,e.map((o,s)=>{this.uniforms+=` pad${s} : vec2<i32>,`}),this.offset=n==="reflect"?0:1,this.shaderKey=`mirrorPad_${n}`}getUserCode(){let t=this.xShape.length,e=this.xShape.map((u,l)=>`uniforms.pad${l}[0]`).join(","),n=this.xShape.map((u,l)=>`uniforms.pad${l}[0] + uniforms.xShape${t>1?`[${l}]`:""}`).join(","),o=t===1?"start":"start[i]",s=t===1?"end":"end[i]",a=t===1?"outC":"outC[i]",i=Lt(t),p=t>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,t):"coords";return`
      ${X("index")} {
        if (index < uniforms.size) {
          let start = ${i}(${e});
          let end = ${i}(${n});
          var outC = getCoordsFromIndex(index);
          for (var i = 0; i < ${t}; i = i + 1) {
            if (${a} < ${o}) {
              ${a} = ${o} * 2 - ${a} - ${this.offset};
            } else if(${a} >= ${s}) {
              ${a} = (${s} - 1) * 2 - ${a} + ${this.offset};
            }
          }
          let coords = outC - start;
          setOutputAtIndex(index, getX(${p}));
        }
      }
    `}};var oq={kernelName:ms,backendName:"webgpu",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{x:n}=r,{paddings:o,mode:s}=t,a=e,i=o.map(l=>({type:"int32",data:[l[0],l[1]]})),p=new Vk(n.shape,o,s);return a.runWebGPUProgram(p,[n],n.dtype,i)}};var Cxe=dt({opType:16}),sq={kernelName:cs,backendName:"webgpu",kernelFunc:Cxe};var Hk=class{constructor(t,e){this.variableNames=["probs"];this.outputShape=[];this.uniforms="seed : f32, numOutcomes: i32,";this.workgroupSize=[64,1,1];this.size=!0;this.outputShape=[t,e],this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="multinomial"}getUserCode(){return`
    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    fn random (seed : f32, resultUV : vec2<f32>) -> f32 {
      let HASHSCALE1 = 443.8975;
      let p = resultUV * seed;
      var p3  = fract(vec3<f32>(p.xyx) * HASHSCALE1);
      p3 = p3 + dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${X("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let batch = coords[0];

        let resUV = vec2<f32>(f32(coords[1]) / f32(uniforms.outShape[1]),
            f32(coords[0]) / f32(uniforms.outShape[0]));
        let r = random(uniforms.seed, resUV);
        var cdf = 0.0;
        for (var i = 0; i < uniforms.numOutcomes - 1; i = i + 1) {
          cdf = cdf + getProbs(batch, i);

          if (r < cdf) {
            setOutputAtIndexI32(index, i);
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutputAtIndexI32(index, uniforms.numOutcomes - 1);
      }
    }
  `}};var qk=class{constructor(t){this.variableNames=["logits"];this.outputShape=t,this.dispatchLayout=re(this.outputShape),this.dispatch=[this.outputShape[0],1,1],this.outputShape[1]>=4096?this.workgroupSize=[256,1,1]:this.workgroupSize=[64,1,1],this.shaderKey="softmax"}getUserCode(){return`
    var<workgroup> buf : array<f32, ${this.workgroupSize[0]}>;
    var<workgroup> rowMaxShared : f32;
    var<workgroup> rowSumShared : f32;
    const blockSize = ${this.workgroupSize[0]};
    ${X("index")} {
      let row = index / blockSize;
      let tid = i32(localId.x);
      let cols = uniforms.outShape[1];

      var threadMax = -3.402823e+38f;
      for (var col = tid; col < cols; col += blockSize) {
        let value = getLogits(row, col);
        threadMax = max(threadMax, value);
      }
      if (tid < cols) {
        buf[tid] = threadMax;
      }
      workgroupBarrier();

      var reduceSize = min(cols, blockSize);
      for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
        reduceSize = currSize + (reduceSize & 1);
        if (tid < currSize) {
          buf[tid] = max(buf[tid], buf[tid + reduceSize]);
        }
        workgroupBarrier();
      }

      if (tid == 0) {
        rowMaxShared = buf[0];
      }
      workgroupBarrier();

      var threadSum = 0.0;
      for (var col = tid; col < cols; col += blockSize) {
        let subExp = exp(getLogits(row, col) - rowMaxShared);
        threadSum += subExp;
      }
      buf[tid] = threadSum;
      workgroupBarrier();

      for (var currSize = blockSize >> 1;  currSize > 0; currSize = currSize >> 1) {
        if (tid < currSize) {
          buf[tid] = buf[tid] + buf[tid + currSize];
        }
        workgroupBarrier();
      }

      if (tid == 0) {
        rowSumShared = buf[0];
      }
      workgroupBarrier();

      for (var col = tid; col < cols; col += blockSize) {
        let value = exp(getLogits(row, col) - rowMaxShared) / rowSumShared;
        setOutputAtCoords(row, col, value);
      }
  }
    `}};function e_(r){let{inputs:t,backend:e,attrs:n}=r,{logits:o}=t,{dim:s}=n,a=ye({inputs:{x:o},backend:e,attrs:{shape:[y.sizeFromShape(o.shape)/o.shape[s],o.shape[s]]}}),i=new qk(a.shape),p=e.runWebGPUProgram(i,[a],o.dtype),u=ye({inputs:{x:p},backend:e,attrs:{shape:o.shape}});return e.disposeData(a.dataId),e.disposeData(p.dataId),u}var aq={kernelName:Es,backendName:"webgpu",kernelFunc:e_};function Ixe(r){let{inputs:t,backend:e,attrs:n}=r,{logits:o}=t,{numSamples:s,seed:a,normalized:i}=n,p=i?o:e_({inputs:{logits:o},backend:e,attrs:{dim:o.shape.length-1}}),u=p.shape[0],l=p.shape[1],m=new Hk(u,s),c=[{type:"float32",data:[a]},{type:"int32",data:[l]}],d=e.runWebGPUProgram(m,[p],"int32",c);return i||e.disposeData(p.dataId),d}var iq={kernelName:li,backendName:"webgpu",kernelFunc:Ixe};function kxe(r){let{inputs:t,backend:e}=r,{x:n}=t;if(e.shouldExecuteOnCPU([n])){let s=e.tensorMap.get(n.dataId),[a,i]=jV(s.values,n.shape,n.dtype);return e.makeTensorInfo(i,n.dtype,a)}let o=new ho(n.shape,22);return e.runWebGPUProgram(o,[n],n.dtype)}var uq={kernelName:oa,backendName:"webgpu",kernelFunc:kxe};function vxe(r){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:e,attrs:n}=r,{boxes:o,scores:s}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:p}=n,u=e.readSync(o.dataId),l=e.readSync(s.dataId),{selectedIndices:m}=vr.nonMaxSuppressionV3Impl(u,l,a,i,p);return e.makeTensorInfo([m.length],"int32",new Int32Array(m))}var pq={kernelName:ci,backendName:"webgpu",kernelFunc:vxe};function Sxe(r){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:e,attrs:n}=r,{boxes:o,scores:s}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:p,softNmsSigma:u}=n,l=e.readSync(o.dataId),m=e.readSync(s.dataId),c=a,d=i,f=p,h=u,{selectedIndices:g,selectedScores:b}=vr.nonMaxSuppressionV5Impl(l,m,c,d,f,h);return[e.makeTensorInfo([g.length],"int32",new Int32Array(g)),e.makeTensorInfo([b.length],"float32",new Float32Array(b))]}var lq={kernelName:di,backendName:"webgpu",kernelFunc:Sxe};var jk=class{constructor(t,e){this.variableNames=["x"];this.uniforms="onValue : f32, offValue : f32,";this.workgroupSize=[64,1,1];this.size=!0;this.outputShape=[t,e],this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="onehot"}getUserCode(){return`
      ${X("index")} {
        if(index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          setOutputAtIndex(index, mix(uniforms.offValue, uniforms.onValue,
                                      f32(i32(round(getX(coords.x))) == coords.y)));
        }
      }
    `}};function wxe(r){let{inputs:t,backend:e,attrs:n}=r,{indices:o}=t,{dtype:s,depth:a,onValue:i,offValue:p}=n,u=y.sizeFromShape(o.shape),l=new jk(u,a),m=ye({inputs:{x:o},backend:e,attrs:{shape:[u]}}),c=[{type:"float32",data:[i]},{type:"float32",data:[p]}],d=e.runWebGPUProgram(l,[m],s,c);e.disposeData(m.dataId);let f=[...o.shape,a],h=ye({inputs:{x:d},backend:e,attrs:{shape:f}});return e.disposeData(d.dataId),h}var mq={kernelName:fs,backendName:"webgpu",kernelFunc:wxe};function Hg(r){let{inputs:t,backend:e}=r,{x:n}=t;if(n.dtype==="complex64"){let o=hp({inputs:{input:n},backend:e}),s=Hg({inputs:{x:o},backend:e}),a=Km({inputs:{input:n},backend:e}),i=Hg({inputs:{x:a},backend:e}),p=qs({inputs:{real:s,imag:i},backend:e});return e.disposeData(o.dataId),e.disposeData(s.dataId),e.disposeData(a.dataId),e.disposeData(i.dataId),p}else return Qt({attrs:{shape:n.shape,dtype:n.dtype,value:n.dtype==="string"?"":0},backend:e})}var cq={kernelName:da,backendName:"webgpu",kernelFunc:Hg};function dq(r){let{inputs:t,backend:e}=r,{x:n}=t;if(n.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(n.dtype==="complex64"){let o=hp({inputs:{input:n},backend:e}),s=dq({inputs:{x:o},backend:e}),a=Km({inputs:{input:n},backend:e}),i=Hg({inputs:{x:a},backend:e}),p=qs({inputs:{real:s,imag:i},backend:e});return e.disposeData(o.dataId),e.disposeData(s.dataId),e.disposeData(a.dataId),e.disposeData(i.dataId),p}else return Qt({attrs:{shape:n.shape,dtype:n.dtype,value:1},backend:e})}var fq={kernelName:sa,backendName:"webgpu",kernelFunc:dq};function Axe(r){let{inputs:t,backend:e,attrs:n}=r,{axis:o}=n;if(t.length===1)return Pk({inputs:{input:t[0]},backend:e,attrs:{dim:o}});let s=t[0].shape,a=t[0].dtype;t.forEach(l=>{y.assertShapesMatch(s,l.shape,"All tensors passed to stack must have matching shapes"),y.assert(a===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],p=t.map(l=>{let m=Pk({inputs:{input:l},backend:e,attrs:{dim:o}});return i.push(m),m}),u=X2({inputs:p,backend:e,attrs:{axis:o}});return i.forEach(l=>e.disposeData(l.dataId)),u}var hq={kernelName:aa,backendName:"webgpu",kernelFunc:Axe};function t_(r,t=!1){let e=r.length,n=Lt(e),o=r.map((m,c)=>`uniforms.pad${c}[0]`).join(","),s=r.map((m,c)=>`uniforms.pad${c}[0] + uniforms.xShape${e>1?`[${c}]`:""}`).join(","),a=e>1?`${n}(${o})`:`${o}`,i=e>1?`${n}(${s})`:`${s}`,p=e>1?"any(paddedCoords < start)":"paddedCoords < start",u=e>1?"any(paddedCoords >= end)":"paddedCoords >= end",l=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
        let start = ${a};
        let end = ${i};
        if (${p} || ${u}) {
          setOutputAtIndex(index, ${t?0:"uniforms.constantValue"});
        } else {
          let coords = paddedCoords - start;
          setOutputAtIndex(index, getX(${l}));
        }
  `}var Xk=class{constructor(t,e){this.variableNames=["x"];this.uniforms="constantValue : f32,";this.workgroupSize=[64,1,1];this.size=!0;this.outputShape=e.map((n,o)=>n[0]+t[o]+n[1]),this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize),e.map((n,o)=>{this.uniforms+=` pad${o} : vec2<i32>,`}),this.xShape=t,this.shaderKey="pad"}getUserCode(){return`
      ${X("index")} {
        if (index < uniforms.size) {
          let paddedCoords = getCoordsFromIndex(index);
          ${t_(this.xShape)}
        }
      }
    `}};var Nxe=r=>{let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{paddings:s,constantValue:a}=n;if(s.every(u=>y.arraysEqual(u,[0,0])))return mr({inputs:{x:o},backend:e});if(y.sizeFromShape(o.shape)===0){let u=s.map((l,m)=>l[0]+o.shape[m]+l[1]);return Qt({backend:e,attrs:{shape:u,value:a,dtype:o.dtype}})}let i=[{type:"float32",data:[a]}];s.map(u=>i.push({type:"int32",data:[u[0],u[1]]}));let p=new Xk(o.shape,s);return e.runWebGPUProgram(p,[o],o.dtype,i)},gq={kernelName:hs,backendName:"webgpu",kernelFunc:Nxe};var Dxe=dt({opType:19}),bq={kernelName:gs,backendName:"webgpu",kernelFunc:Dxe};function _xe(r){let{inputs:t,backend:e}=r,{x:n,alpha:o}=t,s=new fp(20,n.shape,o.shape);return e.runWebGPUProgram(s,[n,o],"float32")}var yq={kernelName:bs,backendName:"webgpu",kernelFunc:_xe};function Mxe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:a}=n;return go(o,s,a,"prod",e)}var xq={kernelName:ys,backendName:"webgpu",kernelFunc:Mxe};var Pxe=r=>{let{backend:t,attrs:e}=r,{start:n,stop:o,step:s,dtype:a}=e,i=ZV(n,o,s,a);return t.makeTensorInfo([i.length],a,i)},Tq={kernelName:uu,backendName:"webgpu",kernelFunc:Pxe};var Rxe=dt({opType:4}),Cq={kernelName:Uo,backendName:"webgpu",kernelFunc:Rxe};var Fxe=we({opType:26}),Iq={kernelName:xs,backendName:"webgpu",kernelFunc:Fxe};var Exe=we({opType:23}),kq={kernelName:Ts,backendName:"webgpu",kernelFunc:Exe};var Lxe=we({opType:24}),vq={kernelName:ks,backendName:"webgpu",kernelFunc:Lxe};var Yk=class{constructor(t,e,n){this.variableNames=["x"];this.uniforms="adjustHeightWidth : vec2<f32>, halfPixelCenters : f32,";this.workgroupSize=[64,1,1];this.size=!0;this.outputShape=[t[0],e,n,t[3]],this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return`
      ${X("index")} {
        if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC =
            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *
            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);

          // Compute the four integer indices.
          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);
          let sourceCeilRC = vec2<i32>(
            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));

          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);
          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);
          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);
          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);

          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);

          let top = topLeft + (topRight - topLeft) * fracRC.y;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
          let newValue = top + (bottom - top) * fracRC.x;

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function Bxe(r){let{inputs:t,backend:e,attrs:n}=r,{images:o}=t,{alignCorners:s,size:a,halfPixelCenters:i}=n,[p,u]=a,l=s&&p>1?1:0,m=s&&u>1?1:0,d=[{type:"float32",data:[l,m]},{type:"float32",data:[i?.5:0]}],f=new Yk(o.shape,p,u);return e.runWebGPUProgram(f,[o],"float32",d)}var Sq={kernelName:Is,backendName:"webgpu",kernelFunc:Bxe};var Zk=class{constructor(t,e){this.variableNames=["dy"];this.uniforms=`effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, heightScale : f32, widthScale : f32,
       invHeightScale : f32, invWidthScale : f32, winHeight : i32, winWidth : i32,`;this.workgroupSize=[64,1,1];this.size=!0;this.outputShape=t,this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize),this.alignCorners=e,this.shaderKey=`resizeBilinearBackprop_${e}`}getUserCode(){return`
      ${X("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let b = coords[0];
          let d = coords[3];
          let r = coords[1];
          let c = coords[2];

          var accumulator = 0.0;

          // Compute bounds for where in dy we will look
          let startRLerp = floor(f32(r) * uniforms.invHeightScale);
          let startDyR = i32(startRLerp - f32(uniforms.winHeight / 2));

          let startCLerp = floor(f32(c) * uniforms.invWidthScale);
          let startDyC = i32(startCLerp - f32(uniforms.winWidth / 2));

          // Loop over dy
          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {
            let dyR = startDyR + dyROffset;

            // Guard against the window exceeding the bounds of dy
            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {
              continue;
            }

            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {
              let dyC = startDyC + dyCOffset;

              // Guard against the window exceeding the bounds of dy
              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {
                continue;
              }

              let dxR = f32(dyR) * uniforms.heightScale;
              let topDxRIndex = i32(floor(dxR));
              let bottomDxRIndex = i32(min(ceil(dxR), f32(uniforms.outShape[1] - 1)));
              let dxRLerp = dxR - f32(topDxRIndex);
              let inverseDxRLerp = 1.0 - dxRLerp;

              let dxC = f32(dyC) * uniforms.widthScale;
              let leftDxCIndex = i32(floor(dxC));
              let rightDxCIndex = i32(min(ceil(dxC), f32(uniforms.outShape[2] - 1)));
              let dxCLerp = dxC - f32(leftDxCIndex);
              let inverseDxCLerp = 1.0 - dxCLerp;

              if (r == topDxRIndex && c == leftDxCIndex) {
                // topLeft
                accumulator +=
                  getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
              }

              if (r == topDxRIndex && c == rightDxCIndex) {
                // topRight
                accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
              }

              if (r == bottomDxRIndex && c == leftDxCIndex) {
                // bottomLeft
                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
              }

              if (r == bottomDxRIndex && c == rightDxCIndex) {
                // bottomRight
                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
              }
            }
          }
          // End loop over dy

          setOutputAtIndex(index, accumulator);
        }
      }
    `}};function $xe(r){let{inputs:t,backend:e,attrs:n}=r,{images:o,dy:s}=t,{alignCorners:a}=n,[,i,p]=o.shape,[,u,l]=s.shape,m=[a&&u>1?i-1:i,a&&l>1?p-1:p],c=[a&&u>1?u-1:u,a&&l>1?l-1:l],d=m[0]/c[0],f=m[1]/c[1],h=1/d,g=1/f,b=Math.ceil(h)*2+2,x=Math.ceil(g)*2+2,T=new Zk(o.shape,a),C=[{type:"int32",data:m},{type:"int32",data:c},{type:"float32",data:[d]},{type:"float32",data:[f]},{type:"float32",data:[h]},{type:"float32",data:[g]},{type:"int32",data:[b]},{type:"int32",data:[x]}];return e.runWebGPUProgram(T,[s],s.dtype,C)}var wq={kernelName:hi,backendName:"webgpu",kernelFunc:$xe};var Qk=class{constructor(t,e,n,o){this.variableNames=["x"];this.uniforms="adjustHeightWidth : vec2<f32>, roundBase : f32,";this.workgroupSize=[64,1,1];this.size=!0;this.outputShape=[t[0],e,n,t[3]],this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize),this.halfPixelCenters=o,this.shaderKey=`resizeNearest_${o}`}getUserCode(){let t;return this.halfPixelCenters?t="max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":t="vec2<f32>(rc) * effectiveInputOverOutputRatioRC",`
      ${X("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${t};

          // Compute the coordinators of nearest neighbor point.
          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));
          let sourceNearestRC = vec2<i32>(
            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));
          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function Oxe(r){let{inputs:t,backend:e,attrs:n}=r,{images:o}=t,{alignCorners:s,halfPixelCenters:a,size:i}=n,[p,u]=i,l=s&&p>1?1:0,m=s&&u>1?1:0,d=[{type:"float32",data:[l,m]},{type:"float32",data:[s?.5:0]}],f=new Qk(o.shape,p,u,a);return e.runWebGPUProgram(f,[o],o.dtype,d)}var Aq={kernelName:Cs,backendName:"webgpu",kernelFunc:Oxe};var Jk=class{constructor(t,e){this.variableNames=["dy"];this.uniforms=`effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, invHeightScale : f32, invWidthScale : f32,
       winHeight : i32, winWidth : i32,`;this.workgroupSize=[64,1,1];this.size=!0;this.outputShape=t,this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize),this.alignCorners=e,this.shaderKey=`resizeNearestNeigborBackprop_${e}`}getUserCode(){return`
      ${X("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let b = coords[0];
          let d = coords[3];
          let r = coords[1];
          let c = coords[2];

          var accumulator = 0.0;

          // Compute bounds for where in dy we will look
          let startRLerp = floor(f32(r) * uniforms.invHeightScale);
          let startDyR = i32(floor(startRLerp - f32(uniforms.winHeight / 2)));

          let startCLerp = floor(f32(c) * uniforms.invWidthScale);
          let startDyC = i32(floor(startCLerp - f32(uniforms.winWidth / 2)));

          // Loop over dy
          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {
            let dyR = startDyR + dyROffset;

            // Guard against the window exceeding the bounds of dy
            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {
              continue;
            }

            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {
              let dyC = startDyC + dyCOffset;

              // Guard against the window exceeding the bounds of dy
              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {
                continue;
              }

              let sourceFracRow = f32(uniforms.effectiveXSize[0]) *
                  (f32(dyR) / f32(uniforms.effectiveYSize[0]));

              let sourceFracCol = f32(uniforms.effectiveXSize[1]) *
                  (f32(dyC) / f32(uniforms.effectiveYSize[1]));

              let sourceNearestRow =
                  i32(min(f32(uniforms.outShape[1] - 1),
                  ${this.alignCorners?"floor(sourceFracRow + 0.5)":"floor(sourceFracRow)"}));

              let sourceNearestCol =
                  i32(min(f32(uniforms.outShape[2] - 1),
                  ${this.alignCorners?"floor(sourceFracCol + 0.5)":"floor(sourceFracCol)"}));

              if (r == sourceNearestRow && c == sourceNearestCol) {
                accumulator += getDy(b, dyR, dyC, d);
              }
            }
          }
          // End loop over dy

          setOutputAtIndex(index, accumulator);
        }
      }
    `}};function zxe(r){let{inputs:t,backend:e,attrs:n}=r,{images:o,dy:s}=t,{alignCorners:a}=n,[,i,p]=o.shape,[,u,l]=s.shape,m=[a&&u>1?i-1:i,a&&l>1?p-1:p],c=[a&&u>1?u-1:u,a&&l>1?l-1:l],d=m[0]/c[0],f=m[1]/c[1],h=1/d,g=1/f,b=Math.ceil(h)*2+2,x=Math.ceil(g)*2+2,T=new Jk(o.shape,a),C=[{type:"int32",data:m},{type:"int32",data:c},{type:"float32",data:[h]},{type:"float32",data:[g]},{type:"int32",data:[b]},{type:"int32",data:[x]}];return e.runWebGPUProgram(T,[s],s.dtype,C)}var Nq={kernelName:fi,backendName:"webgpu",kernelFunc:zxe};var ev=class{constructor(t){this.variableNames=["x"];this.workgroupSize=[64,1,1];this.size=!0;this.outputShape=t,this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=" axis : vec4<i32>,",this.shaderKey="reverse"}getUserCode(){return`
      
      // Using uniform variables as judging conditions, so the function has
      // coherent execution within all threads.
      fn getReverseCoords(coords : vec4<i32>) -> vec4<i32> {
        var reverseCoords = coords;
        if (uniforms.axis[0] == 1) {
          reverseCoords[0] = uniforms.xShape[0] - coords[0] - 1;
        }
        if (uniforms.axis[1] == 1) {
          reverseCoords[1] = uniforms.xShape[1] - coords[1] - 1;
        }
        if (uniforms.axis[2] == 1) {
          reverseCoords[2] = uniforms.xShape[2] - coords[2] - 1;
        }
        if (uniforms.axis[3] == 1) {
          reverseCoords[3] = uniforms.xShape[3] - coords[3] - 1;
        }

        return reverseCoords;
      }
    
      ${X("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let reverseCoords = getReverseCoords(coords);
          setOutputAtIndex(index, getX(reverseCoords[0],
              reverseCoords[1], reverseCoords[2], reverseCoords[3]));
        }
      }
    `}};function Gxe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{dims:s}=n,a=o.shape.length;if(a===0)return mr({inputs:{x:o},backend:e});let i=o.shape,p=[1,1,1,1];i.forEach((g,b)=>{let x=b+4-a;p[x]=g});let u=y.parseAxisParam(s,o.shape),l=[0,0,0,0];u.forEach(g=>{let b=g+4-a;l[b]=1});let m=[{type:"int32",data:l}],c=ye({inputs:{x:o},backend:e,attrs:{shape:p}}),d=new ev(p),f=e.runWebGPUProgram(d,[c],c.dtype,m);e.disposeData(c.dataId);let h=ye({inputs:{x:f},backend:e,attrs:{shape:i}});return e.disposeData(f.dataId),h}var Dq={kernelName:vs,backendName:"webgpu",kernelFunc:Gxe};var tv=class{constructor(t,e){this.outputShape=[];this.variableNames=["x"];this.workgroupSize=[64,1,1];this.size=!0;this.outputShape=t,this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=`centerX : f32, centerY : f32, sinRadians : f32,
          cosRadians : f32,`,this.shaderKey="rotate",this.outputShape=t,typeof e=="number"?(this.uniforms+=" fillValue : f32,",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>,",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`
        ${X("index")} {
          if (index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *
                uniforms.sinRadians;
            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *
                uniforms.cosRadians;
            let coordX = i32(round(coordXFloat + uniforms.centerX));
            let coordY = i32(round(coordYFloat + uniforms.centerY));
            ${this.fillSnippet}
            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&
                coordY < uniforms.xShape[1]) {
              outputValue = getX(coords[0], coordY, coordX, coords[3]);
            }
            setOutputAtIndex(index, outputValue);
          }
        }
      `}};var _q={kernelName:ki,backendName:"webgpu",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{image:n}=r,{radians:o,fillValue:s,center:a}=t,i=e,p=new tv(n.shape,s),[u,l]=I.getImageCenter(a,n.shape[1],n.shape[2]),m=[{type:"float32",data:[u]},{type:"float32",data:[l]},{type:"float32",data:[Math.sin(o)]},{type:"float32",data:[Math.cos(o)]}];return typeof s=="number"?m.push({type:"float32",data:[Number.parseFloat(s.toFixed(2))]}):m.push({type:"float32",data:s}),i.runWebGPUProgram(p,[n],n.dtype,m)}};var Wxe=we({opType:27}),Mq={kernelName:Ss,backendName:"webgpu",kernelFunc:Wxe};var Uxe=we({opType:28,cpuKernelImpl:QV}),Pq={kernelName:ws,backendName:"webgpu",kernelFunc:Uxe};var Mu=class{constructor(t,e,n,o,s,a,i,p=!0){this.variableNames=["updates","indices"];this.workgroupSize=[64,1,1];this.atomic=!0;this.outputShape=a,this.type=i,this.sumDupeIndices=p,this.dispatchLayout=re(t),this.dispatch=Y(this.dispatchLayout,t,this.workgroupSize),this.sliceDimGreaterThanOne=e>1,this.shaderKey=`scatter_${n}_${o}_${this.sliceDimGreaterThanOne}_${i}_${p}`;let u=Lt(s.length);this.uniforms=`sliceDim : i32, strides: ${u}, updatesSize: i32,`,this.updatesRank=o,this.indicesRank=n}getUserCode(){let t="";this.indicesRank===1?t="coords[0]":this.indicesRank===2&&(t="coords[0], j");let e=`getIndices(${t})`,n=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides",o="",s="";this.dispatchLayout.x.length===1?(o="flattenedIndex",s=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {
        return index;
      }
      `):this.dispatchLayout.x.length===2&&(o="vec2<i32>(flattenedIndex, coords[1])",s=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {
        // N.B. |updates| could be a scalar tensor, conceptually representing a
        // 2D tensor with all values equal to that. By design, its size must be
        // the same as |outShape[1]| in one dimension, and |indicesShape[0]|
        // gives the other.
        let sliceSize = uniforms.outShape[1];
        let d0 = index / sliceSize;
        let d1 = index - d0 * sliceSize;
        return vec2<i32>(d0, d1);
      }
      `);let i=`getUpdates(${Array.from({length:this.updatesRank},(u,l)=>`coords[${l}]`).join(", ")})`;return`
    ${s}
      ${X("index")} {
        if (index < uniforms.updatesSize) {
          let coords = getUpdatesCoordsFromFlatIndex(index);
          var flattenedIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexInside = i32(round(${e}));
            flattenedIndex = flattenedIndex + indexInside * ${n};
          }
          let updateValue =
              ${Om(this.type)}(${i});
          let flatIndex = getOutputIndexFromCoords(${o});

          ${this.sumDupeIndices?co("&result[flatIndex]","updateValue",this.type):"atomicStore(&result[flatIndex], bitcast<i32>(updateValue));"}
        }
      }`}};function Kxe(r){let{inputs:t,backend:e,attrs:n}=r,{indices:o,updates:s}=t,{shape:a}=n,{sliceRank:i,numUpdates:p,sliceSize:u,strides:l,outputSize:m}=I.calculateShapes(s,o,a),c=[m/u,u];if(m===0)return e.makeTensorInfo(a,o.dtype);let d=ye({inputs:{x:o},backend:e,attrs:{shape:[p,i]}}),f=ye({inputs:{x:s},backend:e,attrs:{shape:[p,u]}}),h=f.dtype,g=Qt({backend:e,attrs:{shape:c,value:0,dtype:h}}),b=y.sizeFromShape(f.shape),x=[{type:"int32",data:[i]},{type:"int32",data:l},{type:"int32",data:[b]}],T=new Mu(f.shape,i,d.shape.length,f.shape.length,l,c,h),C=e.runWebGPUProgram(T,[f,d],h,x,g),k=ye({inputs:{x:C},backend:e,attrs:{shape:a}});return e.disposeData(d.dataId),e.disposeData(f.dataId),e.disposeData(C.dataId),k}var Rq={kernelName:gi,backendName:"webgpu",kernelFunc:Kxe};var rv=class{constructor(t,e){this.outputShape=[];this.variableNames=["sortedSequence","values"];this.uniforms="numInputs : i32,";this.workgroupSize=[64,1,1];this.size=!0;this.outputShape=t,this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize),this.side=e,this.shaderKey=`search_sorted_${e}`}getUserCode(){return`
      fn findBound(batch: i32, value: f32) -> i32 {
        var left = i32(0);
        var right = uniforms.numInputs;
        while (left < right) {
          var mid = (left + right) / 2;
          if (getSortedSequence(batch, mid) ${this.side==="left"?"<":"<="} value) {
            left = mid + 1;
          } else {
            right = mid;
          }
        }
        return right;
      }

      ${X("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let value = getValuesByOutputIndex(index);
          setOutputAtIndexI32(index, findBound(coords[0], value));
        }
      }
    `}};function Vxe(r){let{inputs:t,backend:e,attrs:n}=r,{sortedSequence:o,values:s}=t,{side:a}=n,i=new rv([s.shape[0],s.shape[1]],a),p=[{type:"int32",data:[o.shape[1]]}];return e.runWebGPUProgram(i,[o,s],"int32",p)}var Fq={kernelName:yi,backendName:"webgpu",kernelFunc:Vxe};var nv=class{constructor(t,e,n){this.variableNames=["c","a","b"];this.workgroupSize=[64,1,1];this.size=!0;this.outputShape=e,this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize),this.cRank=t,this.rank=n,this.shaderKey="select"}getUserCode(){let t,e;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(this.rank===1)e="resRC",t="resRC";else{let o=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],a=[];for(let i=0;i<this.outputShape.length;i++)a.push(`${o[i]}`),i<this.cRank&&s.push(`${o[i]}`);t=s.join(),e=a.join()}return`
      ${X("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let cVal = getC(${t});
          if (cVal >= 1.0) {
            setOutputAtIndex(index, getA(${e}));
          } else {
            setOutputAtIndex(index, getB(${e}));
          }
        }
      }
    `}};function Hxe(r){let{inputs:t,backend:e}=r,{condition:n,t:o,e:s}=t,a=new nv(n.shape.length,o.shape,o.shape.length);return e.runWebGPUProgram(a,[n,o,s],At(o.dtype,s.dtype))}var Eq={kernelName:ua,backendName:"webgpu",kernelFunc:Hxe};var qxe=we({opType:29}),Lq={kernelName:As,backendName:"webgpu",kernelFunc:qxe};var jxe=we({opType:30}),Bq={kernelName:Ms,backendName:"webgpu",kernelFunc:jxe};var Xxe=we({opType:31}),$q={kernelName:_s,backendName:"webgpu",kernelFunc:Xxe};var Yxe=we({opType:32}),Oq={kernelName:Ns,backendName:"webgpu",kernelFunc:Yxe};var Zxe=we({opType:33}),zq={kernelName:Ds,backendName:"webgpu",kernelFunc:Zxe};var Qxe=we({opType:34}),Gq={kernelName:Ps,backendName:"webgpu",kernelFunc:Qxe};var ov=class{constructor(t,e,n,o,s,a){this.variableNames=["x"];this.outputShape=[];this.uniforms="";this.workgroupSize=[64,1,1];this.size=!0;let i=new Array(o.length);for(let p=0;p<i.length;p++)i[p]=o[s[p]];this.outputShape=i,this.newDim=s,this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=t,this.paddedXShape=e,this.uniforms+=`reshapedPaddedXShape : ${Lt(o.length)}, paddedXShapeStrides : ${Lt(a)}, `,n.map((p,u)=>{this.uniforms+=` pad${u} : vec2<i32>,`}),this.shaderKey=`spaceToBatchND_${s}`}getUserCode(){let t=Lt(this.outputShape.length),e=U2(this.newDim);return`
      ${Bg(this.paddedXShape,"PaddedX")}
      ${X("index")} {
        if(index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let switchedIndex = getIndexFromCoords${this.outputShape.length}D(${t}(${e}), uniforms.reshapedPaddedXShape);
          let paddedCoords = getPaddedXCoordsFromIndex(switchedIndex);
          ${t_(this.xShape,!0)}
        }
      }
    `}};var Jxe=r=>{let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{blockShape:s,paddings:a}=n;y.assert(o.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet");let i=s.reduce((x,T)=>x*T),p=[[0,0]];p.push(...a);for(let x=1+s.length;x<o.shape.length;++x)p.push([0,0]);let u=p.map((x,T)=>x[0]+o.shape[T]+x[1]),l=I.getReshaped(u,s,i,!1),m=I.getPermuted(l.length,s.length,!1),c=I.getReshapedPermuted(u,s,i,!1),d=y.computeStrides(u),f=new ov(o.shape,u,p,l,m,d.length),h=[{type:"int32",data:l},{type:"int32",data:d}];p.map(x=>h.push({type:"int32",data:[x[0],x[1]]}));let g=e.runWebGPUProgram(f,[o],o.dtype,h),b=ye({inputs:{x:g},backend:e,attrs:{shape:c}});return e.disposeData(g.dataId),b},Wq={kernelName:la,backendName:"webgpu",kernelFunc:Jxe};var sv=class{constructor(t,e,n){this.variableNames=["input","indices","segmentIds"];this.outputShape=[];this.uniforms="segmentSize : i32, sparseSize : i32,";this.workgroupSize=[64,1,1];this.atomic=!0;this.outputShape=t,this.type=n,this.dispatchLayout=re([e]),this.dispatch=Y(this.dispatchLayout,[e],this.workgroupSize),this.shaderKey="sparseSegmentSum"}getUserCode(){return`
    ${X("index")} {
      if (index < uniforms.sparseSize) {
        let indexInSegmentIds = index / uniforms.segmentSize;
        let indexInSegment = index % uniforms.segmentSize;
        let indexInInput = indices[indexInSegmentIds];
        let segmentId = segmentIds[indexInSegmentIds];

        let value = input[indexInInput * uniforms.segmentSize + indexInSegment];
        let outIndex = segmentId * uniforms.segmentSize + indexInSegment;
        ${co("&result[outIndex]","value",this.type)}
      }
    }
  `}},av=class{constructor(t,e){this.variableNames=["segmentIds"];this.outputShape=[];this.workgroupSize=[64,1,1];this.atomic=!0;this.outputShape=[t],this.dispatchLayout=re(e),this.dispatch=Y(this.dispatchLayout,e,this.workgroupSize),this.shaderKey="sparseSegmentIdCountProgram"}getUserCode(){return`
    ${X("index")} {
      if (index < uniforms.segmentIdsShape) {
        let segmentId = segmentIds[index];
        ${co("&result[segmentId]","1","int32")}
      }
    }
  `}},iv=class{constructor(t,e){this.variableNames=["segmentSum","sameSegmentIdCount"];this.outputShape=[];this.uniforms="segmentSize : i32";this.workgroupSize=[64,1,1];this.size=!0;this.outputShape=t,this.type=e,this.dispatchLayout=re(t),this.dispatch=Y(this.dispatchLayout,t,this.workgroupSize),this.shaderKey="sparseSegmentMean"}getUserCode(){return`
    ${X("index")} {
      if (index < uniforms.size) {
        let segmentId = index / uniforms.segmentSize;
        let count = sameSegmentIdCount[segmentId];
        if (count != 0) {
          ${this.type==="float32"?"setOutputAtIndex(index, segmentSum[index] / f32(count));":"setOutputAtIndexI32(index, segmentSum[index] / count);"}
        }
      }
    }
  `}};function uv(r,t,e,n=!1,o){let a=y.sizeFromShape(r.shape)/r.shape[0],i=r.dtype,p=y.sizeFromShape(t.shape),u=o.readSync(e.dataId),m=p>0?u[p-1]+1:0,c,d=r.shape.slice();d[0]=m;let f=p*a,h=Qt({backend:o,attrs:{shape:d,value:0,dtype:i}});c=new sv(d,f,i);let g=[{type:"int32",data:[a]},{type:"int32",data:[f]}],b=o.runWebGPUProgram(c,[r,t,e],i,g,h);if(n)return b;let x=Qt({backend:o,attrs:{shape:[m],value:0,dtype:"int32"}});c=new av(m,e.shape);let T=o.runWebGPUProgram(c,[e],"int32",null,x),C=Qt({backend:o,attrs:{shape:d,value:0,dtype:i}});c=new iv(d,i),g=[{type:"int32",data:[a]}];let k=o.runWebGPUProgram(c,[b,T],i,g,C);return o.disposeData(b.dataId),o.disposeData(T.dataId),k}function eTe(r){let{inputs:t,backend:e}=r,{data:n,indices:o,segmentIds:s}=t;return uv(n,o,s,!1,e)}var Uq={kernelName:pu,backendName:"webgpu",kernelFunc:eTe};function tTe(r){let{inputs:t,backend:e}=r,{data:n,indices:o,segmentIds:s}=t;return uv(n,o,s,!0,e)}var Kq={kernelName:lu,backendName:"webgpu",kernelFunc:tTe};var pv=class{constructor(t,e){this.variableNames=["A"];this.workgroupSize=[64,1,1];this.size=!0;let n=new Array(t.length);for(let o=0;o<n.length;o++)n[o]=t[o]*e[o];this.outputShape=n,this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){let t=rTe(this.rank,"uniforms.");return`
      ${X("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          setOutputAtIndex(index, getA(${t}));
        }
      }
    `}};function rTe(r,t=""){if(r>=5)throw Error(`Tile for rank ${r} is not yet supported`);if(r===1)return`(resRC % ${t}aShape)`;let e=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let o=0;o<r;o++)n.push(`(${e[o]} % ${t}aShape[${o}])`);return n.join()}function qg(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{reps:s}=n;if(e.shouldExecuteOnCPU([o])||o.dtype==="string"||o.shape.length>=5){let p=e.readSync(o.dataId),u=o.dtype==="string"?p.map(c=>y.decodeString(c)):p,l=Ce(o.shape,o.dtype,u),m=s4(l,s);return e.makeTensorInfo(m.shape,m.dtype,m.values)}let a=new pv(o.shape,s);return e.runWebGPUProgram(a,[o],o.dtype)}var Vq={kernelName:Pn,backendName:"webgpu",kernelFunc:qg};function nTe(r){let{inputs:t,backend:e,attrs:n}=r,{sparseIndices:o,sparseValues:s,defaultValue:a}=t,{outputShape:i}=n,{sliceRank:p,numUpdates:u,sliceSize:l,strides:m,outputSize:c}=I.calculateShapes(s,o,i),d=!1;if(s.dtype==="string"){let P=e.bufferSync(o),M=e.bufferSync(s),R=y.decodeString(e.readSync(a.dataId)[0]),$=JV(P,M,i,c,l,u,p,m,R,d);return e.makeTensorInfo(i,$.dtype,$.values)}let f=[c/l,l],h=ye({inputs:{x:o},backend:e,attrs:{shape:[u,p]}}),g=s.shape.length?ye({inputs:{x:s},backend:e,attrs:{shape:[u,l]}}):mr({inputs:{x:s},backend:e}),b=g.dtype,x=e.makeTensorInfo([],b,y.makeZerosTypedArray(1,b)),T=ye({inputs:{x:a},backend:e,attrs:{shape:Array(f.length).fill(1)}}),C=qg({inputs:{x:T},backend:e,attrs:{reps:f}}),k=y.sizeFromShape([u,l]),w=[{type:"int32",data:[p]},{type:"int32",data:m},{type:"int32",data:[k]}];switch(u){case 0:break;case 1:{let P=new Mu([u,l],p,h.shape.length,g.shape.length,m,f,b,d);e.runWebGPUProgram(P,[g,h],b,w,C)}break;default:{let P=new Mu([u,l],p,h.shape.length,x.shape.length,m,f,b,d);e.runWebGPUProgram(P,[x,h],b,w,C)}{let P=new Mu([u,l],p,h.shape.length,g.shape.length,m,f,b);e.runWebGPUProgram(P,[g,h],b,w,C)}}let _=ye({inputs:{x:C},backend:e,attrs:{shape:i}});return e.disposeData(h.dataId),e.disposeData(g.dataId),e.disposeData(T.dataId),e.disposeData(x.dataId),e.disposeData(C.dataId),_}var Hq={kernelName:xi,backendName:"webgpu",kernelFunc:nTe};function oTe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{numOrSizeSplits:s,axis:a}=n,i=y.parseAxisParam(a,o.shape)[0],p=I.prepareSplitSize(o,s,i),u=o.shape.length,l=new Array(u).fill(0),m=o.shape.slice();return p.map(c=>{let d=[...m];d[i]=c;let f=Hi({inputs:{x:o},backend:e,attrs:{begin:l,size:d}});return l[i]+=c,f})}var qq={kernelName:ma,backendName:"webgpu",kernelFunc:oTe};var sTe=we({opType:35}),jq={kernelName:Rs,backendName:"webgpu",kernelFunc:sTe};var Xq={kernelName:mu,backendName:"webgpu",kernelFunc:({inputs:r,backend:t})=>{let{x:e}=r,n=t,o=new ho(e.shape,36);return n.runWebGPUProgram(o,[e],e.dtype)}};var aTe=dt({opType:21}),Yq={kernelName:Ls,backendName:"webgpu",kernelFunc:aTe};function iTe({inputs:r,attrs:t,backend:e}){let{x:n}=r,o=new ho(n.shape,37,"stepAlpha : f32,"),s=[{type:"float32",data:[t.alpha]}];return e.runWebGPUProgram(o,[n],n.dtype,s)}var Zq={kernelName:Zn,backendName:"webgpu",kernelFunc:iTe};var lv=class{constructor(t){this.variableNames=["x"];this.workPerThread=1;this.workgroupSize=[64,1,1];this.size=!0;this.outputShape=t,this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]);let e=Lt(this.outputShape.length);this.uniforms=`begin : ${e},  strides : ${e}, `,this.shaderKey="stridedSlice"}getUserCode(){let t=this.outputShape.length,e="";if(t===1)e="coords * uniforms.strides + uniforms.begin";else{let o=0;e=this.outputShape.map((s,a)=>(o++,this.outputShape.length===1?`coords * uniforms.strides[${a}] + uniforms.begin[${a}]`:`coords[${o-1}] * uniforms.strides[${a}] + uniforms.begin[${a}]`)).join(",")}return`
       ${X("index")} {
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index);
           setOutputAtIndex(index, getX(${e}));
         }
       }
     `}};function uTe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{begin:s,end:a,strides:i,beginMask:p,endMask:u,ellipsisMask:l,newAxisMask:m,shrinkAxisMask:c}=n,{finalShapeSparse:d,finalShape:f,isIdentity:h,sliceDim0:g,isSimpleSlice:b,begin:x,end:T,strides:C}=kt.sliceInfo(o.shape,s,a,i,p,u,l,m,c),k;if(h)k=ye({inputs:{x:o},backend:e,attrs:{shape:f}});else if(g||b){y.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let w=kt.computeOutShape(x,T,C),_=Hi({inputs:{x:o},backend:e,attrs:{begin:x,size:w}});k=ye({inputs:{x:_},backend:e,attrs:{shape:f}}),e.disposeData(_.dataId)}else if(e.shouldExecuteOnCPU([o])){let _=e.readSync(o.dataId),P=Ce(o.shape,o.dtype,_),M=r4(d,P,C,x);k=e.makeTensorInfo(f,o.dtype,M.values)}else{let _=new lv(d),P=[{type:"int32",data:x},{type:"int32",data:C}],M=e.runWebGPUProgram(_,[o],o.dtype,P);k=ye({inputs:{x:M},backend:e,attrs:{shape:f}}),e.disposeData(M.dataId)}return k}var Qq={kernelName:Ti,backendName:"webgpu",kernelFunc:uTe};function pTe(r){let{inputs:t,backend:e,attrs:n}=r,{separator:o,nGramWidths:s,leftPad:a,rightPad:i,padWidth:p,preserveShortSequences:u}=n,{data:l,dataSplits:m}=t,c=e.readSync(l.dataId),d=e.readSync(m.dataId),[f,h]=n4(c,d,o,s,a,i,p,u);return[e.makeTensorInfo([f.length],"string",f),e.makeTensorInfo(m.shape,"int32",h)]}var Jq={kernelName:cu,backendName:"webgpu",kernelFunc:pTe};var lTe=dt({opType:22,cpuKernelImpl:o4,supportsComplex:!0}),ej={kernelName:Bs,backendName:"webgpu",kernelFunc:lTe};var mTe=we({opType:38}),tj={kernelName:$s,backendName:"webgpu",kernelFunc:mTe};var cTe=we({opType:39}),rj={kernelName:Os,backendName:"webgpu",kernelFunc:cTe};function dTe(r){let{inputs:t,backend:e,attrs:n}=r,{tensor:o,indices:s,updates:a}=t,{}=n,{sliceRank:i,numUpdates:p,sliceSize:u,strides:l,outputSize:m}=I.calculateShapes(a,s,o.shape),c=[m/u,u];if(m===0)return e.makeTensorInfo(o.shape,s.dtype);let d=[],f=ye({inputs:{x:s},backend:e,attrs:{shape:[p,i]}});d.push(f);let h=ye({inputs:{x:a},backend:e,attrs:{shape:[p,u]}});d.push(h);let g=ye({inputs:{x:o},backend:e,attrs:{shape:c}});d.push(g);let b=qg({inputs:{x:g},backend:e,attrs:{reps:Array(c.length).fill(1)}}),x=new Mu([p,u],i,f.shape.length,h.shape.length,l,c,o.dtype,!1),T=y.sizeFromShape([p,u]),C=[{type:"int32",data:[i]},{type:"int32",data:l},{type:"int32",data:[T]}],k=e.runWebGPUProgram(x,[h,f],g.dtype,C,b);d.push(k);let w=ye({inputs:{x:k},backend:e,attrs:{shape:o.shape}});return d.forEach(_=>e.disposeData(_.dataId)),w}var nj={kernelName:bi,backendName:"webgpu",kernelFunc:dTe};var mv=class{constructor(t){this.variableNames=["x","indices"];this.workgroupSize=[256,1,1];this.size=!0;this.outputShape=t,this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=`inputSize : i32, firstPass : i32, negativeInf : f32,
        dir : i32, inc : i32,`,this.shaderKey="swap"}getUserCode(){return`
        ${X("index")} {
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // We compare elements pair-wise within a group of size 2 * inc.
            // The comparing rule for each group alternates between ascending
            // and descending. Within each group, we compare each pair at
            // positions i and i+inc. To decide whether an element at position i
            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
            // inc, it is in the first half of the group, we denote it as x0,
            // otherwise we denote it as x1.
            // For example, as shown in the Bitonic top K paper referenced
            // above, Figure5(a) shows that element[1] is in the second half of
            // the group when group size is 2, but it is in the first half of
            // the group when group size is 4.
            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;
            var i = 0;
            if (isFirstInPair) {
              i = elemIdx;
            } else {
              i = elemIdx - uniforms.inc;
            }

            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }

            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.inc;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.inc));
            }

            var x0 = f32(0.0);
            var x1 = f32(0.0);
            if (i0 < uniforms.inputSize) {
              x0 = getX(batch, i0);
            } else {
              x0 = uniforms.negativeInf;
            }
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = uniforms.negativeInf;
            }

            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;
            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
            if (reverse == isGreater) {
              // Elements in opposite order of direction
              let iTemp = i0;
              i0 = i1;
              i1 = iTemp;
            }
            if (isFirstInPair) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}},cv=class{constructor(t){this.variableNames=["x","indices"];this.workgroupSize=[256,1,1];this.size=!0;this.outputShape=t,this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms="inputSize : i32, firstPass : i32, k : i32,",this.shaderKey="merge"}getUserCode(){return`
        ${X("index")} {
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // The output size is half of the previous size.
            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _
            // (k=4), we only need to output the indices at positions |, the
            // indices at positions _ can be thrown away, see Figure5(b) After
            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced
            // above.
            // For example, the paper shows we only need to output the orange
            // bars. The output sequence should look like this | | | | | | | |.
            // Because the sequence is halved, to map the output index back to
            // the previous sequence to find the corresponding value, we need
            // to double the index. When we double the index, we basically
            // interpolate a position, so 2i looks like
            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k
            // position of each 2k positions by - elemIdx % k. E.g. for output
            // at index 4,5,6,7, we want to get the corresponding element at
            // original index 8,9,10,11, for output at index 8,9,10,11,
            // we want to get the corresponding element at original index
            // 16,17,18,19, so on and so forth.

            var i = 0;
            if (elemIdx < uniforms.k) {
              i = elemIdx;
            } else {
              i = elemIdx * 2 - elemIdx % uniforms.k;
            }
            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }
            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.k;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.k));
            }

            let x0 = getX(batch, i0);
            var x1 = f32(0.0);
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = x0;
            }

            if (x0 >= x1) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}};function ah(r,t){t!==null&&r.disposeData(t.dataId)}function oj(r){let t=1;for(;t<r;)t*=2;return t}function fTe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{k:s,sorted:a}=n,i=o.shape,p=i[i.length-1];if(e.shouldExecuteOnCPU([o])){let k=e.readSync(o.dataId),[w,_]=a4(k,i,o.dtype,s,a);return[e.makeTensorInfo(w.shape,w.dtype,w.values),e.makeTensorInfo(_.shape,_.dtype,_.values)]}if(s===0)return i[i.length-1]=0,[e.makeTensorInfo(i,o.dtype,[]),e.makeTensorInfo(i,"int32",[])];if(p===1)return[o,Qt({attrs:{shape:i,dtype:"int32",value:0},backend:e})];let l=y.sizeFromShape(i)/p,m=ye({inputs:{x:o},attrs:{shape:[l,p]},backend:e}),c=oj(s),d=oj(p),f=null,h=()=>f===null?[m,m]:[m,f],g=(k,w,_)=>{let P=h(),M=new mv(_),$=[{type:"int32",data:[p]},{type:"int32",data:[f===null?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[k]},{type:"int32",data:[w]}],G=f;f=e.runWebGPUProgram(M,P,"int32",$),ah(e,G)};for(let k=1;k<c;k*=2){let w=k*2;for(let _=k;_>=1;_/=2)g(w,_,[l,d])}for(let k=d;k>c;k/=2){let w=h(),_=new cv([l,k/2]),M=[{type:"int32",data:[p]},{type:"int32",data:[f===null?1:0]},{type:"int32",data:[c]}],R=f;f=e.runWebGPUProgram(_,w,"int32",M),ah(e,R);let $=c/2,G=$*2;for(let W=$;W>=1;W/=2)g(G,W,f.shape)}let b=f;f=Hi({inputs:{x:f},backend:e,attrs:{begin:0,size:[l,s]}}),ah(e,b);let x=J2({inputs:{x:m,indices:f},backend:e,attrs:{axis:1,batchDims:1}});ah(e,m);let T=i.slice(0,-1);T.push(s),b=f,f=ye({inputs:{x:f},attrs:{shape:T},backend:e}),ah(e,b);let C=x;return x=ye({inputs:{x},attrs:{shape:T},backend:e}),ah(e,C),[x,f]}var sj={kernelName:Ci,backendName:"webgpu",kernelFunc:fTe};var dv=class{constructor(t){this.variableNames=["Image","Transforms"];this.uniforms="interpolationModeId : i32, fillModeId : i32, fillValue : f32,";this.workgroupSize=[64,1,1];this.size=!0;this.outputShape=t,this.dispatchLayout=re(this.outputShape),this.dispatch=Y(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="transform"}getUserCode(){return`
          fn mapCoord(outCoord : f32, len : f32) -> f32{
            var inCoord = outCoord;
            if(uniforms.fillModeId == 2) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  if (inCoord < sz2) {
                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +
                    inCoord;
                  }
                  if (inCoord < -len) {
                    inCoord = inCoord + sz2;
                  } else {
                    inCoord = -inCoord - 1.0;
                  }
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));
                  if (inCoord >= len) {
                    inCoord = sz2 - inCoord - 1.0;
                  }
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 3) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 4) {
              return clamp(outCoord, 0.0, len - 1.0);
            }
            return outCoord;
          }
          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,
            channel : i32) -> f32 {
            var outputValue : f32;
            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {
                outputValue = getImage(batch, coordY, coordX, channel);
            } else {
              outputValue = uniforms.fillValue;
            }
            return outputValue;
          }

          ${X("index")} {
            if (index < uniforms.size) {
              let coords = getCoordsFromIndex(index);
              var outputValue : f32;
              let batch = coords[0];
              let x = coords[2];
              let y = coords[1];
              let channel = coords[3];
              let xf = f32(x);
              let yf = f32(y);
              let a1 = getTransforms(batch, 0);
              let a2 = getTransforms(batch, 1);
              let a3 = getTransforms(batch, 2);
              let b1 = getTransforms(batch, 3);
              let b2 = getTransforms(batch, 4);
              let b3 = getTransforms(batch, 5);
              let c1 = getTransforms(batch, 6);
              let c2 = getTransforms(batch, 7);
              let projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = uniforms.fillValue;
              } else {
                let inX = (a1 * xf + a2 * yf + a3) / projection;
                let inY = (b1 * xf + b2 * yf + b3) / projection;
                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));
                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));

                if (uniforms.interpolationModeId == 1) {
                  let coordY = i32(round(mapY));
                  let coordX = i32(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  let yFloor = floor(mapY);
                  let xFloor = floor(mapX);
                  let yCeil = yFloor + 1.0;
                  let xCeil = xFloor + 1.0;
                  let valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);
                  let valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutputAtIndex(index, outputValue);
            }
          }
        `}};function hTe(r){let{inputs:t,backend:e,attrs:n}=r,{image:o,transforms:s}=t,{interpolation:a,fillMode:i,fillValue:p,outputShape:u}=n,[l,m,c,d]=o.shape,[f,h]=u??[m,c],g=[l,f,h,d],b=new dv(g),x=a==="nearest"?1:2,T;switch(i){case"constant":T=1;break;case"reflect":T=2;break;case"wrap":T=3;break;case"nearest":T=4;break;default:T=1;break}let C=[{type:"int32",data:[x]},{type:"int32",data:[T]},{type:"float32",data:[p]}];return e.runWebGPUProgram(b,[o,s],"float32",C)}var aj={kernelName:Ii,backendName:"webgpu",kernelFunc:hTe};function gTe(r){let{inputs:t,backend:e,attrs:n}=r,{value:o}=t,{axis:s}=n;s<0&&(s+=o.shape.length);let a=o,i=a.shape.length,p=o.shape[s],u=new Array(i-1),l=0;for(let h=0;h<i;h++)h!==s&&(u[l++]=a.shape[h]);let m=[],c=new Array(i).fill(0),d=a.shape.slice();d[s]=1;let f=new Array(p);for(let h=0;h<f.length;h++){c[s]=h;let g=Hi({inputs:{x:a},backend:e,attrs:{begin:c,size:d}}),b=ye({inputs:{x:g},backend:e,attrs:{shape:u}});f[h]=b,m.push(g)}return m.forEach(h=>e.disposeData(h.dataId)),f}var ij={kernelName:ca,backendName:"webgpu",kernelFunc:gTe};var fv=class{constructor(t,e,n){this.outputShape=[];this.variableNames=["x","segmentIds"];this.uniforms="numSegments : i32, xSize: i32,";this.workgroupSize=[64,1,1];this.atomic=!0;if(this.outputShape=e,this.dispatchLayout=re(t),this.dispatch=Y(this.dispatchLayout,t,this.workgroupSize),n!=="float32"&&n!=="int32")throw new Error(`UnsortedSegmentSum only supports float32 and int32
              types, does not support ${n} type.`);this.type=n,this.shaderKey="unsortedSegmentSum"}getUserCode(){return`
    ${X("index")} {
      if (index < uniforms.xSize) {
        let coords = getXCoordsFromIndex(index);
        let b = coords[0];
        let inCol = coords[1];

        let segmentId = i32(getSegmentIds(inCol));
        if (segmentId >= 0) {
          let flatIndex = b * uniforms.numSegments + segmentId % uniforms.numSegments;
          let value = getX(b, inCol);

          ${co("&result[flatIndex]","value",this.type)}
        }
      }
    }
  `}};function bTe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,segmentIds:s}=t,{numSegments:a}=n,i=o.shape.length,p=[],u=0,l=I.getAxesPermutation([u],i),m=o;l!=null&&(m=fn({inputs:{x:o},backend:e,attrs:{perm:l}}),p.push(m),u=I.getInnerMostAxes(1,i)[0]);let c=I.segment_util.computeOutShape(m.shape,u,a),d=y.sizeFromShape([m.shape[u]]),f=ye({inputs:{x:m},backend:e,attrs:{shape:[-1,d]}});p.push(f);let h=o.dtype,g=[f.shape[0],a],b=Qt({backend:e,attrs:{shape:g,value:0,dtype:h}}),x=new fv(f.shape,g,h),T=[{type:"int32",data:[a]},{type:"int32",data:[y.sizeFromShape(f.shape)]}],C=e.runWebGPUProgram(x,[f,s],h,T,b),k=ye({inputs:{x:C},backend:e,attrs:{shape:c}});p.push(C);let w=k;if(l!=null){p.push(k);let _=I.getUndoAxesPermutation(l);w=fn({inputs:{x:w},backend:e,attrs:{perm:_}})}return p.forEach(_=>e.disposeData(_.dataId)),w}var uj={kernelName:du,backendName:"webgpu",kernelFunc:bTe};var yTe=[SV,u4,p4,l4,m4,c4,f4,h4,g4,b4,y4,x4,T4,C4,I4,S4,w4,A4,N4,D4,M4,P4,R4,B4,$4,O4,AV,G4,U4,K4,V4,H4,q4,j4,X4,Y4,Z4,Q4,tH,rH,nH,oH,aH,iH,sH,uH,pH,lH,mH,fH,hH,gH,bH,yH,xH,TH,CH,IH,kV,kH,wH,vH,SH,AH,NH,DH,_H,MH,PH,RH,wV,FH,W4,EH,LH,BH,$H,OH,zH,GH,UH,WH,KH,VH,HH,jH,XH,k4,YH,ZH,eq,QH,JH,tq,v4,rq,nq,oq,sq,iq,cH,uq,pq,lq,F4,mq,fq,hq,gq,bq,yq,xq,Tq,E4,Cq,Iq,kq,vq,vV,Sq,wq,Aq,Nq,Dq,_q,Mq,Pq,Rq,Fq,Eq,Lq,Bq,$q,Oq,zq,_4,Zq,Qq,Jq,aq,Gq,Wq,Uq,Kq,Hq,qq,jq,Xq,Yq,ej,dH,tj,rj,nj,Vq,sj,aj,d4,ij,uj,cq];for(let r of yTe)Gu(r);var _e=(s=>(s[s.float32=0]="float32",s[s.int32=1]="int32",s[s.bool=2]="bool",s[s.string=3]="string",s[s.complex64=4]="complex64",s))(_e||{}),Vm=(i=>(i[i.linear=0]="linear",i[i.relu=1]="relu",i[i.relu6=2]="relu6",i[i.prelu=3]="prelu",i[i.leakyrelu=4]="leakyrelu",i[i.sigmoid=5]="sigmoid",i[i.elu=6]="elu",i))(Vm||{});var pj;function xTe(r){pj=r.wasm.cwrap(fa,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function TTe(r){let{inputs:t,backend:e,attrs:n}=r,{a:o,b:s,bias:a,preluActivationWeights:i}=t;if(o.dtype!=="float32"||s.dtype!=="float32")throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:p,transposeB:u,activation:l,leakyreluAlpha:m}=n,c=e.dataIdMap.get(o.dataId).id,d=e.dataIdMap.get(s.dataId).id,f=0;if(a!=null){let P=e.dataIdMap.get(a.dataId);if(P.shape.length!==1)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${P.shape.length}.`);f=P.id}let h=i==null?0:e.dataIdMap.get(i.dataId).id,g=Vm[l];if(g==null)throw new Error(`${l} activation not yet supported for FusedConv2D in the wasm backend.`);let b=p?o.shape[2]:o.shape[1],x=u?s.shape[1]:s.shape[2],T=Mr.assertAndGetBroadcastShape(o.shape.slice(0,-2),s.shape.slice(0,-2)),C=e.makeOutput([...T,b,x],o.dtype),k=e.dataIdMap.get(C.dataId).id,w=new Uint8Array(new Int32Array(o.shape).buffer),_=new Uint8Array(new Int32Array(s.shape).buffer);return pj(c,w,o.shape.length,d,_,s.shape.length,p,u,g,f,h,m||0,k),C}var lj={kernelName:fa,backendName:"wasm",setupFunc:xTe,kernelFunc:TTe};function ke(r,t){let e;function n(s){e=s.wasm.cwrap(r,null,["number","number","number"])}function o(s){let{backend:a,inputs:{x:i}}=s,p=a.dataIdMap.get(i.dataId).id,u=a.makeOutput(i.shape,t||i.dtype),l=a.dataIdMap.get(u.dataId).id;return y.sizeFromShape(u.shape)===0||e(p,_e[i.dtype],l),u}return{kernelName:r,backendName:"wasm",setupFunc:n,kernelFunc:o}}var mj=ke(Xs);var cj=ke(vo);var dj=ke(So);function at(r,t,e){let n;function o(a){n=a.wasm.cwrap(r,null,["number","array","number","number","array","number","number","number"])}function s(a){let{backend:i,inputs:p}=a,{a:u,b:l}=p,m=i.dataIdMap.get(u.dataId).id,c=i.dataIdMap.get(l.dataId).id,d=e??u.dtype,f=I.assertAndGetBroadcastShape(u.shape,l.shape),h=i.makeOutput(f,d);if(y.sizeFromShape(f)===0)return h;let g=new Uint8Array(new Int32Array(u.shape).buffer),b=new Uint8Array(new Int32Array(l.shape).buffer),x=i.dataIdMap.get(h.dataId).id;return(()=>n(m,g,u.shape.length,c,b,l.shape.length,_e[u.dtype],x))(),h}return{kernelName:r,backendName:"wasm",setupFunc:o,kernelFunc:s}}var CTe=!0,fj=at(Mn,CTe);var hj;function ITe(r){hj=r.wasm.cwrap(wo,null,["array","number","number","number"])}function kTe(r){let{inputs:t,backend:e}=r,n=e.makeOutput(t[0].shape,t[0].dtype);if(y.sizeFromShape(n.shape)===0)return n;let o=t.map(i=>e.dataIdMap.get(i.dataId).id),s=new Uint8Array(new Int32Array(o).buffer),a=e.dataIdMap.get(n.dataId).id;return hj(s,o.length,_e[n.dtype],a),n}var gj={kernelName:wo,backendName:"wasm",setupFunc:ITe,kernelFunc:kTe};function Hm(r){let{inputs:{x:t},backend:e}=r;if(t.dtype==="string")return fr(e.readSync(t.dataId),t.shape,t.dtype);let n=e.makeOutput(t.shape,t.dtype),o=e.typedArrayFromHeap(t);return e.typedArrayFromHeap(n).set(o),n}var bj={kernelName:Yn,backendName:"wasm",kernelFunc:Hm};var yj;function vTe(r){yj=r.wasm.cwrap(Rn,null,["number","array","number","number","number","array","number"])}function js(r){let{inputs:t,backend:e,attrs:n}=r,[o,s]=wTe(t.x.shape,n.perm),a=!0;for(let f=0;f<s.length;f++)s[f]!==f&&(a=!1);let i=STe(t.x.shape,n.perm),p={dataId:t.x.dataId,shape:o,dtype:t.x.dtype};if(a){let f=Hm({inputs:t,backend:e});return f.shape=i,f}let u=e.makeOutput(i,p.dtype),l=e.dataIdMap.get(p.dataId).id,m=e.dataIdMap.get(u.dataId).id,c=new Uint8Array(new Int32Array(s).buffer),d=new Uint8Array(new Int32Array(p.shape).buffer);return yj(l,d,p.shape.length,_e[p.dtype],m,c,s.length),u}function STe(r,t){let e=new Array(r.length);for(let n=0;n<e.length;n++)e[n]=r[t[n]];return e}function wTe(r,t){let e=[],n=[];for(let o=0;o<r.length;++o)r[o]!==1&&e.push(r[o]),r[t[o]]!==1&&n.push(t[o]);for(let o=0;o<n.length;++o){let s=-1;for(let a=0;a<n.length;++a)n[a]>=o&&(s===-1||n[s]>n[a])&&(s=a);n[s]=o}return[e,n]}var xj={kernelName:Rn,backendName:"wasm",kernelFunc:js,setupFunc:vTe};function _n(r,t,e){let n=r.shape,o=r.shape.length,s=y.parseAxisParam(t,n),a=s,i=I.getAxesPermutation(a,o),p=null,u=!1;if(i!=null){let l=new Array(o);for(let d=0;d<l.length;d++)l[d]=n[i[d]];a=I.getInnerMostAxes(a.length,o),p=js({inputs:{x:r},attrs:{perm:i},backend:e});let m=e.dataIdMap.get(r.dataId).id;e.dataIdMap.get(p.dataId).id!==m&&(u=!0)}return{transposed:p,originalAxes:s,axes:a,inputWasTransposed:u}}var Tj;function ATe(r){Tj=r.wasm.cwrap(Ka,null,["number, number, number"])}function NTe(r){let{backend:t,inputs:e,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=e,p=t.dataIdMap.get(a.dataId).id,u=a,{transposed:l,axes:m,originalAxes:c,inputWasTransposed:d}=_n(a,o,t);if(d){let T=t.dataIdMap.get(l.dataId).id;u=l,p=T}let f=u.shape.length;I.assertAxesAreInnerMostDims("all",m,f);let[h,g]=I.computeOutAndReduceShapes(u.shape,m),b=y.sizeFromShape(g),x=t.makeOutput(h,a.dtype);if(y.sizeFromShape(u.shape)!==0){let T=t.dataIdMap.get(x.dataId).id;Tj(p,b,T)}if(d&&t.disposeData(l.dataId),s){let T=I.expandShapeToKeepDim(x.shape,c);x.shape=T}return x}var Cj={kernelName:Ka,backendName:"wasm",setupFunc:ATe,kernelFunc:NTe};var Ij;function DTe(r){Ij=r.wasm.cwrap(Va,null,["number, number, number"])}function _Te(r){let{backend:t,inputs:e,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=e,p=t.dataIdMap.get(a.dataId).id,u=a,{transposed:l,axes:m,originalAxes:c,inputWasTransposed:d}=_n(a,o,t);if(d){let T=t.dataIdMap.get(l.dataId).id;u=l,p=T}let f=u.shape.length;I.assertAxesAreInnerMostDims("any",m,f);let[h,g]=I.computeOutAndReduceShapes(u.shape,m),b=y.sizeFromShape(g),x=t.makeOutput(h,a.dtype);if(y.sizeFromShape(u.shape)!==0){let T=t.dataIdMap.get(x.dataId).id;Ij(p,b,T)}if(d&&t.disposeData(l.dataId),s){let T=I.expandShapeToKeepDim(x.shape,c);x.shape=T}return x}var kj={kernelName:Va,backendName:"wasm",setupFunc:DTe,kernelFunc:_Te};function hv(r){let t;function e(o){t=o.wasm.cwrap(r,null,["number","number","number","number","number"])}function n(o){let{backend:s,inputs:a,attrs:i}=o,{axis:p}=i,{x:u}=a,l=s.dataIdMap.get(u.dataId).id,m=l,c=u,{transposed:d,axes:f,inputWasTransposed:h}=_n(u,p,s);if(h){let k=s.dataIdMap.get(d.dataId).id;k!==l&&(c=d,m=k)}let g=c.shape.slice(0,-1),b=s.makeOutput(g,"int32"),x=s.dataIdMap.get(b.dataId).id,T=y.sizeFromShape(b.shape),C=c.shape[f[0]];return t(m,_e[c.dtype],T,C,x),h&&s.disposeData(d.dataId),b}return{kernelName:r,backendName:"wasm",setupFunc:e,kernelFunc:n}}var vj=hv(Ys);var Sj=hv(Zs);var wj=ke(Ao);var Aj=ke(No);var Nj=ke(Do);var Dj=at(Mo,!1);var _j=ke(_o);var Mj;function MTe(r){Mj=r.wasm.cwrap(Po,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function PTe(r){let{inputs:t,attrs:e,backend:n}=r,o=t.x,s=n.dataIdMap.get(o.dataId).id,{filterSize:a,strides:i,pad:p,dimRoundingMode:u}=e,l=I.computePool2DInfo(o.shape,a,i,1,p,u),m=l.filterHeight,c=l.filterWidth,d=l.padInfo.top,f=l.padInfo.right,h=l.padInfo.bottom,g=l.padInfo.left,b=l.strideHeight,x=l.strideWidth,T=l.inChannels;if(l.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${l.dataFormat}'. Please use 'channelsLast'.`);if(l.dilationWidth!==1||l.dilationHeight!==1)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${l.dilationHeight}, ${l.dilationWidth}].`);let C=n.makeOutput(l.outShape,"float32"),k=n.dataIdMap.get(C.dataId).id;return Mj(s,o.shape[0],o.shape[1],o.shape[2],m,c,d,f,h,g,b,x,T,k),C}var Pj={kernelName:Po,backendName:"wasm",setupFunc:MTe,kernelFunc:PTe};var Rj;function RTe(r){Rj=r.wasm.cwrap("AvgPool3D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function FTe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{filterSize:s,strides:a,pad:i,dimRoundingMode:p,dataFormat:u}=n,l=I.computePool3DInfo(o.shape,s,a,1,i,p,u),m=e.makeOutput(l.outShape,o.dtype);return Rj(e.dataIdMap.get(o.dataId).id,e.dataIdMap.get(m.dataId).id,l.batchSize,l.inChannels,l.inDepth,l.inHeight,l.inWidth,l.outDepth,l.outHeight,l.outWidth,l.strideDepth,l.strideHeight,l.strideWidth,l.dilationDepth,l.dilationHeight,l.dilationWidth,l.effectiveFilterDepth,l.effectiveFilterHeight,l.effectiveFilterWidth,l.padInfo.front,l.padInfo.top,l.padInfo.left),m}var Fj={kernelName:Qs,backendName:"wasm",setupFunc:RTe,kernelFunc:FTe};var Ej;function ETe(r){Ej=r.wasm.cwrap("AvgPool3DGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function LTe(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,input:s}=t,{filterSize:a,strides:i,pad:p,dimRoundingMode:u}=n,l=I.computePool3DInfo(s.shape,a,i,1,p,u),m=e.makeOutput(s.shape,s.dtype);return Ej(e.dataIdMap.get(o.dataId).id,e.dataIdMap.get(m.dataId).id,l.batchSize,l.inChannels,l.inDepth,l.inHeight,l.inWidth,l.outDepth,l.outHeight,l.outWidth,l.strideDepth,l.strideHeight,l.strideWidth,l.dilationDepth,l.dilationHeight,l.dilationWidth,l.effectiveFilterDepth,l.effectiveFilterHeight,l.effectiveFilterWidth,l.padInfo.front,l.padInfo.top,l.padInfo.left,l.filterDepth,l.filterHeight,l.filterWidth),m}var Lj={kernelName:Zi,backendName:"wasm",setupFunc:ETe,kernelFunc:LTe};var Bj;function BTe(r){Bj=r.wasm.cwrap("AvgPoolGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function $Te(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,input:s}=t,{filterSize:a,strides:i,pad:p}=n,u=I.computePool2DInfo(s.shape,a,i,1,p),l=e.makeOutput(s.shape,s.dtype);return Bj(e.dataIdMap.get(o.dataId).id,e.dataIdMap.get(l.dataId).id,u.batchSize,u.inChannels,u.inHeight,u.inWidth,u.outHeight,u.outWidth,u.strideHeight,u.strideWidth,u.dilationHeight,u.dilationWidth,u.effectiveFilterHeight,u.effectiveFilterWidth,u.padInfo.top,u.padInfo.left,u.filterHeight,u.filterWidth),l}var $j={kernelName:Yi,backendName:"wasm",setupFunc:BTe,kernelFunc:$Te};function xr(r){let{inputs:t,attrs:e}=r,{x:n}=t,{shape:o}=e,s=y.sizeFromShape(n.shape),a=y.inferFromImplicitShape(o,s);return y.assert(s===y.sizeFromShape(a),()=>`new shape: ${a}, old shape: ${n.shape}. New shape and old shape must have the same number of elements.`),r.backend.incRef(n.dataId),{dataId:n.dataId,shape:a,dtype:n.dtype}}var Oj={kernelName:ia,backendName:"wasm",kernelFunc:xr};var zj;function OTe(r){zj=r.wasm.cwrap(Ro,null,["number","array","number","number","array","number","number","number","number"])}function zTe(r){let{inputs:t,backend:e,attrs:n}=r,{a:o,b:s}=t,{transposeA:a,transposeB:i}=n;if(o.dtype!=="float32"||s.dtype!=="float32")throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let p=o.shape.length,u=s.shape.length,l=a?o.shape[p-2]:o.shape[p-1],m=i?s.shape[u-1]:s.shape[u-2],c=a?o.shape[p-1]:o.shape[p-2],d=i?s.shape[u-2]:s.shape[u-1],f=o.shape.slice(0,-2),h=s.shape.slice(0,-2),g=y.sizeFromShape(f),b=y.sizeFromShape(h),T=Mr.assertAndGetBroadcastShape(o.shape.slice(0,-2),s.shape.slice(0,-2)).concat([c,d]);y.assert(l===m,()=>`Error in matMul: inner shapes (${l}) and (${m}) of Tensors with shapes ${o.shape} and ${s.shape} and transposeA=${a} and transposeB=${i} must match.`);let C=a?[g,l,c]:[g,c,l],k=i?[b,d,m]:[b,m,d],w=xr({inputs:{x:o},backend:e,attrs:{shape:C}}),_=xr({inputs:{x:s},backend:e,attrs:{shape:k}}),P=e.dataIdMap.get(w.dataId).id,M=e.dataIdMap.get(_.dataId).id,R=a?w.shape[2]:w.shape[1],$=i?_.shape[1]:_.shape[2],G=Math.max(g,b),W=e.makeOutput([G,R,$],w.dtype),U=e.dataIdMap.get(W.dataId).id,V=new Uint8Array(new Int32Array(w.shape).buffer),K=new Uint8Array(new Int32Array(_.shape).buffer);return zj(P,V,w.shape.length,M,K,_.shape.length,a,i,U),e.disposeData(w.dataId),e.disposeData(_.dataId),W.shape=T,W}var Gj={kernelName:Ro,backendName:"wasm",setupFunc:OTe,kernelFunc:zTe};function za(r){let{inputs:{x:t},attrs:{begin:e,size:n},backend:o}=r,[s,a]=kt.parseSliceParams(t,e,n),i=kt.isSliceContinous(t.shape,s,a),p=o.readSync(t.dataId),u=o.makeOutput(a,t.dtype),l=y.computeStrides(t.shape),m=o.dataIdMap.get(u.dataId);if(i){let f=kt.computeFlatOffset(s,l);return t.dtype==="string"?m.stringBytes=p.slice(f,f+y.sizeFromShape(a)):o.typedArrayFromHeap(u).set(p.subarray(f,f+y.sizeFromShape(a))),u}if(t.dtype==="string"){let f=km(p,s,a,t.shape,t.dtype);return m.stringBytes=f,u}let c=o.typedArrayFromHeap(u),d=t.shape.length;if(d===2)GTe(p,l[0],c,s,a);else if(d===3)WTe(p,l[0],l[1],c,s,a);else if(d===4)UTe(p,l[0],l[1],l[2],c,s,a);else{let f=km(p,s,a,t.shape,t.dtype);c.set(f)}return u}function GTe(r,t,e,n,o){let s=0,a=n[0],i=n[1],p=a+o[0];for(let u=a;u<p;u++){let l=u*t+i;e.set(r.subarray(l,l+o[1]),s),s+=o[1]}}function WTe(r,t,e,n,o,s){let a=0,i=o[0],p=o[1],u=o[2],l=i+s[0],m=p+s[1];for(let c=i;c<l;c++)for(let d=p;d<m;d++){let f=c*t+d*e+u;n.set(r.subarray(f,f+s[2]),a),a+=s[2]}}function UTe(r,t,e,n,o,s,a){let i=0,p=s[0],u=s[1],l=s[2],m=p+a[0],c=u+a[1],d=l+a[2],f=s[3];for(let h=p;h<m;h++)for(let g=u;g<c;g++)for(let b=l;b<d;b++){let x=h*t+g*e+b*n+f;o.set(r.subarray(x,x+a[3]),i),i+=a[3]}}var Wj={kernelName:pa,backendName:"wasm",kernelFunc:za};function KTe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{blockShape:s,crops:a}=n,i=s.reduce((b,x)=>b*x),p=I.getReshaped(o.shape,s,i),u=I.getPermuted(p.length,s.length),l=I.getReshapedPermuted(o.shape,s,i),m=I.getSliceBeginCoords(a,s.length),c=I.getSliceSize(l,a,s.length),d=xr({inputs:{x:o},backend:e,attrs:{shape:p}}),f=js({inputs:{x:d},backend:e,attrs:{perm:u}}),h=xr({inputs:{x:f},backend:e,attrs:{shape:l}}),g=za({inputs:{x:h},backend:e,attrs:{begin:m,size:c}});return e.disposeData(d.dataId),e.disposeData(f.dataId),e.disposeData(d.dataId),g}var Uj={kernelName:Js,backendName:"wasm",kernelFunc:KTe};var Kj;function VTe(r){Kj=r.wasm.cwrap(Ha,null,["number","number","boolean","number","number","number"])}function HTe(r){let{backend:t,inputs:e,attrs:n}=r,{x:o,weights:s}=e,{size:a}=n,i=s.shape.reduce((m,c)=>m*c,1)!==0,p=o.shape.length===1?[a]:[o.shape[0],a],u=t.makeOutput(p,s.dtype);function l(m){return t.dataIdMap.get(m.dataId).id}return Kj(l(o),a,i,l(s),_e[s.dtype],l(u)),u}var Vj={kernelName:Ha,backendName:"wasm",setupFunc:VTe,kernelFunc:HTe};var qTe=!0,Hj=at($u,qTe);function jTe(r){let{inputs:t,backend:e}=r,{s0:n,s1:o}=t,s=e.typedArrayFromHeap(n),a=e.typedArrayFromHeap(o),i=I.assertAndGetBroadcastShape(Array.from(s),Array.from(a));return e.makeOutput([i.length],"int32",void 0,new Int32Array(i))}var qj={kernelName:Qi,backendName:"wasm",kernelFunc:jTe};function Kn(r){let{inputs:{x:t},attrs:{dtype:e},backend:n}=r,o=n.makeOutput(t.shape,e),s=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(o).set(s),o}var jj={kernelName:jn,backendName:"wasm",kernelFunc:Kn};var Xj=ke(Fo);var Yj;function XTe(r){Yj=r.wasm.cwrap(Xn,null,["number","number","number","number"])}function YTe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{clipValueMin:s,clipValueMax:a}=n,i=e.dataIdMap.get(o.dataId).id,p=e.makeOutput(o.shape,o.dtype),u=e.dataIdMap.get(p.dataId).id;return Yj(i,s,a,u),p}var Zj={kernelName:Xn,backendName:"wasm",setupFunc:XTe,kernelFunc:YTe};function r_(r){let{inputs:t,backend:e}=r,n=y.parseAxisParam(r.attrs.axis,t[0].shape)[0],o=t.map(d=>d.shape);I.assertParamsConsistent(o,n);let s=I.computeOutShape(t.map(d=>d.shape),n),a=t.filter(d=>y.sizeFromShape(d.shape)>0);if(a.length===1)return Hm({inputs:{x:a[0]},backend:e});let i=e.makeOutput(s,t[0].dtype);if(y.sizeFromShape(s)===0)return i;if(a[0].dtype==="string"){let d=a.map(T=>{let k=[-1,y.sizeFromShape(T.shape.slice(n))];return xr({inputs:{x:T},backend:e,attrs:{shape:k}})}),f=d.map(T=>({vals:e.readSync(T.dataId),shape:T.shape}));s=I.computeOutShape(d.map(T=>T.shape),1);let h=d[0].shape[0]===1,g=Tm(f,s,t[0].dtype,h),b=I.computeOutShape(a.map(T=>T.shape),n);i.shape=b;let x=e.dataIdMap.get(i.dataId);return x.stringBytes=I.fromStringArrayToUint8(g),d.forEach(T=>e.disposeData(T.dataId)),i}let p=y.sizeFromShape(a[0].shape.slice(0,n)),u=0,l=a.map(d=>{let f=y.sizeFromShape(d.shape.slice(n));return u+=f,f}),m=a.map(d=>e.typedArrayFromHeap(d)),c=e.typedArrayFromHeap(i);for(let d=0;d<p;d++){let f=d*u;for(let h=0;h<m.length;h++){let g=l[h],b=d*g,x=m[h].subarray(b,b+g);c.set(x,f),f+=g}}return i}var Qj={kernelName:ea,backendName:"wasm",kernelFunc:r_};var Jj;function ZTe(r){Jj=r.wasm.cwrap(Eo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function QTe(r){let{inputs:t,attrs:e,backend:n}=r,{x:o,filter:s}=t,a=n.dataIdMap.get(o.dataId).id,i=n.dataIdMap.get(s.dataId).id,{strides:p,dilations:u,pad:l,dimRoundingMode:m,dataFormat:c}=e,d=I.convertConv2DDataFormat(c),f=I.computeConv2DInfo(o.shape,s.shape,p,u,l,m,!1,d),h=f.filterHeight,g=f.filterWidth,b=f.padInfo.top,x=f.padInfo.right,T=f.padInfo.bottom,C=f.padInfo.left,k=f.dilationHeight,w=f.dilationWidth,_=f.strideHeight,P=f.strideWidth,M=f.inChannels,R=f.outChannels,$=f.padInfo.type==="SAME"?1:0;if(f.dataFormat!=="channelsLast")throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let G=n.makeOutput(f.outShape,"float32"),W=n.dataIdMap.get(G.dataId).id;return Jj(a,o.shape[0],o.shape[1],o.shape[2],i,h,g,b,x,T,C,$,k,w,_,P,M,R,W),G}var e6={kernelName:Eo,backendName:"wasm",setupFunc:ZTe,kernelFunc:QTe};var t6;function JTe(r){t6=r.wasm.cwrap(Lo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function eCe(r){let{backend:t,inputs:e,attrs:n}=r,{dy:o,filter:s}=e,{strides:a,pad:i,dataFormat:p,dimRoundingMode:u,inputShape:l}=n,m=1,c=I.convertConv2DDataFormat(p),d=I.computeConv2DInfo(l,s.shape,a,m,i,u,!1,c),{batchSize:f,filterHeight:h,filterWidth:g,inChannels:b,inHeight:x,inWidth:T,outChannels:C,outHeight:k,outWidth:w,strideHeight:_,strideWidth:P}=d,M=h-1-d.padInfo.top,R=g-1-d.padInfo.left,$=d.dataFormat==="channelsLast",G=y.computeStrides(d.inShape),W=y.computeStrides(o.shape),[U,V,K]=y.computeStrides(s.shape),q=G[0],j=$?G[1]:G[2],te=$?G[2]:1,se=$?1:G[1],ie=W[0],pe=$?W[1]:W[2],ae=$?W[2]:1,le=$?1:W[1],fe=t.makeOutput(d.inShape,"float32"),Te=t.dataIdMap.get(fe.dataId).id,Ae=t.dataIdMap.get(o.dataId).id,$e=t.dataIdMap.get(s.dataId).id;return t6(Ae,$e,f,h,g,x,T,b,k,w,C,_,P,M,R,U,V,K,q,j,te,se,ie,pe,ae,le,Te),fe}var r6={kernelName:Lo,backendName:"wasm",setupFunc:JTe,kernelFunc:eCe};var n6;function tCe(r){n6=r.wasm.cwrap(Bo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function rCe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s}=t,{strides:a,pad:i,dilations:p}=n;if(o.dtype!=="float32")throw new Error(`Tensor x must have dtype float32, got ${o.dtype}`);if(s.dtype!=="float32")throw new Error(`Tensor filter must have dtype float32, got ${s.dtype}`);let u=I.computeConv3DInfo(o.shape,s.shape,a,p,i),l=e.makeOutput(u.outShape,o.dtype);return n6(e.dataIdMap.get(o.dataId).id,e.dataIdMap.get(s.dataId).id,e.dataIdMap.get(l.dataId).id,u.batchSize,u.inDepth,u.inHeight,u.inWidth,u.inChannels,u.outDepth,u.outHeight,u.outWidth,u.outChannels,u.strideDepth,u.strideHeight,u.strideWidth,u.dilationDepth,u.dilationHeight,u.dilationWidth,u.filterDepth,u.filterHeight,u.filterWidth,u.padInfo.front,u.padInfo.top,u.padInfo.left),l}var o6={kernelName:Bo,backendName:"wasm",setupFunc:tCe,kernelFunc:rCe};var s6;function nCe(r){s6=r.wasm.cwrap(qa,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function oCe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,dy:s}=t,{strides:a,pad:i,filterShape:p}=n;if(o.dtype!=="float32")throw new Error(`Tensor dy must have dtype float32, got ${o.dtype}`);if(s.dtype!=="float32")throw new Error(`Tensor filter must have dtype float32, got ${s.dtype}`);let u=I.computeConv3DInfo(o.shape,p,a,1,i),l=e.makeOutput(u.filterShape,s.dtype);return s6(e.dataIdMap.get(o.dataId).id,e.dataIdMap.get(s.dataId).id,e.dataIdMap.get(l.dataId).id,u.batchSize,u.inDepth,u.inHeight,u.inWidth,u.inChannels,u.outDepth,u.outHeight,u.outWidth,u.outChannels,u.strideDepth,u.strideHeight,u.strideWidth,u.dilationDepth,u.dilationHeight,u.dilationWidth,u.filterDepth,u.filterHeight,u.filterWidth,u.padInfo.front,u.padInfo.top,u.padInfo.left),l}var a6={kernelName:qa,backendName:"wasm",setupFunc:nCe,kernelFunc:oCe};var i6;function sCe(r){i6=r.wasm.cwrap(ja,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function aCe(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,filter:s}=t,{pad:a,strides:i,inputShape:p}=n;if(o.dtype!=="float32")throw new Error(`Tensor dy must have dtype float32, got ${o.dtype}`);if(s.dtype!=="float32")throw new Error(`Tensor filter must have dtype float32, got ${s.dtype}`);let u=I.computeConv3DInfo(p,s.shape,i,1,a),l=e.makeOutput(u.inShape,o.dtype);return i6(e.dataIdMap.get(s.dataId).id,e.dataIdMap.get(o.dataId).id,e.dataIdMap.get(l.dataId).id,u.batchSize,u.inDepth,u.inHeight,u.inWidth,u.inChannels,u.outDepth,u.outHeight,u.outWidth,u.outChannels,u.strideDepth,u.strideHeight,u.strideWidth,u.dilationDepth,u.dilationHeight,u.dilationWidth,u.filterDepth,u.filterHeight,u.filterWidth,u.padInfo.front,u.padInfo.top,u.padInfo.left),l}var u6={kernelName:ja,backendName:"wasm",setupFunc:sCe,kernelFunc:aCe};var p6=ke($o);var l6=ke(Oo);var m6=(e=>(e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest",e))(m6||{}),c6;function iCe(r){c6=r.wasm.cwrap(Ya,null,["number","number","number","number","array","number","number","number","number","number"])}function uCe(r){let{backend:t,inputs:e,attrs:n}=r,{method:o,extrapolationValue:s,cropSize:a}=n,{image:i,boxes:p,boxInd:u}=e,l=p.shape[0],[m,c]=a,d=[l,m,c,i.shape[3]],f=t.dataIdMap.get(i.dataId),h;i.dtype!=="float32"&&(h=Kn({backend:t,inputs:{x:i},attrs:{dtype:"float32"}}),f=t.dataIdMap.get(h.dataId));let g=f.id,b=t.dataIdMap.get(p.dataId).id,x=t.dataIdMap.get(u.dataId).id,T=t.makeOutput(d,"float32"),C=t.dataIdMap.get(T.dataId).id,k=new Uint8Array(new Int32Array(i.shape).buffer);return c6(g,b,x,l,k,m,c,m6[o],s,C),h!=null&&t.disposeData(h.dataId),T}var d6={kernelName:Ya,backendName:"wasm",setupFunc:iCe,kernelFunc:uCe};var f6;function pCe(r){f6=r.wasm.cwrap(Xa,null,["number","number","number","number","number","number"])}function lCe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,exclusive:a,reverse:i}=n,p=o.shape.length;y.assert(o.dtype==="float32"||o.dtype==="int32",()=>`cumprod does not support ${o.dtype} tensors in the WASM backend`);let u=I.getAxesPermutation([s],p),l=o;u!==null&&(l=js({inputs:{x:o},attrs:{perm:u},backend:e}));let m=I.getInnerMostAxes(1,p)[0];I.assertAxesAreInnerMostDims("cumprod",[m],p);let c=e.makeOutput(l.shape,l.dtype),d=l.shape[m],f=e.dataIdMap.get(l.dataId).id,h=e.dataIdMap.get(c.dataId).id;f6(f,a?1:0,i?1:0,d,h,_e[o.dtype]);let g=c;if(u!==null){let b=I.getUndoAxesPermutation(u);g=js({inputs:{x:c},attrs:{perm:b},backend:e}),e.disposeData(l.dataId),e.disposeData(c.dataId)}return g}var h6={kernelName:Xa,backendName:"wasm",setupFunc:pCe,kernelFunc:lCe};var g6;function mCe(r){g6=r.wasm.cwrap(zo,null,["number","number","number","number","number","number"])}function cCe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,exclusive:a,reverse:i}=n,p=o.shape.length;y.assert(o.dtype==="float32"||o.dtype==="int32",()=>`cumsum does not support ${o.dtype} tensors in the WASM backend`);let u=I.getAxesPermutation([s],p),l=o;u!==null&&(l=js({inputs:{x:o},attrs:{perm:u},backend:e}));let m=I.getInnerMostAxes(1,p)[0];I.assertAxesAreInnerMostDims("cumsum",[m],p);let c=e.makeOutput(l.shape,l.dtype),d=l.shape[m],f=e.dataIdMap.get(l.dataId).id,h=e.dataIdMap.get(c.dataId).id;g6(f,a?1:0,i?1:0,d,h,_e[o.dtype]);let g=c;if(u!==null){let b=I.getUndoAxesPermutation(u);g=js({inputs:{x:c},attrs:{perm:b},backend:e}),e.disposeData(l.dataId),e.disposeData(c.dataId)}return g}var b6={kernelName:zo,backendName:"wasm",setupFunc:mCe,kernelFunc:cCe};var y6;function dCe(r){y6=r.wasm.cwrap("DenseBincount",null,["number","array","number","number","boolean","number","number","boolean","number"])}function fCe(r){let{backend:t,inputs:e,attrs:n}=r,{x:o,weights:s}=e,{size:a,binaryOutput:i}=n,p=s.shape.reduce((c,d)=>c*d,1)!==0,u=o.shape.length===1?[a]:[o.shape[0],a],l=t.makeOutput(u,s.dtype);function m(c){return t.dataIdMap.get(c.dataId).id}return y6(m(o),new Uint8Array(new Int32Array(o.shape).buffer),o.shape.length,a,p,m(s),_e[s.dtype],i,m(l)),l}var x6={kernelName:eu,backendName:"wasm",setupFunc:dCe,kernelFunc:fCe};var T6;function hCe(r){T6=r.wasm.cwrap(Za,null,["number","number","number","array","number","array","array","number","number"])}function gCe(r){let{backend:t,inputs:e,attrs:n}=r,{x:o}=e,{blockSize:s,dataFormat:a}=n,i=o.shape[0],p=a==="NHWC"?o.shape[1]:o.shape[2],u=a==="NHWC"?o.shape[2]:o.shape[3],l=a==="NHWC"?o.shape[3]:o.shape[1],m=p*s,c=u*s,d=l/(s*s),f=a==="NHWC"?[i,m,c,d]:[i,d,m,c],h=t.makeOutput(f,"float32"),b=t.dataIdMap.get(o.dataId).id,x=new Uint8Array(new Int32Array(y.computeStrides(o.shape)).buffer),T=new Uint8Array(new Int32Array(f).buffer),C=new Uint8Array(new Int32Array(y.computeStrides(f)).buffer),k=t.dataIdMap.get(h.dataId).id;return T6(b,s,a==="NHWC"?1:0,x,o.shape.length-1,T,C,f.length,k),h}var C6={kernelName:Za,backendName:"wasm",setupFunc:hCe,kernelFunc:gCe};var I6;function bCe(r){I6=r.wasm.cwrap(Go,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function yCe(r){let{inputs:t,attrs:e,backend:n}=r,{x:o,filter:s}=t,a=n.dataIdMap.get(o.dataId).id,i=n.dataIdMap.get(s.dataId).id,{strides:p,dilations:u,pad:l,dimRoundingMode:m}=e,c=u??[1,1],d=I.computeConv2DInfo(o.shape,s.shape,p,c,l,m,!0),f=d.filterHeight,h=d.filterWidth,g=d.padInfo.top,b=d.padInfo.right,x=d.padInfo.bottom,T=d.padInfo.left,C=d.dilationHeight,k=d.dilationWidth,w=d.strideHeight,_=d.strideWidth,P=d.inChannels,M=d.outChannels,R=d.padInfo.type==="SAME"?1:0;if(d.dataFormat!=="channelsLast")throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${d.dataFormat}'. Please use 'channelsLast'.`);let $=n.makeOutput(d.outShape,"float32"),G=n.dataIdMap.get($.dataId).id;return I6(a,o.shape[0],o.shape[1],o.shape[2],i,f,h,g,b,x,T,R,C,k,w,_,P,M,G),$}var k6={kernelName:Go,backendName:"wasm",setupFunc:bCe,kernelFunc:yCe};var v6;function xCe(r){v6=r.wasm.cwrap("Diag",null,["number","number","number","number"])}function TCe(r){let{inputs:t,backend:e}=r,{x:n}=t,o=y.sizeFromShape(n.shape),s=e.makeOutput([...n.shape,...n.shape],n.dtype);return v6(e.dataIdMap.get(n.dataId).id,_e[n.dtype],o,e.dataIdMap.get(s.dataId).id),s}var S6={kernelName:tu,backendName:"wasm",setupFunc:xCe,kernelFunc:TCe};var w6;function CCe(r){w6=r.wasm.cwrap(Wo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function ICe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s}=t,{strides:a,pad:i,dilations:p}=n;if(o.dtype!==s.dtype)throw new Error(`Dilation2D error: x must have the same dtype as filter. Got ${o.dtype} and ${s.dtype}`);let u=I.computeDilation2DInfo(o.shape,s.shape,a,i,"NHWC",p),l=e.makeOutput(u.outShape,o.dtype);return w6(e.dataIdMap.get(o.dataId).id,e.dataIdMap.get(s.dataId).id,e.dataIdMap.get(l.dataId).id,_e[o.dtype],u.batchSize,u.inChannels,u.inHeight,u.inWidth,u.outHeight,u.outWidth,u.strideHeight,u.strideWidth,u.dilationHeight,u.dilationWidth,u.filterHeight,u.filterWidth,u.padInfo.top,u.padInfo.left),l}var A6={kernelName:Wo,backendName:"wasm",setupFunc:CCe,kernelFunc:ICe};var N6;function kCe(r){N6=r.wasm.cwrap(nu,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function vCe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s,dy:a}=t,{strides:i,pad:p,dilations:u}=n;if(o.dtype!==s.dtype||o.dtype!==a.dtype)throw new Error(`Dilation2DBackpropFilter error: x must have the same dtype as filter and dy. Got ${o.dtype}, ${s.dtype}, and ${a.dtype}`);let l=I.computeDilation2DInfo(o.shape,s.shape,i,p,"NHWC",u),m=e.makeOutput(s.shape,s.dtype);return N6(e.dataIdMap.get(o.dataId).id,e.dataIdMap.get(s.dataId).id,e.dataIdMap.get(a.dataId).id,e.dataIdMap.get(m.dataId).id,_e[o.dtype],l.batchSize,l.inChannels,l.inHeight,l.inWidth,l.outHeight,l.outWidth,l.strideHeight,l.strideWidth,l.dilationHeight,l.dilationWidth,l.filterHeight,l.filterWidth,l.padInfo.top,l.padInfo.left),m}var D6={kernelName:nu,backendName:"wasm",setupFunc:kCe,kernelFunc:vCe};var _6;function SCe(r){_6=r.wasm.cwrap(ru,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function wCe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s,dy:a}=t,{strides:i,pad:p,dilations:u}=n;if(o.dtype!==s.dtype||o.dtype!==a.dtype)throw new Error(`Dilation2DBackpropInput error: x must have the same dtype as filter and dy. Got ${o.dtype}, ${s.dtype}, and ${a.dtype}`);let l=I.computeDilation2DInfo(o.shape,s.shape,i,p,"NHWC",u),m=e.makeOutput(o.shape,o.dtype);return _6(e.dataIdMap.get(o.dataId).id,e.dataIdMap.get(s.dataId).id,e.dataIdMap.get(a.dataId).id,e.dataIdMap.get(m.dataId).id,_e[o.dtype],l.batchSize,l.inChannels,l.inHeight,l.inWidth,l.outHeight,l.outWidth,l.strideHeight,l.strideWidth,l.dilationHeight,l.dilationWidth,l.filterHeight,l.filterWidth,l.padInfo.top,l.padInfo.left),m}var M6={kernelName:ru,backendName:"wasm",setupFunc:SCe,kernelFunc:wCe};var P6=ke(Ko);var R6;function ACe(r){R6=r.wasm.cwrap(Qa,null,["number","number","number"])}function NCe(r){let{inputs:t,backend:e}=r,{dy:n,y:o}=t,s=e.makeOutput(o.shape,"float32"),a=i=>e.dataIdMap.get(i.dataId).id;return R6(a(o),a(n),a(s)),s}var F6={kernelName:Qa,backendName:"wasm",setupFunc:ACe,kernelFunc:NCe};var DCe=!1,E6=at(Ja,DCe,"bool");var L6=ke(Vo);var B6=ke(Ho,"float32");function gv(r){let{inputs:t,attrs:e,backend:n}=r,{input:o}=t,{dim:s}=e,a=o.shape.length,i=o.shape.slice(),p=s;return s<0&&(y.assert(-(a+1)<=s,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),p=a+s+1),i.splice(p,0,1),xr({inputs:{x:o},backend:n,attrs:{shape:i}})}var $6={kernelName:ta,backendName:"wasm",kernelFunc:gv};var O6=ke(qo,"float32");function n_(r){let{attrs:{shape:t,value:e,dtype:n},backend:o}=r,s=o.makeOutput(t,n);return o.typedArrayFromHeap(s).fill(e),s}var z6={kernelName:ou,backendName:"wasm",kernelFunc:n_};var G6;function _Ce(r){G6=r.wasm.cwrap(ei,null,["number","number","number","number","number","number"])}function MCe(r){let{inputs:t,backend:e}=r,{image:n}=t,o=e.makeOutput(n.shape,n.dtype),s=e.dataIdMap.get(n.dataId).id,a=e.dataIdMap.get(o.dataId).id,[i,p,u,l]=n.shape;return G6(s,i,p,u,l,a),o}var W6={kernelName:ei,backendName:"wasm",kernelFunc:MCe,setupFunc:_Ce};var U6=ke(jo);var PCe=!1,K6=at(Xo,PCe);var V6;function RCe(r){V6=r.wasm.cwrap(Yo,null,["number","number","number","number","number","number","number"])}function FCe(r){let{backend:t,inputs:e,attrs:n}=r,{varianceEpsilon:o}=n,{x:s,mean:a,variance:i,offset:p,scale:u}=e,l=t.dataIdMap.get(s.dataId).id,m=t.dataIdMap.get(a.dataId).id,c=t.dataIdMap.get(i.dataId).id,d=p!=null?t.dataIdMap.get(p.dataId).id:0,f=u!=null?t.dataIdMap.get(u.dataId).id:0,h=t.makeOutput(s.shape,s.dtype);if(y.sizeFromShape(s.shape)===0)return h;let g=t.dataIdMap.get(h.dataId).id;return V6(l,m,c,d,f,o,g),h}var H6={kernelName:Yo,backendName:"wasm",setupFunc:RCe,kernelFunc:FCe};var q6;function ECe(r){q6=r.wasm.cwrap(ha,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function LCe(r){let{inputs:t,attrs:e,backend:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=t,{strides:p,pad:u,dilations:l,dataFormat:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=e,h=I.computeConv2DInfo(o.shape,s.shape,p,l,u,c),g=Vm[d];if(g==null)throw new Error(`${d} activation not yet supported for FusedConv2D in the wasm backend.`);let b=n.dataIdMap.get(o.dataId).id,x=n.dataIdMap.get(s.dataId).id,T=h.outChannels,C=0;if(a!=null){let ae=n.dataIdMap.get(a.dataId);if(ae.shape.length!==1)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${ae.shape.length}.`);if(ae.shape[0]!==T)throw new Error(`FusedConv2D bias shape (${ae.shape}) does not match the number of output channels (${T})`);C=ae.id}let k=h.filterHeight,w=h.filterWidth,_=h.padInfo.top,P=h.padInfo.right,M=h.padInfo.bottom,R=h.padInfo.left,$=h.dilationHeight,G=h.dilationWidth,W=h.strideHeight,U=h.strideWidth,V=h.inChannels,K=h.padInfo.type==="SAME"?1:0,q=h.batchSize,j=h.inHeight,te=h.inWidth;if(m!=="NHWC")throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${m}'. Please use 'NHWC'.`);let se=n.makeOutput(h.outShape,"float32"),ie=n.dataIdMap.get(se.dataId).id,pe=i==null?0:n.dataIdMap.get(i.dataId).id;return q6(b,q,j,te,x,k,w,C,_,P,M,R,K,$,G,W,U,V,T,g,pe,f||0,ie),se}var j6={kernelName:ha,backendName:"wasm",setupFunc:ECe,kernelFunc:LCe};var X6;function BCe(r){X6=r.wasm.cwrap(ga,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function $Ce(r){let{inputs:t,attrs:e,backend:n}=r,{x:o,filter:s,bias:a,preluActivationWeights:i}=t,{strides:p,pad:u,dilations:l,dataFormat:m,dimRoundingMode:c,activation:d,leakyreluAlpha:f}=e,h=I.computeConv2DInfo(o.shape,s.shape,p,l,u,c,!0),g=Vm[d];if(g==null)throw new Error(`${d} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let b=n.dataIdMap.get(o.dataId).id,x=n.dataIdMap.get(s.dataId).id,T=h.outChannels,C=0;if(a!=null){let ae=n.dataIdMap.get(a.dataId);if(ae.shape.length!==1)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${ae.shape.length}.`);if(ae.shape[0]!==T)throw new Error(`FusedDepthwiseConv2D bias shape (${ae.shape}) does not match the number of output channels (${T})`);C=ae.id}let k=h.filterHeight,w=h.filterWidth,_=h.padInfo.top,P=h.padInfo.right,M=h.padInfo.bottom,R=h.padInfo.left,$=h.dilationHeight,G=h.dilationWidth,W=h.strideHeight,U=h.strideWidth,V=h.inChannels,K=h.padInfo.type==="SAME"?1:0,q=h.batchSize,j=h.inHeight,te=h.inWidth;if(m!=="NHWC")throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${m}'. Please use 'NHWC'.`);let se=n.makeOutput(h.outShape,"float32"),ie=n.dataIdMap.get(se.dataId).id,pe=i==null?0:n.dataIdMap.get(i.dataId).id;return X6(b,q,j,te,x,k,w,C,_,P,M,R,K,$,G,W,U,V,T,g,pe,f||0,ie),se}var Y6={kernelName:ga,backendName:"wasm",setupFunc:BCe,kernelFunc:$Ce};var Z6;function OCe(r){Z6=r.wasm.cwrap(ti,null,["number","number","number","number","number","number","array","number"])}function zCe(r){let{backend:t,inputs:e}=r,{params:n,indices:o}=e,[s,a,i,p]=qy.prepareAndValidate(n,o),u=t.makeOutput(s,n.dtype);if(a===0)return u;let l=o.shape,m=l[l.length-1],d=t.dataIdMap.get(n.dataId).id,h=t.dataIdMap.get(o.dataId).id,g=new Uint8Array(new Int32Array(p).buffer),b=t.dataIdMap.get(u.dataId).id;return Z6(d,_e[n.dtype],h,a,m,i,g,b),u}var Q6={kernelName:ti,backendName:"wasm",setupFunc:OCe,kernelFunc:zCe};var J6;function GCe(r){J6=r.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function WCe(r){let{backend:t,inputs:e,attrs:n}=r,{x:o,indices:s}=e,{axis:a,batchDims:i}=n,p=y.parseAxisParam(a,o.shape)[0],u=t.readSync(s.dataId),l=o.shape[p];for(let M=0;M<u.length;++M){let R=u[M];y.assert(R<=l-1&&R>=0,()=>`GatherV2: the index value ${R} is not in [0, ${l-1}]`)}let m=I.segment_util.collectGatherOpShapeInfo(o,s,p,i),c=xr({inputs:{x:o},attrs:{shape:[m.batchSize,m.outerSize,m.dimSize,m.sliceSize]},backend:t}),d=y.sizeFromShape(s.shape),f=xr({inputs:{x:s},attrs:{shape:[m.batchSize,d/m.batchSize]},backend:t}),h=[m.batchSize,m.outerSize,d/m.batchSize,m.sliceSize],g=t.makeOutput(h,o.dtype);if(y.sizeFromShape(o.shape)===0)return g;let b=c.shape.length-1,T=t.dataIdMap.get(c.dataId).id,k=t.dataIdMap.get(f.dataId).id,w=t.dataIdMap.get(g.dataId).id,_=new Uint8Array(new Int32Array(y.computeStrides(c.shape)).buffer),P=new Uint8Array(new Int32Array(y.computeStrides(h)).buffer);return J6(T,_e[o.dtype],_,b,k,m.batchSize,P,w),t.disposeData(c.dataId),t.disposeData(f.dataId),g.shape=m.outputShape,g}var e8={kernelName:ra,backendName:"wasm",setupFunc:GCe,kernelFunc:WCe};var UCe=!1,t8=at(ri,UCe,"bool");var KCe=!1,r8=at(Zo,KCe,"bool");var n8=ke(Qo,"bool");var o8=ke(Jo,"bool");var s8=ke(es,"bool");var a8;function VCe(r){a8=r.wasm.cwrap(ts,null,["number","number","number","number"])}function HCe(r){let{inputs:{x:t},attrs:{alpha:e},backend:n}=r,o=n.dataIdMap.get(t.dataId).id,s=n.makeOutput(t.shape,"float32");if(y.sizeFromShape(t.shape)!==0){let a=n.dataIdMap.get(s.dataId).id;a8(o,_e[t.dtype],e,a)}return s}var i8={kernelName:ts,backendName:"wasm",setupFunc:VCe,kernelFunc:HCe};var qCe=!1,u8=at(ni,qCe,"bool");var jCe=!1,p8=at(oi,jCe,"bool");var l8;function XCe(r){l8=r.wasm.cwrap(si,null,["number","number","number","number"])}function YCe(r){let{attrs:t,backend:e}=r,{start:n,stop:o,num:s}=t,a=Math.floor(s),i=e.makeOutput([a],"float32");return l8(e.dataIdMap.get(i.dataId).id,n,o,a),i}var m8={kernelName:si,backendName:"wasm",setupFunc:XCe,kernelFunc:YCe};var c8=ke(rs);var d8=ke(ns);var ZCe=!1,f8=at(ai,ZCe,"bool");var h8=ke(ii);var QCe=!1,g8=at(ui,QCe,"bool");var JCe=!1,b8=at(R_,JCe,"bool");var y8;function eIe(r){y8=r.wasm.cwrap(os,null,["number","number","number","number","number","number","number"])}function tIe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{depthRadius:s,bias:a,alpha:i,beta:p}=n;if(o.dtype!=="float32")throw new Error("LRN error: x must have dtype float32");let u=e.makeOutput(o.shape,o.dtype);return y8(e.dataIdMap.get(o.dataId).id,e.dataIdMap.get(u.dataId).id,o.shape[3],s,a,i,p),u}var x8={kernelName:os,backendName:"wasm",setupFunc:eIe,kernelFunc:tIe};var T8;function rIe(r){T8=r.wasm.cwrap(pi,null,["number","number","number","number","number","number","number","number","number"])}function nIe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,y:s,dy:a}=t,{depthRadius:i,bias:p,alpha:u,beta:l}=n;if(o.dtype!=="float32"||s.dtype!=="float32"||a.dtype!=="float32")throw new Error("LRNGrad error: x, y, and dy must have dtype float32");let m=e.makeOutput(o.shape,o.dtype);return T8(e.dataIdMap.get(o.dataId).id,e.dataIdMap.get(s.dataId).id,e.dataIdMap.get(a.dataId).id,e.dataIdMap.get(m.dataId).id,a.shape[3],i,p,u,l),m}var C8={kernelName:pi,backendName:"wasm",setupFunc:rIe,kernelFunc:nIe};var I8;function oIe(r){I8=r.wasm.cwrap(ss,null,["number","number","number","number"])}function sIe(r){let{backend:t,inputs:e,attrs:n}=r,{reductionIndices:o,keepDims:s}=n,{x:a}=e,p=t.dataIdMap.get(a.dataId).id,u=a,{transposed:l,axes:m,originalAxes:c,inputWasTransposed:d}=_n(a,o,t);if(d){let T=t.dataIdMap.get(l.dataId).id;u=l,p=T}let f=u.shape.length;I.assertAxesAreInnerMostDims("max",m,f);let[h,g]=I.computeOutAndReduceShapes(u.shape,m),b=y.sizeFromShape(g),x=t.makeOutput(h,a.dtype);if(y.sizeFromShape(u.shape)!==0){let T=t.dataIdMap.get(x.dataId).id;I8(p,_e[a.dtype],b,T)}if(d&&t.disposeData(l.dataId),s){let T=I.expandShapeToKeepDim(x.shape,c);x.shape=T}return x}var k8={kernelName:ss,backendName:"wasm",setupFunc:oIe,kernelFunc:sIe};var aIe=!1,v8=at(as,aIe);var S8;function iIe(r){S8=r.wasm.cwrap(is,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function uIe(r){let{inputs:t,attrs:e,backend:n}=r,o=t.x,s=n.dataIdMap.get(o.dataId).id;y.assert(o.dtype==="float32",()=>`Error in MaxPool: only float32 input is supported. Got ${o.dtype}.`);let{filterSize:a,strides:i,pad:p,dimRoundingMode:u}=e,l=I.computePool2DInfo(o.shape,a,i,1,p,u),m=l.filterHeight,c=l.filterWidth,d=l.padInfo.top,f=l.padInfo.right,h=l.padInfo.bottom,g=l.padInfo.left,b=l.dilationHeight,x=l.dilationWidth,T=l.strideHeight,C=l.strideWidth,k=l.inChannels,w=l.outChannels;if(l.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${l.dataFormat}'. Please use 'channelsLast'.`);let _=n.makeOutput(l.outShape,"float32"),P=n.dataIdMap.get(_.dataId).id;return S8(s,o.shape[0],o.shape[1],o.shape[2],m,c,d,f,h,g,b,x,T,C,k,w,P),_}var w8={kernelName:is,backendName:"wasm",setupFunc:iIe,kernelFunc:uIe};var A8;function pIe(r){A8=r.wasm.cwrap("MaxPool3D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function lIe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{filterSize:s,strides:a,pad:i,dimRoundingMode:p,dataFormat:u}=n,l=I.computePool3DInfo(o.shape,s,a,1,i,p,u),m=e.makeOutput(l.outShape,o.dtype);return A8(e.dataIdMap.get(o.dataId).id,e.dataIdMap.get(m.dataId).id,l.batchSize,l.inChannels,l.inDepth,l.inHeight,l.inWidth,l.outDepth,l.outHeight,l.outWidth,l.strideDepth,l.strideHeight,l.strideWidth,l.dilationDepth,l.dilationHeight,l.dilationWidth,l.effectiveFilterDepth,l.effectiveFilterHeight,l.effectiveFilterWidth,l.padInfo.front,l.padInfo.top,l.padInfo.left),m}var N8={kernelName:na,backendName:"wasm",setupFunc:pIe,kernelFunc:lIe};var D8;function mIe(r){D8=r.wasm.cwrap("MaxPool3DGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function cIe(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,input:s}=t,{filterSize:a,strides:i,pad:p,dimRoundingMode:u}=n,l=I.computePool3DInfo(s.shape,a,i,1,p,u),m=e.makeOutput(s.shape,s.dtype);return D8(e.dataIdMap.get(s.dataId).id,e.dataIdMap.get(o.dataId).id,e.dataIdMap.get(m.dataId).id,l.batchSize,l.inChannels,l.inDepth,l.inHeight,l.inWidth,l.outDepth,l.outHeight,l.outWidth,l.strideDepth,l.strideHeight,l.strideWidth,l.dilationDepth,l.dilationHeight,l.dilationWidth,l.effectiveFilterDepth,l.effectiveFilterHeight,l.effectiveFilterWidth,l.padInfo.front,l.padInfo.top,l.padInfo.left),m}var _8={kernelName:au,backendName:"wasm",setupFunc:mIe,kernelFunc:cIe};var M8;function dIe(r){M8=r.wasm.cwrap("MaxPoolGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function fIe(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,input:s}=t,{filterSize:a,strides:i,pad:p,dimRoundingMode:u}=n,l=I.computePool2DInfo(s.shape,a,i,1,p,u),m=e.makeOutput(s.shape,s.dtype);return M8(e.dataIdMap.get(s.dataId).id,e.dataIdMap.get(o.dataId).id,e.dataIdMap.get(m.dataId).id,l.batchSize,l.inChannels,l.inHeight,l.inWidth,l.outHeight,l.outWidth,l.strideHeight,l.strideWidth,l.dilationHeight,l.dilationWidth,l.effectiveFilterHeight,l.effectiveFilterWidth,l.padInfo.top,l.padInfo.left),m}var P8={kernelName:su,backendName:"wasm",setupFunc:dIe,kernelFunc:fIe};var R8;function hIe(r){R8=r.wasm.cwrap("MaxPoolWithArgmax",null,["number","number","number","number","boolean","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function gIe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{filterSize:s,strides:a,pad:i,includeBatchInIndex:p}=n;y.assert(o.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${o.shape.length}.`);let u=[1,1];y.assert(I.eitherStridesOrDilationsAreOne(a,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);let l=I.computePool2DInfo(o.shape,s,a,[1,1],i),m=e.makeOutput(l.outShape,o.dtype),c=e.makeOutput(l.outShape,"int32");return R8(e.dataIdMap.get(o.dataId).id,e.dataIdMap.get(m.dataId).id,e.dataIdMap.get(c.dataId).id,_e[o.dtype],p,l.batchSize,l.inChannels,l.inHeight,l.inWidth,l.outHeight,l.outWidth,l.strideHeight,l.strideWidth,l.dilationHeight,l.dilationWidth,l.effectiveFilterHeight,l.effectiveFilterWidth,l.padInfo.top,l.padInfo.left),[m,c]}var F8={kernelName:iu,backendName:"wasm",setupFunc:hIe,kernelFunc:gIe};var E8;function bIe(r){E8=r.wasm.cwrap(us,null,["number, number, number"])}function yIe(r){let{backend:t,inputs:e,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=e,i=t.dataIdMap.get(a.dataId).id,p=i,u=a,{transposed:l,axes:m,originalAxes:c,inputWasTransposed:d}=_n(a,o,t),f=m;if(d){let C=t.dataIdMap.get(l.dataId).id;C!==i&&(u=l,p=C,f=I.getInnerMostAxes(f.length,u.shape.length))}I.assertAxesAreInnerMostDims("mean",f,u.shape.length);let[h,g]=I.computeOutAndReduceShapes(u.shape,f),b=y.sizeFromShape(g),x=u;u.dtype!=="float32"&&(x=Kn({backend:t,inputs:{x:u},attrs:{dtype:"float32"}}),p=t.dataIdMap.get(x.dataId).id);let T=t.makeOutput(h,"float32");if(y.sizeFromShape(u.shape)!==0){let C=t.dataIdMap.get(T.dataId).id;E8(p,b,C)}if(d&&t.disposeData(l.dataId),s){let C=I.expandShapeToKeepDim(T.shape,c);T.shape=C}return u.dtype!=="float32"&&t.disposeData(x.dataId),T}var L8={kernelName:us,backendName:"wasm",setupFunc:bIe,kernelFunc:yIe};var B8;function xIe(r){B8=r.wasm.cwrap(ps,null,["number","number","number","number"])}function TIe(r){let{backend:t,inputs:e,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=e,i=t.dataIdMap.get(a.dataId).id,p=i,u=a,{transposed:l,axes:m,originalAxes:c,inputWasTransposed:d}=_n(a,o,t);if(d){let T=t.dataIdMap.get(l.dataId).id;T!==i&&(u=l,p=T)}let f=u.shape.length;I.assertAxesAreInnerMostDims("min",m,f);let[h,g]=I.computeOutAndReduceShapes(u.shape,m),b=y.sizeFromShape(g),x=t.makeOutput(h,u.dtype);if(y.sizeFromShape(u.shape)!==0){let T=t.dataIdMap.get(x.dataId).id;B8(p,_e[a.dtype],b,T)}if(d&&t.disposeData(l.dataId),s){let T=I.expandShapeToKeepDim(x.shape,c);x.shape=T}return x}var $8={kernelName:ps,backendName:"wasm",setupFunc:xIe,kernelFunc:TIe};var CIe=!1,O8=at(ls,CIe);var z8=(e=>(e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric",e))(z8||{}),G8;function IIe(r){G8=r.wasm.cwrap(ms,null,["number","array","number","number","array","array","number","number"])}function kIe(r){let{inputs:{x:t},backend:e,attrs:{paddings:n,mode:o}}=r,s=n.map((f,h)=>f[0]+t.shape[h]+f[1]),a=e.dataIdMap.get(t.dataId).id,i=e.makeOutput(s,t.dtype),p=e.dataIdMap.get(i.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),l=n.map(f=>f[0]),m=n.map(f=>f[1]),c=new Uint8Array(new Int32Array(l).buffer),d=new Uint8Array(new Int32Array(m).buffer);return G8(a,u,t.shape.length,_e[t.dtype],c,d,z8[o],p),i}var W8={kernelName:ms,backendName:"wasm",kernelFunc:kIe,setupFunc:IIe};var U8;function vIe(r){U8=r.wasm.cwrap(Es,null,["number","number","number","number"])}function o_(r){let{backend:t,inputs:{logits:e},attrs:{dim:n}}=r,o=t.dataIdMap.get(e.dataId).id,s=t.makeOutput(e.shape,e.dtype),a=t.dataIdMap.get(s.dataId).id,i=e.shape[n],p=y.sizeFromShape(e.shape)/i;return y.sizeFromShape(s.shape)===0||U8(o,a,i,p),s}var K8={kernelName:Es,backendName:"wasm",setupFunc:vIe,kernelFunc:o_};var V8;function SIe(r){V8=r.wasm.cwrap(li,null,["number","number","number","number","number","number"])}function wIe(r){let{inputs:t,backend:e,attrs:n}=r,{logits:o}=t,{numSamples:s,seed:a,normalized:i}=n;if(o.dtype!=="float32")throw new Error(`Tensor logits must have dtype float32, got ${o.dtype}`);let p=i?o:o_({inputs:{logits:o},backend:e,attrs:{dim:o.shape.length-1}}),[u,l]=p.shape,m=e.makeOutput([u,s],"int32");return V8(e.dataIdMap.get(p.dataId).id,u,l,s,a,e.dataIdMap.get(m.dataId).id),i||e.disposeData(p.dataId),m}var H8={kernelName:li,backendName:"wasm",setupFunc:SIe,kernelFunc:wIe};var q8=at(cs,!0);var AIe=!0,j8=at(ds,AIe);var X8=ke(oa);function ih(r,t){let e=new Int32Array(r.wasm.HEAPU8.buffer,t,4),n=e[0],o=e[1],s=e[2],a=e[3];return r.wasm._free(t),{pSelectedIndices:n,selectedSize:o,pSelectedScores:s,pValidOutputs:a}}var Y8;function NIe(r){Y8=r.wasm.cwrap(ci,"number",["number","number","number","number","number"])}function DIe(r){let{backend:t,inputs:e,attrs:n}=r,{iouThreshold:o,maxOutputSize:s,scoreThreshold:a}=n,{boxes:i,scores:p}=e,u=t.dataIdMap.get(i.dataId).id,l=t.dataIdMap.get(p.dataId).id,m=Y8(u,l,s,o,a),{pSelectedIndices:c,selectedSize:d,pSelectedScores:f,pValidOutputs:h}=ih(t,m);return t.wasm._free(f),t.wasm._free(h),t.makeOutput([d],"int32",c)}var Z8={kernelName:ci,backendName:"wasm",setupFunc:NIe,kernelFunc:DIe};var Q8;function _Ie(r){Q8=r.wasm.cwrap(Ou,"number",["number","number","number","number","number","bool"])}function MIe(r){let{backend:t,inputs:e,attrs:n}=r,{iouThreshold:o,maxOutputSize:s,scoreThreshold:a,padToMaxOutputSize:i}=n,{boxes:p,scores:u}=e,l=t.dataIdMap.get(p.dataId).id,m=t.dataIdMap.get(u.dataId).id,c=Q8(l,m,s,o,a,i),{pSelectedIndices:d,selectedSize:f,pSelectedScores:h,pValidOutputs:g}=ih(t,c);t.wasm._free(h);let b=t.makeOutput([f],"int32",d),x=t.makeOutput([],"int32",g);return[b,x]}var J8={kernelName:Ou,backendName:"wasm",setupFunc:_Ie,kernelFunc:MIe};var e5;function PIe(r){e5=r.wasm.cwrap(di,"number",["number","number","number","number","number","number"])}function RIe(r){let{backend:t,inputs:e,attrs:n}=r,{iouThreshold:o,maxOutputSize:s,scoreThreshold:a,softNmsSigma:i}=n,{boxes:p,scores:u}=e,l=t.dataIdMap.get(p.dataId).id,m=t.dataIdMap.get(u.dataId).id,c=e5(l,m,s,o,a,i),{pSelectedIndices:d,selectedSize:f,pSelectedScores:h,pValidOutputs:g}=ih(t,c);t.wasm._free(g);let b=t.makeOutput([f],"int32",d),x=t.makeOutput([f],"float32",h);return[b,x]}var t5={kernelName:di,backendName:"wasm",setupFunc:PIe,kernelFunc:RIe};var FIe=!1,r5=at(mi,FIe,"bool");var n5;function EIe(r){n5=r.wasm.cwrap(fs,null,["number","number","number","number","number"])}function LIe(r){let{inputs:t,backend:e,attrs:n}=r,{indices:o}=t,{dtype:s,depth:a,onValue:i,offValue:p}=n,u=e.makeOutput([...o.shape,a],s),l=e.dataIdMap.get(u.dataId).id,c=e.dataIdMap.get(o.dataId).id;return n5(c,a,i,p,l),u}var o5={kernelName:fs,backendName:"wasm",setupFunc:EIe,kernelFunc:LIe};function BIe(r){let{inputs:{x:t},backend:e}=r,n=e.makeOutput(t.shape,t.dtype);return e.typedArrayFromHeap(n).fill(1),n}var s5={kernelName:sa,backendName:"wasm",kernelFunc:BIe};function $Ie(r){let{inputs:t,backend:e,attrs:n}=r,{axis:o}=n;if(t.length===1)return gv({inputs:{input:t[0]},backend:e,attrs:{dim:o}});let s=t[0].shape,a=t[0].dtype;t.forEach(l=>{y.assertShapesMatch(s,l.shape,"All tensors passed to stack must have matching shapes"),y.assert(a===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});let i=[],p=t.map(l=>{let m=gv({inputs:{input:l},backend:e,attrs:{dim:o}});return i.push(m),m}),u=r_({inputs:p,backend:e,attrs:{axis:o}});return i.forEach(l=>e.disposeData(l.dataId)),u}var a5={kernelName:aa,backendName:"wasm",kernelFunc:$Ie};var i5;function OIe(r){i5=r.wasm.cwrap(hs,null,["number","array","number","number","array","array","number","number"])}function zIe(r){let{inputs:{x:t},backend:e,attrs:{paddings:n,constantValue:o}}=r,s=n.map((h,g)=>h[0]+t.shape[g]+h[1]);if(y.sizeFromShape(t.shape)===0)return n_({backend:e,attrs:{shape:s,value:o,dtype:t.dtype}});let a=e.dataIdMap.get(t.dataId).id,i=e.makeOutput(s,t.dtype),u=e.dataIdMap.get(i.dataId).id,l=new Uint8Array(new Int32Array(t.shape).buffer),m=n.map(h=>h[0]),c=n.map(h=>h[1]),d=new Uint8Array(new Int32Array(m).buffer),f=new Uint8Array(new Int32Array(c).buffer);return i5(a,l,t.shape.length,_e[t.dtype],d,f,o,u),i}var bv={kernelName:hs,backendName:"wasm",kernelFunc:zIe,setupFunc:OIe};var GIe=!1,u5=at(gs,GIe);var p5;function WIe(r){p5=r.wasm.cwrap(bs,null,["number","number","number"])}function UIe(r){let{inputs:t,backend:e}=r,{x:n,alpha:o}=t,s=e.dataIdMap.get(n.dataId).id,a=e.dataIdMap.get(o.dataId).id,i=s,p=n,u=p;p.dtype!=="float32"&&(u=Kn({backend:e,inputs:{x:n},attrs:{dtype:"float32"}}),i=e.dataIdMap.get(u.dataId).id);let l=e.makeOutput(n.shape,"float32"),m=e.dataIdMap.get(l.dataId).id;return p5(i,a,m),p.dtype!=="float32"&&e.disposeData(u.dataId),l}var l5={kernelName:bs,backendName:"wasm",setupFunc:WIe,kernelFunc:UIe};var m5;function KIe(r){m5=r.wasm.cwrap(ys,null,["number","number","number","number"])}function VIe(r){let{backend:t,inputs:e,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=e,i=t.dataIdMap.get(a.dataId).id,p=i,u=a,{transposed:l,axes:m,originalAxes:c,inputWasTransposed:d}=_n(a,o,t),f=m;if(d){let T=t.dataIdMap.get(l.dataId).id;T!==i&&(u=l,p=T,f=I.getInnerMostAxes(f.length,u.shape.length))}I.assertAxesAreInnerMostDims("prod",f,u.shape.length);let[h,g]=I.computeOutAndReduceShapes(u.shape,f),b=y.sizeFromShape(g),x=t.makeOutput(h,u.dtype);if(y.sizeFromShape(u.shape)!==0){let T=t.dataIdMap.get(x.dataId).id;m5(p,b,_e[x.dtype],T)}if(d&&t.disposeData(l.dataId),s){let T=I.expandShapeToKeepDim(x.shape,c);x.shape=T}return x}var c5={kernelName:ys,backendName:"wasm",setupFunc:KIe,kernelFunc:VIe};var HIe=r=>{let{backend:t,attrs:e}=r,{start:n,stop:o,step:s,dtype:a}=e,i=Im(n,o,s,a),p=t.makeOutput([i.length],a);return t.typedArrayFromHeap(p).set(i),p},d5={kernelName:uu,backendName:"wasm",kernelFunc:HIe};var qIe=!0,f5=at(Uo,qIe);var h5=ke(xs);var g5=ke(Ts);var b5=ke(ks);var y5;function jIe(r){y5=r.wasm.cwrap(Is,null,["number","number","number","number","number","number","number","number","number","number"])}function XIe(r){let{backend:t,inputs:e,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:a,size:i}=n,[p,u]=i,[l,m,c,d]=o.shape,f=[l,p,u,d],h=t.dataIdMap.get(o.dataId),g;h.dtype!=="float32"&&(g=Kn({backend:t,inputs:{x:o},attrs:{dtype:"float32"}}),h=t.dataIdMap.get(g.dataId));let b=h.id,x=t.makeOutput(f,"float32");if(y.sizeFromShape(o.shape)===0)return x;let T=t.dataIdMap.get(x.dataId).id;return y5(b,l,m,c,d,p,u,s?1:0,a?1:0,T),g!=null&&t.disposeData(g.dataId),x}var x5={kernelName:Is,backendName:"wasm",setupFunc:jIe,kernelFunc:XIe};var T5;function YIe(r){T5=r.wasm.cwrap(hi,null,["number","number","number","array","array","boolean"])}function ZIe(r){let{inputs:t,backend:e,attrs:n}=r,{images:o,dy:s}=t,{alignCorners:a}=n,i=e.makeOutput(o.shape,"float32"),p=e.dataIdMap.get(o.dataId),u;return p.dtype!=="float32"&&(u=Kn({backend:e,inputs:{x:o},attrs:{dtype:"float32"}}),p=e.dataIdMap.get(u.dataId)),T5(e.dataIdMap.get(o.dataId).id,e.dataIdMap.get(s.dataId).id,e.dataIdMap.get(i.dataId).id,new Uint8Array(new Int32Array(o.shape).buffer),new Uint8Array(new Int32Array(s.shape).buffer),a),u!=null&&e.disposeData(u.dataId),i}var C5={kernelName:hi,backendName:"wasm",setupFunc:YIe,kernelFunc:ZIe};var I5;function QIe(r){I5=r.wasm.cwrap(Cs,null,["number","number","number","number","number","number","number","number","number","number"])}function JIe(r){let{backend:t,inputs:e,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:a,size:i}=n,[p,u]=i,[l,m,c,d]=o.shape,f=[l,p,u,d],h=t.makeOutput(f,"float32");if(y.sizeFromShape(o.shape)===0)return h;let g=t.dataIdMap.get(o.dataId),b;g.dtype!=="float32"&&(b=Kn({backend:t,inputs:{x:o},attrs:{dtype:"float32"}}),g=t.dataIdMap.get(b.dataId));let x=g.id,T=t.dataIdMap.get(h.dataId).id;return I5(x,l,m,c,d,p,u,s?1:0,a?1:0,T),b!=null&&t.disposeData(b.dataId),h}var k5={kernelName:Cs,backendName:"wasm",setupFunc:QIe,kernelFunc:JIe};var v5;function eke(r){v5=r.wasm.cwrap(fi,null,["number","number","number","array","array","boolean"])}function tke(r){let{inputs:t,backend:e,attrs:n}=r,{images:o,dy:s}=t,{alignCorners:a}=n,i=e.makeOutput(o.shape,"float32"),p=e.dataIdMap.get(o.dataId),u;return p.dtype!=="float32"&&(u=Kn({backend:e,inputs:{x:o},attrs:{dtype:"float32"}}),p=e.dataIdMap.get(u.dataId)),v5(e.dataIdMap.get(o.dataId).id,e.dataIdMap.get(s.dataId).id,e.dataIdMap.get(i.dataId).id,new Uint8Array(new Int32Array(o.shape).buffer),new Uint8Array(new Int32Array(s.shape).buffer),a),u!=null&&e.disposeData(u.dataId),i}var S5={kernelName:fi,backendName:"wasm",setupFunc:eke,kernelFunc:tke};var w5;function rke(r){w5=r.wasm.cwrap(vs,null,["number","array","number","array","number","number"])}function nke(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{dims:s}=n,a=y.parseAxisParam(s,o.shape);if(o.shape.length===0)return Hm({inputs:{x:o},backend:e});let i=e.makeOutput(o.shape,o.dtype),p=e.dataIdMap.get(o.dataId).id,u=e.dataIdMap.get(i.dataId).id,l=new Uint8Array(new Int32Array(a).buffer),m=new Uint8Array(new Int32Array(o.shape).buffer);w5(p,l,a.length,m,o.shape.length,u);let c=xr({inputs:{x:i},attrs:{shape:o.shape},backend:e});return e.disposeData(i.dataId),c}var A5={kernelName:vs,backendName:"wasm",kernelFunc:nke,setupFunc:rke};var N5;function oke(r){N5=r.wasm.cwrap(ki,null,["number","number","number","number","number","number","number","number","array","number","number"])}function ske(r){let{inputs:t,backend:e,attrs:n}=r,{image:o}=t,{radians:s,fillValue:a,center:i}=n,p=e.makeOutput(o.shape,o.dtype),u=e.dataIdMap.get(o.dataId).id,l=e.dataIdMap.get(p.dataId).id,[m,c,d,f]=o.shape,[h,g]=I.getImageCenter(i,c,d),b=a===0,x=255,T=typeof a=="number"?[a,a,a,b?0:x]:[...a,x],C=new Uint8Array(new Int32Array(T).buffer);return N5(u,m,c,d,f,s,h,g,C,T.length,l),p}var D5={kernelName:ki,backendName:"wasm",kernelFunc:ske,setupFunc:oke};var _5=ke(Ss);var M5=ke(ws);var P5;function ake(r){P5=r.wasm.cwrap(gi,null,["number","number","number","number","number","number","array","number","number"])}function ike(r){let{backend:t,inputs:e,attrs:n}=r,{indices:o,updates:s}=e,{shape:a}=n,i=t.makeOutput(a,s.dtype);if(y.sizeFromShape(a)===0)return i;let{sliceRank:p,numUpdates:u,sliceSize:l,strides:m,outputSize:c}=jp.calculateShapes(s,o,a),f=t.dataIdMap.get(o.dataId).id,g=t.dataIdMap.get(s.dataId).id,b=new Uint8Array(new Int32Array(m).buffer),x=t.dataIdMap.get(i.dataId).id;return P5(f,g,_e[s.dtype],p,u,l,b,c,x),i}var R5={kernelName:gi,backendName:"wasm",setupFunc:ake,kernelFunc:ike};var F5;function uke(r){F5=r.wasm.cwrap(yi,null,["number","number","number","number","number","number","bool","number"])}function pke(r){let{inputs:t,backend:e,attrs:n}=r,{sortedSequence:o,values:s}=t,{side:a}=n;if(o.dtype!==s.dtype)throw new Error(`SearchSorted error: sorted_sequence must have the same dtype as values. Got ${o.dtype} and ${s.dtype}`);let i=e.makeOutput(s.shape,"int32");function p(u){return e.dataIdMap.get(u.dataId).id}return F5(p(o),p(s),o.shape[0],o.shape[1],s.shape[1],_e[o.dtype],a==="left",p(i)),i}var E5={kernelName:yi,backendName:"wasm",setupFunc:uke,kernelFunc:pke};var L5;function lke(r){L5=r.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function mke(r){let{inputs:t,backend:e}=r,{condition:n,t:o,e:s}=t,a=e.dataIdMap.get(n.dataId).id,i=e.dataIdMap.get(o.dataId).id,p=e.dataIdMap.get(s.dataId).id,u=e.makeOutput(o.shape,o.dtype),l=e.dataIdMap.get(u.dataId).id,m=n.shape.length,c=o.shape.length,d=m===0||m>1||c===1?1:y.sizeFromShape(o.shape.slice(1));return L5(a,i,p,d,l),u}var B5={kernelName:ua,backendName:"wasm",kernelFunc:mke,setupFunc:lke};var $5=ke(As);var O5;function cke(r){O5=r.wasm.cwrap(Ms,null,["number","number"])}function dke(r){let{backend:t,inputs:{x:e}}=r,n=t.dataIdMap.get(e.dataId).id,o=t.makeOutput(e.shape,e.dtype),s=t.dataIdMap.get(o.dataId).id;return y.sizeFromShape(o.shape)===0||O5(n,s),o}var z5={kernelName:"Sigmoid",backendName:"wasm",setupFunc:cke,kernelFunc:dke};var G5=ke(_s);var W5=ke(Ns);var U5=ke(Ds);var K5=ke(Ps);function fke(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{blockShape:s,paddings:a}=n,i=y.sizeFromShape(s),p=[[0,0]];p.push(...a);for(let w=1+s.length;w<o.shape.length;++w)p.push([0,0]);let u=bv.kernelFunc({inputs:{x:o},backend:e,attrs:{paddings:p,constantValue:0}}),l=I.getReshaped(u.shape,s,i,!1),m=I.getPermuted(l.length,s.length,!1),c=I.getReshapedPermuted(u.shape,s,i,!1),h=xr({inputs:{x:u},backend:e,attrs:{shape:l}}),x=js({inputs:{x:h},backend:e,attrs:{perm:m}}),k=xr({inputs:{x},backend:e,attrs:{shape:c}});return e.disposeData(u.dataId),e.disposeData(h.dataId),e.disposeData(x.dataId),k}var V5={kernelName:la,backendName:"wasm",kernelFunc:fke};var H5;function hke(r){H5=r.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])}function gke(r){let{backend:t,inputs:e}=r,{indices:n,values:o,denseShape:s,defaultValue:a}=e,i=n.shape[0],p=n.shape[1],u=t.readSync(s.dataId)[0],l=[i+u,p],m=t.dataIdMap.get(n.dataId).id,c=t.dataIdMap.get(o.dataId).id,d=t.dataIdMap.get(a.dataId).id,f=t.makeOutput(l,n.dtype),h=t.dataIdMap.get(f.dataId).id,g=t.makeOutput(l.slice(0,1),o.dtype),b=t.dataIdMap.get(g.dataId).id,x=t.makeOutput([u],"bool"),T=t.dataIdMap.get(x.dataId).id,C=t.makeOutput([i],n.dtype),k=t.dataIdMap.get(C.dataId).id,w=t.makeOutput([4],"int32"),_=t.dataIdMap.get(w.dataId).id,P=H5(m,c,_e[o.dtype],i,u,p,d,h,b,T,k,_),M=t.readSync(w.dataId),R;switch(M[0]){case 1:{R=I.getSparseFillEmptyRowsIndicesDenseShapeMismatch(M[1]);break}case 2:{R=I.getSparseFillEmptyRowsNegativeIndexErrorMessage(M[1],M[2]);break}case 3:R=I.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(M[1],M[2],M[3]);break;default:R=""}if(t.disposeData(w.dataId),R)throw t.disposeData(f.dataId),t.disposeData(g.dataId),t.disposeData(x.dataId),t.disposeData(C.dataId),new Error(R);let $=f,G=g;return P!==l[0]&&($=za({inputs:{x:f},attrs:{begin:0,size:[P,p]},backend:t}),G=za({inputs:{x:g},attrs:{begin:0,size:P},backend:t}),t.disposeData(f.dataId),t.disposeData(g.dataId)),[$,G,x,C]}var q5={kernelName:Dp,backendName:"wasm",setupFunc:hke,kernelFunc:gke};var j5;function bke(r){j5=r.wasm.cwrap(zu,null,["number","number","number","number","number","number","number"])}function yke(r){let{backend:t,inputs:e}=r,{inputIndices:n,inputShape:o,newShape:s}=e;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${n.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${o.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let a=t.dataIdMap.get(n.dataId).id,i=t.dataIdMap.get(o.dataId).id,p=t.dataIdMap.get(s.dataId).id,u=n.shape[0],l=y.sizeFromShape(s.shape),m=t.makeOutput([u,l],n.dtype),c=t.dataIdMap.get(m.dataId).id,d=t.makeOutput([l],s.dtype),f=t.dataIdMap.get(d.dataId).id,h=t.makeOutput([3],"int32"),g=t.dataIdMap.get(h.dataId).id;j5(a,i,p,u,c,f,g);let b=t.readSync(h.dataId),x;switch(b[0]){case 0:{x=I.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(b[1],b[2]);break}case 1:{x=I.getSparseReshapeNegativeOutputDimErrorMessage(b[1],b[2]);break}case 2:x=I.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{let T=Array.from(t.readSync(o.dataId)),C=Array.from(t.readSync(d.dataId));x=I.getSparseReshapeInputOutputMultipleErrorMessage(T,C);break}case 4:{let T=Array.from(t.readSync(o.dataId)),C=Array.from(t.readSync(d.dataId));x=I.getSparseReshapeInputOutputMismatchErrorMessage(T,C);break}default:x=""}if(t.disposeData(h.dataId),x)throw t.disposeData(m.dataId),t.disposeData(d.dataId),new Error(x);return[m,d]}var X5={kernelName:zu,backendName:"wasm",setupFunc:bke,kernelFunc:yke};var Y5;function yv(r){Y5=r.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function xv(r,t){let{backend:e,inputs:n}=r,{data:o,indices:s,segmentIds:a}=n,i=s.shape[0],p=e.readSync(a.dataId,i-1,i)[0],l=i>0?p+1:0;if(l<0)throw new Error(I.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=o.shape.slice();m[0]=l;let c=e.dataIdMap.get(o.dataId).id,d=e.dataIdMap.get(s.dataId).id,f=e.dataIdMap.get(a.dataId).id,h=e.makeOutput(m,o.dtype),g=e.dataIdMap.get(h.dataId).id,b=e.makeOutput([4],"int32"),x=e.dataIdMap.get(b.dataId).id;Y5(c,_e[o.dtype],o.shape[0],d,f,g,x,t,0);let T=e.readSync(b.dataId),C;switch(T[0]){case 0:{C=I.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break}case 1:{C=I.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break}case 2:C=I.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(T[1],T[2]);break;case 3:C=I.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(T[1],T[2],T[3]);break;default:C=""}if(e.disposeData(b.dataId),C)throw e.disposeData(h.dataId),new Error(C);return h}function xke(r){return xv(r,!0)}var Z5={kernelName:pu,backendName:"wasm",setupFunc:yv,kernelFunc:xke};function Tke(r){return xv(r,!1)}var Q5={kernelName:lu,backendName:"wasm",setupFunc:yv,kernelFunc:Tke};var J5;function Cke(r){J5=r.wasm.cwrap(xi,null,["number","number","number","number","number","number","number","number","array","number","number"])}function Ike(r){let{backend:t,inputs:e,attrs:n}=r,{sparseIndices:o,sparseValues:s,defaultValue:a}=e,{outputShape:i}=n,p=t.makeOutput(i,a.dtype);if(y.sizeFromShape(i)===0)return p;let{sliceRank:u,numUpdates:l,sliceSize:m,strides:c,outputSize:d}=I.calculateShapes(s,o,i),f=t.dataIdMap.get(o.dataId).id,h=t.dataIdMap.get(s.dataId).id,g=t.dataIdMap.get(a.dataId).id,b=new Uint8Array(new Int32Array(c).buffer),x=t.dataIdMap.get(p.dataId).id;return J5(f,h,s.shape.length,g,_e[a.dtype],u,l,m,b,d,x),p}var eX={kernelName:xi,backendName:"wasm",setupFunc:Cke,kernelFunc:Ike};function kke(r){let{inputs:t,attrs:e,backend:n}=r,{x:o}=t,{numOrSizeSplits:s,axis:a}=e,i=y.parseAxisParam(a,o.shape)[0],p=I.prepareSplitSize(o,s,i),u=new Array(o.shape.length).fill(0),l=o.shape.slice();return p.map(m=>{let c=[...l];c[i]=m;let d=za({inputs:{x:o},attrs:{begin:u,size:c},backend:n});return u[i]+=m,d})}var tX={kernelName:ma,backendName:"wasm",kernelFunc:kke};var rX=ke(Rs);var nX=ke(mu);var vke=!0,oX=at(Ls,vke);var sX;function Ske(r){sX=r.wasm.cwrap(Zn,null,["number","number","number","number"])}function wke(r){let{backend:t,inputs:e,attrs:n}=r,{alpha:o}=n,{x:s}=e,a=t.dataIdMap.get(s.dataId).id,i=t.makeOutput(s.shape,s.dtype),p=t.dataIdMap.get(i.dataId).id;return sX(a,o,_e[s.dtype],p),i}var aX={kernelName:Zn,backendName:"wasm",setupFunc:Ske,kernelFunc:wke};var iX;function Ake(r){iX=r.wasm.cwrap(Ti,null,["number","array","number","array","array","array","array","array","number","number"])}function Nke(r){let{backend:t,inputs:e,attrs:n}=r,{x:o}=e,{begin:s,end:a,strides:i,beginMask:p,endMask:u,ellipsisMask:l,newAxisMask:m,shrinkAxisMask:c}=n,{finalShapeSparse:d,finalShape:f,isIdentity:h,sliceDim0:g,isSimpleSlice:b,begin:x,end:T,strides:C}=kt.sliceInfo(o.shape,s,a,i,p,u,l,m,c),k;if(h)k=xr({inputs:{x:o},backend:t,attrs:{shape:f}});else if(g||b){y.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let w=kt.computeOutShape(x,T,C),_=za({inputs:{x:o},backend:t,attrs:{begin:x,size:w}});k=xr({inputs:{x:_},backend:t,attrs:{shape:f}}),t.disposeData(_.dataId)}else{let w=t.makeOutput(d,"float32"),_=t.dataIdMap.get(o.dataId).id,P=new Uint8Array(new Int32Array(y.computeStrides(o.shape)).buffer),M=new Uint8Array(new Int32Array(x).buffer),R=new Uint8Array(new Int32Array(T).buffer),$=new Uint8Array(new Int32Array(C).buffer),G=new Uint8Array(new Int32Array(d).buffer),W=new Uint8Array(new Int32Array(y.computeStrides(d)).buffer),U=t.dataIdMap.get(w.dataId).id;iX(_,P,o.shape.length,M,R,$,G,W,d.length,U),k=xr({inputs:{x:w},backend:t,attrs:{shape:f}}),t.disposeData(w.dataId)}return k}var uX={kernelName:Ti,backendName:"wasm",setupFunc:Ake,kernelFunc:Nke};function Dke(r){let{backend:t,inputs:e,attrs:n}=r,{data:o,dataSplits:s}=e,{separator:a,nGramWidths:i,leftPad:p,rightPad:u,padWidth:l,preserveShortSequences:m}=n,c=t.readSync(o.dataId),d=t.readSync(s.dataId),[f,h]=vm(c,d,a,i,p,u,l,m),g=t.makeOutput([f.length],"string"),b=t.dataIdMap.get(g.dataId);b.stringBytes=f;let x=t.makeOutput(s.shape,"int32");return t.typedArrayFromHeap(x).set(h),[g,x]}var pX={kernelName:cu,backendName:"wasm",kernelFunc:Dke};function _ke(r){let{backend:t,inputs:e,attrs:n}=r,{input:o,delimiter:s}=e,{skipEmpty:a}=n,i=t.readSync(o.dataId),p=t.readSync(s.dataId),[u,l,m]=Sm(i,p[0],a),c=l.length,d=t.makeOutput([c,2],"int32");t.typedArrayFromHeap(d).set(u);let h=t.makeOutput([c],"string"),g=t.dataIdMap.get(h.dataId);g.stringBytes=l;let b=t.makeOutput([2],"int32");return t.typedArrayFromHeap(b).set(m),[d,h,b]}var lX={kernelName:_p,backendName:"wasm",kernelFunc:_ke};function Mke(r){let{backend:t,inputs:e,attrs:n}=r,{input:o}=e,{numBuckets:s}=n,a=t.readSync(o.dataId),i=wm(a,s),p=t.makeOutput(o.shape,"int32");return t.typedArrayFromHeap(p).set(i),p}var mX={kernelName:Mp,backendName:"wasm",kernelFunc:Mke};var Pke=!0,cX=at(Bs,Pke);var dX;function Rke(r){dX=r.wasm.cwrap(Fs,null,["number","number","number","number"])}function Fke(r){let{backend:t,inputs:e,attrs:n}=r,{axis:o,keepDims:s}=n,{x:a}=e,i=t.dataIdMap.get(a.dataId).id,p=i,u=a,{transposed:l,axes:m,originalAxes:c,inputWasTransposed:d}=_n(a,o,t),f=m;if(d){let T=t.dataIdMap.get(l.dataId).id;T!==i&&(u=l,p=T,f=I.getInnerMostAxes(f.length,u.shape.length))}I.assertAxesAreInnerMostDims("sum",f,u.shape.length);let[h,g]=I.computeOutAndReduceShapes(u.shape,f),b=y.sizeFromShape(g),x=t.makeOutput(h,u.dtype);if(y.sizeFromShape(u.shape)!==0){let T=t.dataIdMap.get(x.dataId).id;dX(p,b,_e[x.dtype],T)}if(d&&t.disposeData(l.dataId),s){let T=I.expandShapeToKeepDim(x.shape,c);x.shape=T}return x}var fX={kernelName:Fs,backendName:"wasm",setupFunc:Rke,kernelFunc:Fke};var hX=ke($s);var gX=ke(Os);var bX;function Eke(r){bX=r.wasm.cwrap(bi,null,["number","number","number","number","number","number","array","number","number","number"])}function Lke(r){let{backend:t,inputs:e,attrs:n}=r,{tensor:o,indices:s,updates:a}=e,{}=n,i=t.makeOutput(o.shape,o.dtype);if(y.sizeFromShape(o.shape)===0)return i;let{sliceRank:p,numUpdates:u,sliceSize:l,strides:m,outputSize:c}=jp.calculateShapes(a,s,o.shape),f=t.dataIdMap.get(s.dataId).id,g=t.dataIdMap.get(a.dataId).id,x=t.dataIdMap.get(o.dataId).id,T=new Uint8Array(new Int32Array(m).buffer),C=t.dataIdMap.get(i.dataId).id;return bX(f,g,_e[a.dtype],p,u,l,T,c,C,x),i}var yX={kernelName:bi,backendName:"wasm",setupFunc:Eke,kernelFunc:Lke};var xX;function Bke(r){xX=r.wasm.cwrap(Pn,null,["number","array","number","array","number","number"])}function $ke(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,s=e.dataIdMap.get(o.dataId).id,{reps:a}=n,i=new Array(o.shape.length);for(let c=0;c<i.length;c++)i[c]=o.shape[c]*a[c];let p=new Uint8Array(new Int32Array(o.shape).buffer),u=new Uint8Array(new Int32Array(i).buffer),l=e.makeOutput(i,o.dtype),m=e.dataIdMap.get(l.dataId).id;return xX(s,p,o.shape.length,u,i.length,_e[l.dtype],m),l}var TX={kernelName:Pn,backendName:"wasm",setupFunc:Bke,kernelFunc:$ke};var CX;function Oke(r){CX=r.wasm.cwrap(Ci,null,["number","array","number","number","number","bool","number","number"])}var zke=({inputs:r,backend:t,attrs:e})=>{let{x:n}=r,{k:o,sorted:s}=e,a=t.dataIdMap.get(n.dataId).id,i=new Uint8Array(new Int32Array(n.shape).buffer),p=n.shape.slice();p[p.length-1]=o;let u=t.makeOutput(p,n.dtype),l=t.dataIdMap.get(u.dataId).id,m=t.makeOutput(p,"int32"),c=t.dataIdMap.get(m.dataId).id;return CX(a,i,n.shape.length,_e[n.dtype],o,s,l,c),[u,m]},IX={kernelName:Ci,backendName:"wasm",setupFunc:Oke,kernelFunc:zke};var kX;function Gke(r){kX=r.wasm.cwrap(Ii,null,["number","number","bool","number","number","number","number","number","number","array","number","array","number","number","number","number","number"])}function Wke(r){let{backend:t,inputs:e,attrs:n}=r,{image:o,transforms:s}=e,{interpolation:a,fillMode:i,fillValue:p,outputShape:u}=n,[l,m,c,d]=o.shape,[f,h]=u??[m,c],g=[l,f,h,d],b=new Uint8Array(new Int32Array(y.computeStrides(o.shape)).buffer),x=new Uint8Array(new Int32Array(y.computeStrides(g)).buffer),T=t.makeOutput(g,o.dtype),C=t.dataIdMap.get(T.dataId).id,w=t.dataIdMap.get(o.dataId).id,P=t.dataIdMap.get(s.dataId).id,M=a==="nearest"?1:2,R;switch(i){case"constant":R=1;break;case"reflect":R=2;break;case"wrap":R=3;break;case"nearest":R=4;break;default:R=1;break}return kX(w,P,s.shape[0]>1,l,f,h,d,c,m,b,o.shape.length-1,x,g.length-1,M,R,p,C),T}var vX={kernelName:Ii,backendName:"wasm",setupFunc:Gke,kernelFunc:Wke};function Uke(r){let{inputs:t,attrs:e,backend:n}=r,{axis:o}=e,{x:s}=t,{outputValues:a,outputShape:i,indices:p}=Am(n.readSync(s.dataId),o,s.shape,s.dtype);return[n.makeOutput(i,s.dtype,void 0,a),n.makeOutput([p.length],"int32",void 0,p)]}var SX={kernelName:Pp,backendName:"wasm",kernelFunc:Uke};function Kke(r){let{inputs:t,backend:e,attrs:n}=r,{value:o}=t,{axis:s}=n;s<0&&(s+=o.shape.length);let a=o.shape[s],i=o.shape.length,p=new Array(i-1),u=0;for(let d=0;d<i;d++)d!==s&&(p[u++]=o.shape[d]);let l=new Array(a),m=new Array(i).fill(0),c=o.shape.slice();c[s]=1;for(let d=0;d<l.length;d++)m[s]=d,l[d]=za({inputs:{x:o},attrs:{begin:m,size:c},backend:e});return l.map(({dataId:d,dtype:f})=>({dataId:d,dtype:f,shape:p}))}var wX={kernelName:ca,backendName:"wasm",kernelFunc:Kke};function Vke(r){let{inputs:{x:t},backend:e}=r,n=e.makeOutput(t.shape,t.dtype);return e.typedArrayFromHeap(n).fill(0),n}var AX={kernelName:da,backendName:"wasm",kernelFunc:Vke};var Hke=[lj,mj,cj,dj,fj,gj,Cj,kj,vj,Sj,wj,Aj,Nj,Dj,_j,Pj,$j,Fj,Lj,Gj,Uj,Vj,Hj,qj,jj,Xj,Zj,Qj,e6,r6,o6,a6,u6,p6,l6,d6,h6,b6,x6,C6,k6,S6,A6,D6,M6,P6,F6,E6,L6,B6,$6,O6,z6,W6,U6,K6,H6,j6,Y6,Q6,e8,t8,r8,bj,n8,o8,s8,i8,u8,p8,m8,d8,c8,f8,h8,g8,b8,x8,C8,k8,v8,w8,N8,_8,P8,F8,L8,$8,O8,W8,H8,q8,j8,X8,Z8,J8,t5,r5,o5,s5,a5,bv,u5,l5,c5,d5,f5,h5,g5,b5,Oj,x5,C5,k5,S5,A5,D5,_5,M5,R5,E5,B5,$5,z5,G5,W5,U5,Wj,K8,K5,V5,q5,X5,Z5,Q5,eX,tX,rX,nX,oX,aX,uX,pX,lX,mX,cX,fX,hX,gX,yX,TX,IX,vX,xj,SX,wX,AX];for(let r of Hke)Gu(r);var s_=L();s_.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]))}catch{return!1}});s_.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(s_.get("IS_NODE"))return!1;try{return new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}});var c_=gl(MX());var PX=`var WasmBackendModuleThreadedSimd = (() => {
  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;
  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;
  return (
function(WasmBackendModuleThreadedSimd) {
  WasmBackendModuleThreadedSimd = WasmBackendModuleThreadedSimd || {};

function GROWABLE_HEAP_I8(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAP8}function GROWABLE_HEAP_U8(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAPU8}function GROWABLE_HEAP_I16(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAP16}function GROWABLE_HEAP_I32(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAP32}function GROWABLE_HEAP_U32(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAPU32}function GROWABLE_HEAP_F32(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAPF32}function GROWABLE_HEAP_F64(){if(wasmMemory.buffer!=buffer){updateGlobalBufferAndViews(wasmMemory.buffer)}return HEAPF64}var Module=typeof WasmBackendModuleThreadedSimd!="undefined"?WasmBackendModuleThreadedSimd:{};var readyPromiseResolve,readyPromiseReject;Module["ready"]=new Promise(function(resolve,reject){readyPromiseResolve=resolve;readyPromiseReject=reject});var beforeListeners;if(typeof process!=="undefined"&&process.listeners){beforeListeners={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")}}var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram="./this.program";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=typeof window=="object";var ENVIRONMENT_IS_WORKER=typeof importScripts=="function";var ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";var ENVIRONMENT_IS_PTHREAD=Module["ENVIRONMENT_IS_PTHREAD"]||false;var scriptDirectory="";function locateFile(path){if(Module["locateFile"]){return Module["locateFile"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;function logExceptionOnExit(e){if(e instanceof ExitStatus)return;let toLog=e;err("exiting due to exception: "+toLog)}if(ENVIRONMENT_IS_NODE){var fs=require("fs");var nodePath=require("path");if(ENVIRONMENT_IS_WORKER){scriptDirectory=nodePath.dirname(scriptDirectory)+"/"}else{scriptDirectory=__dirname+"/"}read_=(filename,binary)=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);return fs.readFileSync(filename,binary?undefined:"utf8")};readBinary=filename=>{var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}return ret};readAsync=(filename,onload,onerror)=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);fs.readFile(filename,function(err,data){if(err)onerror(err);else onload(data.buffer)})};if(process["argv"].length>1){thisProgram=process["argv"][1].replace(/\\/g,"/")}arguments_=process["argv"].slice(2);process["on"]("uncaughtException",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});process["on"]("unhandledRejection",function(reason){throw reason});quit_=(status,toThrow)=>{if(keepRuntimeAlive()){process["exitCode"]=status;throw toThrow}logExceptionOnExit(toThrow);process["exit"](status)};Module["inspect"]=function(){return"[Emscripten Module object]"};let nodeWorkerThreads;try{nodeWorkerThreads=require("worker_threads")}catch(e){console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?');throw e}global.Worker=nodeWorkerThreads.Worker}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!="undefined"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf("blob:")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,"").lastIndexOf("/")+1)}else{scriptDirectory=""}if(!ENVIRONMENT_IS_NODE){read_=url=>{var xhr=new XMLHttpRequest;xhr.open("GET",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open("GET",url,false);xhr.responseType="arraybuffer";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open("GET",url,true);xhr.responseType="arraybuffer";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=title=>document.title=title}else{}if(ENVIRONMENT_IS_NODE){if(typeof performance=="undefined"){global.performance=require("perf_hooks").performance}}var defaultPrint=console.log.bind(console);var defaultPrintErr=console.warn.bind(console);if(ENVIRONMENT_IS_NODE){defaultPrint=str=>fs.writeSync(1,str+"
");defaultPrintErr=str=>fs.writeSync(2,str+"
")}var out=Module["print"]||defaultPrint;var err=Module["printErr"]||defaultPrintErr;Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module["arguments"])arguments_=Module["arguments"];if(Module["thisProgram"])thisProgram=Module["thisProgram"];if(Module["quit"])quit_=Module["quit"];var POINTER_SIZE=4;var Atomics_load=Atomics.load;var Atomics_store=Atomics.store;var Atomics_compareExchange=Atomics.compareExchange;var wasmBinary;if(Module["wasmBinary"])wasmBinary=Module["wasmBinary"];var noExitRuntime=Module["noExitRuntime"]||true;if(typeof WebAssembly!="object"){abort("no native wasm support detected")}var wasmMemory;var wasmModule;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort(text)}}var UTF8Decoder=typeof TextDecoder!="undefined"?new TextDecoder("utf8"):undefined;function UTF8ArrayToString(heapOrArray,idx,maxBytesToRead){idx>>>=0;var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.buffer instanceof SharedArrayBuffer?heapOrArray.slice(idx,endPtr):heapOrArray.subarray(idx,endPtr))}var str="";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str}function UTF8ToString(ptr,maxBytesToRead){ptr>>>=0;return ptr?UTF8ArrayToString(GROWABLE_HEAP_U8(),ptr,maxBytesToRead):""}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){outIdx>>>=0;if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++>>>0]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++>>>0]=192|u>>6;heap[outIdx++>>>0]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++>>>0]=224|u>>12;heap[outIdx++>>>0]=128|u>>6&63;heap[outIdx++>>>0]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++>>>0]=240|u>>18;heap[outIdx++>>>0]=128|u>>12&63;heap[outIdx++>>>0]=128|u>>6&63;heap[outIdx++>>>0]=128|u&63}}heap[outIdx>>>0]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,GROWABLE_HEAP_U8(),outPtr,maxBytesToWrite)}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;if(ENVIRONMENT_IS_PTHREAD){buffer=Module["buffer"]}function updateGlobalBufferAndViews(buf){buffer=buf;Module["HEAP8"]=HEAP8=new Int8Array(buf);Module["HEAP16"]=HEAP16=new Int16Array(buf);Module["HEAP32"]=HEAP32=new Int32Array(buf);Module["HEAPU8"]=HEAPU8=new Uint8Array(buf);Module["HEAPU16"]=HEAPU16=new Uint16Array(buf);Module["HEAPU32"]=HEAPU32=new Uint32Array(buf);Module["HEAPF32"]=HEAPF32=new Float32Array(buf);Module["HEAPF64"]=HEAPF64=new Float64Array(buf)}var INITIAL_MEMORY=Module["INITIAL_MEMORY"]||16777216;if(ENVIRONMENT_IS_PTHREAD){wasmMemory=Module["wasmMemory"];buffer=Module["buffer"]}else{if(Module["wasmMemory"]){wasmMemory=Module["wasmMemory"]}else{wasmMemory=new WebAssembly.Memory({"initial":INITIAL_MEMORY/65536,"maximum":4294967296/65536,"shared":true});if(!(wasmMemory.buffer instanceof SharedArrayBuffer)){err("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag");if(ENVIRONMENT_IS_NODE){err("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)")}throw Error("bad memory")}}}if(wasmMemory){buffer=wasmMemory.buffer}INITIAL_MEMORY=buffer.byteLength;updateGlobalBufferAndViews(buffer);var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function keepRuntimeAlive(){return noExitRuntime}function preRun(){if(Module["preRun"]){if(typeof Module["preRun"]=="function")Module["preRun"]=[Module["preRun"]];while(Module["preRun"].length){addOnPreRun(Module["preRun"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;if(ENVIRONMENT_IS_PTHREAD)return;callRuntimeCallbacks(__ATINIT__)}function postRun(){if(ENVIRONMENT_IS_PTHREAD)return;if(Module["postRun"]){if(typeof Module["postRun"]=="function")Module["postRun"]=[Module["postRun"]];while(Module["postRun"].length){addOnPostRun(Module["postRun"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module["monitorRunDependencies"]){Module["monitorRunDependencies"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module["monitorRunDependencies"]){Module["monitorRunDependencies"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){if(Module["onAbort"]){Module["onAbort"](what)}what="Aborted("+what+")";err(what);ABORT=true;EXITSTATUS=1;what+=". Build with -sASSERTIONS for more info.";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix="data:application/octet-stream;base64,";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}function isFileURI(filename){return filename.startsWith("file://")}var wasmBinaryFile;wasmBinaryFile="tfjs-backend-wasm-threaded-simd.wasm";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}throw"both async and sync fetching of the wasm failed"}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch=="function"&&!isFileURI(wasmBinaryFile)){return fetch(wasmBinaryFile,{credentials:"same-origin"}).then(function(response){if(!response["ok"]){throw"failed to load wasm binary file at '"+wasmBinaryFile+"'"}return response["arrayBuffer"]()}).catch(function(){return getBinary(wasmBinaryFile)})}else{if(readAsync){return new Promise(function(resolve,reject){readAsync(wasmBinaryFile,function(response){resolve(new Uint8Array(response))},reject)})}}}return Promise.resolve().then(function(){return getBinary(wasmBinaryFile)})}function createWasm(){var info={"env":asmLibraryArg,"wasi_snapshot_preview1":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module["asm"]=exports;registerTLSInit(Module["asm"]["_emscripten_tls_init"]);wasmTable=Module["asm"]["__indirect_function_table"];addOnInit(Module["asm"]["__wasm_call_ctors"]);wasmModule=module;if(!ENVIRONMENT_IS_PTHREAD){var numWorkersToLoad=PThread.unusedWorkers.length;PThread.unusedWorkers.forEach(function(w){PThread.loadWasmModuleToWorker(w,function(){if(!--numWorkersToLoad)removeRunDependency("wasm-instantiate")})})}}if(!ENVIRONMENT_IS_PTHREAD){addRunDependency("wasm-instantiate")}function receiveInstantiationResult(result){receiveInstance(result["instance"],result["module"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(function(instance){return instance}).then(receiver,function(reason){err("failed to asynchronously prepare wasm: "+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming=="function"&&!isDataURI(wasmBinaryFile)&&!isFileURI(wasmBinaryFile)&&!ENVIRONMENT_IS_NODE&&typeof fetch=="function"){return fetch(wasmBinaryFile,{credentials:"same-origin"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiationResult,function(reason){err("wasm streaming compile failed: "+reason);err("falling back to ArrayBuffer instantiation");return instantiateArrayBuffer(receiveInstantiationResult)})})}else{return instantiateArrayBuffer(receiveInstantiationResult)}}if(Module["instantiateWasm"]){try{var exports=Module["instantiateWasm"](info,receiveInstance);return exports}catch(e){err("Module.instantiateWasm callback failed with error: "+e);readyPromiseReject(e)}}instantiateAsync().catch(readyPromiseReject);return{}}var tempDouble;var tempI64;var ASM_CONSTS={};function ExitStatus(status){this.name="ExitStatus";this.message="Program terminated with exit("+status+")";this.status=status}function killThread(pthread_ptr){var worker=PThread.pthreads[pthread_ptr];delete PThread.pthreads[pthread_ptr];worker.terminate();__emscripten_thread_free_data(pthread_ptr);PThread.runningWorkers.splice(PThread.runningWorkers.indexOf(worker),1);worker.pthread_ptr=0}function cancelThread(pthread_ptr){var worker=PThread.pthreads[pthread_ptr];worker.postMessage({"cmd":"cancel"})}function cleanupThread(pthread_ptr){var worker=PThread.pthreads[pthread_ptr];assert(worker);PThread.returnWorkerToPool(worker)}function spawnThread(threadParams){var worker=PThread.getNewWorker();if(!worker){return 6}PThread.runningWorkers.push(worker);PThread.pthreads[threadParams.pthread_ptr]=worker;worker.pthread_ptr=threadParams.pthread_ptr;var msg={"cmd":"run","start_routine":threadParams.startRoutine,"arg":threadParams.arg,"pthread_ptr":threadParams.pthread_ptr};worker.runPthread=()=>{if(ENVIRONMENT_IS_NODE){worker.ref()}worker.postMessage(msg,threadParams.transferList);delete worker.runPthread};if(worker.loaded){worker.runPthread()}return 0}var SYSCALLS={varargs:undefined,get:function(){SYSCALLS.varargs+=4;var ret=GROWABLE_HEAP_I32()[SYSCALLS.varargs-4>>>2];return ret},getStr:function(ptr){var ret=UTF8ToString(ptr);return ret}};function _proc_exit(code){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(1,1,code);EXITSTATUS=code;if(!keepRuntimeAlive()){PThread.terminateAllThreads();if(Module["onExit"])Module["onExit"](code);ABORT=true}quit_(code,new ExitStatus(code))}function exitJS(status,implicit){EXITSTATUS=status;if(!implicit){if(ENVIRONMENT_IS_PTHREAD){exitOnMainThread(status);throw"unwind"}else{}}_proc_exit(status)}var _exit=exitJS;function handleException(e){if(e instanceof ExitStatus||e=="unwind"){return EXITSTATUS}quit_(1,e)}var PThread={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],pthreads:{},init:function(){if(ENVIRONMENT_IS_PTHREAD){PThread.initWorker()}else{PThread.initMainThread()}},initMainThread:function(){var pthreadPoolSize=8;while(pthreadPoolSize--){PThread.allocateUnusedWorker()}},initWorker:function(){noExitRuntime=false},setExitStatus:function(status){EXITSTATUS=status},terminateAllThreads:function(){for(var worker of Object.values(PThread.pthreads)){PThread.returnWorkerToPool(worker)}for(var worker of PThread.unusedWorkers){worker.terminate()}PThread.unusedWorkers=[]},returnWorkerToPool:function(worker){var pthread_ptr=worker.pthread_ptr;delete PThread.pthreads[pthread_ptr];PThread.unusedWorkers.push(worker);PThread.runningWorkers.splice(PThread.runningWorkers.indexOf(worker),1);worker.pthread_ptr=0;if(ENVIRONMENT_IS_NODE){worker.unref()}__emscripten_thread_free_data(pthread_ptr)},receiveObjectTransfer:function(data){},threadInitTLS:function(){PThread.tlsInitFunctions.forEach(f=>f())},loadWasmModuleToWorker:function(worker,onFinishedLoading){worker.onmessage=e=>{var d=e["data"];var cmd=d["cmd"];if(worker.pthread_ptr)PThread.currentProxiedOperationCallerThread=worker.pthread_ptr;if(d["targetThread"]&&d["targetThread"]!=_pthread_self()){var targetWorker=PThread.pthreads[d.targetThread];if(targetWorker){targetWorker.postMessage(d,d["transferList"])}else{err('Internal error! Worker sent a message "'+cmd+'" to target pthread '+d["targetThread"]+", but that thread no longer exists!")}PThread.currentProxiedOperationCallerThread=undefined;return}if(cmd==="processProxyingQueue"){executeNotifiedProxyingQueue(d["queue"])}else if(cmd==="spawnThread"){spawnThread(d)}else if(cmd==="cleanupThread"){cleanupThread(d["thread"])}else if(cmd==="killThread"){killThread(d["thread"])}else if(cmd==="cancelThread"){cancelThread(d["thread"])}else if(cmd==="loaded"){worker.loaded=true;if(ENVIRONMENT_IS_NODE){worker.unref()}if(onFinishedLoading)onFinishedLoading(worker);if(worker.runPthread){worker.runPthread()}}else if(cmd==="print"){out("Thread "+d["threadId"]+": "+d["text"])}else if(cmd==="printErr"){err("Thread "+d["threadId"]+": "+d["text"])}else if(cmd==="alert"){alert("Thread "+d["threadId"]+": "+d["text"])}else if(d.target==="setimmediate"){worker.postMessage(d)}else if(cmd==="callHandler"){Module[d["handler"]](...d["args"])}else if(cmd){err("worker sent an unknown command "+cmd)}PThread.currentProxiedOperationCallerThread=undefined};worker.onerror=e=>{var message="worker sent an error!";err(message+" "+e.filename+":"+e.lineno+": "+e.message);throw e};if(ENVIRONMENT_IS_NODE){worker.on("message",function(data){worker.onmessage({data:data})});worker.on("error",function(e){worker.onerror(e)});worker.on("detachedExit",function(){})}var handlers=[];var knownHandlers=["onExit","onAbort","print","printErr"];for(var handler of knownHandlers){if(Module.hasOwnProperty(handler)){handlers.push(handler)}}worker.postMessage({"cmd":"load","handlers":handlers,"urlOrBlob":Module["mainScriptUrlOrBlob"]||_scriptDir,"wasmMemory":wasmMemory,"wasmModule":wasmModule})},allocateUnusedWorker:function(){var worker;var pthreadMainJs=locateFile("tfjs-backend-wasm-threaded-simd.worker.js");worker=new Worker(pthreadMainJs);PThread.unusedWorkers.push(worker)},getNewWorker:function(){if(PThread.unusedWorkers.length==0){PThread.allocateUnusedWorker();PThread.loadWasmModuleToWorker(PThread.unusedWorkers[0])}return PThread.unusedWorkers.pop()}};Module["PThread"]=PThread;function callRuntimeCallbacks(callbacks){while(callbacks.length>0){callbacks.shift()(Module)}}function establishStackSpace(){var pthread_ptr=_pthread_self();var stackTop=GROWABLE_HEAP_I32()[pthread_ptr+52>>>2];var stackSize=GROWABLE_HEAP_I32()[pthread_ptr+56>>>2];var stackMax=stackTop-stackSize;_emscripten_stack_set_limits(stackTop,stackMax);stackRestore(stackTop)}Module["establishStackSpace"]=establishStackSpace;function exitOnMainThread(returnCode){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(2,0,returnCode);try{_exit(returnCode)}catch(e){handleException(e)}}var wasmTableMirror=[];function getWasmTableEntry(funcPtr){var func=wasmTableMirror[funcPtr];if(!func){if(funcPtr>=wasmTableMirror.length)wasmTableMirror.length=funcPtr+1;wasmTableMirror[funcPtr]=func=wasmTable.get(funcPtr)}return func}function invokeEntryPoint(ptr,arg){var result=getWasmTableEntry(ptr)(arg);if(keepRuntimeAlive()){PThread.setExitStatus(result)}else{__emscripten_thread_exit(result)}}Module["invokeEntryPoint"]=invokeEntryPoint;function registerTLSInit(tlsInitFunc){PThread.tlsInitFunctions.push(tlsInitFunc)}function ___emscripten_init_main_thread_js(tb){__emscripten_thread_init(tb,!ENVIRONMENT_IS_WORKER,1,!ENVIRONMENT_IS_WEB);PThread.threadInitTLS()}function ___emscripten_thread_cleanup(thread){if(!ENVIRONMENT_IS_PTHREAD)cleanupThread(thread);else postMessage({"cmd":"cleanupThread","thread":thread})}function pthreadCreateProxied(pthread_ptr,attr,startRoutine,arg){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(3,1,pthread_ptr,attr,startRoutine,arg);return ___pthread_create_js(pthread_ptr,attr,startRoutine,arg)}function ___pthread_create_js(pthread_ptr,attr,startRoutine,arg){if(typeof SharedArrayBuffer=="undefined"){err("Current environment does not support SharedArrayBuffer, pthreads are not available!");return 6}var transferList=[];var error=0;if(ENVIRONMENT_IS_PTHREAD&&(transferList.length===0||error)){return pthreadCreateProxied(pthread_ptr,attr,startRoutine,arg)}if(error)return error;var threadParams={startRoutine:startRoutine,pthread_ptr:pthread_ptr,arg:arg,transferList:transferList};if(ENVIRONMENT_IS_PTHREAD){threadParams.cmd="spawnThread";postMessage(threadParams,transferList);return 0}return spawnThread(threadParams)}function __emscripten_default_pthread_stack_size(){return 65536}var nowIsMonotonic=true;function __emscripten_get_now_is_monotonic(){return nowIsMonotonic}function executeNotifiedProxyingQueue(queue){Atomics.store(GROWABLE_HEAP_I32(),queue>>2,1);if(_pthread_self()){__emscripten_proxy_execute_task_queue(queue)}Atomics.compareExchange(GROWABLE_HEAP_I32(),queue>>2,1,0)}Module["executeNotifiedProxyingQueue"]=executeNotifiedProxyingQueue;function __emscripten_notify_task_queue(targetThreadId,currThreadId,mainThreadId,queue){if(targetThreadId==currThreadId){setTimeout(()=>executeNotifiedProxyingQueue(queue))}else if(ENVIRONMENT_IS_PTHREAD){postMessage({"targetThread":targetThreadId,"cmd":"processProxyingQueue","queue":queue})}else{var worker=PThread.pthreads[targetThreadId];if(!worker){return}worker.postMessage({"cmd":"processProxyingQueue","queue":queue})}return 1}function __emscripten_set_offscreencanvas_size(target,width,height){return-1}function _abort(){abort("")}function warnOnce(text){if(!warnOnce.shown)warnOnce.shown={};if(!warnOnce.shown[text]){warnOnce.shown[text]=1;if(ENVIRONMENT_IS_NODE)text="warning: "+text;err(text)}}function _emscripten_check_blocking_allowed(){if(ENVIRONMENT_IS_NODE)return;if(ENVIRONMENT_IS_WORKER)return;warnOnce("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function _emscripten_date_now(){return Date.now()}function getHeapMax(){return 4294901760}function _emscripten_get_heap_max(){return getHeapMax()}var _emscripten_get_now;if(ENVIRONMENT_IS_NODE){_emscripten_get_now=()=>{var t=process["hrtime"]();return t[0]*1e3+t[1]/1e6}}else _emscripten_get_now=()=>performance.timeOrigin+performance.now();function _emscripten_memcpy_big(dest,src,num){GROWABLE_HEAP_U8().copyWithin(dest>>>0,src>>>0,src+num>>>0)}function _emscripten_num_logical_cores(){if(ENVIRONMENT_IS_NODE)return require("os").cpus().length;return navigator["hardwareConcurrency"]}function withStackSave(f){var stack=stackSave();var ret=f();stackRestore(stack);return ret}function _emscripten_proxy_to_main_thread_js(index,sync){var numCallArgs=arguments.length-2;var outerArgs=arguments;return withStackSave(()=>{var serializedNumCallArgs=numCallArgs;var args=stackAlloc(serializedNumCallArgs*8);var b=args>>3;for(var i=0;i<numCallArgs;i++){var arg=outerArgs[2+i];GROWABLE_HEAP_F64()[b+i>>>0]=arg}return _emscripten_run_in_main_runtime_thread_js(index,serializedNumCallArgs,args,sync)})}var _emscripten_receive_on_main_thread_js_callArgs=[];function _emscripten_receive_on_main_thread_js(index,numCallArgs,args){_emscripten_receive_on_main_thread_js_callArgs.length=numCallArgs;var b=args>>3;for(var i=0;i<numCallArgs;i++){_emscripten_receive_on_main_thread_js_callArgs[i]=GROWABLE_HEAP_F64()[b+i>>>0]}var isEmAsmConst=index<0;var func=!isEmAsmConst?proxiedFunctionTable[index]:ASM_CONSTS[-index-1];return func.apply(null,_emscripten_receive_on_main_thread_js_callArgs)}function emscripten_realloc_buffer(size){try{wasmMemory.grow(size-buffer.byteLength+65535>>>16);updateGlobalBufferAndViews(wasmMemory.buffer);return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){var oldSize=GROWABLE_HEAP_U8().length;requestedSize=requestedSize>>>0;if(requestedSize<=oldSize){return false}var maxHeapSize=getHeapMax();if(requestedSize>maxHeapSize){return false}let alignUp=(x,multiple)=>x+(multiple-x%multiple)%multiple;for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=emscripten_realloc_buffer(newSize);if(replacement){return true}}return false}function _emscripten_unwind_to_js_event_loop(){throw"unwind"}function _fd_close(fd){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(4,1,fd);return 52}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(5,1,fd,offset_low,offset_high,whence,newOffset);return 70}var printCharBuffers=[null,[],[]];function printChar(stream,curr){var buffer=printCharBuffers[stream];if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}}function _fd_write(fd,iov,iovcnt,pnum){if(ENVIRONMENT_IS_PTHREAD)return _emscripten_proxy_to_main_thread_js(6,1,fd,iov,iovcnt,pnum);var num=0;for(var i=0;i<iovcnt;i++){var ptr=GROWABLE_HEAP_U32()[iov>>>2];var len=GROWABLE_HEAP_U32()[iov+4>>>2];iov+=8;for(var j=0;j<len;j++){printChar(fd,GROWABLE_HEAP_U8()[ptr+j>>>0])}num+=len}GROWABLE_HEAP_U32()[pnum>>>2]=num;return 0}function getCFunc(ident){var func=Module["_"+ident];return func}function writeArrayToMemory(array,buffer){GROWABLE_HEAP_I8().set(array,buffer>>>0)}function ccall(ident,returnType,argTypes,args,opts){var toC={"string":str=>{var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret},"array":arr=>{var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType==="string"){return UTF8ToString(ret)}if(returnType==="boolean")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);function onDone(ret){if(stack!==0)stackRestore(stack);return convertReturnValue(ret)}ret=onDone(ret);return ret}function cwrap(ident,returnType,argTypes,opts){argTypes=argTypes||[];var numericArgs=argTypes.every(type=>type==="number"||type==="boolean");var numericRet=returnType!=="string";if(numericRet&&numericArgs&&!opts){return getCFunc(ident)}return function(){return ccall(ident,returnType,argTypes,arguments,opts)}}PThread.init();var proxiedFunctionTable=[null,_proc_exit,exitOnMainThread,pthreadCreateProxied,_fd_close,_fd_seek,_fd_write];var asmLibraryArg={"__emscripten_init_main_thread_js":___emscripten_init_main_thread_js,"__emscripten_thread_cleanup":___emscripten_thread_cleanup,"__pthread_create_js":___pthread_create_js,"_emscripten_default_pthread_stack_size":__emscripten_default_pthread_stack_size,"_emscripten_get_now_is_monotonic":__emscripten_get_now_is_monotonic,"_emscripten_notify_task_queue":__emscripten_notify_task_queue,"_emscripten_set_offscreencanvas_size":__emscripten_set_offscreencanvas_size,"abort":_abort,"emscripten_check_blocking_allowed":_emscripten_check_blocking_allowed,"emscripten_date_now":_emscripten_date_now,"emscripten_get_heap_max":_emscripten_get_heap_max,"emscripten_get_now":_emscripten_get_now,"emscripten_memcpy_big":_emscripten_memcpy_big,"emscripten_num_logical_cores":_emscripten_num_logical_cores,"emscripten_receive_on_main_thread_js":_emscripten_receive_on_main_thread_js,"emscripten_resize_heap":_emscripten_resize_heap,"emscripten_unwind_to_js_event_loop":_emscripten_unwind_to_js_event_loop,"exit":_exit,"fd_close":_fd_close,"fd_seek":_fd_seek,"fd_write":_fd_write,"memory":wasmMemory||Module["wasmMemory"]};var asm=createWasm();var ___wasm_call_ctors=Module["___wasm_call_ctors"]=function(){return(___wasm_call_ctors=Module["___wasm_call_ctors"]=Module["asm"]["__wasm_call_ctors"]).apply(null,arguments)};var _init=Module["_init"]=function(){return(_init=Module["_init"]=Module["asm"]["init"]).apply(null,arguments)};var _init_with_threads_count=Module["_init_with_threads_count"]=function(){return(_init_with_threads_count=Module["_init_with_threads_count"]=Module["asm"]["init_with_threads_count"]).apply(null,arguments)};var _get_threads_count=Module["_get_threads_count"]=function(){return(_get_threads_count=Module["_get_threads_count"]=Module["asm"]["get_threads_count"]).apply(null,arguments)};var _register_tensor=Module["_register_tensor"]=function(){return(_register_tensor=Module["_register_tensor"]=Module["asm"]["register_tensor"]).apply(null,arguments)};var _dispose_data=Module["_dispose_data"]=function(){return(_dispose_data=Module["_dispose_data"]=Module["asm"]["dispose_data"]).apply(null,arguments)};var _dispose=Module["_dispose"]=function(){return(_dispose=Module["_dispose"]=Module["asm"]["dispose"]).apply(null,arguments)};var _Abs=Module["_Abs"]=function(){return(_Abs=Module["_Abs"]=Module["asm"]["Abs"]).apply(null,arguments)};var _Acos=Module["_Acos"]=function(){return(_Acos=Module["_Acos"]=Module["asm"]["Acos"]).apply(null,arguments)};var _Acosh=Module["_Acosh"]=function(){return(_Acosh=Module["_Acosh"]=Module["asm"]["Acosh"]).apply(null,arguments)};var _Add=Module["_Add"]=function(){return(_Add=Module["_Add"]=Module["asm"]["Add"]).apply(null,arguments)};var _AddN=Module["_AddN"]=function(){return(_AddN=Module["_AddN"]=Module["asm"]["AddN"]).apply(null,arguments)};var _All=Module["_All"]=function(){return(_All=Module["_All"]=Module["asm"]["All"]).apply(null,arguments)};var _Any=Module["_Any"]=function(){return(_Any=Module["_Any"]=Module["asm"]["Any"]).apply(null,arguments)};var _ArgMax=Module["_ArgMax"]=function(){return(_ArgMax=Module["_ArgMax"]=Module["asm"]["ArgMax"]).apply(null,arguments)};var _ArgMin=Module["_ArgMin"]=function(){return(_ArgMin=Module["_ArgMin"]=Module["asm"]["ArgMin"]).apply(null,arguments)};var _Asin=Module["_Asin"]=function(){return(_Asin=Module["_Asin"]=Module["asm"]["Asin"]).apply(null,arguments)};var _Asinh=Module["_Asinh"]=function(){return(_Asinh=Module["_Asinh"]=Module["asm"]["Asinh"]).apply(null,arguments)};var _Atan=Module["_Atan"]=function(){return(_Atan=Module["_Atan"]=Module["asm"]["Atan"]).apply(null,arguments)};var _Atan2=Module["_Atan2"]=function(){return(_Atan2=Module["_Atan2"]=Module["asm"]["Atan2"]).apply(null,arguments)};var _Atanh=Module["_Atanh"]=function(){return(_Atanh=Module["_Atanh"]=Module["asm"]["Atanh"]).apply(null,arguments)};var _AvgPool=Module["_AvgPool"]=function(){return(_AvgPool=Module["_AvgPool"]=Module["asm"]["AvgPool"]).apply(null,arguments)};var _AvgPool3D=Module["_AvgPool3D"]=function(){return(_AvgPool3D=Module["_AvgPool3D"]=Module["asm"]["AvgPool3D"]).apply(null,arguments)};var _AvgPool3DGrad=Module["_AvgPool3DGrad"]=function(){return(_AvgPool3DGrad=Module["_AvgPool3DGrad"]=Module["asm"]["AvgPool3DGrad"]).apply(null,arguments)};var _AvgPoolGrad=Module["_AvgPoolGrad"]=function(){return(_AvgPoolGrad=Module["_AvgPoolGrad"]=Module["asm"]["AvgPoolGrad"]).apply(null,arguments)};var _BatchMatMul=Module["_BatchMatMul"]=function(){return(_BatchMatMul=Module["_BatchMatMul"]=Module["asm"]["BatchMatMul"]).apply(null,arguments)};var _Bincount=Module["_Bincount"]=function(){return(_Bincount=Module["_Bincount"]=Module["asm"]["Bincount"]).apply(null,arguments)};var _BitwiseAnd=Module["_BitwiseAnd"]=function(){return(_BitwiseAnd=Module["_BitwiseAnd"]=Module["asm"]["BitwiseAnd"]).apply(null,arguments)};var _Ceil=Module["_Ceil"]=function(){return(_Ceil=Module["_Ceil"]=Module["asm"]["Ceil"]).apply(null,arguments)};var _ClipByValue=Module["_ClipByValue"]=function(){return(_ClipByValue=Module["_ClipByValue"]=Module["asm"]["ClipByValue"]).apply(null,arguments)};var _Conv2D=Module["_Conv2D"]=function(){return(_Conv2D=Module["_Conv2D"]=Module["asm"]["Conv2D"]).apply(null,arguments)};var _Conv2DBackpropInput=Module["_Conv2DBackpropInput"]=function(){return(_Conv2DBackpropInput=Module["_Conv2DBackpropInput"]=Module["asm"]["Conv2DBackpropInput"]).apply(null,arguments)};var _Conv3D=Module["_Conv3D"]=function(){return(_Conv3D=Module["_Conv3D"]=Module["asm"]["Conv3D"]).apply(null,arguments)};var _Conv3DBackpropFilterV2=Module["_Conv3DBackpropFilterV2"]=function(){return(_Conv3DBackpropFilterV2=Module["_Conv3DBackpropFilterV2"]=Module["asm"]["Conv3DBackpropFilterV2"]).apply(null,arguments)};var _Conv3DBackpropInputV2=Module["_Conv3DBackpropInputV2"]=function(){return(_Conv3DBackpropInputV2=Module["_Conv3DBackpropInputV2"]=Module["asm"]["Conv3DBackpropInputV2"]).apply(null,arguments)};var _Cos=Module["_Cos"]=function(){return(_Cos=Module["_Cos"]=Module["asm"]["Cos"]).apply(null,arguments)};var _Cosh=Module["_Cosh"]=function(){return(_Cosh=Module["_Cosh"]=Module["asm"]["Cosh"]).apply(null,arguments)};var _CropAndResize=Module["_CropAndResize"]=function(){return(_CropAndResize=Module["_CropAndResize"]=Module["asm"]["CropAndResize"]).apply(null,arguments)};var _Cumprod=Module["_Cumprod"]=function(){return(_Cumprod=Module["_Cumprod"]=Module["asm"]["Cumprod"]).apply(null,arguments)};var _Cumsum=Module["_Cumsum"]=function(){return(_Cumsum=Module["_Cumsum"]=Module["asm"]["Cumsum"]).apply(null,arguments)};var _DenseBincount=Module["_DenseBincount"]=function(){return(_DenseBincount=Module["_DenseBincount"]=Module["asm"]["DenseBincount"]).apply(null,arguments)};var _DepthToSpace=Module["_DepthToSpace"]=function(){return(_DepthToSpace=Module["_DepthToSpace"]=Module["asm"]["DepthToSpace"]).apply(null,arguments)};var _DepthwiseConv2dNative=Module["_DepthwiseConv2dNative"]=function(){return(_DepthwiseConv2dNative=Module["_DepthwiseConv2dNative"]=Module["asm"]["DepthwiseConv2dNative"]).apply(null,arguments)};var _Diag=Module["_Diag"]=function(){return(_Diag=Module["_Diag"]=Module["asm"]["Diag"]).apply(null,arguments)};var _Dilation2D=Module["_Dilation2D"]=function(){return(_Dilation2D=Module["_Dilation2D"]=Module["asm"]["Dilation2D"]).apply(null,arguments)};var _Dilation2DBackpropFilter=Module["_Dilation2DBackpropFilter"]=function(){return(_Dilation2DBackpropFilter=Module["_Dilation2DBackpropFilter"]=Module["asm"]["Dilation2DBackpropFilter"]).apply(null,arguments)};var _Dilation2DBackpropInput=Module["_Dilation2DBackpropInput"]=function(){return(_Dilation2DBackpropInput=Module["_Dilation2DBackpropInput"]=Module["asm"]["Dilation2DBackpropInput"]).apply(null,arguments)};var _Elu=Module["_Elu"]=function(){return(_Elu=Module["_Elu"]=Module["asm"]["Elu"]).apply(null,arguments)};var _EluGrad=Module["_EluGrad"]=function(){return(_EluGrad=Module["_EluGrad"]=Module["asm"]["EluGrad"]).apply(null,arguments)};var _Equal=Module["_Equal"]=function(){return(_Equal=Module["_Equal"]=Module["asm"]["Equal"]).apply(null,arguments)};var _Erf=Module["_Erf"]=function(){return(_Erf=Module["_Erf"]=Module["asm"]["Erf"]).apply(null,arguments)};var _Exp=Module["_Exp"]=function(){return(_Exp=Module["_Exp"]=Module["asm"]["Exp"]).apply(null,arguments)};var _Expm1=Module["_Expm1"]=function(){return(_Expm1=Module["_Expm1"]=Module["asm"]["Expm1"]).apply(null,arguments)};var _FlipLeftRight=Module["_FlipLeftRight"]=function(){return(_FlipLeftRight=Module["_FlipLeftRight"]=Module["asm"]["FlipLeftRight"]).apply(null,arguments)};var _Floor=Module["_Floor"]=function(){return(_Floor=Module["_Floor"]=Module["asm"]["Floor"]).apply(null,arguments)};var _FloorDiv=Module["_FloorDiv"]=function(){return(_FloorDiv=Module["_FloorDiv"]=Module["asm"]["FloorDiv"]).apply(null,arguments)};var _FusedBatchNorm=Module["_FusedBatchNorm"]=function(){return(_FusedBatchNorm=Module["_FusedBatchNorm"]=Module["asm"]["FusedBatchNorm"]).apply(null,arguments)};var _FusedConv2D=Module["_FusedConv2D"]=function(){return(_FusedConv2D=Module["_FusedConv2D"]=Module["asm"]["FusedConv2D"]).apply(null,arguments)};var _FusedDepthwiseConv2D=Module["_FusedDepthwiseConv2D"]=function(){return(_FusedDepthwiseConv2D=Module["_FusedDepthwiseConv2D"]=Module["asm"]["FusedDepthwiseConv2D"]).apply(null,arguments)};var _Gather=Module["_Gather"]=function(){return(_Gather=Module["_Gather"]=Module["asm"]["Gather"]).apply(null,arguments)};var _GatherNd=Module["_GatherNd"]=function(){return(_GatherNd=Module["_GatherNd"]=Module["asm"]["GatherNd"]).apply(null,arguments)};var _Greater=Module["_Greater"]=function(){return(_Greater=Module["_Greater"]=Module["asm"]["Greater"]).apply(null,arguments)};var _GreaterEqual=Module["_GreaterEqual"]=function(){return(_GreaterEqual=Module["_GreaterEqual"]=Module["asm"]["GreaterEqual"]).apply(null,arguments)};var _IsFinite=Module["_IsFinite"]=function(){return(_IsFinite=Module["_IsFinite"]=Module["asm"]["IsFinite"]).apply(null,arguments)};var _IsInf=Module["_IsInf"]=function(){return(_IsInf=Module["_IsInf"]=Module["asm"]["IsInf"]).apply(null,arguments)};var _IsNan=Module["_IsNan"]=function(){return(_IsNan=Module["_IsNan"]=Module["asm"]["IsNan"]).apply(null,arguments)};var _LRN=Module["_LRN"]=function(){return(_LRN=Module["_LRN"]=Module["asm"]["LRN"]).apply(null,arguments)};var _LRNGrad=Module["_LRNGrad"]=function(){return(_LRNGrad=Module["_LRNGrad"]=Module["asm"]["LRNGrad"]).apply(null,arguments)};var _LeakyRelu=Module["_LeakyRelu"]=function(){return(_LeakyRelu=Module["_LeakyRelu"]=Module["asm"]["LeakyRelu"]).apply(null,arguments)};var _Less=Module["_Less"]=function(){return(_Less=Module["_Less"]=Module["asm"]["Less"]).apply(null,arguments)};var _LessEqual=Module["_LessEqual"]=function(){return(_LessEqual=Module["_LessEqual"]=Module["asm"]["LessEqual"]).apply(null,arguments)};var _LinSpace=Module["_LinSpace"]=function(){return(_LinSpace=Module["_LinSpace"]=Module["asm"]["LinSpace"]).apply(null,arguments)};var _Log=Module["_Log"]=function(){return(_Log=Module["_Log"]=Module["asm"]["Log"]).apply(null,arguments)};var _Log1p=Module["_Log1p"]=function(){return(_Log1p=Module["_Log1p"]=Module["asm"]["Log1p"]).apply(null,arguments)};var _LogicalAnd=Module["_LogicalAnd"]=function(){return(_LogicalAnd=Module["_LogicalAnd"]=Module["asm"]["LogicalAnd"]).apply(null,arguments)};var _LogicalNot=Module["_LogicalNot"]=function(){return(_LogicalNot=Module["_LogicalNot"]=Module["asm"]["LogicalNot"]).apply(null,arguments)};var _LogicalOr=Module["_LogicalOr"]=function(){return(_LogicalOr=Module["_LogicalOr"]=Module["asm"]["LogicalOr"]).apply(null,arguments)};var _LogicalXor=Module["_LogicalXor"]=function(){return(_LogicalXor=Module["_LogicalXor"]=Module["asm"]["LogicalXor"]).apply(null,arguments)};var _Max=Module["_Max"]=function(){return(_Max=Module["_Max"]=Module["asm"]["Max"]).apply(null,arguments)};var _MaxPool=Module["_MaxPool"]=function(){return(_MaxPool=Module["_MaxPool"]=Module["asm"]["MaxPool"]).apply(null,arguments)};var _MaxPool3D=Module["_MaxPool3D"]=function(){return(_MaxPool3D=Module["_MaxPool3D"]=Module["asm"]["MaxPool3D"]).apply(null,arguments)};var _MaxPool3DGrad=Module["_MaxPool3DGrad"]=function(){return(_MaxPool3DGrad=Module["_MaxPool3DGrad"]=Module["asm"]["MaxPool3DGrad"]).apply(null,arguments)};var _MaxPoolGrad=Module["_MaxPoolGrad"]=function(){return(_MaxPoolGrad=Module["_MaxPoolGrad"]=Module["asm"]["MaxPoolGrad"]).apply(null,arguments)};var _MaxPoolWithArgmax=Module["_MaxPoolWithArgmax"]=function(){return(_MaxPoolWithArgmax=Module["_MaxPoolWithArgmax"]=Module["asm"]["MaxPoolWithArgmax"]).apply(null,arguments)};var _Maximum=Module["_Maximum"]=function(){return(_Maximum=Module["_Maximum"]=Module["asm"]["Maximum"]).apply(null,arguments)};var _Mean=Module["_Mean"]=function(){return(_Mean=Module["_Mean"]=Module["asm"]["Mean"]).apply(null,arguments)};var _Min=Module["_Min"]=function(){return(_Min=Module["_Min"]=Module["asm"]["Min"]).apply(null,arguments)};var _Minimum=Module["_Minimum"]=function(){return(_Minimum=Module["_Minimum"]=Module["asm"]["Minimum"]).apply(null,arguments)};var _MirrorPad=Module["_MirrorPad"]=function(){return(_MirrorPad=Module["_MirrorPad"]=Module["asm"]["MirrorPad"]).apply(null,arguments)};var _Mod=Module["_Mod"]=function(){return(_Mod=Module["_Mod"]=Module["asm"]["Mod"]).apply(null,arguments)};var _Multinomial=Module["_Multinomial"]=function(){return(_Multinomial=Module["_Multinomial"]=Module["asm"]["Multinomial"]).apply(null,arguments)};var _Multiply=Module["_Multiply"]=function(){return(_Multiply=Module["_Multiply"]=Module["asm"]["Multiply"]).apply(null,arguments)};var _Neg=Module["_Neg"]=function(){return(_Neg=Module["_Neg"]=Module["asm"]["Neg"]).apply(null,arguments)};var _NonMaxSuppressionV3=Module["_NonMaxSuppressionV3"]=function(){return(_NonMaxSuppressionV3=Module["_NonMaxSuppressionV3"]=Module["asm"]["NonMaxSuppressionV3"]).apply(null,arguments)};var _NonMaxSuppressionV4=Module["_NonMaxSuppressionV4"]=function(){return(_NonMaxSuppressionV4=Module["_NonMaxSuppressionV4"]=Module["asm"]["NonMaxSuppressionV4"]).apply(null,arguments)};var _NonMaxSuppressionV5=Module["_NonMaxSuppressionV5"]=function(){return(_NonMaxSuppressionV5=Module["_NonMaxSuppressionV5"]=Module["asm"]["NonMaxSuppressionV5"]).apply(null,arguments)};var _NotEqual=Module["_NotEqual"]=function(){return(_NotEqual=Module["_NotEqual"]=Module["asm"]["NotEqual"]).apply(null,arguments)};var _OneHot=Module["_OneHot"]=function(){return(_OneHot=Module["_OneHot"]=Module["asm"]["OneHot"]).apply(null,arguments)};var _PadV2=Module["_PadV2"]=function(){return(_PadV2=Module["_PadV2"]=Module["asm"]["PadV2"]).apply(null,arguments)};var _Pow=Module["_Pow"]=function(){return(_Pow=Module["_Pow"]=Module["asm"]["Pow"]).apply(null,arguments)};var _Prelu=Module["_Prelu"]=function(){return(_Prelu=Module["_Prelu"]=Module["asm"]["Prelu"]).apply(null,arguments)};var _Prod=Module["_Prod"]=function(){return(_Prod=Module["_Prod"]=Module["asm"]["Prod"]).apply(null,arguments)};var _RealDiv=Module["_RealDiv"]=function(){return(_RealDiv=Module["_RealDiv"]=Module["asm"]["RealDiv"]).apply(null,arguments)};var _Reciprocal=Module["_Reciprocal"]=function(){return(_Reciprocal=Module["_Reciprocal"]=Module["asm"]["Reciprocal"]).apply(null,arguments)};var _Relu=Module["_Relu"]=function(){return(_Relu=Module["_Relu"]=Module["asm"]["Relu"]).apply(null,arguments)};var _Relu6=Module["_Relu6"]=function(){return(_Relu6=Module["_Relu6"]=Module["asm"]["Relu6"]).apply(null,arguments)};var _ResizeBilinear=Module["_ResizeBilinear"]=function(){return(_ResizeBilinear=Module["_ResizeBilinear"]=Module["asm"]["ResizeBilinear"]).apply(null,arguments)};var _ResizeBilinearGrad=Module["_ResizeBilinearGrad"]=function(){return(_ResizeBilinearGrad=Module["_ResizeBilinearGrad"]=Module["asm"]["ResizeBilinearGrad"]).apply(null,arguments)};var _ResizeNearestNeighbor=Module["_ResizeNearestNeighbor"]=function(){return(_ResizeNearestNeighbor=Module["_ResizeNearestNeighbor"]=Module["asm"]["ResizeNearestNeighbor"]).apply(null,arguments)};var _ResizeNearestNeighborGrad=Module["_ResizeNearestNeighborGrad"]=function(){return(_ResizeNearestNeighborGrad=Module["_ResizeNearestNeighborGrad"]=Module["asm"]["ResizeNearestNeighborGrad"]).apply(null,arguments)};var _Reverse=Module["_Reverse"]=function(){return(_Reverse=Module["_Reverse"]=Module["asm"]["Reverse"]).apply(null,arguments)};var _RotateWithOffset=Module["_RotateWithOffset"]=function(){return(_RotateWithOffset=Module["_RotateWithOffset"]=Module["asm"]["RotateWithOffset"]).apply(null,arguments)};var _Round=Module["_Round"]=function(){return(_Round=Module["_Round"]=Module["asm"]["Round"]).apply(null,arguments)};var _Rsqrt=Module["_Rsqrt"]=function(){return(_Rsqrt=Module["_Rsqrt"]=Module["asm"]["Rsqrt"]).apply(null,arguments)};var _ScatterNd=Module["_ScatterNd"]=function(){return(_ScatterNd=Module["_ScatterNd"]=Module["asm"]["ScatterNd"]).apply(null,arguments)};var _SearchSorted=Module["_SearchSorted"]=function(){return(_SearchSorted=Module["_SearchSorted"]=Module["asm"]["SearchSorted"]).apply(null,arguments)};var _SelectV2=Module["_SelectV2"]=function(){return(_SelectV2=Module["_SelectV2"]=Module["asm"]["SelectV2"]).apply(null,arguments)};var _Selu=Module["_Selu"]=function(){return(_Selu=Module["_Selu"]=Module["asm"]["Selu"]).apply(null,arguments)};var _Sigmoid=Module["_Sigmoid"]=function(){return(_Sigmoid=Module["_Sigmoid"]=Module["asm"]["Sigmoid"]).apply(null,arguments)};var _Sign=Module["_Sign"]=function(){return(_Sign=Module["_Sign"]=Module["asm"]["Sign"]).apply(null,arguments)};var _Sin=Module["_Sin"]=function(){return(_Sin=Module["_Sin"]=Module["asm"]["Sin"]).apply(null,arguments)};var _Sinh=Module["_Sinh"]=function(){return(_Sinh=Module["_Sinh"]=Module["asm"]["Sinh"]).apply(null,arguments)};var _Softmax=Module["_Softmax"]=function(){return(_Softmax=Module["_Softmax"]=Module["asm"]["Softmax"]).apply(null,arguments)};var _Softplus=Module["_Softplus"]=function(){return(_Softplus=Module["_Softplus"]=Module["asm"]["Softplus"]).apply(null,arguments)};var _SparseFillEmptyRows=Module["_SparseFillEmptyRows"]=function(){return(_SparseFillEmptyRows=Module["_SparseFillEmptyRows"]=Module["asm"]["SparseFillEmptyRows"]).apply(null,arguments)};var _SparseReshape=Module["_SparseReshape"]=function(){return(_SparseReshape=Module["_SparseReshape"]=Module["asm"]["SparseReshape"]).apply(null,arguments)};var _SparseSegmentReduction=Module["_SparseSegmentReduction"]=function(){return(_SparseSegmentReduction=Module["_SparseSegmentReduction"]=Module["asm"]["SparseSegmentReduction"]).apply(null,arguments)};var _SparseToDense=Module["_SparseToDense"]=function(){return(_SparseToDense=Module["_SparseToDense"]=Module["asm"]["SparseToDense"]).apply(null,arguments)};var _Sqrt=Module["_Sqrt"]=function(){return(_Sqrt=Module["_Sqrt"]=Module["asm"]["Sqrt"]).apply(null,arguments)};var _Square=Module["_Square"]=function(){return(_Square=Module["_Square"]=Module["asm"]["Square"]).apply(null,arguments)};var _SquaredDifference=Module["_SquaredDifference"]=function(){return(_SquaredDifference=Module["_SquaredDifference"]=Module["asm"]["SquaredDifference"]).apply(null,arguments)};var _Step=Module["_Step"]=function(){return(_Step=Module["_Step"]=Module["asm"]["Step"]).apply(null,arguments)};var _StridedSlice=Module["_StridedSlice"]=function(){return(_StridedSlice=Module["_StridedSlice"]=Module["asm"]["StridedSlice"]).apply(null,arguments)};var _Sub=Module["_Sub"]=function(){return(_Sub=Module["_Sub"]=Module["asm"]["Sub"]).apply(null,arguments)};var _Sum=Module["_Sum"]=function(){return(_Sum=Module["_Sum"]=Module["asm"]["Sum"]).apply(null,arguments)};var _Tan=Module["_Tan"]=function(){return(_Tan=Module["_Tan"]=Module["asm"]["Tan"]).apply(null,arguments)};var _Tanh=Module["_Tanh"]=function(){return(_Tanh=Module["_Tanh"]=Module["asm"]["Tanh"]).apply(null,arguments)};var _TensorScatterUpdate=Module["_TensorScatterUpdate"]=function(){return(_TensorScatterUpdate=Module["_TensorScatterUpdate"]=Module["asm"]["TensorScatterUpdate"]).apply(null,arguments)};var _Tile=Module["_Tile"]=function(){return(_Tile=Module["_Tile"]=Module["asm"]["Tile"]).apply(null,arguments)};var _TopK=Module["_TopK"]=function(){return(_TopK=Module["_TopK"]=Module["asm"]["TopK"]).apply(null,arguments)};var _Transform=Module["_Transform"]=function(){return(_Transform=Module["_Transform"]=Module["asm"]["Transform"]).apply(null,arguments)};var _Transpose=Module["_Transpose"]=function(){return(_Transpose=Module["_Transpose"]=Module["asm"]["Transpose"]).apply(null,arguments)};var __FusedMatMul=Module["__FusedMatMul"]=function(){return(__FusedMatMul=Module["__FusedMatMul"]=Module["asm"]["_FusedMatMul"]).apply(null,arguments)};var _malloc=Module["_malloc"]=function(){return(_malloc=Module["_malloc"]=Module["asm"]["malloc"]).apply(null,arguments)};var _free=Module["_free"]=function(){return(_free=Module["_free"]=Module["asm"]["free"]).apply(null,arguments)};var __emscripten_tls_init=Module["__emscripten_tls_init"]=function(){return(__emscripten_tls_init=Module["__emscripten_tls_init"]=Module["asm"]["_emscripten_tls_init"]).apply(null,arguments)};var _pthread_self=Module["_pthread_self"]=function(){return(_pthread_self=Module["_pthread_self"]=Module["asm"]["pthread_self"]).apply(null,arguments)};var ___errno_location=Module["___errno_location"]=function(){return(___errno_location=Module["___errno_location"]=Module["asm"]["__errno_location"]).apply(null,arguments)};var __emscripten_thread_init=Module["__emscripten_thread_init"]=function(){return(__emscripten_thread_init=Module["__emscripten_thread_init"]=Module["asm"]["_emscripten_thread_init"]).apply(null,arguments)};var __emscripten_thread_crashed=Module["__emscripten_thread_crashed"]=function(){return(__emscripten_thread_crashed=Module["__emscripten_thread_crashed"]=Module["asm"]["_emscripten_thread_crashed"]).apply(null,arguments)};var _emscripten_main_thread_process_queued_calls=Module["_emscripten_main_thread_process_queued_calls"]=function(){return(_emscripten_main_thread_process_queued_calls=Module["_emscripten_main_thread_process_queued_calls"]=Module["asm"]["emscripten_main_thread_process_queued_calls"]).apply(null,arguments)};var _emscripten_main_browser_thread_id=Module["_emscripten_main_browser_thread_id"]=function(){return(_emscripten_main_browser_thread_id=Module["_emscripten_main_browser_thread_id"]=Module["asm"]["emscripten_main_browser_thread_id"]).apply(null,arguments)};var _emscripten_run_in_main_runtime_thread_js=Module["_emscripten_run_in_main_runtime_thread_js"]=function(){return(_emscripten_run_in_main_runtime_thread_js=Module["_emscripten_run_in_main_runtime_thread_js"]=Module["asm"]["emscripten_run_in_main_runtime_thread_js"]).apply(null,arguments)};var _emscripten_dispatch_to_thread_=Module["_emscripten_dispatch_to_thread_"]=function(){return(_emscripten_dispatch_to_thread_=Module["_emscripten_dispatch_to_thread_"]=Module["asm"]["emscripten_dispatch_to_thread_"]).apply(null,arguments)};var __emscripten_proxy_execute_task_queue=Module["__emscripten_proxy_execute_task_queue"]=function(){return(__emscripten_proxy_execute_task_queue=Module["__emscripten_proxy_execute_task_queue"]=Module["asm"]["_emscripten_proxy_execute_task_queue"]).apply(null,arguments)};var __emscripten_thread_free_data=Module["__emscripten_thread_free_data"]=function(){return(__emscripten_thread_free_data=Module["__emscripten_thread_free_data"]=Module["asm"]["_emscripten_thread_free_data"]).apply(null,arguments)};var __emscripten_thread_exit=Module["__emscripten_thread_exit"]=function(){return(__emscripten_thread_exit=Module["__emscripten_thread_exit"]=Module["asm"]["_emscripten_thread_exit"]).apply(null,arguments)};var _emscripten_stack_set_limits=Module["_emscripten_stack_set_limits"]=function(){return(_emscripten_stack_set_limits=Module["_emscripten_stack_set_limits"]=Module["asm"]["emscripten_stack_set_limits"]).apply(null,arguments)};var stackSave=Module["stackSave"]=function(){return(stackSave=Module["stackSave"]=Module["asm"]["stackSave"]).apply(null,arguments)};var stackRestore=Module["stackRestore"]=function(){return(stackRestore=Module["stackRestore"]=Module["asm"]["stackRestore"]).apply(null,arguments)};var stackAlloc=Module["stackAlloc"]=function(){return(stackAlloc=Module["stackAlloc"]=Module["asm"]["stackAlloc"]).apply(null,arguments)};var dynCall_iijjiiii=Module["dynCall_iijjiiii"]=function(){return(dynCall_iijjiiii=Module["dynCall_iijjiiii"]=Module["asm"]["dynCall_iijjiiii"]).apply(null,arguments)};var dynCall_jiji=Module["dynCall_jiji"]=function(){return(dynCall_jiji=Module["dynCall_jiji"]=Module["asm"]["dynCall_jiji"]).apply(null,arguments)};Module["keepRuntimeAlive"]=keepRuntimeAlive;Module["wasmMemory"]=wasmMemory;Module["cwrap"]=cwrap;Module["ExitStatus"]=ExitStatus;Module["PThread"]=PThread;var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}if(ENVIRONMENT_IS_PTHREAD){readyPromiseResolve(Module);initRuntime();startWorker(Module);return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module["calledRun"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);if(Module["onRuntimeInitialized"])Module["onRuntimeInitialized"]();postRun()}if(Module["setStatus"]){Module["setStatus"]("Running...");setTimeout(function(){setTimeout(function(){Module["setStatus"]("")},1);doRun()},1)}else{doRun()}}if(Module["preInit"]){if(typeof Module["preInit"]=="function")Module["preInit"]=[Module["preInit"]];while(Module["preInit"].length>0){Module["preInit"].pop()()}}run();var listenersAdded;if(beforeListeners){listenersAdded={uncaughtException:process.listeners("uncaughtException").filter(function(listener){return!beforeListeners.uncaughtException.indexOf(listener)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(listener){return!beforeListeners.unhandledRejection.indexOf(listener)>-1})}}var actualModule;if(typeof WasmBackendModule!=="undefined"){actualModule=WasmBackendModule}else if(typeof WasmBackendModuleThreadedSimd!=="undefined"){actualModule=WasmBackendModuleThreadedSimd}else{throw new Error("Could not find wasm module in post.js")}if(listenersAdded){var tmpDispose=actualModule["_dispose"];actualModule["_dispose"]=function(){tmpDispose();listenersAdded.uncaughtException.forEach(function(listener){process.removeListener("uncaughtException",listener)});listenersAdded.unhandledRejection.forEach(function(listener){process.removeListener("unhandledRejection",listener)})}}


  return WasmBackendModuleThreadedSimd.ready
}
);
})();
if (typeof exports === 'object' && typeof module === 'object')
  module.exports = WasmBackendModuleThreadedSimd;
else if (typeof define === 'function' && define['amd'])
  define([], function() { return WasmBackendModuleThreadedSimd; });
else if (typeof exports === 'object')
  exports["WasmBackendModuleThreadedSimd"] = WasmBackendModuleThreadedSimd;`;var d_=gl(RX());var FX=c_.default||c_,qke=d_.default||d_,Zg=class extends Io{constructor(e){super();this.wasm=e;this.dataIdNextNumber=1;this.wasm.tfjs.initWithThreadsCount(BX),m_=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new Wa(this,Xr())}write(e,n,o){let s={id:this.dataIdNextNumber++};return this.move(s,e,n,o,1),s}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let n=y.now();return e(),{kernelMs:y.now()-n}}move(e,n,o,s,a){let i=this.dataIdNextNumber++;if(s==="string"){let m=n;this.dataIdMap.set(e,{id:i,stringBytes:m,shape:o,dtype:s,memoryOffset:null,refCount:a});return}let p=y.sizeFromShape(o),u=p*y.bytesPerElement(s),l=this.wasm._malloc(u)>>>0;this.dataIdMap.set(e,{id:i,memoryOffset:l,shape:o,dtype:s,refCount:a}),this.wasm.tfjs.registerTensor(i,p,l),n!=null&&this.wasm.HEAPU8.set(new Uint8Array(n.buffer,n.byteOffset,u),l)}async read(e){return this.readSync(e)}readSync(e,n,o){let{memoryOffset:s,dtype:a,shape:i,stringBytes:p}=this.dataIdMap.get(e);if(a==="string")return(n==null||n===0)&&(o==null||o>=p.length)?p:p.slice(n,o);n=n||0,o=o||y.sizeFromShape(i);let u=y.bytesPerElement(a),l=this.wasm.HEAPU8.slice(s+n*u,s+o*u);return Xke(l.buffer,a)}disposeData(e,n=!1){if(this.dataIdMap.has(e)){let o=this.dataIdMap.get(e);if(o.refCount--,!n&&o.refCount>0)return!1;this.wasm._free(o.memoryOffset),this.wasm.tfjs.disposeData(o.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let n=this.dataIdMap.get(e);n!=null&&n.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,n,o,s){let a;if(o==null)a=this.write(s??null,e,n);else{let i=this.dataIdNextNumber++;a={id:i},this.dataIdMap.set(a,{id:i,memoryOffset:o,shape:e,dtype:n,refCount:1});let p=y.sizeFromShape(e);this.wasm.tfjs.registerTensor(i,p,o)}return{dataId:a,shape:e,dtype:n}}typedArrayFromHeap({shape:e,dtype:n,dataId:o}){let s=this.wasm.HEAPU8.buffer,{memoryOffset:a}=this.dataIdMap.get(o),i=y.sizeFromShape(e);switch(n){case"float32":return new Float32Array(s,a,i);case"int32":return new Int32Array(s,a,i);case"bool":return new Uint8Array(s,a,i);default:throw new Error(`Unknown dtype ${n}`)}}};function jke(r){return(t,e)=>(y.fetch(r,{credentials:"same-origin"}).then(n=>{n.ok||t.env.a(`failed to load wasm binary file at '${r}'`),n.arrayBuffer().then(o=>{WebAssembly.instantiate(o,t).then(s=>{e(s.instance,s.module)})})}),{})}function EX(r,t,e){if(Iv!=null)return Iv;let n="tfjs-backend-wasm.wasm";return r&&t?n="tfjs-backend-wasm-threaded-simd.wasm":r&&(n="tfjs-backend-wasm-simd.wasm"),Xg!=null&&Xg[n]!=null?Xg[n]:e+n}async function LX(){let[r,t]=await Promise.all([L().getAsync("WASM_HAS_SIMD_SUPPORT"),L().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((e,n)=>{let o={};o.locateFile=(i,p)=>{if(i.endsWith(".worker.js")){let u=PX.replace(/\n/g,"\\n"),l=new Blob([u],{type:"application/javascript"});return URL.createObjectURL(l)}return i.endsWith(".wasm")?EX(r,t,jg??p):p+i},f_&&(o.instantiateWasm=jke(EX(r,t,jg??"")));let s=!1;o.onAbort=()=>{if(s||Yg)return;Yg=!0,n({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"})};let a;t&&r&&Iv==null?(o.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+FX.toString()],{type:"text/javascript"}),a=FX(o)):a=qke(o),a.then(i=>{s=!0,Yg=!1;let p=null;i.tfjs={init:i.cwrap("init",null,[]),initWithThreadsCount:i.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:i.cwrap("get_threads_count","number",[]),registerTensor:i.cwrap("register_tensor",null,["number","number","number"]),disposeData:i.cwrap("dispose_data",p,["number"]),dispose:i.cwrap("dispose",p,[])},e({wasm:i})}).catch(n)})}function Xke(r,t){switch(t){case"float32":return new Float32Array(r);case"int32":return new Int32Array(r);case"bool":return new Uint8Array(r);default:throw new Error(`Unknown dtype ${t}`)}}var Yke=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],Iv=null,jg=null,Xg={},Yg=!1,f_=!1;function Zke(r,t=!1){if(FA("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),Yg)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");Iv=r,f_=t}function Qke(r,t=!1){if(Yg)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if(typeof r=="string")jg=r;else{Xg=r;let e=Yke.filter(n=>Xg[n]==null);if(e.length>0)throw new Error(`There were no entries found for the following binaries: ${e.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}f_=t}var BX=-1,m_=-1;function Jke(r){BX=r}function eve(){if(m_===-1)throw new Error("WASM backend not initialized.");return m_}var tve="0.0.0";var rve=2;Bp("wasm",async()=>{let{wasm:r}=await LX();return new Zg(r)},rve);var ml="4.7.0-20230612",mNn={tfjs:ml,"tfjs-core":ml,"tfjs-data":ml,"tfjs-layers":ml,"tfjs-converter":ml,"tfjs-backend-cpu":ml,"tfjs-backend-webgl":ml,"tfjs-backend-wasm":ml};export{Xs as Abs,vo as Acos,So as Acosh,Ul as AdadeltaOptimizer,Kl as AdagradOptimizer,Vl as AdamOptimizer,Hl as AdamaxOptimizer,Mn as Add,wo as AddN,Ka as All,Va as Any,Ys as ArgMax,Zs as ArgMin,Ao as Asin,No as Asinh,Do as Atan,Mo as Atan2,_o as Atanh,Po as AvgPool,Qs as AvgPool3D,Zi as AvgPool3DGrad,Yi as AvgPoolGrad,Zg as BackendWasm,Ro as BatchMatMul,Js as BatchToSpaceND,Ha as Bincount,$u as BitwiseAnd,Qi as BroadcastArgs,P_ as BroadcastTo,eT as Callback,cx as CallbackList,jn as Cast,Fo as Ceil,Xn as ClipByValue,Tp as Complex,Ji as ComplexAbs,ea as Concat,Eo as Conv2D,Cp as Conv2DBackpropFilter,Lo as Conv2DBackpropInput,Bo as Conv3D,qa as Conv3DBackpropFilterV2,ja as Conv3DBackpropInputV2,$o as Cos,Oo as Cosh,Ya as CropAndResize,Xa as Cumprod,zo as Cumsum,fx as CustomCallback,Wa as DataStorage,eu as DenseBincount,Za as DepthToSpace,Go as DepthwiseConv2dNative,Ip as DepthwiseConv2dNativeBackpropFilter,kp as DepthwiseConv2dNativeBackpropInput,tu as Diag,Wo as Dilation2D,nu as Dilation2DBackpropFilter,ru as Dilation2DBackpropInput,xh as Draw,uA as ENV,tT as EarlyStopping,vp as Einsum,Ko as Elu,Qa as EluGrad,bh as Environment,Ja as Equal,Vo as Erf,Ho as Exp,ta as ExpandDims,qo as Expm1,Sp as FFT,ou as Fill,ei as FlipLeftRight,jo as Floor,Xo as FloorDiv,Cl as FromPixels,Yo as FusedBatchNorm,ha as FusedConv2D,ga as FusedDepthwiseConv2D,Rm as GPGPUContext,ti as GatherNd,ra as GatherV2,cg as GraphModel,ri as Greater,Zo as GreaterEqual,dx as History,wp as IFFT,Yn as Identity,Ap as Imag,_t as InputSpec,Qo as IsFinite,Jo as IsInf,es as IsNan,Io as KernelBackend,os as LRN,pi as LRNGrad,jh as LayerVariable,so as LayersModel,ts as LeakyRelu,ni as Less,oi as LessEqual,si as LinSpace,rs as Log,ns as Log1p,F_ as LogSoftmax,ai as LogicalAnd,ii as LogicalNot,ui as LogicalOr,R_ as LogicalXor,uve as LowerBound,Cf as MathBackendCPU,Uf as MathBackendWebGL,pve as MatrixBandPart,ss as Max,is as MaxPool,na as MaxPool3D,au as MaxPool3DGrad,su as MaxPoolGrad,iu as MaxPoolWithArgmax,as as Maximum,us as Mean,ps as Min,ls as Minimum,ms as MirrorPad,cs as Mod,ql as MomentumOptimizer,li as Multinomial,ds as Multiply,oa as Neg,ci as NonMaxSuppressionV3,Ou as NonMaxSuppressionV4,di as NonMaxSuppressionV5,mi as NotEqual,vA as OP_SCOPE_SUFFIX,fs as OneHot,sa as OnesLike,en as Optimizer,Wh as OptimizerConstructors,aa as Pack,hs as PadV2,lve as Pool,gs as Pow,bs as Prelu,ys as Prod,jl as RMSPropOptimizer,Vs as RNN,nc as RaggedGather,oc as RaggedRange,sc as RaggedTensorToTensor,uu as Range,s1 as Rank,Np as Real,Uo as RealDiv,xs as Reciprocal,Di as Reduction,Ts as Relu,ks as Relu6,ia as Reshape,Is as ResizeBilinear,hi as ResizeBilinearGrad,Cs as ResizeNearestNeighbor,fi as ResizeNearestNeighborGrad,vs as Reverse,ki as RotateWithOffset,Ss as Round,ws as Rsqrt,Xu as SGDOptimizer,gi as ScatterNd,yi as SearchSorted,ua as Select,As as Selu,pm as Sequential,Ms as Sigmoid,_s as Sign,Ns as Sin,Ds as Sinh,pa as Slice,Es as Softmax,Ps as Softplus,la as SpaceToBatchND,Dp as SparseFillEmptyRows,zu as SparseReshape,pu as SparseSegmentMean,lu as SparseSegmentSum,xi as SparseToDense,ma as SplitV,Rs as Sqrt,mu as Square,Ls as SquaredDifference,Tl as StaticRegexReplace,Zn as Step,Ti as StridedSlice,cu as StringNGrams,_p as StringSplit,Mp as StringToHashBucketFast,Bs as Sub,Fs as Sum,cn as SymbolicTensor,$s as Tan,Os as Tanh,Ve as Tensor,ft as TensorBuffer,bi as TensorScatterUpdate,Pn as Tile,Ci as TopK,Ii as Transform,Rn as Transpose,Pp as Unique,ca as Unpack,du as UnsortedSegmentSum,mve as UpperBound,Wu as Variable,Qf as WebGPUBackend,da as ZerosLike,fa as _FusedMatMul,Ut as abs,L1 as acos,B1 as acosh,Q as add,$1 as addN,Hb as all,Dh as any,$p as argMax,O1 as argMin,z1 as asin,G1 as asinh,W1 as atan,U1 as atan2,K1 as atanh,bc as avgPool,qb as avgPool3d,E1 as backend,I as backend_util,q1 as basicLSTMCell,zp as batchNorm,jb as batchNorm2d,Xb as batchNorm3d,Yb as batchNorm4d,yc as batchToSpaceND,Zb as bincount,X1 as bitwiseAnd,w9 as booleanMaskAsync,Y1 as broadcastArgs,Gp as broadcastTo,Mr as broadcast_util,Hy as browser,Ce as buffer,Hse as callbacks,ne as cast,Z1 as ceil,Yr as clipByValue,Tn as clone,En as complex,ht as concat,Qb as concat1d,Jb as concat2d,ey as concat3d,ty as concat4d,uL as constraints,ry as conv1d,Ws as conv2d,ny as conv2dTranspose,oy as conv3d,ay as conv3dTranspose,yve as copyRegisteredKernels,Tc as cos,iy as cosh,$h as cosineWindow,Ph as cumprod,uy as cumsum,Cn as customGrad,KB as data,Rh as denseBincount,FA as deprecationWarn,Q1 as depthToSpace,Wp as depthwiseConv2d,Zse as deregisterOp,Ep as device_util,J1 as diag,eM as dilation2d,gAe as disableDeprecationWarnings,Pe as dispose,bAe as disposeVariables,de as div,rM as divNoNan,nM as dot,ZA as dropout,oM as einsum,Up as elu,hAe as enableDebugMode,fAe as enableProdMode,QA as enclosingPowerOfTwo,Xr as engine,sM as ensureShape,L as env,an as equal,aM as erf,pM as euclideanNorm,Cr as exp,Ir as expandDims,lM as expm1,Ml as eye,_c as fft,Ca as fill,kAe as findBackend,vAe as findBackendFactory,Kp as floor,Vb as floorDiv,EG as forceHalfFloat,Xp as fused,Vp as gather,L9 as gatherND,qy as gather_util,CAe as getBackend,mA as getGradient,ic as getKernel,Ab as getKernelsForBackend,eve as getThreadsCount,f2 as gpgpu_util,D7 as grad,_7 as grads,tr as greater,to as greaterEqual,$l as ifft,Hp as imag,In as image,O9 as inTopKAsync,pL as initializers,EN as input,Ur as io,Ny as irfft,mM as isFinite,cM as isInf,dM as isNaN,Ot as keep,vr as kernel_impls,WL as layers,Cc as leakyRelu,Pl as less,ka as lessEqual,eN as linalg,fM as linspace,qae as loadGraphModel,jae as loadGraphModelSync,NL as loadLayersModel,hM as localResponseNormalization,Qr as log,Ic as log1p,gM as logSigmoid,my as logSoftmax,cy as logSumExp,pn as logicalAnd,kc as logicalNot,dy as logicalOr,bM as logicalXor,zee as losses,yM as lowerBound,He as matMul,CR as math,Zr as max,vc as maxPool,hy as maxPool3d,xM as maxPoolWithArgmax,Us as maximum,Gt as mean,Nh as memory,TM as meshgrid,UL as metrics,Dl as min,Ai as minimum,CM as mirrorPad,IM as mod,qne as model,KL as models,Rl as moments,D9 as movingAverage,F as mul,kM as multiRNNCell,vM as multinomial,Je as neg,Uh as nextFrame,_l as norm,qu as notEqual,qp as oneHot,kr as ones,Wr as onesLike,A as op,SM as outerProduct,ro as pad,wM as pad1d,AM as pad2d,NM as pad3d,DM as pad4d,_M as pool,eo as pow,wc as prelu,Kb as print,MM as prod,yAe as profile,PM as raggedGather,RM as raggedRange,FM as raggedTensorToTensor,EM as rand,rP as randomGamma,Ll as randomNormal,nP as randomStandardNormal,no as randomUniform,oP as randomUniformInt,xu as range,TAe as ready,ju as real,sP as reciprocal,Bp as registerBackend,Xne as registerCallbackConstructor,L_ as registerGradient,Gu as registerKernel,Yse as registerOp,VL as regularizers,ln as relu,Cy as relu6,IAe as removeBackend,E as reshape,Pr as reverse,aP as reverse1d,iP as reverse2d,uP as reverse3d,pP as reverse4d,Mc as rfft,Iy as round,ky as rsqrt,he as scalar,M9 as scatterND,jp as scatter_util,Eh as searchSorted,vy as selu,Sy as separableConv2d,jne as sequential,J as serialization,EZ as setBackend,SAe as setPlatform,Jke as setThreadsCount,Zke as setWasmPath,Qke as setWasmPaths,N0 as setWebGLContext,lP as setdiff1dAsync,Nf as shared,Ln as sigmoid,mP as sign,Oee as signal,wy as sin,Ay as sinh,We as slice,Ac as slice1d,Bh as slice2d,Nc as slice3d,Bl as slice4d,kt as slice_util,Dc as softmax,Hu as softplus,Sc as spaceToBatchND,Gee as sparse,F9 as sparseToDense,$ee as spectral,Rr as split,zt as sqrt,je as square,Dy as squaredDifference,va as squeeze,hr as stack,Tu as step,cP as stridedSlice,Wee as string,me as sub,ge as sum,Uu as sumOutType,dP as tan,Op as tanh,fr as tensor,rr as tensor1d,Ni as tensor2d,_y as tensor3d,fP as tensor4d,hP as tensor5d,gP as tensor6d,yP as tensorScatterUpdate,Ta as tensor_util,tP as test_util,z as tidy,un as tile,xAe as time,xP as topk,Yl as train,qe as transpose,Rc as truncatedNormal,TP as unique,bve as unregisterGradient,gve as unregisterKernel,My as unsortedSegmentSum,Fr as unstack,At as upcastType,CP as upperBound,y as util,M7 as valueAndGrad,P7 as valueAndGrads,Py as variable,py as variableGrads,mNn as version,Yae as version_converter,xte as version_core,Rie as version_cpu,ng as version_layers,tve as version_wasm,Nme as version_webgl,ior as webgl,Ff as webgl_util,z2 as webgpu_util,Et as where,Fy as whereAsync,It as zeros,De as zerosLike};
//# sourceMappingURL=tfjs.min.esm.js.map
